//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24330188
// Cuda compilation tools, release 9.2, V9.2.148
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	init
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 8 .b8 roots[48];
.const .align 8 .b8 coefficients[32];
.const .align 1 .u8 VISUALIZE_SAMPLE_COUNT;
.global .align 4 .u32 seed;
.global .align 4 .u32 WARP_SIZE_X = 8;
.global .align 4 .u32 WARP_SIZE_Y = 4;
.global .align 4 .u32 USE_ADAPTIVE_SS_FLAG_MASK = 1;
.global .align 4 .u32 USE_FOVEATION_FLAG_MASK = 4;
.global .align 4 .u32 USE_SAMPLE_REUSE_FLAG_MASK = 8;
.global .align 4 .u32 IS_ZOOMING_FLAG_MASK = 16;
.global .align 4 .u32 ZOOMING_IN_FLAG_MASK = 32;
.global .align 4 .u32 visualityAmplifyCoeff = 10;
.global .align 4 .f32 screenDistance = 0f42700000;
.global .align 4 .f32 pixelRealWidthInCm = 0f3CD94079;
.global .align 16 .b8 $str[34] = {98, 0, 108, 0, 111, 0, 99, 0, 107, 0, 68, 0, 105, 0, 109, 0, 46, 0, 120, 0, 32, 0, 61, 0, 61, 0, 32, 0, 51, 0, 50, 0, 0, 0};
.global .align 16 .b8 $str1[138] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 82, 0, 101, 0, 110, 0, 100, 0, 101, 0, 114, 0, 101, 0, 114, 0, 71, 0, 101, 0, 110, 0, 101, 0, 114, 0, 105, 0, 99, 0, 46, 0, 99, 0, 117, 0, 0, 0};
.global .align 16 .b8 $str2[42] = {109, 0, 97, 0, 120, 0, 83, 0, 117, 0, 112, 0, 101, 0, 114, 0, 83, 0, 97, 0, 109, 0, 112, 0, 108, 0, 105, 0, 110, 0, 103, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str3[34] = {118, 0, 105, 0, 115, 0, 117, 0, 97, 0, 108, 0, 65, 0, 110, 0, 103, 0, 108, 0, 101, 0, 32, 0, 62, 0, 61, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str4[44] = {109, 0, 97, 0, 120, 0, 83, 0, 117, 0, 112, 0, 101, 0, 114, 0, 83, 0, 97, 0, 109, 0, 112, 0, 108, 0, 105, 0, 110, 0, 103, 0, 32, 0, 62, 0, 61, 0, 32, 0, 49, 0, 0, 0};
.global .align 16 .b8 $str5[40] = {112, 0, 79, 0, 117, 0, 116, 0, 112, 0, 117, 0, 116, 0, 45, 0, 62, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str8[36] = {114, 0, 101, 0, 115, 0, 117, 0, 108, 0, 116, 0, 46, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str9[68] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 60, 0, 61, 0, 32, 0, 77, 0, 65, 0, 88, 0, 95, 0, 83, 0, 85, 0, 80, 0, 69, 0, 82, 0, 95, 0, 83, 0, 65, 0, 77, 0, 80, 0, 76, 0, 73, 0, 78, 0, 71, 0, 0, 0};
.global .align 16 .b8 $str10[16] = {100, 0, 121, 0, 32, 0, 60, 0, 61, 0, 32, 0, 49, 0, 0, 0};
.global .align 16 .b8 $str11[16] = {100, 0, 120, 0, 32, 0, 60, 0, 61, 0, 32, 0, 49, 0, 0, 0};

.visible .entry init(

)
{



	ret;
}

	// .globl	fractalRenderMainFloat
.visible .entry fractalRenderMainFloat(
	.param .u64 fractalRenderMainFloat_param_0,
	.param .u32 fractalRenderMainFloat_param_1,
	.param .align 4 .b8 fractalRenderMainFloat_param_2[8],
	.param .align 4 .b8 fractalRenderMainFloat_param_3[16],
	.param .u32 fractalRenderMainFloat_param_4,
	.param .f32 fractalRenderMainFloat_param_5,
	.param .u32 fractalRenderMainFloat_param_6
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<63>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<174>;
	.reg .b32 	%r<127>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<71>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainFloat_param_0];
	ld.param.u32 	%r37, [fractalRenderMainFloat_param_2+4];
	ld.param.u32 	%r36, [fractalRenderMainFloat_param_2];
	ld.param.f32 	%f51, [fractalRenderMainFloat_param_3+12];
	ld.param.f32 	%f50, [fractalRenderMainFloat_param_3+8];
	ld.param.f32 	%f49, [fractalRenderMainFloat_param_3+4];
	ld.param.f32 	%f48, [fractalRenderMainFloat_param_3];
	ld.param.u32 	%r38, [fractalRenderMainFloat_param_4];
	ld.param.f32 	%f52, [fractalRenderMainFloat_param_5];
	ld.param.u32 	%r39, [fractalRenderMainFloat_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p5, %r1, 32;
	@%p5 bra 	BB1_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r40, 53;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r40;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB1_2:
	mov.u32 	%r41, %tid.x;
	mov.u32 	%r42, %tid.y;
	mad.lo.s32 	%r43, %r1, %r42, %r41;
	shl.b32 	%r44, %r1, 2;
	and.b32  	%r45, %r43, 15;
	rem.u32 	%r46, %r43, %r44;
	sub.s32 	%r47, %r46, %r45;
	shr.u32 	%r48, %r47, 2;
	and.b32  	%r49, %r43, 3;
	add.s32 	%r50, %r48, %r49;
	div.u32 	%r51, %r43, %r44;
	shl.b32 	%r52, %r51, 2;
	bfe.u32 	%r53, %r43, 2, 2;
	add.s32 	%r54, %r52, %r53;
	mov.u32 	%r55, %ctaid.x;
	mad.lo.s32 	%r4, %r55, %r1, %r50;
	mov.u32 	%r56, %ctaid.y;
	mov.u32 	%r57, %ntid.y;
	mad.lo.s32 	%r5, %r56, %r57, %r54;
	setp.lt.u32	%p6, %r4, %r36;
	setp.lt.u32	%p7, %r5, %r37;
	and.pred  	%p8, %p6, %p7;
	@!%p8 bra 	BB1_59;
	bra.uni 	BB1_3;

BB1_3:
	setp.ge.f32	%p9, %f52, 0f3F800000;
	@%p9 bra 	BB1_5;

	mov.u64 	%rd9, $str4;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r58, 207;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r58;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_5:
	setp.lt.f32	%p10, %f52, 0f3F800000;
	mov.f32 	%f172, 0f00000000;
	mov.f32 	%f173, %f172;
	@%p10 bra 	BB1_57;

	abs.f32 	%f55, %f52;
	mov.b32 	 %r59, %f52;
	and.b32  	%r60, %r59, -2147483648;
	or.b32  	%r61, %r60, 1056964608;
	mov.b32 	 %f56, %r61;
	add.f32 	%f57, %f56, %f52;
	cvt.rzi.f32.f32	%f58, %f57;
	setp.gt.f32	%p11, %f55, 0f4B000000;
	selp.f32	%f161, %f52, %f58, %p11;
	setp.geu.f32	%p12, %f55, 0f3F000000;
	@%p12 bra 	BB1_8;

	cvt.rzi.f32.f32	%f161, %f52;

BB1_8:
	cvt.rzi.u32.f32	%r62, %f161;
	mov.u32 	%r63, 64;
	min.u32 	%r6, %r63, %r62;
	setp.lt.u32	%p13, %r6, 65;
	@%p13 bra 	BB1_10;

	mov.u64 	%rd15, $str9;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r64, 107;
	mov.u64 	%rd19, 0;
	mov.u64 	%rd20, 2;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r64;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd20;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB1_10:
	setp.eq.s32	%p14, %r6, 0;
	mov.u32 	%r125, 0;
	mov.u32 	%r124, %r125;
	@%p14 bra 	BB1_56;

	cvt.rn.f32.u32	%f6, %r4;
	cvt.rn.f32.u32	%f7, %r5;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f8, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f9, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f10, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f11, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f12, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f13, %fd12;
	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	mul.wide.u32 	%rd21, %r38, -858993459;
	shr.u64 	%rd22, %rd21, 35;
	cvt.u32.u64	%r7, %rd22;
	cvt.rn.f32.u32	%f59, %r36;
	sub.f32 	%f60, %f50, %f48;
	div.rn.f32 	%f14, %f60, %f59;
	cvt.rn.f32.u32	%f61, %r37;
	sub.f32 	%f62, %f51, %f49;
	div.rn.f32 	%f15, %f62, %f61;
	mov.u32 	%r111, 0;
	and.b32  	%r84, %r39, 1;
	mov.u32 	%r125, %r111;
	mov.u32 	%r124, %r6;

BB1_12:
	mov.u32 	%r10, %r124;
	mov.u32 	%r8, %r111;
	setp.lt.u32	%p15, %r8, 3;
	@%p15 bra 	BB1_19;
	bra.uni 	BB1_13;

BB1_19:
	cvt.rn.f32.u32	%f70, %r8;
	div.rn.f32 	%f163, %f70, 0f40400000;
	mov.f32 	%f164, %f163;
	bra.uni 	BB1_20;

BB1_13:
	add.f32 	%f63, %f52, 0fC0000000;
	sqrt.rn.f32 	%f16, %f63;
	abs.f32 	%f64, %f16;
	mov.b32 	 %r69, %f16;
	and.b32  	%r70, %r69, -2147483648;
	or.b32  	%r71, %r70, 1056964608;
	mov.b32 	 %f65, %r71;
	add.f32 	%f66, %f16, %f65;
	cvt.rzi.f32.f32	%f67, %f66;
	setp.gt.f32	%p16, %f64, 0f4B000000;
	selp.f32	%f162, %f16, %f67, %p16;
	setp.geu.f32	%p17, %f64, 0f3F000000;
	@%p17 bra 	BB1_15;

	cvt.rzi.f32.f32	%f162, %f16;

BB1_15:
	add.s32 	%r72, %r8, -2;
	cvt.rzi.u32.f32	%r73, %f162;
	rem.u32 	%r74, %r72, %r73;
	cvt.rn.f32.u32	%f68, %r74;
	div.rn.f32 	%f163, %f68, %f16;
	div.u32 	%r75, %r72, %r73;
	cvt.rn.f32.u32	%f69, %r75;
	div.rn.f32 	%f164, %f69, %f16;
	setp.le.f32	%p18, %f164, 0f3F800000;
	@%p18 bra 	BB1_17;

	mov.u64 	%rd23, $str10;
	cvta.global.u64 	%rd24, %rd23;
	mov.u64 	%rd25, $str1;
	cvta.global.u64 	%rd26, %rd25;
	mov.u32 	%r76, 126;
	mov.u64 	%rd27, 0;
	mov.u64 	%rd28, 2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd24;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd26;
	.param .b32 param2;
	st.param.b32	[param2+0], %r76;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd27;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd28;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB1_17:
	setp.le.f32	%p19, %f163, 0f3F800000;
	@%p19 bra 	BB1_20;

	mov.u64 	%rd29, $str11;
	cvta.global.u64 	%rd30, %rd29;
	mov.u64 	%rd31, $str1;
	cvta.global.u64 	%rd32, %rd31;
	mov.u32 	%r77, 127;
	mov.u64 	%rd33, 0;
	mov.u64 	%rd34, 2;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r77;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd33;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd34;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB1_20:
	add.f32 	%f71, %f7, %f164;
	neg.f32 	%f72, %f71;
	add.f32 	%f73, %f6, %f163;
	fma.rn.f32 	%f166, %f14, %f73, %f48;
	fma.rn.f32 	%f165, %f15, %f72, %f51;
	setp.eq.s32	%p20, %r38, 0;
	mov.u32 	%r115, 0;
	mov.u32 	%r114, 10;
	@%p20 bra 	BB1_32;

BB1_21:
	mul.f32 	%f74, %f165, %f165;
	mul.f32 	%f75, %f166, %f166;
	sub.f32 	%f76, %f75, %f74;
	mul.f32 	%f77, %f166, %f165;
	fma.rn.f32 	%f78, %f166, %f165, %f77;
	mul.f32 	%f79, %f166, %f76;
	mul.f32 	%f80, %f165, %f78;
	sub.f32 	%f81, %f79, %f80;
	mul.f32 	%f82, %f166, %f78;
	fma.rn.f32 	%f83, %f165, %f76, %f82;
	cvt.f64.f32	%fd13, %f166;
	cvt.f64.f32	%fd14, %f165;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f76;
	cvt.f64.f32	%fd17, %f78;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f81;
	cvt.f64.f32	%fd22, %f83;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f84, %fd23;
	cvt.rn.f32.f64	%f85, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f86, %fd27;
	cvt.rn.f32.f64	%f87, %fd28;
	abs.f32 	%f88, %f86;
	abs.f32 	%f89, %f87;
	add.f32 	%f90, %f88, %f89;
	rcp.rn.f32 	%f91, %f90;
	mul.f32 	%f92, %f84, %f91;
	mul.f32 	%f93, %f85, %f91;
	mul.f32 	%f94, %f91, %f86;
	mul.f32 	%f95, %f91, %f87;
	mul.f32 	%f96, %f95, %f95;
	fma.rn.f32 	%f97, %f94, %f94, %f96;
	rcp.rn.f32 	%f98, %f97;
	mul.f32 	%f99, %f93, %f95;
	fma.rn.f32 	%f100, %f92, %f94, %f99;
	mul.f32 	%f101, %f98, %f100;
	mul.f32 	%f102, %f93, %f94;
	mul.f32 	%f103, %f92, %f95;
	sub.f32 	%f104, %f102, %f103;
	mul.f32 	%f105, %f98, %f104;
	sub.f32 	%f166, %f166, %f101;
	sub.f32 	%f165, %f165, %f105;
	add.s32 	%r115, %r115, 1;
	setp.ne.s32	%p21, %r115, %r114;
	@%p21 bra 	BB1_31;

	sub.f32 	%f106, %f166, %f8;
	abs.f32 	%f107, %f106;
	setp.geu.f32	%p22, %f107, 0f38D1B717;
	@%p22 bra 	BB1_24;

	sub.f32 	%f108, %f165, %f9;
	abs.f32 	%f109, %f108;
	setp.lt.f32	%p23, %f109, 0f38D1B717;
	mov.u32 	%r119, 1;
	@%p23 bra 	BB1_29;

BB1_24:
	sub.f32 	%f110, %f166, %f10;
	abs.f32 	%f111, %f110;
	setp.geu.f32	%p24, %f111, 0f38D1B717;
	@%p24 bra 	BB1_26;

	sub.f32 	%f112, %f165, %f11;
	abs.f32 	%f113, %f112;
	setp.lt.f32	%p25, %f113, 0f38D1B717;
	mov.u32 	%r119, 2;
	@%p25 bra 	BB1_29;

BB1_26:
	sub.f32 	%f114, %f166, %f12;
	abs.f32 	%f115, %f114;
	mov.pred 	%p61, 0;
	setp.geu.f32	%p27, %f115, 0f38D1B717;
	@%p27 bra 	BB1_28;

	sub.f32 	%f116, %f165, %f13;
	abs.f32 	%f117, %f116;
	setp.lt.f32	%p61, %f117, 0f38D1B717;

BB1_28:
	selp.b32	%r119, 3, 0, %p61;

BB1_29:
	setp.ne.s32	%p28, %r119, 0;
	@%p28 bra 	BB1_39;

	add.s32 	%r16, %r7, %r114;
	mov.u32 	%r115, %r114;
	mov.u32 	%r114, %r16;

BB1_31:
	setp.lt.u32	%p29, %r115, %r38;
	@%p29 bra 	BB1_21;

BB1_32:
	sub.f32 	%f118, %f166, %f8;
	abs.f32 	%f119, %f118;
	setp.geu.f32	%p30, %f119, 0f38D1B717;
	@%p30 bra 	BB1_34;

	sub.f32 	%f120, %f165, %f9;
	abs.f32 	%f121, %f120;
	setp.lt.f32	%p31, %f121, 0f38D1B717;
	mov.u32 	%r119, 1;
	@%p31 bra 	BB1_39;

BB1_34:
	sub.f32 	%f122, %f166, %f10;
	abs.f32 	%f123, %f122;
	setp.geu.f32	%p32, %f123, 0f38D1B717;
	@%p32 bra 	BB1_36;

	sub.f32 	%f124, %f165, %f11;
	abs.f32 	%f125, %f124;
	setp.lt.f32	%p33, %f125, 0f38D1B717;
	mov.u32 	%r119, 2;
	@%p33 bra 	BB1_39;

BB1_36:
	sub.f32 	%f126, %f166, %f12;
	abs.f32 	%f127, %f126;
	mov.pred 	%p62, 0;
	setp.geu.f32	%p35, %f127, 0f38D1B717;
	@%p35 bra 	BB1_38;

	sub.f32 	%f128, %f165, %f13;
	abs.f32 	%f129, %f128;
	setp.lt.f32	%p62, %f129, 0f38D1B717;

BB1_38:
	selp.b32	%r119, 3, 0, %p62;

BB1_39:
	cvt.rn.f32.u32	%f130, %r119;
	cvt.rzi.u32.f32	%r21, %f130;
	add.s32 	%r125, %r21, %r125;
	setp.gt.u32	%p36, %r8, 9;
	@%p36 bra 	BB1_41;

	cvt.rn.f32.u32	%f131, %r21;
	add.u64 	%rd35, %SP, 0;
	cvta.to.local.u64 	%rd36, %rd35;
	mul.wide.u32 	%rd37, %r8, 4;
	add.s64 	%rd38, %rd36, %rd37;
	st.local.f32 	[%rd38], %f131;

BB1_41:
	setp.lt.u32	%p37, %r8, 10;
	setp.eq.b32	%p38, %r84, 1;
	setp.ne.s32	%p39, %r8, 0;
	and.pred  	%p40, %p37, %p39;
	and.pred  	%p41, %p40, %p38;
	shr.u32 	%r85, %r10, 1;
	setp.eq.s32	%p42, %r8, %r85;
	or.pred  	%p43, %p41, %p42;
	add.s32 	%r111, %r8, 1;
	mov.u32 	%r124, %r10;
	@!%p43 bra 	BB1_55;
	bra.uni 	BB1_42;

BB1_42:
	div.u32 	%r86, %r125, %r111;
	cvt.rn.f32.u32	%f33, %r86;
	setp.eq.s32	%p44, %r8, 0;
	mov.f32 	%f171, 0f00000000;
	@%p44 bra 	BB1_51;

	and.b32  	%r88, %r8, 3;
	setp.eq.s32	%p45, %r88, 0;
	mov.f32 	%f171, 0f00000000;
	mov.u32 	%r123, 0;
	@%p45 bra 	BB1_49;

	setp.eq.s32	%p46, %r88, 1;
	mov.f32 	%f168, 0f00000000;
	mov.u32 	%r121, 0;
	@%p46 bra 	BB1_48;

	setp.eq.s32	%p47, %r88, 2;
	mov.f32 	%f167, 0f00000000;
	mov.u32 	%r120, 0;
	@%p47 bra 	BB1_47;

	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd39;
	ld.local.f32 	%f136, [%rd40];
	sub.f32 	%f137, %f136, %f33;
	fma.rn.f32 	%f167, %f137, %f137, 0f00000000;
	mov.u32 	%r120, 1;

BB1_47:
	add.u64 	%rd41, %SP, 0;
	cvta.to.local.u64 	%rd42, %rd41;
	mul.wide.u32 	%rd43, %r120, 4;
	add.s64 	%rd44, %rd42, %rd43;
	ld.local.f32 	%f138, [%rd44];
	sub.f32 	%f139, %f138, %f33;
	fma.rn.f32 	%f168, %f139, %f139, %f167;
	add.s32 	%r121, %r120, 1;

BB1_48:
	add.u64 	%rd45, %SP, 0;
	cvta.to.local.u64 	%rd46, %rd45;
	mul.wide.u32 	%rd47, %r121, 4;
	add.s64 	%rd48, %rd46, %rd47;
	ld.local.f32 	%f140, [%rd48];
	sub.f32 	%f141, %f140, %f33;
	fma.rn.f32 	%f171, %f141, %f141, %f168;
	add.s32 	%r123, %r121, 1;

BB1_49:
	add.u64 	%rd49, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd49;
	setp.lt.u32	%p48, %r8, 4;
	@%p48 bra 	BB1_51;

BB1_50:
	mul.wide.u32 	%rd50, %r123, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.f32 	%f142, [%rd51];
	sub.f32 	%f143, %f142, %f33;
	fma.rn.f32 	%f144, %f143, %f143, %f171;
	add.s32 	%r94, %r123, 1;
	mul.wide.u32 	%rd52, %r94, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.f32 	%f145, [%rd53];
	sub.f32 	%f146, %f145, %f33;
	fma.rn.f32 	%f147, %f146, %f146, %f144;
	add.s32 	%r95, %r123, 2;
	mul.wide.u32 	%rd54, %r95, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.f32 	%f148, [%rd55];
	sub.f32 	%f149, %f148, %f33;
	fma.rn.f32 	%f150, %f149, %f149, %f147;
	add.s32 	%r96, %r123, 3;
	mul.wide.u32 	%rd56, %r96, 4;
	add.s64 	%rd57, %rd1, %rd56;
	ld.local.f32 	%f151, [%rd57];
	sub.f32 	%f152, %f151, %f33;
	fma.rn.f32 	%f171, %f152, %f152, %f150;
	add.s32 	%r123, %r123, 4;
	setp.lt.u32	%p49, %r123, %r8;
	@%p49 bra 	BB1_50;

BB1_51:
	add.s32 	%r97, %r8, -1;
	cvt.rn.f32.u32	%f153, %r97;
	div.rn.f32 	%f154, %f171, %f153;
	div.rn.f32 	%f43, %f154, %f33;
	setp.ne.s32	%p50, %r8, 1;
	@%p50 bra 	BB1_53;

	// inline asm
	activemask.b32 %r98;
	// inline asm
	add.u64 	%rd58, %SP, 0;
	cvta.to.local.u64 	%rd59, %rd58;
	ld.local.v2.f32 	{%f155, %f156}, [%rd59];
	sub.f32 	%f159, %f155, %f156;
	abs.f32 	%f160, %f159;
	setp.lt.f32	%p51, %f160, 0f34000000;
	vote.sync.all.pred 	%p52, %p51, %r98;
	mov.u32 	%r124, 2;
	@%p52 bra 	BB1_55;

BB1_53:
	// inline asm
	activemask.b32 %r101;
	// inline asm
	setp.lt.f32	%p53, %f43, 0f3C23D70A;
	vote.sync.all.pred 	%p54, %p53, %r101;
	mov.u32 	%r124, %r111;
	@%p54 bra 	BB1_55;

	// inline asm
	activemask.b32 %r103;
	// inline asm
	setp.le.f32	%p55, %f43, 0f3F800000;
	vote.sync.all.pred 	%p56, %p55, %r103;
	setp.ge.u32	%p57, %r8, %r85;
	and.pred  	%p58, %p56, %p57;
	selp.b32	%r124, %r111, %r10, %p58;

BB1_55:
	setp.lt.u32	%p59, %r111, %r124;
	@%p59 bra 	BB1_12;

BB1_56:
	cvt.rn.f32.u32	%f172, %r124;
	div.u32 	%r106, %r125, %r124;
	cvt.rn.f32.u32	%f173, %r106;

BB1_57:
	ld.param.u32 	%r110, [fractalRenderMainFloat_param_1];
	mul.lo.s32 	%r107, %r5, %r110;
	cvt.u64.u32	%rd60, %r107;
	cvta.to.global.u64 	%rd61, %rd2;
	add.s64 	%rd62, %rd61, %rd60;
	mul.wide.u32 	%rd63, %r4, 16;
	add.s64 	%rd64, %rd62, %rd63;
	st.global.f32 	[%rd64], %f173;
	st.global.f32 	[%rd64+4], %f172;
	mov.u32 	%r108, 0;
	st.global.u32 	[%rd64+12], %r108;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd64+8], %rs1;
	setp.gt.f32	%p60, %f172, 0f00000000;
	@%p60 bra 	BB1_59;

	mov.u64 	%rd65, $str5;
	cvta.global.u64 	%rd66, %rd65;
	mov.u64 	%rd67, $str1;
	cvta.global.u64 	%rd68, %rd67;
	mov.u32 	%r109, 214;
	mov.u64 	%rd69, 0;
	mov.u64 	%rd70, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd66;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd68;
	.param .b32 param2;
	st.param.b32	[param2+0], %r109;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd69;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd70;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB1_59:
	ret;
}

	// .globl	fractalRenderMainDouble
.visible .entry fractalRenderMainDouble(
	.param .u64 fractalRenderMainDouble_param_0,
	.param .u32 fractalRenderMainDouble_param_1,
	.param .align 4 .b8 fractalRenderMainDouble_param_2[8],
	.param .align 8 .b8 fractalRenderMainDouble_param_3[32],
	.param .u32 fractalRenderMainDouble_param_4,
	.param .f32 fractalRenderMainDouble_param_5,
	.param .u32 fractalRenderMainDouble_param_6
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<63>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<80>;
	.reg .b32 	%r<147>;
	.reg .f64 	%fd<116>;
	.reg .b64 	%rd<72>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r37, [fractalRenderMainDouble_param_2+4];
	ld.param.u32 	%r36, [fractalRenderMainDouble_param_2];
	ld.param.f64 	%fd35, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd34, [fractalRenderMainDouble_param_3+16];
	ld.param.f64 	%fd33, [fractalRenderMainDouble_param_3+8];
	ld.param.f64 	%fd32, [fractalRenderMainDouble_param_3];
	ld.param.u32 	%r38, [fractalRenderMainDouble_param_4];
	ld.param.f32 	%f25, [fractalRenderMainDouble_param_5];
	ld.param.u32 	%r39, [fractalRenderMainDouble_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p5, %r1, 32;
	@%p5 bra 	BB2_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r40, 53;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r40;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB2_2:
	mov.u32 	%r41, %tid.x;
	mov.u32 	%r42, %tid.y;
	mad.lo.s32 	%r43, %r1, %r42, %r41;
	shl.b32 	%r44, %r1, 2;
	and.b32  	%r45, %r43, 15;
	rem.u32 	%r46, %r43, %r44;
	sub.s32 	%r47, %r46, %r45;
	shr.u32 	%r48, %r47, 2;
	and.b32  	%r49, %r43, 3;
	add.s32 	%r50, %r48, %r49;
	div.u32 	%r51, %r43, %r44;
	shl.b32 	%r52, %r51, 2;
	bfe.u32 	%r53, %r43, 2, 2;
	add.s32 	%r54, %r52, %r53;
	mov.u32 	%r55, %ctaid.x;
	mad.lo.s32 	%r4, %r55, %r1, %r50;
	mov.u32 	%r56, %ctaid.y;
	mov.u32 	%r57, %ntid.y;
	mad.lo.s32 	%r5, %r56, %r57, %r54;
	setp.lt.u32	%p6, %r4, %r36;
	setp.lt.u32	%p7, %r5, %r37;
	and.pred  	%p8, %p6, %p7;
	@!%p8 bra 	BB2_60;
	bra.uni 	BB2_3;

BB2_3:
	setp.ge.f32	%p9, %f25, 0f3F800000;
	@%p9 bra 	BB2_5;

	mov.u64 	%rd9, $str4;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r58, 207;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r58;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB2_5:
	setp.lt.f32	%p10, %f25, 0f3F800000;
	mov.f32 	%f78, 0f00000000;
	mov.f32 	%f79, %f78;
	@%p10 bra 	BB2_58;

	abs.f32 	%f28, %f25;
	mov.b32 	 %r59, %f25;
	and.b32  	%r60, %r59, -2147483648;
	or.b32  	%r61, %r60, 1056964608;
	mov.b32 	 %f29, %r61;
	add.f32 	%f30, %f29, %f25;
	cvt.rzi.f32.f32	%f31, %f30;
	setp.gt.f32	%p11, %f28, 0f4B000000;
	selp.f32	%f71, %f25, %f31, %p11;
	setp.geu.f32	%p12, %f28, 0f3F000000;
	@%p12 bra 	BB2_8;

	cvt.rzi.f32.f32	%f71, %f25;

BB2_8:
	cvt.rzi.u32.f32	%r62, %f71;
	mov.u32 	%r63, 64;
	min.u32 	%r6, %r63, %r62;
	setp.lt.u32	%p13, %r6, 65;
	@%p13 bra 	BB2_10;

	mov.u64 	%rd15, $str9;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r64, 107;
	mov.u64 	%rd19, 0;
	mov.u64 	%rd20, 2;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r64;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd20;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB2_10:
	setp.eq.s32	%p14, %r6, 0;
	mov.u32 	%r145, 0;
	mov.u32 	%r144, %r145;
	@%p14 bra 	BB2_57;

	cvt.rn.f64.u32	%fd3, %r4;
	cvt.rn.f64.u32	%fd4, %r5;
	ld.const.f64 	%fd5, [roots];
	ld.const.f64 	%fd6, [roots+8];
	ld.const.f64 	%fd7, [roots+16];
	ld.const.f64 	%fd8, [roots+24];
	ld.const.f64 	%fd9, [roots+32];
	ld.const.f64 	%fd10, [roots+40];
	ld.const.f64 	%fd13, [coefficients+16];
	add.f64 	%fd14, %fd13, %fd13;
	ld.const.f64 	%fd15, [coefficients+24];
	mul.f64 	%fd16, %fd15, 0d4008000000000000;
	mul.wide.u32 	%rd21, %r38, -858993459;
	shr.u64 	%rd22, %rd21, 35;
	cvt.u32.u64	%r7, %rd22;
	cvt.rn.f64.u32	%fd36, %r36;
	sub.f64 	%fd37, %fd34, %fd32;
	div.rn.f64 	%fd17, %fd37, %fd36;
	cvt.rn.f64.u32	%fd38, %r37;
	sub.f64 	%fd39, %fd35, %fd33;
	div.rn.f64 	%fd18, %fd39, %fd38;
	mov.u32 	%r131, 0;
	and.b32  	%r84, %r39, 1;
	mov.u32 	%r145, %r131;
	mov.u32 	%r144, %r6;

BB2_12:
	mov.u32 	%r10, %r144;
	mov.u32 	%r8, %r131;
	setp.lt.u32	%p15, %r8, 3;
	@%p15 bra 	BB2_20;
	bra.uni 	BB2_13;

BB2_20:
	cvt.rn.f64.u32	%fd40, %r8;
	div.rn.f64 	%fd112, %fd40, 0d4008000000000000;
	mov.f64 	%fd113, %fd112;
	bra.uni 	BB2_21;

BB2_13:
	ld.param.f32 	%f70, [fractalRenderMainDouble_param_5];
	add.f32 	%f32, %f70, 0fC0000000;
	sqrt.rn.f32 	%f4, %f32;
	abs.f32 	%f33, %f4;
	mov.b32 	 %r69, %f4;
	and.b32  	%r70, %r69, -2147483648;
	or.b32  	%r71, %r70, 1056964608;
	mov.b32 	 %f34, %r71;
	add.f32 	%f35, %f4, %f34;
	cvt.rzi.f32.f32	%f36, %f35;
	setp.gt.f32	%p16, %f33, 0f4B000000;
	selp.f32	%f72, %f4, %f36, %p16;
	setp.geu.f32	%p17, %f33, 0f3F000000;
	@%p17 bra 	BB2_15;

	cvt.rzi.f32.f32	%f72, %f4;

BB2_15:
	add.s32 	%r72, %r8, -2;
	cvt.rzi.u32.f32	%r73, %f72;
	rem.u32 	%r74, %r72, %r73;
	cvt.rn.f32.u32	%f37, %r74;
	div.rn.f32 	%f8, %f37, %f4;
	div.u32 	%r75, %r72, %r73;
	cvt.rn.f32.u32	%f38, %r75;
	div.rn.f32 	%f9, %f38, %f4;
	setp.le.f32	%p18, %f9, 0f3F800000;
	@%p18 bra 	BB2_17;

	mov.u64 	%rd23, $str10;
	cvta.global.u64 	%rd24, %rd23;
	mov.u64 	%rd25, $str1;
	cvta.global.u64 	%rd26, %rd25;
	mov.u32 	%r76, 126;
	mov.u64 	%rd27, 0;
	mov.u64 	%rd28, 2;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd24;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd26;
	.param .b32 param2;
	st.param.b32	[param2+0], %r76;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd27;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd28;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB2_17:
	setp.le.f32	%p19, %f8, 0f3F800000;
	@%p19 bra 	BB2_19;

	mov.u64 	%rd29, $str11;
	cvta.global.u64 	%rd30, %rd29;
	mov.u64 	%rd31, $str1;
	cvta.global.u64 	%rd32, %rd31;
	mov.u32 	%r77, 127;
	mov.u64 	%rd33, 0;
	mov.u64 	%rd34, 2;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r77;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd33;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd34;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB2_19:
	cvt.f64.f32	%fd112, %f8;
	cvt.f64.f32	%fd113, %f9;

BB2_21:
	ld.param.f64 	%fd107, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd106, [fractalRenderMainDouble_param_3];
	add.f64 	%fd41, %fd4, %fd113;
	neg.f64 	%fd42, %fd41;
	add.f64 	%fd43, %fd3, %fd112;
	fma.rn.f64 	%fd115, %fd17, %fd43, %fd106;
	fma.rn.f64 	%fd114, %fd18, %fd42, %fd107;
	setp.eq.s32	%p20, %r38, 0;
	mov.u32 	%r135, 0;
	mov.u32 	%r134, 10;
	@%p20 bra 	BB2_33;

BB2_22:
	ld.const.f64 	%fd111, [coefficients+24];
	ld.const.f64 	%fd110, [coefficients+16];
	ld.const.f64 	%fd109, [coefficients];
	ld.const.f64 	%fd108, [coefficients+8];
	mul.f64 	%fd44, %fd114, %fd114;
	mul.f64 	%fd45, %fd115, %fd115;
	sub.f64 	%fd46, %fd45, %fd44;
	mul.f64 	%fd47, %fd115, %fd114;
	fma.rn.f64 	%fd48, %fd115, %fd114, %fd47;
	mul.f64 	%fd49, %fd115, %fd46;
	mul.f64 	%fd50, %fd114, %fd48;
	sub.f64 	%fd51, %fd49, %fd50;
	mul.f64 	%fd52, %fd115, %fd48;
	fma.rn.f64 	%fd53, %fd114, %fd46, %fd52;
	fma.rn.f64 	%fd54, %fd115, %fd108, %fd109;
	mul.f64 	%fd55, %fd48, %fd110;
	fma.rn.f64 	%fd56, %fd46, %fd110, %fd54;
	fma.rn.f64 	%fd57, %fd114, %fd108, %fd55;
	fma.rn.f64 	%fd58, %fd51, %fd111, %fd56;
	fma.rn.f64 	%fd59, %fd53, %fd111, %fd57;
	fma.rn.f64 	%fd60, %fd115, %fd14, %fd108;
	mul.f64 	%fd61, %fd48, %fd16;
	fma.rn.f64 	%fd62, %fd46, %fd16, %fd60;
	fma.rn.f64 	%fd63, %fd114, %fd14, %fd61;
	abs.f64 	%fd64, %fd62;
	abs.f64 	%fd65, %fd63;
	add.f64 	%fd66, %fd64, %fd65;
	rcp.rn.f64 	%fd67, %fd66;
	mul.f64 	%fd68, %fd58, %fd67;
	mul.f64 	%fd69, %fd59, %fd67;
	mul.f64 	%fd70, %fd62, %fd67;
	mul.f64 	%fd71, %fd63, %fd67;
	mul.f64 	%fd72, %fd71, %fd71;
	fma.rn.f64 	%fd73, %fd70, %fd70, %fd72;
	rcp.rn.f64 	%fd74, %fd73;
	mul.f64 	%fd75, %fd69, %fd71;
	fma.rn.f64 	%fd76, %fd68, %fd70, %fd75;
	mul.f64 	%fd77, %fd74, %fd76;
	mul.f64 	%fd78, %fd69, %fd70;
	mul.f64 	%fd79, %fd68, %fd71;
	sub.f64 	%fd80, %fd78, %fd79;
	mul.f64 	%fd81, %fd74, %fd80;
	sub.f64 	%fd115, %fd115, %fd77;
	sub.f64 	%fd114, %fd114, %fd81;
	add.s32 	%r135, %r135, 1;
	setp.ne.s32	%p21, %r135, %r134;
	@%p21 bra 	BB2_32;

	sub.f64 	%fd82, %fd115, %fd5;
	abs.f64 	%fd83, %fd82;
	setp.geu.f64	%p22, %fd83, 0d3F1A36E2EB1C432D;
	@%p22 bra 	BB2_25;

	sub.f64 	%fd84, %fd114, %fd6;
	abs.f64 	%fd85, %fd84;
	setp.lt.f64	%p23, %fd85, 0d3F1A36E2EB1C432D;
	mov.u32 	%r139, 1;
	@%p23 bra 	BB2_30;

BB2_25:
	sub.f64 	%fd86, %fd115, %fd7;
	abs.f64 	%fd87, %fd86;
	setp.geu.f64	%p24, %fd87, 0d3F1A36E2EB1C432D;
	@%p24 bra 	BB2_27;

	sub.f64 	%fd88, %fd114, %fd8;
	abs.f64 	%fd89, %fd88;
	setp.lt.f64	%p25, %fd89, 0d3F1A36E2EB1C432D;
	mov.u32 	%r139, 2;
	@%p25 bra 	BB2_30;

BB2_27:
	sub.f64 	%fd90, %fd115, %fd9;
	abs.f64 	%fd91, %fd90;
	mov.pred 	%p61, 0;
	setp.geu.f64	%p27, %fd91, 0d3F1A36E2EB1C432D;
	@%p27 bra 	BB2_29;

	sub.f64 	%fd92, %fd114, %fd10;
	abs.f64 	%fd93, %fd92;
	setp.lt.f64	%p61, %fd93, 0d3F1A36E2EB1C432D;

BB2_29:
	selp.b32	%r139, 3, 0, %p61;

BB2_30:
	setp.ne.s32	%p28, %r139, 0;
	@%p28 bra 	BB2_40;

	add.s32 	%r16, %r7, %r134;
	mov.u32 	%r135, %r134;
	mov.u32 	%r134, %r16;

BB2_32:
	setp.lt.u32	%p29, %r135, %r38;
	@%p29 bra 	BB2_22;

BB2_33:
	sub.f64 	%fd94, %fd115, %fd5;
	abs.f64 	%fd95, %fd94;
	setp.geu.f64	%p30, %fd95, 0d3F1A36E2EB1C432D;
	@%p30 bra 	BB2_35;

	sub.f64 	%fd96, %fd114, %fd6;
	abs.f64 	%fd97, %fd96;
	setp.lt.f64	%p31, %fd97, 0d3F1A36E2EB1C432D;
	mov.u32 	%r139, 1;
	@%p31 bra 	BB2_40;

BB2_35:
	sub.f64 	%fd98, %fd115, %fd7;
	abs.f64 	%fd99, %fd98;
	setp.geu.f64	%p32, %fd99, 0d3F1A36E2EB1C432D;
	@%p32 bra 	BB2_37;

	sub.f64 	%fd100, %fd114, %fd8;
	abs.f64 	%fd101, %fd100;
	setp.lt.f64	%p33, %fd101, 0d3F1A36E2EB1C432D;
	mov.u32 	%r139, 2;
	@%p33 bra 	BB2_40;

BB2_37:
	sub.f64 	%fd102, %fd115, %fd9;
	abs.f64 	%fd103, %fd102;
	mov.pred 	%p62, 0;
	setp.geu.f64	%p35, %fd103, 0d3F1A36E2EB1C432D;
	@%p35 bra 	BB2_39;

	sub.f64 	%fd104, %fd114, %fd10;
	abs.f64 	%fd105, %fd104;
	setp.lt.f64	%p62, %fd105, 0d3F1A36E2EB1C432D;

BB2_39:
	selp.b32	%r139, 3, 0, %p62;

BB2_40:
	cvt.rn.f32.u32	%f39, %r139;
	cvt.rzi.u32.f32	%r21, %f39;
	add.s32 	%r145, %r21, %r145;
	setp.gt.u32	%p36, %r8, 9;
	@%p36 bra 	BB2_42;

	cvt.rn.f32.u32	%f40, %r21;
	add.u64 	%rd35, %SP, 0;
	cvta.to.local.u64 	%rd36, %rd35;
	mul.wide.u32 	%rd37, %r8, 4;
	add.s64 	%rd38, %rd36, %rd37;
	st.local.f32 	[%rd38], %f40;

BB2_42:
	setp.lt.u32	%p37, %r8, 10;
	setp.eq.b32	%p38, %r84, 1;
	setp.ne.s32	%p39, %r8, 0;
	and.pred  	%p40, %p37, %p39;
	and.pred  	%p41, %p40, %p38;
	shr.u32 	%r85, %r10, 1;
	setp.eq.s32	%p42, %r8, %r85;
	or.pred  	%p43, %p41, %p42;
	add.s32 	%r131, %r8, 1;
	mov.u32 	%r144, %r10;
	@!%p43 bra 	BB2_56;
	bra.uni 	BB2_43;

BB2_43:
	div.u32 	%r86, %r145, %r131;
	cvt.rn.f32.u32	%f10, %r86;
	setp.eq.s32	%p44, %r8, 0;
	mov.f32 	%f77, 0f00000000;
	@%p44 bra 	BB2_52;

	and.b32  	%r88, %r8, 3;
	setp.eq.s32	%p45, %r88, 0;
	mov.f32 	%f77, 0f00000000;
	mov.u32 	%r143, 0;
	@%p45 bra 	BB2_50;

	setp.eq.s32	%p46, %r88, 1;
	mov.f32 	%f74, 0f00000000;
	mov.u32 	%r141, 0;
	@%p46 bra 	BB2_49;

	setp.eq.s32	%p47, %r88, 2;
	mov.f32 	%f73, 0f00000000;
	mov.u32 	%r140, 0;
	@%p47 bra 	BB2_48;

	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd39;
	ld.local.f32 	%f45, [%rd40];
	sub.f32 	%f46, %f45, %f10;
	fma.rn.f32 	%f73, %f46, %f46, 0f00000000;
	mov.u32 	%r140, 1;

BB2_48:
	add.u64 	%rd41, %SP, 0;
	cvta.to.local.u64 	%rd42, %rd41;
	mul.wide.u32 	%rd43, %r140, 4;
	add.s64 	%rd44, %rd42, %rd43;
	ld.local.f32 	%f47, [%rd44];
	sub.f32 	%f48, %f47, %f10;
	fma.rn.f32 	%f74, %f48, %f48, %f73;
	add.s32 	%r141, %r140, 1;

BB2_49:
	add.u64 	%rd45, %SP, 0;
	cvta.to.local.u64 	%rd46, %rd45;
	mul.wide.u32 	%rd47, %r141, 4;
	add.s64 	%rd48, %rd46, %rd47;
	ld.local.f32 	%f49, [%rd48];
	sub.f32 	%f50, %f49, %f10;
	fma.rn.f32 	%f77, %f50, %f50, %f74;
	add.s32 	%r143, %r141, 1;

BB2_50:
	add.u64 	%rd49, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd49;
	setp.lt.u32	%p48, %r8, 4;
	@%p48 bra 	BB2_52;

BB2_51:
	mul.wide.u32 	%rd50, %r143, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.f32 	%f51, [%rd51];
	sub.f32 	%f52, %f51, %f10;
	fma.rn.f32 	%f53, %f52, %f52, %f77;
	add.s32 	%r94, %r143, 1;
	mul.wide.u32 	%rd52, %r94, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.f32 	%f54, [%rd53];
	sub.f32 	%f55, %f54, %f10;
	fma.rn.f32 	%f56, %f55, %f55, %f53;
	add.s32 	%r95, %r143, 2;
	mul.wide.u32 	%rd54, %r95, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.f32 	%f57, [%rd55];
	sub.f32 	%f58, %f57, %f10;
	fma.rn.f32 	%f59, %f58, %f58, %f56;
	add.s32 	%r96, %r143, 3;
	mul.wide.u32 	%rd56, %r96, 4;
	add.s64 	%rd57, %rd1, %rd56;
	ld.local.f32 	%f60, [%rd57];
	sub.f32 	%f61, %f60, %f10;
	fma.rn.f32 	%f77, %f61, %f61, %f59;
	add.s32 	%r143, %r143, 4;
	setp.lt.u32	%p49, %r143, %r8;
	@%p49 bra 	BB2_51;

BB2_52:
	add.s32 	%r97, %r8, -1;
	cvt.rn.f32.u32	%f62, %r97;
	div.rn.f32 	%f63, %f77, %f62;
	div.rn.f32 	%f20, %f63, %f10;
	setp.ne.s32	%p50, %r8, 1;
	@%p50 bra 	BB2_54;

	// inline asm
	activemask.b32 %r98;
	// inline asm
	add.u64 	%rd58, %SP, 0;
	cvta.to.local.u64 	%rd59, %rd58;
	ld.local.v2.f32 	{%f64, %f65}, [%rd59];
	sub.f32 	%f68, %f64, %f65;
	abs.f32 	%f69, %f68;
	setp.lt.f32	%p51, %f69, 0f34000000;
	vote.sync.all.pred 	%p52, %p51, %r98;
	mov.u32 	%r144, 2;
	@%p52 bra 	BB2_56;

BB2_54:
	// inline asm
	activemask.b32 %r101;
	// inline asm
	setp.lt.f32	%p53, %f20, 0f3C23D70A;
	vote.sync.all.pred 	%p54, %p53, %r101;
	mov.u32 	%r144, %r131;
	@%p54 bra 	BB2_56;

	// inline asm
	activemask.b32 %r103;
	// inline asm
	setp.le.f32	%p55, %f20, 0f3F800000;
	vote.sync.all.pred 	%p56, %p55, %r103;
	setp.ge.u32	%p57, %r8, %r85;
	and.pred  	%p58, %p56, %p57;
	selp.b32	%r144, %r131, %r10, %p58;

BB2_56:
	setp.lt.u32	%p59, %r131, %r144;
	@%p59 bra 	BB2_12;

BB2_57:
	cvt.rn.f32.u32	%f78, %r144;
	div.u32 	%r106, %r145, %r144;
	cvt.rn.f32.u32	%f79, %r106;

BB2_58:
	mov.u32 	%r130, %ntid.x;
	mov.u32 	%r129, %tid.x;
	mov.u32 	%r128, %tid.y;
	mad.lo.s32 	%r127, %r130, %r128, %r129;
	shl.b32 	%r126, %r130, 2;
	ld.param.u64 	%rd71, [fractalRenderMainDouble_param_0];
	ld.param.u32 	%r125, [fractalRenderMainDouble_param_1];
	div.u32 	%r124, %r127, %r126;
	bfe.u32 	%r123, %r127, 2, 2;
	shl.b32 	%r122, %r124, 2;
	add.s32 	%r121, %r122, %r123;
	mov.u32 	%r120, %ntid.y;
	mov.u32 	%r119, %ctaid.y;
	mad.lo.s32 	%r118, %r119, %r120, %r121;
	and.b32  	%r117, %r127, 15;
	rem.u32 	%r116, %r127, %r126;
	sub.s32 	%r115, %r116, %r117;
	and.b32  	%r114, %r127, 3;
	shr.u32 	%r113, %r115, 2;
	add.s32 	%r112, %r113, %r114;
	mov.u32 	%r111, %ctaid.x;
	mad.lo.s32 	%r110, %r111, %r130, %r112;
	mul.lo.s32 	%r107, %r118, %r125;
	cvt.u64.u32	%rd60, %r107;
	cvta.to.global.u64 	%rd61, %rd71;
	add.s64 	%rd62, %rd61, %rd60;
	mul.wide.u32 	%rd63, %r110, 16;
	add.s64 	%rd64, %rd62, %rd63;
	st.global.f32 	[%rd64], %f79;
	st.global.f32 	[%rd64+4], %f78;
	mov.u32 	%r108, 0;
	st.global.u32 	[%rd64+12], %r108;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd64+8], %rs1;
	setp.gt.f32	%p60, %f78, 0f00000000;
	@%p60 bra 	BB2_60;

	mov.u64 	%rd65, $str5;
	cvta.global.u64 	%rd66, %rd65;
	mov.u64 	%rd67, $str1;
	cvta.global.u64 	%rd68, %rd67;
	mov.u32 	%r109, 214;
	mov.u64 	%rd69, 0;
	mov.u64 	%rd70, 2;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd66;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd68;
	.param .b32 param2;
	st.param.b32	[param2+0], %r109;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd69;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd70;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB2_60:
	ret;
}

	// .globl	fractalRenderAdvancedFloat
.visible .entry fractalRenderAdvancedFloat(
	.param .u64 fractalRenderAdvancedFloat_param_0,
	.param .u32 fractalRenderAdvancedFloat_param_1,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_2[8],
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_3[16],
	.param .u32 fractalRenderAdvancedFloat_param_4,
	.param .f32 fractalRenderAdvancedFloat_param_5,
	.param .u32 fractalRenderAdvancedFloat_param_6,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_7[16],
	.param .u64 fractalRenderAdvancedFloat_param_8,
	.param .u32 fractalRenderAdvancedFloat_param_9,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<147>;
	.reg .b16 	%rs<12>;
	.reg .f32 	%f<481>;
	.reg .b32 	%r<262>;
	.reg .f64 	%fd<64>;
	.reg .b64 	%rd<135>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [fractalRenderAdvancedFloat_param_0];
	ld.param.u32 	%r67, [fractalRenderAdvancedFloat_param_2+4];
	ld.param.u32 	%r66, [fractalRenderAdvancedFloat_param_2];
	ld.param.f32 	%f124, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f123, [fractalRenderAdvancedFloat_param_3+8];
	ld.param.f32 	%f122, [fractalRenderAdvancedFloat_param_3+4];
	ld.param.f32 	%f121, [fractalRenderAdvancedFloat_param_3];
	ld.param.u32 	%r68, [fractalRenderAdvancedFloat_param_4];
	ld.param.f32 	%f449, [fractalRenderAdvancedFloat_param_5];
	ld.param.u32 	%r69, [fractalRenderAdvancedFloat_param_6];
	ld.param.f32 	%f129, [fractalRenderAdvancedFloat_param_7+12];
	ld.param.f32 	%f128, [fractalRenderAdvancedFloat_param_7+8];
	ld.param.f32 	%f127, [fractalRenderAdvancedFloat_param_7+4];
	ld.param.f32 	%f126, [fractalRenderAdvancedFloat_param_7];
	ld.param.u64 	%rd4, [fractalRenderAdvancedFloat_param_8];
	ld.param.u32 	%r70, [fractalRenderAdvancedFloat_param_9];
	ld.param.u32 	%r72, [fractalRenderAdvancedFloat_param_10+4];
	ld.param.u32 	%r71, [fractalRenderAdvancedFloat_param_10];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p11, %r1, 32;
	@%p11 bra 	BB3_2;

	mov.u64 	%rd5, $str;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, $str1;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r73, 53;
	mov.u64 	%rd9, 0;
	mov.u64 	%rd10, 2;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 param2;
	st.param.b32	[param2+0], %r73;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB3_2:
	mov.u32 	%r74, %tid.x;
	mov.u32 	%r75, %tid.y;
	mad.lo.s32 	%r76, %r1, %r75, %r74;
	shl.b32 	%r77, %r1, 2;
	and.b32  	%r78, %r76, 15;
	rem.u32 	%r79, %r76, %r77;
	sub.s32 	%r80, %r79, %r78;
	shr.u32 	%r81, %r80, 2;
	and.b32  	%r82, %r76, 3;
	add.s32 	%r83, %r81, %r82;
	div.u32 	%r84, %r76, %r77;
	shl.b32 	%r85, %r84, 2;
	bfe.u32 	%r86, %r76, 2, 2;
	add.s32 	%r87, %r85, %r86;
	mov.u32 	%r88, %ctaid.x;
	mad.lo.s32 	%r4, %r88, %r1, %r83;
	mov.u32 	%r89, %ctaid.y;
	mov.u32 	%r90, %ntid.y;
	mad.lo.s32 	%r5, %r89, %r90, %r87;
	setp.lt.u32	%p12, %r4, %r66;
	setp.gt.u32	%p13, %r67, %r5;
	and.pred  	%p14, %p12, %p13;
	@!%p14 bra 	BB3_128;
	bra.uni 	BB3_3;

BB3_3:
	and.b32  	%r91, %r69, 52;
	mov.u16 	%rs10, 0;
	setp.ne.s32	%p15, %r91, 52;
	@%p15 bra 	BB3_12;

	setp.gt.f32	%p16, %f449, 0f00000000;
	@%p16 bra 	BB3_6;

	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u32 	%r92, 257;
	mov.u64 	%rd15, 0;
	mov.u64 	%rd16, 2;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r92;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 13

BB3_6:
	and.b32  	%r93, %r4, -8;
	cvt.rn.f32.u32	%f130, %r93;
	and.b32  	%r94, %r5, -4;
	cvt.rn.f32.u32	%f131, %r94;
	cvt.rn.f32.u32	%f132, %r71;
	sub.f32 	%f133, %f132, %f130;
	cvt.rn.f32.u32	%f134, %r72;
	sub.f32 	%f135, %f134, %f131;
	mul.f32 	%f136, %f135, %f135;
	fma.rn.f32 	%f137, %f133, %f133, %f136;
	sqrt.rn.f32 	%f138, %f137;
	ld.global.f32 	%f139, [pixelRealWidthInCm];
	mul.f32 	%f140, %f138, %f139;
	ld.global.f32 	%f141, [screenDistance];
	div.rn.f32 	%f1, %f140, %f141;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p17, %f2, 0f3F800000;
	mov.f32 	%f448, %f2;
	@%p17 bra 	BB3_8;

	rcp.rn.f32 	%f448, %f2;

BB3_8:
	mul.rn.f32 	%f142, %f448, %f448;
	mov.f32 	%f143, 0fC0B59883;
	mov.f32 	%f144, 0fBF52C7EA;
	fma.rn.f32 	%f145, %f142, %f144, %f143;
	mov.f32 	%f146, 0fC0D21907;
	fma.rn.f32 	%f147, %f145, %f142, %f146;
	mul.f32 	%f148, %f142, %f147;
	mul.f32 	%f149, %f448, %f148;
	add.f32 	%f150, %f142, 0f41355DC0;
	mov.f32 	%f151, 0f41E6BD60;
	fma.rn.f32 	%f152, %f150, %f142, %f151;
	mov.f32 	%f153, 0f419D92C8;
	fma.rn.f32 	%f154, %f152, %f142, %f153;
	rcp.rn.f32 	%f155, %f154;
	fma.rn.f32 	%f156, %f149, %f155, %f448;
	mov.f32 	%f157, 0f3FC90FDB;
	sub.f32 	%f158, %f157, %f156;
	setp.gt.f32	%p18, %f2, 0f3F800000;
	selp.f32	%f159, %f158, %f156, %p18;
	mov.b32 	 %r95, %f159;
	mov.b32 	 %r96, %f1;
	and.b32  	%r97, %r96, -2147483648;
	or.b32  	%r98, %r95, %r97;
	mov.b32 	 %f160, %r98;
	setp.gtu.f32	%p19, %f2, 0f7F800000;
	selp.f32	%f161, %f159, %f160, %p19;
	mul.f32 	%f162, %f161, 0f43340000;
	div.rn.f32 	%f5, %f162, 0f40490FDB;
	setp.ge.f32	%p20, %f5, 0f00000000;
	@%p20 bra 	BB3_10;

	mov.u64 	%rd17, $str3;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, $str1;
	cvta.global.u64 	%rd20, %rd19;
	mov.u32 	%r99, 270;
	mov.u64 	%rd21, 0;
	mov.u64 	%rd22, 2;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd18;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 param2;
	st.param.b32	[param2+0], %r99;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd21;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd22;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14

BB3_10:
	mul.f32 	%f163, %f449, 0f42360000;
	setp.ltu.f32	%p21, %f449, 0f3F800000;
	selp.f32	%f164, %f163, 0f42360000, %p21;
	mov.f32 	%f165, 0f42700000;
	sub.f32 	%f166, %f165, %f164;
	mov.f32 	%f167, 0fBF800000;
	div.rn.f32 	%f168, %f167, %f166;
	fma.rn.f32 	%f169, %f164, 0f80000000, 0f42700000;
	div.rn.f32 	%f170, %f169, %f166;
	fma.rn.f32 	%f171, %f5, %f168, %f170;
	cvt.f64.f32	%fd13, %f171;
	mov.f64 	%fd14, 0d3FF0000000000000;
	min.f64 	%fd15, %fd14, %fd13;
	cvt.rn.f32.f64	%f172, %fd15;
	mul.f32 	%f449, %f172, %f449;
	setp.gtu.f32	%p22, %f5, %f164;
	@%p22 bra 	BB3_12;

	cvt.f64.f32	%fd16, %f449;
	max.f64 	%fd18, %fd14, %fd16;
	cvt.rn.f32.f64	%f449, %fd18;
	mov.u16 	%rs10, 1;

BB3_12:
	and.b32  	%r100, %r69, 8;
	setp.eq.s32	%p24, %r100, 0;
	mov.pred 	%p142, -1;
	mov.f32 	%f478, 0f00000000;
	@%p24 bra 	BB3_13;

	sub.s32 	%r101, %r67, %r5;
	cvt.rn.f32.u32	%f175, %r101;
	cvt.rn.f32.u32	%f176, %r66;
	cvt.rn.f32.u32	%f177, %r4;
	div.rn.f32 	%f178, %f177, %f176;
	cvt.rn.f32.u32	%f179, %r67;
	div.rn.f32 	%f180, %f175, %f179;
	sub.f32 	%f181, %f123, %f121;
	sub.f32 	%f182, %f124, %f122;
	fma.rn.f32 	%f183, %f181, %f178, %f121;
	fma.rn.f32 	%f184, %f182, %f180, %f122;
	sub.f32 	%f185, %f183, %f126;
	sub.f32 	%f186, %f184, %f127;
	sub.f32 	%f187, %f128, %f126;
	div.rn.f32 	%f188, %f185, %f187;
	sub.f32 	%f189, %f129, %f127;
	div.rn.f32 	%f190, %f186, %f189;
	mul.f32 	%f13, %f176, %f188;
	mul.f32 	%f191, %f179, %f190;
	sub.f32 	%f14, %f179, %f191;
	abs.f32 	%f192, %f13;
	mov.b32 	 %r102, %f13;
	and.b32  	%r103, %r102, -2147483648;
	or.b32  	%r104, %r103, 1056964608;
	mov.b32 	 %f193, %r104;
	add.f32 	%f194, %f13, %f193;
	cvt.rzi.f32.f32	%f195, %f194;
	setp.gt.f32	%p25, %f192, 0f4B000000;
	selp.f32	%f450, %f13, %f195, %p25;
	setp.geu.f32	%p26, %f192, 0f3F000000;
	@%p26 bra 	BB3_16;

	cvt.rzi.f32.f32	%f450, %f13;

BB3_16:
	cvt.rzi.s32.f32	%r6, %f450;
	mov.b32 	 %r105, %f14;
	and.b32  	%r106, %r105, -2147483648;
	or.b32  	%r107, %r106, 1056964608;
	mov.b32 	 %f196, %r107;
	add.f32 	%f197, %f14, %f196;
	cvt.rzi.f32.f32	%f198, %f197;
	abs.f32 	%f199, %f14;
	setp.gt.f32	%p27, %f199, 0f4B000000;
	selp.f32	%f451, %f14, %f198, %p27;
	setp.geu.f32	%p28, %f199, 0f3F000000;
	@%p28 bra 	BB3_18;

	cvt.rzi.f32.f32	%f451, %f14;

BB3_18:
	add.s32 	%r108, %r66, -2;
	setp.lt.u32	%p30, %r6, %r108;
	setp.gt.s32	%p31, %r6, 1;
	and.pred  	%p32, %p31, %p30;
	cvt.rzi.s32.f32	%r109, %f451;
	setp.gt.s32	%p33, %r109, 1;
	and.pred  	%p34, %p32, %p33;
	add.s32 	%r110, %r67, -2;
	setp.lt.u32	%p35, %r109, %r110;
	and.pred  	%p36, %p35, %p34;
	mov.f32 	%f453, %f478;
	@!%p36 bra 	BB3_20;
	bra.uni 	BB3_19;

BB3_19:
	cvt.rmi.f32.f32	%f202, %f13;
	cvt.rzi.u32.f32	%r111, %f202;
	cvt.rmi.f32.f32	%f203, %f14;
	cvt.rzi.u32.f32	%r112, %f203;
	cvt.rn.f32.u32	%f204, %r111;
	sub.f32 	%f205, %f13, %f204;
	cvt.rn.f32.u32	%f206, %r112;
	sub.f32 	%f207, %f14, %f206;
	mul.lo.s32 	%r113, %r112, %r70;
	cvt.u64.u32	%rd23, %r113;
	cvta.to.global.u64 	%rd24, %rd4;
	add.s64 	%rd25, %rd24, %rd23;
	mul.wide.u32 	%rd26, %r111, 16;
	add.s64 	%rd27, %rd25, %rd26;
	add.s32 	%r114, %r111, 1;
	mul.wide.u32 	%rd28, %r114, 16;
	add.s64 	%rd29, %rd25, %rd28;
	add.s32 	%r115, %r112, 1;
	mul.lo.s32 	%r116, %r115, %r70;
	cvt.u64.u32	%rd30, %r116;
	add.s64 	%rd31, %rd24, %rd30;
	add.s64 	%rd32, %rd31, %rd26;
	add.s64 	%rd33, %rd31, %rd28;
	mov.f32 	%f208, 0f3F800000;
	sub.f32 	%f209, %f208, %f205;
	sub.f32 	%f210, %f208, %f207;
	mul.f32 	%f211, %f209, %f210;
	ld.global.f32 	%f212, [%rd27];
	mul.f32 	%f213, %f205, %f210;
	ld.global.f32 	%f214, [%rd29];
	mul.f32 	%f215, %f214, %f213;
	fma.rn.f32 	%f216, %f212, %f211, %f215;
	mul.f32 	%f217, %f209, %f207;
	ld.global.f32 	%f218, [%rd32];
	fma.rn.f32 	%f219, %f217, %f218, %f216;
	mul.f32 	%f220, %f205, %f207;
	ld.global.f32 	%f221, [%rd33];
	fma.rn.f32 	%f478, %f220, %f221, %f219;
	ld.global.f32 	%f222, [%rd27+4];
	ld.global.f32 	%f223, [%rd29+4];
	mul.f32 	%f224, %f213, %f223;
	fma.rn.f32 	%f225, %f222, %f211, %f224;
	ld.global.f32 	%f226, [%rd32+4];
	fma.rn.f32 	%f227, %f217, %f226, %f225;
	ld.global.f32 	%f228, [%rd33+4];
	fma.rn.f32 	%f453, %f220, %f228, %f227;
	cvt.f64.f32	%fd19, %f453;
	setp.lt.f64	%p142, %fd19, 0d3FB999999999999A;
	bra.uni 	BB3_20;

BB3_13:
	mov.f32 	%f453, %f478;

BB3_20:
	@%p142 bra 	BB3_75;
	bra.uni 	BB3_21;

BB3_75:
	setp.lt.f32	%p91, %f449, 0f3F800000;
	selp.f32	%f73, 0f3F800000, %f449, %p91;
	abs.f32 	%f340, %f73;
	mov.b32 	 %r167, %f73;
	and.b32  	%r168, %r167, -2147483648;
	or.b32  	%r169, %r168, 1056964608;
	mov.b32 	 %f341, %r169;
	add.f32 	%f342, %f73, %f341;
	cvt.rzi.f32.f32	%f343, %f342;
	setp.gt.f32	%p92, %f340, 0f4B000000;
	selp.f32	%f467, %f73, %f343, %p92;
	setp.geu.f32	%p93, %f340, 0f3F000000;
	@%p93 bra 	BB3_77;

	cvt.rzi.f32.f32	%f467, %f73;

BB3_77:
	cvt.rzi.u32.f32	%r170, %f467;
	mov.u32 	%r171, 64;
	min.u32 	%r36, %r171, %r170;
	cvt.rn.f32.u32	%f344, %r66;
	sub.f32 	%f345, %f123, %f121;
	div.rn.f32 	%f77, %f345, %f344;
	cvt.rn.f32.u32	%f346, %r67;
	sub.f32 	%f347, %f124, %f122;
	div.rn.f32 	%f78, %f347, %f346;
	setp.lt.u32	%p94, %r36, 65;
	@%p94 bra 	BB3_79;

	mov.u64 	%rd79, $str9;
	cvta.global.u64 	%rd80, %rd79;
	mov.u64 	%rd81, $str1;
	cvta.global.u64 	%rd82, %rd81;
	mov.u32 	%r172, 107;
	mov.u64 	%rd83, 0;
	mov.u64 	%rd84, 2;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd80;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd82;
	.param .b32 param2;
	st.param.b32	[param2+0], %r172;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd83;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd84;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 18

BB3_79:
	setp.eq.s32	%p95, %r36, 0;
	mov.u32 	%r260, 0;
	mov.u32 	%r259, %r260;
	@%p95 bra 	BB3_125;

	cvt.rn.f32.u32	%f79, %r4;
	cvt.rn.f32.u32	%f80, %r5;
	ld.const.f64 	%fd42, [roots];
	cvt.rn.f32.f64	%f81, %fd42;
	ld.const.f64 	%fd43, [roots+8];
	cvt.rn.f32.f64	%f82, %fd43;
	ld.const.f64 	%fd44, [roots+16];
	cvt.rn.f32.f64	%f83, %fd44;
	ld.const.f64 	%fd45, [roots+24];
	cvt.rn.f32.f64	%f84, %fd45;
	ld.const.f64 	%fd46, [roots+32];
	cvt.rn.f32.f64	%f85, %fd46;
	ld.const.f64 	%fd47, [roots+40];
	cvt.rn.f32.f64	%f86, %fd47;
	ld.const.f64 	%fd7, [coefficients+8];
	ld.const.f64 	%fd8, [coefficients];
	ld.const.f64 	%fd9, [coefficients+16];
	add.f64 	%fd10, %fd9, %fd9;
	ld.const.f64 	%fd11, [coefficients+24];
	mul.f64 	%fd12, %fd11, 0d4008000000000000;
	mul.wide.u32 	%rd85, %r68, -858993459;
	shr.u64 	%rd86, %rd85, 35;
	cvt.u32.u64	%r37, %rd86;
	add.f32 	%f87, %f73, 0fC0000000;
	mov.u32 	%r246, 0;
	sqrt.rn.f32 	%f88, %f87;
	mov.u32 	%r260, %r246;
	mov.u32 	%r259, %r36;

BB3_81:
	mov.u32 	%r40, %r259;
	mov.u32 	%r38, %r246;
	setp.lt.u32	%p96, %r38, 3;
	@%p96 bra 	BB3_88;
	bra.uni 	BB3_82;

BB3_88:
	cvt.rn.f32.u32	%f354, %r38;
	div.rn.f32 	%f469, %f354, 0f40400000;
	mov.f32 	%f470, %f469;
	bra.uni 	BB3_89;

BB3_82:
	abs.f32 	%f348, %f88;
	mov.b32 	 %r177, %f88;
	and.b32  	%r178, %r177, -2147483648;
	or.b32  	%r179, %r178, 1056964608;
	mov.b32 	 %f349, %r179;
	add.f32 	%f350, %f88, %f349;
	cvt.rzi.f32.f32	%f351, %f350;
	setp.gt.f32	%p97, %f348, 0f4B000000;
	selp.f32	%f468, %f88, %f351, %p97;
	setp.geu.f32	%p98, %f348, 0f3F000000;
	@%p98 bra 	BB3_84;

	cvt.rzi.f32.f32	%f468, %f88;

BB3_84:
	add.s32 	%r180, %r38, -2;
	cvt.rzi.u32.f32	%r181, %f468;
	rem.u32 	%r182, %r180, %r181;
	cvt.rn.f32.u32	%f352, %r182;
	div.rn.f32 	%f469, %f352, %f88;
	div.u32 	%r183, %r180, %r181;
	cvt.rn.f32.u32	%f353, %r183;
	div.rn.f32 	%f470, %f353, %f88;
	setp.le.f32	%p99, %f470, 0f3F800000;
	@%p99 bra 	BB3_86;

	mov.u64 	%rd87, $str10;
	cvta.global.u64 	%rd88, %rd87;
	mov.u64 	%rd89, $str1;
	cvta.global.u64 	%rd90, %rd89;
	mov.u32 	%r184, 126;
	mov.u64 	%rd91, 0;
	mov.u64 	%rd92, 2;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd88;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd90;
	.param .b32 param2;
	st.param.b32	[param2+0], %r184;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd91;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd92;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 19

BB3_86:
	setp.le.f32	%p100, %f469, 0f3F800000;
	@%p100 bra 	BB3_89;

	mov.u64 	%rd93, $str11;
	cvta.global.u64 	%rd94, %rd93;
	mov.u64 	%rd95, $str1;
	cvta.global.u64 	%rd96, %rd95;
	mov.u32 	%r185, 127;
	mov.u64 	%rd97, 0;
	mov.u64 	%rd98, 2;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd94;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd96;
	.param .b32 param2;
	st.param.b32	[param2+0], %r185;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd97;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd98;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 20

BB3_89:
	add.f32 	%f355, %f80, %f470;
	neg.f32 	%f356, %f355;
	add.f32 	%f357, %f79, %f469;
	fma.rn.f32 	%f472, %f77, %f357, %f121;
	fma.rn.f32 	%f471, %f78, %f356, %f124;
	setp.eq.s32	%p101, %r68, 0;
	mov.u32 	%r250, 0;
	mov.u32 	%r249, 10;
	@%p101 bra 	BB3_101;

BB3_90:
	mul.f32 	%f358, %f471, %f471;
	mul.f32 	%f359, %f472, %f472;
	sub.f32 	%f360, %f359, %f358;
	mul.f32 	%f361, %f472, %f471;
	fma.rn.f32 	%f362, %f472, %f471, %f361;
	mul.f32 	%f363, %f472, %f360;
	mul.f32 	%f364, %f471, %f362;
	sub.f32 	%f365, %f363, %f364;
	mul.f32 	%f366, %f472, %f362;
	fma.rn.f32 	%f367, %f471, %f360, %f366;
	cvt.f64.f32	%fd48, %f472;
	cvt.f64.f32	%fd49, %f471;
	fma.rn.f64 	%fd50, %fd48, %fd7, %fd8;
	cvt.f64.f32	%fd51, %f360;
	cvt.f64.f32	%fd52, %f362;
	mul.f64 	%fd53, %fd52, %fd9;
	fma.rn.f64 	%fd54, %fd51, %fd9, %fd50;
	fma.rn.f64 	%fd55, %fd49, %fd7, %fd53;
	cvt.f64.f32	%fd56, %f365;
	cvt.f64.f32	%fd57, %f367;
	fma.rn.f64 	%fd58, %fd56, %fd11, %fd54;
	fma.rn.f64 	%fd59, %fd57, %fd11, %fd55;
	cvt.rn.f32.f64	%f368, %fd58;
	cvt.rn.f32.f64	%f369, %fd59;
	fma.rn.f64 	%fd60, %fd48, %fd10, %fd7;
	mul.f64 	%fd61, %fd52, %fd12;
	fma.rn.f64 	%fd62, %fd51, %fd12, %fd60;
	fma.rn.f64 	%fd63, %fd49, %fd10, %fd61;
	cvt.rn.f32.f64	%f370, %fd62;
	cvt.rn.f32.f64	%f371, %fd63;
	abs.f32 	%f372, %f370;
	abs.f32 	%f373, %f371;
	add.f32 	%f374, %f372, %f373;
	rcp.rn.f32 	%f375, %f374;
	mul.f32 	%f376, %f368, %f375;
	mul.f32 	%f377, %f369, %f375;
	mul.f32 	%f378, %f375, %f370;
	mul.f32 	%f379, %f375, %f371;
	mul.f32 	%f380, %f379, %f379;
	fma.rn.f32 	%f381, %f378, %f378, %f380;
	rcp.rn.f32 	%f382, %f381;
	mul.f32 	%f383, %f377, %f379;
	fma.rn.f32 	%f384, %f376, %f378, %f383;
	mul.f32 	%f385, %f382, %f384;
	mul.f32 	%f386, %f377, %f378;
	mul.f32 	%f387, %f376, %f379;
	sub.f32 	%f388, %f386, %f387;
	mul.f32 	%f389, %f382, %f388;
	sub.f32 	%f472, %f472, %f385;
	sub.f32 	%f471, %f471, %f389;
	add.s32 	%r250, %r250, 1;
	setp.ne.s32	%p102, %r250, %r249;
	@%p102 bra 	BB3_100;

	sub.f32 	%f390, %f472, %f81;
	abs.f32 	%f391, %f390;
	setp.geu.f32	%p103, %f391, 0f38D1B717;
	@%p103 bra 	BB3_93;

	sub.f32 	%f392, %f471, %f82;
	abs.f32 	%f393, %f392;
	setp.lt.f32	%p104, %f393, 0f38D1B717;
	mov.u32 	%r254, 1;
	@%p104 bra 	BB3_98;

BB3_93:
	sub.f32 	%f394, %f472, %f83;
	abs.f32 	%f395, %f394;
	setp.geu.f32	%p105, %f395, 0f38D1B717;
	@%p105 bra 	BB3_95;

	sub.f32 	%f396, %f471, %f84;
	abs.f32 	%f397, %f396;
	setp.lt.f32	%p106, %f397, 0f38D1B717;
	mov.u32 	%r254, 2;
	@%p106 bra 	BB3_98;

BB3_95:
	sub.f32 	%f398, %f472, %f85;
	abs.f32 	%f399, %f398;
	mov.pred 	%p145, 0;
	setp.geu.f32	%p108, %f399, 0f38D1B717;
	@%p108 bra 	BB3_97;

	sub.f32 	%f400, %f471, %f86;
	abs.f32 	%f401, %f400;
	setp.lt.f32	%p145, %f401, 0f38D1B717;

BB3_97:
	selp.b32	%r254, 3, 0, %p145;

BB3_98:
	setp.ne.s32	%p109, %r254, 0;
	@%p109 bra 	BB3_108;

	add.s32 	%r46, %r37, %r249;
	mov.u32 	%r250, %r249;
	mov.u32 	%r249, %r46;

BB3_100:
	setp.lt.u32	%p110, %r250, %r68;
	@%p110 bra 	BB3_90;

BB3_101:
	sub.f32 	%f402, %f472, %f81;
	abs.f32 	%f403, %f402;
	setp.geu.f32	%p111, %f403, 0f38D1B717;
	@%p111 bra 	BB3_103;

	sub.f32 	%f404, %f471, %f82;
	abs.f32 	%f405, %f404;
	setp.lt.f32	%p112, %f405, 0f38D1B717;
	mov.u32 	%r254, 1;
	@%p112 bra 	BB3_108;

BB3_103:
	sub.f32 	%f406, %f472, %f83;
	abs.f32 	%f407, %f406;
	setp.geu.f32	%p113, %f407, 0f38D1B717;
	@%p113 bra 	BB3_105;

	sub.f32 	%f408, %f471, %f84;
	abs.f32 	%f409, %f408;
	setp.lt.f32	%p114, %f409, 0f38D1B717;
	mov.u32 	%r254, 2;
	@%p114 bra 	BB3_108;

BB3_105:
	sub.f32 	%f410, %f472, %f85;
	abs.f32 	%f411, %f410;
	mov.pred 	%p146, 0;
	setp.geu.f32	%p116, %f411, 0f38D1B717;
	@%p116 bra 	BB3_107;

	sub.f32 	%f412, %f471, %f86;
	abs.f32 	%f413, %f412;
	setp.lt.f32	%p146, %f413, 0f38D1B717;

BB3_107:
	selp.b32	%r254, 3, 0, %p146;

BB3_108:
	cvt.rn.f32.u32	%f414, %r254;
	cvt.rzi.u32.f32	%r51, %f414;
	add.s32 	%r260, %r51, %r260;
	setp.gt.u32	%p117, %r38, 9;
	@%p117 bra 	BB3_110;

	cvt.rn.f32.u32	%f415, %r51;
	add.u64 	%rd99, %SP, 0;
	cvta.to.local.u64 	%rd100, %rd99;
	mul.wide.u32 	%rd101, %r38, 4;
	add.s64 	%rd102, %rd100, %rd101;
	st.local.f32 	[%rd102], %f415;

BB3_110:
	setp.lt.u32	%p118, %r38, 10;
	and.b32  	%r192, %r69, 1;
	setp.eq.b32	%p119, %r192, 1;
	setp.ne.s32	%p120, %r38, 0;
	and.pred  	%p121, %p118, %p120;
	and.pred  	%p122, %p121, %p119;
	shr.u32 	%r193, %r40, 1;
	setp.eq.s32	%p123, %r38, %r193;
	or.pred  	%p124, %p122, %p123;
	add.s32 	%r246, %r38, 1;
	mov.u32 	%r259, %r40;
	@!%p124 bra 	BB3_124;
	bra.uni 	BB3_111;

BB3_111:
	div.u32 	%r194, %r260, %r246;
	cvt.rn.f32.u32	%f105, %r194;
	setp.eq.s32	%p125, %r38, 0;
	mov.f32 	%f477, 0f00000000;
	@%p125 bra 	BB3_120;

	and.b32  	%r196, %r38, 3;
	setp.eq.s32	%p126, %r196, 0;
	mov.f32 	%f477, 0f00000000;
	mov.u32 	%r258, 0;
	@%p126 bra 	BB3_118;

	setp.eq.s32	%p127, %r196, 1;
	mov.f32 	%f474, 0f00000000;
	mov.u32 	%r256, 0;
	@%p127 bra 	BB3_117;

	setp.eq.s32	%p128, %r196, 2;
	mov.f32 	%f473, 0f00000000;
	mov.u32 	%r255, 0;
	@%p128 bra 	BB3_116;

	add.u64 	%rd103, %SP, 0;
	cvta.to.local.u64 	%rd104, %rd103;
	ld.local.f32 	%f420, [%rd104];
	sub.f32 	%f421, %f420, %f105;
	fma.rn.f32 	%f473, %f421, %f421, 0f00000000;
	mov.u32 	%r255, 1;

BB3_116:
	add.u64 	%rd105, %SP, 0;
	cvta.to.local.u64 	%rd106, %rd105;
	mul.wide.u32 	%rd107, %r255, 4;
	add.s64 	%rd108, %rd106, %rd107;
	ld.local.f32 	%f422, [%rd108];
	sub.f32 	%f423, %f422, %f105;
	fma.rn.f32 	%f474, %f423, %f423, %f473;
	add.s32 	%r256, %r255, 1;

BB3_117:
	add.u64 	%rd109, %SP, 0;
	cvta.to.local.u64 	%rd110, %rd109;
	mul.wide.u32 	%rd111, %r256, 4;
	add.s64 	%rd112, %rd110, %rd111;
	ld.local.f32 	%f424, [%rd112];
	sub.f32 	%f425, %f424, %f105;
	fma.rn.f32 	%f477, %f425, %f425, %f474;
	add.s32 	%r258, %r256, 1;

BB3_118:
	add.u64 	%rd113, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd113;
	setp.lt.u32	%p129, %r38, 4;
	@%p129 bra 	BB3_120;

BB3_119:
	mul.wide.u32 	%rd114, %r258, 4;
	add.s64 	%rd115, %rd2, %rd114;
	ld.local.f32 	%f426, [%rd115];
	sub.f32 	%f427, %f426, %f105;
	fma.rn.f32 	%f428, %f427, %f427, %f477;
	add.s32 	%r202, %r258, 1;
	mul.wide.u32 	%rd116, %r202, 4;
	add.s64 	%rd117, %rd2, %rd116;
	ld.local.f32 	%f429, [%rd117];
	sub.f32 	%f430, %f429, %f105;
	fma.rn.f32 	%f431, %f430, %f430, %f428;
	add.s32 	%r203, %r258, 2;
	mul.wide.u32 	%rd118, %r203, 4;
	add.s64 	%rd119, %rd2, %rd118;
	ld.local.f32 	%f432, [%rd119];
	sub.f32 	%f433, %f432, %f105;
	fma.rn.f32 	%f434, %f433, %f433, %f431;
	add.s32 	%r204, %r258, 3;
	mul.wide.u32 	%rd120, %r204, 4;
	add.s64 	%rd121, %rd2, %rd120;
	ld.local.f32 	%f435, [%rd121];
	sub.f32 	%f436, %f435, %f105;
	fma.rn.f32 	%f477, %f436, %f436, %f434;
	add.s32 	%r258, %r258, 4;
	setp.lt.u32	%p130, %r258, %r38;
	@%p130 bra 	BB3_119;

BB3_120:
	add.s32 	%r205, %r38, -1;
	cvt.rn.f32.u32	%f437, %r205;
	div.rn.f32 	%f438, %f477, %f437;
	div.rn.f32 	%f115, %f438, %f105;
	setp.ne.s32	%p131, %r38, 1;
	@%p131 bra 	BB3_122;

	// inline asm
	activemask.b32 %r206;
	// inline asm
	add.u64 	%rd122, %SP, 0;
	cvta.to.local.u64 	%rd123, %rd122;
	ld.local.v2.f32 	{%f439, %f440}, [%rd123];
	sub.f32 	%f443, %f439, %f440;
	abs.f32 	%f444, %f443;
	setp.lt.f32	%p132, %f444, 0f34000000;
	vote.sync.all.pred 	%p133, %p132, %r206;
	mov.u32 	%r259, 2;
	@%p133 bra 	BB3_124;

BB3_122:
	// inline asm
	activemask.b32 %r209;
	// inline asm
	setp.lt.f32	%p134, %f115, 0f3C23D70A;
	vote.sync.all.pred 	%p135, %p134, %r209;
	mov.u32 	%r259, %r246;
	@%p135 bra 	BB3_124;

	// inline asm
	activemask.b32 %r211;
	// inline asm
	setp.le.f32	%p136, %f115, 0f3F800000;
	vote.sync.all.pred 	%p137, %p136, %r211;
	setp.ge.u32	%p138, %r38, %r193;
	and.pred  	%p139, %p137, %p138;
	selp.b32	%r259, %r246, %r40, %p139;

BB3_124:
	setp.lt.u32	%p140, %r246, %r259;
	@%p140 bra 	BB3_81;

BB3_125:
	cvt.rn.f32.u32	%f453, %r259;
	div.u32 	%r214, %r260, %r259;
	cvt.rn.f32.u32	%f478, %r214;
	mov.f32 	%f480, 0f00000000;
	mov.u16 	%rs11, 0;
	bra.uni 	BB3_126;

BB3_21:
	shr.u32 	%r117, %r69, 5;
	and.b32  	%r118, %r117, 1;
	setp.eq.b32	%p37, %r118, 1;
	not.pred 	%p38, %p37;
	setp.eq.s16	%p39, %rs10, 0;
	mov.f32 	%f480, 0f00000000;
	mov.u16 	%rs11, 1;
	or.pred  	%p40, %p39, %p38;
	@%p40 bra 	BB3_126;

	setp.lt.f32	%p41, %f449, 0f3F800000;
	mov.f32 	%f480, 0f00000000;
	mov.f32 	%f466, %f480;
	@%p41 bra 	BB3_74;

	abs.f32 	%f232, %f449;
	mov.b32 	 %r119, %f449;
	and.b32  	%r120, %r119, -2147483648;
	or.b32  	%r121, %r120, 1056964608;
	mov.b32 	 %f233, %r121;
	add.f32 	%f234, %f449, %f233;
	cvt.rzi.f32.f32	%f235, %f234;
	setp.gt.f32	%p42, %f232, 0f4B000000;
	selp.f32	%f454, %f449, %f235, %p42;
	setp.geu.f32	%p43, %f232, 0f3F000000;
	@%p43 bra 	BB3_25;

	cvt.rzi.f32.f32	%f454, %f449;

BB3_25:
	cvt.rzi.u32.f32	%r122, %f454;
	mov.u32 	%r123, 64;
	min.u32 	%r7, %r123, %r122;
	cvt.rn.f32.u32	%f236, %r66;
	sub.f32 	%f237, %f123, %f121;
	div.rn.f32 	%f28, %f237, %f236;
	cvt.rn.f32.u32	%f238, %r67;
	sub.f32 	%f239, %f124, %f122;
	div.rn.f32 	%f29, %f239, %f238;
	setp.lt.u32	%p44, %r7, 65;
	@%p44 bra 	BB3_27;

	mov.u64 	%rd34, $str9;
	cvta.global.u64 	%rd35, %rd34;
	mov.u64 	%rd36, $str1;
	cvta.global.u64 	%rd37, %rd36;
	mov.u32 	%r124, 107;
	mov.u64 	%rd38, 0;
	mov.u64 	%rd39, 2;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd37;
	.param .b32 param2;
	st.param.b32	[param2+0], %r124;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd38;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd39;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 15

BB3_27:
	setp.eq.s32	%p45, %r7, 0;
	mov.u32 	%r244, 0;
	mov.u32 	%r243, %r244;
	@%p45 bra 	BB3_73;

	cvt.rn.f32.u32	%f30, %r4;
	cvt.rn.f32.u32	%f31, %r5;
	ld.const.f64 	%fd20, [roots];
	cvt.rn.f32.f64	%f32, %fd20;
	ld.const.f64 	%fd21, [roots+8];
	cvt.rn.f32.f64	%f33, %fd21;
	ld.const.f64 	%fd22, [roots+16];
	cvt.rn.f32.f64	%f34, %fd22;
	ld.const.f64 	%fd23, [roots+24];
	cvt.rn.f32.f64	%f35, %fd23;
	ld.const.f64 	%fd24, [roots+32];
	cvt.rn.f32.f64	%f36, %fd24;
	ld.const.f64 	%fd25, [roots+40];
	cvt.rn.f32.f64	%f37, %fd25;
	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	mul.wide.u32 	%rd40, %r68, -858993459;
	shr.u64 	%rd41, %rd40, 35;
	cvt.u32.u64	%r8, %rd41;
	add.f32 	%f38, %f449, 0fC0000000;
	mov.u32 	%r230, 0;
	sqrt.rn.f32 	%f39, %f38;
	mov.u32 	%r244, %r230;
	mov.u32 	%r243, %r7;

BB3_29:
	mov.u32 	%r11, %r243;
	mov.u32 	%r9, %r230;
	setp.lt.u32	%p46, %r9, 3;
	@%p46 bra 	BB3_36;
	bra.uni 	BB3_30;

BB3_36:
	cvt.rn.f32.u32	%f246, %r9;
	div.rn.f32 	%f456, %f246, 0f40400000;
	mov.f32 	%f457, %f456;
	bra.uni 	BB3_37;

BB3_30:
	abs.f32 	%f240, %f39;
	mov.b32 	 %r129, %f39;
	and.b32  	%r130, %r129, -2147483648;
	or.b32  	%r131, %r130, 1056964608;
	mov.b32 	 %f241, %r131;
	add.f32 	%f242, %f39, %f241;
	cvt.rzi.f32.f32	%f243, %f242;
	setp.gt.f32	%p47, %f240, 0f4B000000;
	selp.f32	%f455, %f39, %f243, %p47;
	setp.geu.f32	%p48, %f240, 0f3F000000;
	@%p48 bra 	BB3_32;

	cvt.rzi.f32.f32	%f455, %f39;

BB3_32:
	add.s32 	%r132, %r9, -2;
	cvt.rzi.u32.f32	%r133, %f455;
	rem.u32 	%r134, %r132, %r133;
	cvt.rn.f32.u32	%f244, %r134;
	div.rn.f32 	%f456, %f244, %f39;
	div.u32 	%r135, %r132, %r133;
	cvt.rn.f32.u32	%f245, %r135;
	div.rn.f32 	%f457, %f245, %f39;
	setp.le.f32	%p49, %f457, 0f3F800000;
	@%p49 bra 	BB3_34;

	mov.u64 	%rd42, $str10;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, $str1;
	cvta.global.u64 	%rd45, %rd44;
	mov.u32 	%r136, 126;
	mov.u64 	%rd46, 0;
	mov.u64 	%rd47, 2;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd45;
	.param .b32 param2;
	st.param.b32	[param2+0], %r136;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd46;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd47;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 16

BB3_34:
	setp.le.f32	%p50, %f456, 0f3F800000;
	@%p50 bra 	BB3_37;

	mov.u64 	%rd48, $str11;
	cvta.global.u64 	%rd49, %rd48;
	mov.u64 	%rd50, $str1;
	cvta.global.u64 	%rd51, %rd50;
	mov.u32 	%r137, 127;
	mov.u64 	%rd52, 0;
	mov.u64 	%rd53, 2;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd49;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 param2;
	st.param.b32	[param2+0], %r137;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd52;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd53;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 17

BB3_37:
	ld.param.f32 	%f447, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f446, [fractalRenderAdvancedFloat_param_3];
	add.f32 	%f247, %f31, %f457;
	neg.f32 	%f248, %f247;
	add.f32 	%f249, %f30, %f456;
	fma.rn.f32 	%f459, %f28, %f249, %f446;
	fma.rn.f32 	%f458, %f29, %f248, %f447;
	setp.eq.s32	%p51, %r68, 0;
	mov.u32 	%r234, 0;
	mov.u32 	%r233, 10;
	@%p51 bra 	BB3_49;

BB3_38:
	mul.f32 	%f250, %f458, %f458;
	mul.f32 	%f251, %f459, %f459;
	sub.f32 	%f252, %f251, %f250;
	mul.f32 	%f253, %f459, %f458;
	fma.rn.f32 	%f254, %f459, %f458, %f253;
	mul.f32 	%f255, %f459, %f252;
	mul.f32 	%f256, %f458, %f254;
	sub.f32 	%f257, %f255, %f256;
	mul.f32 	%f258, %f459, %f254;
	fma.rn.f32 	%f259, %f458, %f252, %f258;
	cvt.f64.f32	%fd26, %f459;
	cvt.f64.f32	%fd27, %f458;
	fma.rn.f64 	%fd28, %fd26, %fd1, %fd2;
	cvt.f64.f32	%fd29, %f252;
	cvt.f64.f32	%fd30, %f254;
	mul.f64 	%fd31, %fd30, %fd3;
	fma.rn.f64 	%fd32, %fd29, %fd3, %fd28;
	fma.rn.f64 	%fd33, %fd27, %fd1, %fd31;
	cvt.f64.f32	%fd34, %f257;
	cvt.f64.f32	%fd35, %f259;
	fma.rn.f64 	%fd36, %fd34, %fd5, %fd32;
	fma.rn.f64 	%fd37, %fd35, %fd5, %fd33;
	cvt.rn.f32.f64	%f260, %fd36;
	cvt.rn.f32.f64	%f261, %fd37;
	fma.rn.f64 	%fd38, %fd26, %fd4, %fd1;
	mul.f64 	%fd39, %fd30, %fd6;
	fma.rn.f64 	%fd40, %fd29, %fd6, %fd38;
	fma.rn.f64 	%fd41, %fd27, %fd4, %fd39;
	cvt.rn.f32.f64	%f262, %fd40;
	cvt.rn.f32.f64	%f263, %fd41;
	abs.f32 	%f264, %f262;
	abs.f32 	%f265, %f263;
	add.f32 	%f266, %f264, %f265;
	rcp.rn.f32 	%f267, %f266;
	mul.f32 	%f268, %f260, %f267;
	mul.f32 	%f269, %f261, %f267;
	mul.f32 	%f270, %f267, %f262;
	mul.f32 	%f271, %f267, %f263;
	mul.f32 	%f272, %f271, %f271;
	fma.rn.f32 	%f273, %f270, %f270, %f272;
	rcp.rn.f32 	%f274, %f273;
	mul.f32 	%f275, %f269, %f271;
	fma.rn.f32 	%f276, %f268, %f270, %f275;
	mul.f32 	%f277, %f274, %f276;
	mul.f32 	%f278, %f269, %f270;
	mul.f32 	%f279, %f268, %f271;
	sub.f32 	%f280, %f278, %f279;
	mul.f32 	%f281, %f274, %f280;
	sub.f32 	%f459, %f459, %f277;
	sub.f32 	%f458, %f458, %f281;
	add.s32 	%r234, %r234, 1;
	setp.ne.s32	%p52, %r234, %r233;
	@%p52 bra 	BB3_48;

	sub.f32 	%f282, %f459, %f32;
	abs.f32 	%f283, %f282;
	setp.geu.f32	%p53, %f283, 0f38D1B717;
	@%p53 bra 	BB3_41;

	sub.f32 	%f284, %f458, %f33;
	abs.f32 	%f285, %f284;
	setp.lt.f32	%p54, %f285, 0f38D1B717;
	mov.u32 	%r238, 1;
	@%p54 bra 	BB3_46;

BB3_41:
	sub.f32 	%f286, %f459, %f34;
	abs.f32 	%f287, %f286;
	setp.geu.f32	%p55, %f287, 0f38D1B717;
	@%p55 bra 	BB3_43;

	sub.f32 	%f288, %f458, %f35;
	abs.f32 	%f289, %f288;
	setp.lt.f32	%p56, %f289, 0f38D1B717;
	mov.u32 	%r238, 2;
	@%p56 bra 	BB3_46;

BB3_43:
	sub.f32 	%f290, %f459, %f36;
	abs.f32 	%f291, %f290;
	mov.pred 	%p143, 0;
	setp.geu.f32	%p58, %f291, 0f38D1B717;
	@%p58 bra 	BB3_45;

	sub.f32 	%f292, %f458, %f37;
	abs.f32 	%f293, %f292;
	setp.lt.f32	%p143, %f293, 0f38D1B717;

BB3_45:
	selp.b32	%r238, 3, 0, %p143;

BB3_46:
	setp.ne.s32	%p59, %r238, 0;
	@%p59 bra 	BB3_56;

	add.s32 	%r17, %r8, %r233;
	mov.u32 	%r234, %r233;
	mov.u32 	%r233, %r17;

BB3_48:
	setp.lt.u32	%p60, %r234, %r68;
	@%p60 bra 	BB3_38;

BB3_49:
	sub.f32 	%f294, %f459, %f32;
	abs.f32 	%f295, %f294;
	setp.geu.f32	%p61, %f295, 0f38D1B717;
	@%p61 bra 	BB3_51;

	sub.f32 	%f296, %f458, %f33;
	abs.f32 	%f297, %f296;
	setp.lt.f32	%p62, %f297, 0f38D1B717;
	mov.u32 	%r238, 1;
	@%p62 bra 	BB3_56;

BB3_51:
	sub.f32 	%f298, %f459, %f34;
	abs.f32 	%f299, %f298;
	setp.geu.f32	%p63, %f299, 0f38D1B717;
	@%p63 bra 	BB3_53;

	sub.f32 	%f300, %f458, %f35;
	abs.f32 	%f301, %f300;
	setp.lt.f32	%p64, %f301, 0f38D1B717;
	mov.u32 	%r238, 2;
	@%p64 bra 	BB3_56;

BB3_53:
	sub.f32 	%f302, %f459, %f36;
	abs.f32 	%f303, %f302;
	mov.pred 	%p144, 0;
	setp.geu.f32	%p66, %f303, 0f38D1B717;
	@%p66 bra 	BB3_55;

	sub.f32 	%f304, %f458, %f37;
	abs.f32 	%f305, %f304;
	setp.lt.f32	%p144, %f305, 0f38D1B717;

BB3_55:
	selp.b32	%r238, 3, 0, %p144;

BB3_56:
	cvt.rn.f32.u32	%f306, %r238;
	cvt.rzi.u32.f32	%r22, %f306;
	add.s32 	%r244, %r22, %r244;
	setp.gt.u32	%p67, %r9, 9;
	@%p67 bra 	BB3_58;

	cvt.rn.f32.u32	%f307, %r22;
	add.u64 	%rd54, %SP, 0;
	cvta.to.local.u64 	%rd55, %rd54;
	mul.wide.u32 	%rd56, %r9, 4;
	add.s64 	%rd57, %rd55, %rd56;
	st.local.f32 	[%rd57], %f307;

BB3_58:
	setp.lt.u32	%p68, %r9, 10;
	and.b32  	%r144, %r69, 1;
	setp.eq.b32	%p69, %r144, 1;
	setp.ne.s32	%p70, %r9, 0;
	and.pred  	%p71, %p68, %p70;
	and.pred  	%p72, %p71, %p69;
	shr.u32 	%r145, %r11, 1;
	setp.eq.s32	%p73, %r9, %r145;
	or.pred  	%p74, %p72, %p73;
	add.s32 	%r230, %r9, 1;
	mov.u32 	%r243, %r11;
	@!%p74 bra 	BB3_72;
	bra.uni 	BB3_59;

BB3_59:
	div.u32 	%r146, %r244, %r230;
	cvt.rn.f32.u32	%f56, %r146;
	setp.eq.s32	%p75, %r9, 0;
	mov.f32 	%f464, 0f00000000;
	@%p75 bra 	BB3_68;

	and.b32  	%r148, %r9, 3;
	setp.eq.s32	%p76, %r148, 0;
	mov.f32 	%f464, 0f00000000;
	mov.u32 	%r242, 0;
	@%p76 bra 	BB3_66;

	setp.eq.s32	%p77, %r148, 1;
	mov.f32 	%f461, 0f00000000;
	mov.u32 	%r240, 0;
	@%p77 bra 	BB3_65;

	setp.eq.s32	%p78, %r148, 2;
	mov.f32 	%f460, 0f00000000;
	mov.u32 	%r239, 0;
	@%p78 bra 	BB3_64;

	add.u64 	%rd58, %SP, 0;
	cvta.to.local.u64 	%rd59, %rd58;
	ld.local.f32 	%f312, [%rd59];
	sub.f32 	%f313, %f312, %f56;
	fma.rn.f32 	%f460, %f313, %f313, 0f00000000;
	mov.u32 	%r239, 1;

BB3_64:
	add.u64 	%rd60, %SP, 0;
	cvta.to.local.u64 	%rd61, %rd60;
	mul.wide.u32 	%rd62, %r239, 4;
	add.s64 	%rd63, %rd61, %rd62;
	ld.local.f32 	%f314, [%rd63];
	sub.f32 	%f315, %f314, %f56;
	fma.rn.f32 	%f461, %f315, %f315, %f460;
	add.s32 	%r240, %r239, 1;

BB3_65:
	add.u64 	%rd64, %SP, 0;
	cvta.to.local.u64 	%rd65, %rd64;
	mul.wide.u32 	%rd66, %r240, 4;
	add.s64 	%rd67, %rd65, %rd66;
	ld.local.f32 	%f316, [%rd67];
	sub.f32 	%f317, %f316, %f56;
	fma.rn.f32 	%f464, %f317, %f317, %f461;
	add.s32 	%r242, %r240, 1;

BB3_66:
	add.u64 	%rd68, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd68;
	setp.lt.u32	%p79, %r9, 4;
	@%p79 bra 	BB3_68;

BB3_67:
	mul.wide.u32 	%rd69, %r242, 4;
	add.s64 	%rd70, %rd1, %rd69;
	ld.local.f32 	%f318, [%rd70];
	sub.f32 	%f319, %f318, %f56;
	fma.rn.f32 	%f320, %f319, %f319, %f464;
	add.s32 	%r154, %r242, 1;
	mul.wide.u32 	%rd71, %r154, 4;
	add.s64 	%rd72, %rd1, %rd71;
	ld.local.f32 	%f321, [%rd72];
	sub.f32 	%f322, %f321, %f56;
	fma.rn.f32 	%f323, %f322, %f322, %f320;
	add.s32 	%r155, %r242, 2;
	mul.wide.u32 	%rd73, %r155, 4;
	add.s64 	%rd74, %rd1, %rd73;
	ld.local.f32 	%f324, [%rd74];
	sub.f32 	%f325, %f324, %f56;
	fma.rn.f32 	%f326, %f325, %f325, %f323;
	add.s32 	%r156, %r242, 3;
	mul.wide.u32 	%rd75, %r156, 4;
	add.s64 	%rd76, %rd1, %rd75;
	ld.local.f32 	%f327, [%rd76];
	sub.f32 	%f328, %f327, %f56;
	fma.rn.f32 	%f464, %f328, %f328, %f326;
	add.s32 	%r242, %r242, 4;
	setp.lt.u32	%p80, %r242, %r9;
	@%p80 bra 	BB3_67;

BB3_68:
	add.s32 	%r157, %r9, -1;
	cvt.rn.f32.u32	%f329, %r157;
	div.rn.f32 	%f330, %f464, %f329;
	div.rn.f32 	%f66, %f330, %f56;
	setp.ne.s32	%p81, %r9, 1;
	@%p81 bra 	BB3_70;

	// inline asm
	activemask.b32 %r158;
	// inline asm
	add.u64 	%rd77, %SP, 0;
	cvta.to.local.u64 	%rd78, %rd77;
	ld.local.v2.f32 	{%f331, %f332}, [%rd78];
	sub.f32 	%f335, %f331, %f332;
	abs.f32 	%f336, %f335;
	setp.lt.f32	%p82, %f336, 0f34000000;
	vote.sync.all.pred 	%p83, %p82, %r158;
	mov.u32 	%r243, 2;
	@%p83 bra 	BB3_72;

BB3_70:
	// inline asm
	activemask.b32 %r161;
	// inline asm
	setp.lt.f32	%p84, %f66, 0f3C23D70A;
	vote.sync.all.pred 	%p85, %p84, %r161;
	mov.u32 	%r243, %r230;
	@%p85 bra 	BB3_72;

	// inline asm
	activemask.b32 %r163;
	// inline asm
	setp.le.f32	%p86, %f66, 0f3F800000;
	vote.sync.all.pred 	%p87, %p86, %r163;
	setp.ge.u32	%p88, %r9, %r145;
	and.pred  	%p89, %p87, %p88;
	selp.b32	%r243, %r230, %r11, %p89;

BB3_72:
	setp.lt.u32	%p90, %r230, %r243;
	@%p90 bra 	BB3_29;

BB3_73:
	cvt.rn.f32.u32	%f480, %r243;
	div.u32 	%r166, %r244, %r243;
	cvt.rn.f32.u32	%f466, %r166;

BB3_74:
	mov.u16 	%rs11, 1;
	mul.f32 	%f337, %f453, 0f3F400000;
	add.f32 	%f453, %f337, %f480;
	mul.f32 	%f338, %f480, %f466;
	fma.rn.f32 	%f339, %f478, %f337, %f338;
	div.rn.f32 	%f478, %f339, %f453;

BB3_126:
	mov.u32 	%r229, %tid.x;
	mov.u32 	%r228, %tid.y;
	mov.u32 	%r227, %ntid.x;
	mad.lo.s32 	%r226, %r227, %r228, %r229;
	ld.param.u32 	%r225, [fractalRenderAdvancedFloat_param_1];
	shl.b32 	%r224, %r227, 2;
	div.u32 	%r223, %r226, %r224;
	bfe.u32 	%r222, %r226, 2, 2;
	shl.b32 	%r221, %r223, 2;
	add.s32 	%r220, %r221, %r222;
	mov.u32 	%r219, %ntid.y;
	mov.u32 	%r218, %ctaid.y;
	mad.lo.s32 	%r217, %r218, %r219, %r220;
	mul.lo.s32 	%r215, %r217, %r225;
	cvt.u64.u32	%rd124, %r215;
	cvta.to.global.u64 	%rd125, %rd3;
	add.s64 	%rd126, %rd125, %rd124;
	mul.wide.u32 	%rd127, %r4, 16;
	add.s64 	%rd128, %rd126, %rd127;
	st.global.f32 	[%rd128], %f478;
	st.global.f32 	[%rd128+4], %f453;
	st.global.f32 	[%rd128+12], %f480;
	st.global.u8 	[%rd128+8], %rs11;
	setp.gt.f32	%p141, %f453, 0f00000000;
	@%p141 bra 	BB3_128;

	mov.u64 	%rd129, $str8;
	cvta.global.u64 	%rd130, %rd129;
	mov.u64 	%rd131, $str1;
	cvta.global.u64 	%rd132, %rd131;
	mov.u32 	%r216, 393;
	mov.u64 	%rd133, 0;
	mov.u64 	%rd134, 2;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd130;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd132;
	.param .b32 param2;
	st.param.b32	[param2+0], %r216;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd133;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd134;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 21

BB3_128:
	ret;
}

	// .globl	fractalRenderAdvancedDouble
.visible .entry fractalRenderAdvancedDouble(
	.param .u64 fractalRenderAdvancedDouble_param_0,
	.param .u32 fractalRenderAdvancedDouble_param_1,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_2[8],
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_3[32],
	.param .u32 fractalRenderAdvancedDouble_param_4,
	.param .f32 fractalRenderAdvancedDouble_param_5,
	.param .u32 fractalRenderAdvancedDouble_param_6,
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_7[32],
	.param .u64 fractalRenderAdvancedDouble_param_8,
	.param .u32 fractalRenderAdvancedDouble_param_9,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot4[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<147>;
	.reg .b16 	%rs<12>;
	.reg .f32 	%f<277>;
	.reg .b32 	%r<277>;
	.reg .f64 	%fd<246>;
	.reg .b64 	%rd<136>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r67, [fractalRenderAdvancedDouble_param_2+4];
	ld.param.u32 	%r66, [fractalRenderAdvancedDouble_param_2];
	ld.param.f64 	%fd66, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd65, [fractalRenderAdvancedDouble_param_3+16];
	ld.param.f64 	%fd64, [fractalRenderAdvancedDouble_param_3+8];
	ld.param.f64 	%fd63, [fractalRenderAdvancedDouble_param_3];
	ld.param.u32 	%r68, [fractalRenderAdvancedDouble_param_4];
	ld.param.f32 	%f253, [fractalRenderAdvancedDouble_param_5];
	ld.param.u32 	%r69, [fractalRenderAdvancedDouble_param_6];
	ld.param.f64 	%fd70, [fractalRenderAdvancedDouble_param_7+24];
	ld.param.f64 	%fd69, [fractalRenderAdvancedDouble_param_7+16];
	ld.param.f64 	%fd68, [fractalRenderAdvancedDouble_param_7+8];
	ld.param.f64 	%fd67, [fractalRenderAdvancedDouble_param_7];
	ld.param.u64 	%rd4, [fractalRenderAdvancedDouble_param_8];
	ld.param.u32 	%r70, [fractalRenderAdvancedDouble_param_9];
	ld.param.u32 	%r72, [fractalRenderAdvancedDouble_param_10+4];
	ld.param.u32 	%r71, [fractalRenderAdvancedDouble_param_10];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p11, %r1, 32;
	@%p11 bra 	BB4_2;

	mov.u64 	%rd5, $str;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, $str1;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r73, 53;
	mov.u64 	%rd9, 0;
	mov.u64 	%rd10, 2;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 param2;
	st.param.b32	[param2+0], %r73;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 22

BB4_2:
	mov.u32 	%r74, %tid.x;
	mov.u32 	%r75, %tid.y;
	mad.lo.s32 	%r76, %r1, %r75, %r74;
	shl.b32 	%r77, %r1, 2;
	and.b32  	%r78, %r76, 15;
	rem.u32 	%r79, %r76, %r77;
	sub.s32 	%r80, %r79, %r78;
	shr.u32 	%r81, %r80, 2;
	and.b32  	%r82, %r76, 3;
	add.s32 	%r83, %r81, %r82;
	div.u32 	%r84, %r76, %r77;
	shl.b32 	%r85, %r84, 2;
	bfe.u32 	%r86, %r76, 2, 2;
	add.s32 	%r87, %r85, %r86;
	mov.u32 	%r88, %ctaid.x;
	mad.lo.s32 	%r4, %r88, %r1, %r83;
	mov.u32 	%r89, %ctaid.y;
	mov.u32 	%r90, %ntid.y;
	mad.lo.s32 	%r5, %r89, %r90, %r87;
	setp.lt.u32	%p12, %r4, %r66;
	setp.gt.u32	%p13, %r67, %r5;
	and.pred  	%p14, %p12, %p13;
	@!%p14 bra 	BB4_130;
	bra.uni 	BB4_3;

BB4_3:
	and.b32  	%r91, %r69, 52;
	mov.u16 	%rs10, 0;
	setp.ne.s32	%p15, %r91, 52;
	@%p15 bra 	BB4_12;

	setp.gt.f32	%p16, %f253, 0f00000000;
	@%p16 bra 	BB4_6;

	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u32 	%r92, 257;
	mov.u64 	%rd15, 0;
	mov.u64 	%rd16, 2;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r92;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 23

BB4_6:
	and.b32  	%r93, %r4, -8;
	cvt.rn.f32.u32	%f76, %r93;
	and.b32  	%r94, %r5, -4;
	cvt.rn.f32.u32	%f77, %r94;
	cvt.rn.f32.u32	%f78, %r71;
	sub.f32 	%f79, %f78, %f76;
	cvt.rn.f32.u32	%f80, %r72;
	sub.f32 	%f81, %f80, %f77;
	mul.f32 	%f82, %f81, %f81;
	fma.rn.f32 	%f83, %f79, %f79, %f82;
	sqrt.rn.f32 	%f84, %f83;
	ld.global.f32 	%f85, [pixelRealWidthInCm];
	mul.f32 	%f86, %f84, %f85;
	ld.global.f32 	%f87, [screenDistance];
	div.rn.f32 	%f1, %f86, %f87;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p17, %f2, 0f3F800000;
	mov.f32 	%f252, %f2;
	@%p17 bra 	BB4_8;

	rcp.rn.f32 	%f252, %f2;

BB4_8:
	mul.rn.f32 	%f88, %f252, %f252;
	mov.f32 	%f89, 0fC0B59883;
	mov.f32 	%f90, 0fBF52C7EA;
	fma.rn.f32 	%f91, %f88, %f90, %f89;
	mov.f32 	%f92, 0fC0D21907;
	fma.rn.f32 	%f93, %f91, %f88, %f92;
	mul.f32 	%f94, %f88, %f93;
	mul.f32 	%f95, %f252, %f94;
	add.f32 	%f96, %f88, 0f41355DC0;
	mov.f32 	%f97, 0f41E6BD60;
	fma.rn.f32 	%f98, %f96, %f88, %f97;
	mov.f32 	%f99, 0f419D92C8;
	fma.rn.f32 	%f100, %f98, %f88, %f99;
	rcp.rn.f32 	%f101, %f100;
	fma.rn.f32 	%f102, %f95, %f101, %f252;
	mov.f32 	%f103, 0f3FC90FDB;
	sub.f32 	%f104, %f103, %f102;
	setp.gt.f32	%p18, %f2, 0f3F800000;
	selp.f32	%f105, %f104, %f102, %p18;
	mov.b32 	 %r95, %f105;
	mov.b32 	 %r96, %f1;
	and.b32  	%r97, %r96, -2147483648;
	or.b32  	%r98, %r95, %r97;
	mov.b32 	 %f106, %r98;
	setp.gtu.f32	%p19, %f2, 0f7F800000;
	selp.f32	%f107, %f105, %f106, %p19;
	mul.f32 	%f108, %f107, 0f43340000;
	div.rn.f32 	%f5, %f108, 0f40490FDB;
	setp.ge.f32	%p20, %f5, 0f00000000;
	@%p20 bra 	BB4_10;

	mov.u64 	%rd17, $str3;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, $str1;
	cvta.global.u64 	%rd20, %rd19;
	mov.u32 	%r99, 270;
	mov.u64 	%rd21, 0;
	mov.u64 	%rd22, 2;
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd18;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 param2;
	st.param.b32	[param2+0], %r99;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd21;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd22;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 24

BB4_10:
	mul.f32 	%f109, %f253, 0f42360000;
	setp.ltu.f32	%p21, %f253, 0f3F800000;
	selp.f32	%f110, %f109, 0f42360000, %p21;
	mov.f32 	%f111, 0f42700000;
	sub.f32 	%f112, %f111, %f110;
	mov.f32 	%f113, 0fBF800000;
	div.rn.f32 	%f114, %f113, %f112;
	fma.rn.f32 	%f115, %f110, 0f80000000, 0f42700000;
	div.rn.f32 	%f116, %f115, %f112;
	fma.rn.f32 	%f117, %f5, %f114, %f116;
	cvt.f64.f32	%fd71, %f117;
	mov.f64 	%fd72, 0d3FF0000000000000;
	min.f64 	%fd73, %fd72, %fd71;
	cvt.rn.f32.f64	%f118, %fd73;
	mul.f32 	%f253, %f118, %f253;
	setp.gtu.f32	%p22, %f5, %f110;
	@%p22 bra 	BB4_12;

	cvt.f64.f32	%fd74, %f253;
	max.f64 	%fd76, %fd72, %fd74;
	cvt.rn.f32.f64	%f253, %fd76;
	mov.u16 	%rs10, 1;

BB4_12:
	and.b32  	%r100, %r69, 8;
	setp.eq.s32	%p24, %r100, 0;
	mov.pred 	%p142, -1;
	mov.f32 	%f274, 0f00000000;
	@%p24 bra 	BB4_13;

	sub.s32 	%r101, %r67, %r5;
	cvt.rn.f64.u32	%fd77, %r101;
	cvt.rn.f64.u32	%fd78, %r66;
	cvt.rn.f64.u32	%fd79, %r4;
	div.rn.f64 	%fd80, %fd79, %fd78;
	cvt.rn.f64.u32	%fd81, %r67;
	div.rn.f64 	%fd82, %fd77, %fd81;
	sub.f64 	%fd83, %fd65, %fd63;
	sub.f64 	%fd84, %fd66, %fd64;
	fma.rn.f64 	%fd85, %fd83, %fd80, %fd63;
	fma.rn.f64 	%fd86, %fd84, %fd82, %fd64;
	sub.f64 	%fd87, %fd85, %fd67;
	sub.f64 	%fd88, %fd86, %fd68;
	sub.f64 	%fd89, %fd69, %fd67;
	div.rn.f64 	%fd90, %fd87, %fd89;
	sub.f64 	%fd91, %fd70, %fd68;
	div.rn.f64 	%fd92, %fd88, %fd91;
	cvt.rn.f32.f64	%f121, %fd90;
	cvt.rn.f32.f64	%f122, %fd92;
	cvt.rn.f32.u32	%f123, %r66;
	mul.f32 	%f9, %f123, %f121;
	cvt.rn.f32.u32	%f124, %r67;
	mul.f32 	%f125, %f124, %f122;
	sub.f32 	%f10, %f124, %f125;
	abs.f32 	%f126, %f9;
	mov.b32 	 %r102, %f9;
	and.b32  	%r103, %r102, -2147483648;
	or.b32  	%r104, %r103, 1056964608;
	mov.b32 	 %f127, %r104;
	add.f32 	%f128, %f9, %f127;
	cvt.rzi.f32.f32	%f129, %f128;
	setp.gt.f32	%p25, %f126, 0f4B000000;
	selp.f32	%f254, %f9, %f129, %p25;
	setp.geu.f32	%p26, %f126, 0f3F000000;
	@%p26 bra 	BB4_16;

	cvt.rzi.f32.f32	%f254, %f9;

BB4_16:
	cvt.rzi.s32.f32	%r6, %f254;
	mov.b32 	 %r105, %f10;
	and.b32  	%r106, %r105, -2147483648;
	or.b32  	%r107, %r106, 1056964608;
	mov.b32 	 %f130, %r107;
	add.f32 	%f131, %f10, %f130;
	cvt.rzi.f32.f32	%f132, %f131;
	abs.f32 	%f133, %f10;
	setp.gt.f32	%p27, %f133, 0f4B000000;
	selp.f32	%f255, %f10, %f132, %p27;
	setp.geu.f32	%p28, %f133, 0f3F000000;
	@%p28 bra 	BB4_18;

	cvt.rzi.f32.f32	%f255, %f10;

BB4_18:
	add.s32 	%r108, %r66, -2;
	setp.lt.u32	%p30, %r6, %r108;
	setp.gt.s32	%p31, %r6, 1;
	and.pred  	%p32, %p31, %p30;
	cvt.rzi.s32.f32	%r109, %f255;
	setp.gt.s32	%p33, %r109, 1;
	and.pred  	%p34, %p32, %p33;
	add.s32 	%r110, %r67, -2;
	setp.lt.u32	%p35, %r109, %r110;
	and.pred  	%p36, %p35, %p34;
	mov.f32 	%f257, %f274;
	@!%p36 bra 	BB4_20;
	bra.uni 	BB4_19;

BB4_19:
	cvt.rmi.f32.f32	%f136, %f9;
	cvt.rzi.u32.f32	%r111, %f136;
	cvt.rmi.f32.f32	%f137, %f10;
	cvt.rzi.u32.f32	%r112, %f137;
	cvt.rn.f32.u32	%f138, %r111;
	sub.f32 	%f139, %f9, %f138;
	cvt.rn.f32.u32	%f140, %r112;
	sub.f32 	%f141, %f10, %f140;
	mul.lo.s32 	%r113, %r112, %r70;
	cvt.u64.u32	%rd23, %r113;
	cvta.to.global.u64 	%rd24, %rd4;
	add.s64 	%rd25, %rd24, %rd23;
	mul.wide.u32 	%rd26, %r111, 16;
	add.s64 	%rd27, %rd25, %rd26;
	add.s32 	%r114, %r111, 1;
	mul.wide.u32 	%rd28, %r114, 16;
	add.s64 	%rd29, %rd25, %rd28;
	add.s32 	%r115, %r112, 1;
	mul.lo.s32 	%r116, %r115, %r70;
	cvt.u64.u32	%rd30, %r116;
	add.s64 	%rd31, %rd24, %rd30;
	add.s64 	%rd32, %rd31, %rd26;
	add.s64 	%rd33, %rd31, %rd28;
	mov.f32 	%f142, 0f3F800000;
	sub.f32 	%f143, %f142, %f139;
	sub.f32 	%f144, %f142, %f141;
	mul.f32 	%f145, %f143, %f144;
	ld.global.f32 	%f146, [%rd27];
	mul.f32 	%f147, %f139, %f144;
	ld.global.f32 	%f148, [%rd29];
	mul.f32 	%f149, %f148, %f147;
	fma.rn.f32 	%f150, %f146, %f145, %f149;
	mul.f32 	%f151, %f143, %f141;
	ld.global.f32 	%f152, [%rd32];
	fma.rn.f32 	%f153, %f151, %f152, %f150;
	mul.f32 	%f154, %f139, %f141;
	ld.global.f32 	%f155, [%rd33];
	fma.rn.f32 	%f274, %f154, %f155, %f153;
	ld.global.f32 	%f156, [%rd27+4];
	ld.global.f32 	%f157, [%rd29+4];
	mul.f32 	%f158, %f147, %f157;
	fma.rn.f32 	%f159, %f156, %f145, %f158;
	ld.global.f32 	%f160, [%rd32+4];
	fma.rn.f32 	%f161, %f151, %f160, %f159;
	ld.global.f32 	%f162, [%rd33+4];
	fma.rn.f32 	%f257, %f154, %f162, %f161;
	cvt.f64.f32	%fd93, %f257;
	setp.lt.f64	%p142, %fd93, 0d3FB999999999999A;
	bra.uni 	BB4_20;

BB4_13:
	mov.f32 	%f257, %f274;

BB4_20:
	@%p142 bra 	BB4_76;
	bra.uni 	BB4_21;

BB4_76:
	setp.lt.f32	%p91, %f253, 0f3F800000;
	selp.f32	%f48, 0f3F800000, %f253, %p91;
	abs.f32 	%f210, %f48;
	mov.b32 	 %r167, %f48;
	and.b32  	%r168, %r167, -2147483648;
	or.b32  	%r169, %r168, 1056964608;
	mov.b32 	 %f211, %r169;
	add.f32 	%f212, %f48, %f211;
	cvt.rzi.f32.f32	%f213, %f212;
	setp.gt.f32	%p92, %f210, 0f4B000000;
	selp.f32	%f267, %f48, %f213, %p92;
	setp.geu.f32	%p93, %f210, 0f3F000000;
	@%p93 bra 	BB4_78;

	cvt.rzi.f32.f32	%f267, %f48;

BB4_78:
	cvt.rzi.u32.f32	%r170, %f267;
	mov.u32 	%r171, 64;
	min.u32 	%r36, %r171, %r170;
	cvt.rn.f64.u32	%fd164, %r66;
	sub.f64 	%fd165, %fd65, %fd63;
	div.rn.f64 	%fd34, %fd165, %fd164;
	cvt.rn.f64.u32	%fd166, %r67;
	sub.f64 	%fd167, %fd66, %fd64;
	div.rn.f64 	%fd35, %fd167, %fd166;
	setp.lt.u32	%p94, %r36, 65;
	@%p94 bra 	BB4_80;

	mov.u64 	%rd79, $str9;
	cvta.global.u64 	%rd80, %rd79;
	mov.u64 	%rd81, $str1;
	cvta.global.u64 	%rd82, %rd81;
	mov.u32 	%r172, 107;
	mov.u64 	%rd83, 0;
	mov.u64 	%rd84, 2;
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd80;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd82;
	.param .b32 param2;
	st.param.b32	[param2+0], %r172;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd83;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd84;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 28

BB4_80:
	setp.eq.s32	%p95, %r36, 0;
	mov.u32 	%r275, 0;
	mov.u32 	%r274, %r275;
	@%p95 bra 	BB4_127;

	cvt.rn.f64.u32	%fd36, %r4;
	cvt.rn.f64.u32	%fd37, %r5;
	ld.const.f64 	%fd38, [roots];
	ld.const.f64 	%fd39, [roots+8];
	ld.const.f64 	%fd40, [roots+16];
	ld.const.f64 	%fd41, [roots+24];
	ld.const.f64 	%fd42, [roots+32];
	ld.const.f64 	%fd43, [roots+40];
	ld.const.f64 	%fd44, [coefficients+8];
	ld.const.f64 	%fd45, [coefficients];
	ld.const.f64 	%fd46, [coefficients+16];
	add.f64 	%fd47, %fd46, %fd46;
	ld.const.f64 	%fd48, [coefficients+24];
	mul.f64 	%fd49, %fd48, 0d4008000000000000;
	mul.wide.u32 	%rd85, %r68, -858993459;
	shr.u64 	%rd86, %rd85, 35;
	cvt.u32.u64	%r37, %rd86;
	add.f32 	%f52, %f48, 0fC0000000;
	mov.u32 	%r261, 0;
	sqrt.rn.f32 	%f53, %f52;
	mov.u32 	%r275, %r261;
	mov.u32 	%r274, %r36;

BB4_82:
	mov.u32 	%r40, %r274;
	mov.u32 	%r38, %r261;
	setp.lt.u32	%p96, %r38, 3;
	@%p96 bra 	BB4_90;
	bra.uni 	BB4_83;

BB4_90:
	cvt.rn.f64.u32	%fd168, %r38;
	div.rn.f64 	%fd242, %fd168, 0d4008000000000000;
	mov.f64 	%fd243, %fd242;
	bra.uni 	BB4_91;

BB4_83:
	abs.f32 	%f214, %f53;
	mov.b32 	 %r177, %f53;
	and.b32  	%r178, %r177, -2147483648;
	or.b32  	%r179, %r178, 1056964608;
	mov.b32 	 %f215, %r179;
	add.f32 	%f216, %f53, %f215;
	cvt.rzi.f32.f32	%f217, %f216;
	setp.gt.f32	%p97, %f214, 0f4B000000;
	selp.f32	%f268, %f53, %f217, %p97;
	setp.geu.f32	%p98, %f214, 0f3F000000;
	@%p98 bra 	BB4_85;

	cvt.rzi.f32.f32	%f268, %f53;

BB4_85:
	add.s32 	%r180, %r38, -2;
	cvt.rzi.u32.f32	%r181, %f268;
	rem.u32 	%r182, %r180, %r181;
	cvt.rn.f32.u32	%f218, %r182;
	div.rn.f32 	%f57, %f218, %f53;
	div.u32 	%r183, %r180, %r181;
	cvt.rn.f32.u32	%f219, %r183;
	div.rn.f32 	%f58, %f219, %f53;
	setp.le.f32	%p99, %f58, 0f3F800000;
	@%p99 bra 	BB4_87;

	mov.u64 	%rd87, $str10;
	cvta.global.u64 	%rd88, %rd87;
	mov.u64 	%rd89, $str1;
	cvta.global.u64 	%rd90, %rd89;
	mov.u32 	%r184, 126;
	mov.u64 	%rd91, 0;
	mov.u64 	%rd92, 2;
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd88;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd90;
	.param .b32 param2;
	st.param.b32	[param2+0], %r184;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd91;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd92;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 29

BB4_87:
	setp.le.f32	%p100, %f57, 0f3F800000;
	@%p100 bra 	BB4_89;

	mov.u64 	%rd93, $str11;
	cvta.global.u64 	%rd94, %rd93;
	mov.u64 	%rd95, $str1;
	cvta.global.u64 	%rd96, %rd95;
	mov.u32 	%r185, 127;
	mov.u64 	%rd97, 0;
	mov.u64 	%rd98, 2;
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd94;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd96;
	.param .b32 param2;
	st.param.b32	[param2+0], %r185;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd97;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd98;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 30

BB4_89:
	cvt.f64.f32	%fd242, %f57;
	cvt.f64.f32	%fd243, %f58;

BB4_91:
	ld.param.f64 	%fd237, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd236, [fractalRenderAdvancedDouble_param_3];
	add.f64 	%fd169, %fd37, %fd243;
	neg.f64 	%fd170, %fd169;
	add.f64 	%fd171, %fd36, %fd242;
	fma.rn.f64 	%fd245, %fd34, %fd171, %fd236;
	fma.rn.f64 	%fd244, %fd35, %fd170, %fd237;
	setp.eq.s32	%p101, %r68, 0;
	mov.u32 	%r265, 0;
	mov.u32 	%r264, 10;
	@%p101 bra 	BB4_103;

BB4_92:
	mul.f64 	%fd172, %fd244, %fd244;
	mul.f64 	%fd173, %fd245, %fd245;
	sub.f64 	%fd174, %fd173, %fd172;
	mul.f64 	%fd175, %fd245, %fd244;
	fma.rn.f64 	%fd176, %fd245, %fd244, %fd175;
	mul.f64 	%fd177, %fd245, %fd174;
	mul.f64 	%fd178, %fd244, %fd176;
	sub.f64 	%fd179, %fd177, %fd178;
	mul.f64 	%fd180, %fd245, %fd176;
	fma.rn.f64 	%fd181, %fd244, %fd174, %fd180;
	fma.rn.f64 	%fd182, %fd245, %fd44, %fd45;
	mul.f64 	%fd183, %fd176, %fd46;
	fma.rn.f64 	%fd184, %fd174, %fd46, %fd182;
	fma.rn.f64 	%fd185, %fd244, %fd44, %fd183;
	fma.rn.f64 	%fd186, %fd179, %fd48, %fd184;
	fma.rn.f64 	%fd187, %fd181, %fd48, %fd185;
	fma.rn.f64 	%fd188, %fd245, %fd47, %fd44;
	mul.f64 	%fd189, %fd176, %fd49;
	fma.rn.f64 	%fd190, %fd174, %fd49, %fd188;
	fma.rn.f64 	%fd191, %fd244, %fd47, %fd189;
	abs.f64 	%fd192, %fd190;
	abs.f64 	%fd193, %fd191;
	add.f64 	%fd194, %fd192, %fd193;
	rcp.rn.f64 	%fd195, %fd194;
	mul.f64 	%fd196, %fd186, %fd195;
	mul.f64 	%fd197, %fd187, %fd195;
	mul.f64 	%fd198, %fd190, %fd195;
	mul.f64 	%fd199, %fd191, %fd195;
	mul.f64 	%fd200, %fd199, %fd199;
	fma.rn.f64 	%fd201, %fd198, %fd198, %fd200;
	rcp.rn.f64 	%fd202, %fd201;
	mul.f64 	%fd203, %fd197, %fd199;
	fma.rn.f64 	%fd204, %fd196, %fd198, %fd203;
	mul.f64 	%fd205, %fd202, %fd204;
	mul.f64 	%fd206, %fd197, %fd198;
	mul.f64 	%fd207, %fd196, %fd199;
	sub.f64 	%fd208, %fd206, %fd207;
	mul.f64 	%fd209, %fd202, %fd208;
	sub.f64 	%fd245, %fd245, %fd205;
	sub.f64 	%fd244, %fd244, %fd209;
	add.s32 	%r265, %r265, 1;
	setp.ne.s32	%p102, %r265, %r264;
	@%p102 bra 	BB4_102;

	sub.f64 	%fd210, %fd245, %fd38;
	abs.f64 	%fd211, %fd210;
	setp.geu.f64	%p103, %fd211, 0d3F1A36E2EB1C432D;
	@%p103 bra 	BB4_95;

	sub.f64 	%fd212, %fd244, %fd39;
	abs.f64 	%fd213, %fd212;
	setp.lt.f64	%p104, %fd213, 0d3F1A36E2EB1C432D;
	mov.u32 	%r269, 1;
	@%p104 bra 	BB4_100;

BB4_95:
	sub.f64 	%fd214, %fd245, %fd40;
	abs.f64 	%fd215, %fd214;
	setp.geu.f64	%p105, %fd215, 0d3F1A36E2EB1C432D;
	@%p105 bra 	BB4_97;

	sub.f64 	%fd216, %fd244, %fd41;
	abs.f64 	%fd217, %fd216;
	setp.lt.f64	%p106, %fd217, 0d3F1A36E2EB1C432D;
	mov.u32 	%r269, 2;
	@%p106 bra 	BB4_100;

BB4_97:
	sub.f64 	%fd218, %fd245, %fd42;
	abs.f64 	%fd219, %fd218;
	mov.pred 	%p145, 0;
	setp.geu.f64	%p108, %fd219, 0d3F1A36E2EB1C432D;
	@%p108 bra 	BB4_99;

	sub.f64 	%fd220, %fd244, %fd43;
	abs.f64 	%fd221, %fd220;
	setp.lt.f64	%p145, %fd221, 0d3F1A36E2EB1C432D;

BB4_99:
	selp.b32	%r269, 3, 0, %p145;

BB4_100:
	setp.ne.s32	%p109, %r269, 0;
	@%p109 bra 	BB4_110;

	add.s32 	%r46, %r37, %r264;
	mov.u32 	%r265, %r264;
	mov.u32 	%r264, %r46;

BB4_102:
	setp.lt.u32	%p110, %r265, %r68;
	@%p110 bra 	BB4_92;

BB4_103:
	sub.f64 	%fd222, %fd245, %fd38;
	abs.f64 	%fd223, %fd222;
	setp.geu.f64	%p111, %fd223, 0d3F1A36E2EB1C432D;
	@%p111 bra 	BB4_105;

	sub.f64 	%fd224, %fd244, %fd39;
	abs.f64 	%fd225, %fd224;
	setp.lt.f64	%p112, %fd225, 0d3F1A36E2EB1C432D;
	mov.u32 	%r269, 1;
	@%p112 bra 	BB4_110;

BB4_105:
	sub.f64 	%fd226, %fd245, %fd40;
	abs.f64 	%fd227, %fd226;
	setp.geu.f64	%p113, %fd227, 0d3F1A36E2EB1C432D;
	@%p113 bra 	BB4_107;

	sub.f64 	%fd228, %fd244, %fd41;
	abs.f64 	%fd229, %fd228;
	setp.lt.f64	%p114, %fd229, 0d3F1A36E2EB1C432D;
	mov.u32 	%r269, 2;
	@%p114 bra 	BB4_110;

BB4_107:
	sub.f64 	%fd230, %fd245, %fd42;
	abs.f64 	%fd231, %fd230;
	mov.pred 	%p146, 0;
	setp.geu.f64	%p116, %fd231, 0d3F1A36E2EB1C432D;
	@%p116 bra 	BB4_109;

	sub.f64 	%fd232, %fd244, %fd43;
	abs.f64 	%fd233, %fd232;
	setp.lt.f64	%p146, %fd233, 0d3F1A36E2EB1C432D;

BB4_109:
	selp.b32	%r269, 3, 0, %p146;

BB4_110:
	cvt.rn.f32.u32	%f220, %r269;
	cvt.rzi.u32.f32	%r51, %f220;
	add.s32 	%r275, %r51, %r275;
	setp.gt.u32	%p117, %r38, 9;
	@%p117 bra 	BB4_112;

	cvt.rn.f32.u32	%f221, %r51;
	add.u64 	%rd99, %SP, 0;
	cvta.to.local.u64 	%rd100, %rd99;
	mul.wide.u32 	%rd101, %r38, 4;
	add.s64 	%rd102, %rd100, %rd101;
	st.local.f32 	[%rd102], %f221;

BB4_112:
	ld.param.u32 	%r231, [fractalRenderAdvancedDouble_param_6];
	setp.lt.u32	%p118, %r38, 10;
	and.b32  	%r192, %r231, 1;
	setp.eq.b32	%p119, %r192, 1;
	setp.ne.s32	%p120, %r38, 0;
	and.pred  	%p121, %p118, %p120;
	and.pred  	%p122, %p121, %p119;
	shr.u32 	%r193, %r40, 1;
	setp.eq.s32	%p123, %r38, %r193;
	or.pred  	%p124, %p122, %p123;
	add.s32 	%r261, %r38, 1;
	mov.u32 	%r274, %r40;
	@!%p124 bra 	BB4_126;
	bra.uni 	BB4_113;

BB4_113:
	div.u32 	%r194, %r275, %r261;
	cvt.rn.f32.u32	%f59, %r194;
	setp.eq.s32	%p125, %r38, 0;
	mov.f32 	%f273, 0f00000000;
	@%p125 bra 	BB4_122;

	and.b32  	%r196, %r38, 3;
	setp.eq.s32	%p126, %r196, 0;
	mov.f32 	%f273, 0f00000000;
	mov.u32 	%r273, 0;
	@%p126 bra 	BB4_120;

	setp.eq.s32	%p127, %r196, 1;
	mov.f32 	%f270, 0f00000000;
	mov.u32 	%r271, 0;
	@%p127 bra 	BB4_119;

	setp.eq.s32	%p128, %r196, 2;
	mov.f32 	%f269, 0f00000000;
	mov.u32 	%r270, 0;
	@%p128 bra 	BB4_118;

	add.u64 	%rd103, %SP, 0;
	cvta.to.local.u64 	%rd104, %rd103;
	ld.local.f32 	%f226, [%rd104];
	sub.f32 	%f227, %f226, %f59;
	fma.rn.f32 	%f269, %f227, %f227, 0f00000000;
	mov.u32 	%r270, 1;

BB4_118:
	add.u64 	%rd105, %SP, 0;
	cvta.to.local.u64 	%rd106, %rd105;
	mul.wide.u32 	%rd107, %r270, 4;
	add.s64 	%rd108, %rd106, %rd107;
	ld.local.f32 	%f228, [%rd108];
	sub.f32 	%f229, %f228, %f59;
	fma.rn.f32 	%f270, %f229, %f229, %f269;
	add.s32 	%r271, %r270, 1;

BB4_119:
	add.u64 	%rd109, %SP, 0;
	cvta.to.local.u64 	%rd110, %rd109;
	mul.wide.u32 	%rd111, %r271, 4;
	add.s64 	%rd112, %rd110, %rd111;
	ld.local.f32 	%f230, [%rd112];
	sub.f32 	%f231, %f230, %f59;
	fma.rn.f32 	%f273, %f231, %f231, %f270;
	add.s32 	%r273, %r271, 1;

BB4_120:
	add.u64 	%rd113, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd113;
	setp.lt.u32	%p129, %r38, 4;
	@%p129 bra 	BB4_122;

BB4_121:
	mul.wide.u32 	%rd114, %r273, 4;
	add.s64 	%rd115, %rd2, %rd114;
	ld.local.f32 	%f232, [%rd115];
	sub.f32 	%f233, %f232, %f59;
	fma.rn.f32 	%f234, %f233, %f233, %f273;
	add.s32 	%r202, %r273, 1;
	mul.wide.u32 	%rd116, %r202, 4;
	add.s64 	%rd117, %rd2, %rd116;
	ld.local.f32 	%f235, [%rd117];
	sub.f32 	%f236, %f235, %f59;
	fma.rn.f32 	%f237, %f236, %f236, %f234;
	add.s32 	%r203, %r273, 2;
	mul.wide.u32 	%rd118, %r203, 4;
	add.s64 	%rd119, %rd2, %rd118;
	ld.local.f32 	%f238, [%rd119];
	sub.f32 	%f239, %f238, %f59;
	fma.rn.f32 	%f240, %f239, %f239, %f237;
	add.s32 	%r204, %r273, 3;
	mul.wide.u32 	%rd120, %r204, 4;
	add.s64 	%rd121, %rd2, %rd120;
	ld.local.f32 	%f241, [%rd121];
	sub.f32 	%f242, %f241, %f59;
	fma.rn.f32 	%f273, %f242, %f242, %f240;
	add.s32 	%r273, %r273, 4;
	setp.lt.u32	%p130, %r273, %r38;
	@%p130 bra 	BB4_121;

BB4_122:
	add.s32 	%r205, %r38, -1;
	cvt.rn.f32.u32	%f243, %r205;
	div.rn.f32 	%f244, %f273, %f243;
	div.rn.f32 	%f69, %f244, %f59;
	setp.ne.s32	%p131, %r38, 1;
	@%p131 bra 	BB4_124;

	// inline asm
	activemask.b32 %r206;
	// inline asm
	add.u64 	%rd122, %SP, 0;
	cvta.to.local.u64 	%rd123, %rd122;
	ld.local.v2.f32 	{%f245, %f246}, [%rd123];
	sub.f32 	%f249, %f245, %f246;
	abs.f32 	%f250, %f249;
	setp.lt.f32	%p132, %f250, 0f34000000;
	vote.sync.all.pred 	%p133, %p132, %r206;
	mov.u32 	%r274, 2;
	@%p133 bra 	BB4_126;

BB4_124:
	// inline asm
	activemask.b32 %r209;
	// inline asm
	setp.lt.f32	%p134, %f69, 0f3C23D70A;
	vote.sync.all.pred 	%p135, %p134, %r209;
	mov.u32 	%r274, %r261;
	@%p135 bra 	BB4_126;

	// inline asm
	activemask.b32 %r211;
	// inline asm
	setp.le.f32	%p136, %f69, 0f3F800000;
	vote.sync.all.pred 	%p137, %p136, %r211;
	setp.ge.u32	%p138, %r38, %r193;
	and.pred  	%p139, %p137, %p138;
	selp.b32	%r274, %r261, %r40, %p139;

BB4_126:
	setp.lt.u32	%p140, %r261, %r274;
	@%p140 bra 	BB4_82;

BB4_127:
	cvt.rn.f32.u32	%f257, %r274;
	div.u32 	%r214, %r275, %r274;
	cvt.rn.f32.u32	%f274, %r214;
	mov.f32 	%f276, 0f00000000;
	mov.u16 	%rs11, 0;
	bra.uni 	BB4_128;

BB4_21:
	shr.u32 	%r117, %r69, 5;
	and.b32  	%r118, %r117, 1;
	setp.eq.b32	%p37, %r118, 1;
	not.pred 	%p38, %p37;
	setp.eq.s16	%p39, %rs10, 0;
	mov.f32 	%f276, 0f00000000;
	mov.u16 	%rs11, 1;
	or.pred  	%p40, %p39, %p38;
	@%p40 bra 	BB4_128;

	setp.lt.f32	%p41, %f253, 0f3F800000;
	mov.f32 	%f276, 0f00000000;
	mov.f32 	%f266, %f276;
	@%p41 bra 	BB4_75;

	abs.f32 	%f166, %f253;
	mov.b32 	 %r119, %f253;
	and.b32  	%r120, %r119, -2147483648;
	or.b32  	%r121, %r120, 1056964608;
	mov.b32 	 %f167, %r121;
	add.f32 	%f168, %f253, %f167;
	cvt.rzi.f32.f32	%f169, %f168;
	setp.gt.f32	%p42, %f166, 0f4B000000;
	selp.f32	%f258, %f253, %f169, %p42;
	setp.geu.f32	%p43, %f166, 0f3F000000;
	@%p43 bra 	BB4_25;

	cvt.rzi.f32.f32	%f258, %f253;

BB4_25:
	cvt.rzi.u32.f32	%r122, %f258;
	mov.u32 	%r123, 64;
	min.u32 	%r7, %r123, %r122;
	cvt.rn.f64.u32	%fd94, %r66;
	sub.f64 	%fd95, %fd65, %fd63;
	div.rn.f64 	%fd5, %fd95, %fd94;
	cvt.rn.f64.u32	%fd96, %r67;
	sub.f64 	%fd97, %fd66, %fd64;
	div.rn.f64 	%fd6, %fd97, %fd96;
	setp.lt.u32	%p44, %r7, 65;
	@%p44 bra 	BB4_27;

	mov.u64 	%rd34, $str9;
	cvta.global.u64 	%rd35, %rd34;
	mov.u64 	%rd36, $str1;
	cvta.global.u64 	%rd37, %rd36;
	mov.u32 	%r124, 107;
	mov.u64 	%rd38, 0;
	mov.u64 	%rd39, 2;
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd37;
	.param .b32 param2;
	st.param.b32	[param2+0], %r124;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd38;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd39;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 25

BB4_27:
	setp.eq.s32	%p45, %r7, 0;
	mov.u32 	%r259, 0;
	mov.u32 	%r258, %r259;
	@%p45 bra 	BB4_74;

	cvt.rn.f64.u32	%fd7, %r4;
	cvt.rn.f64.u32	%fd8, %r5;
	ld.const.f64 	%fd9, [roots];
	ld.const.f64 	%fd10, [roots+8];
	ld.const.f64 	%fd11, [roots+16];
	ld.const.f64 	%fd12, [roots+24];
	ld.const.f64 	%fd13, [roots+32];
	ld.const.f64 	%fd14, [roots+40];
	ld.const.f64 	%fd15, [coefficients+8];
	ld.const.f64 	%fd16, [coefficients];
	ld.const.f64 	%fd17, [coefficients+16];
	add.f64 	%fd18, %fd17, %fd17;
	ld.const.f64 	%fd19, [coefficients+24];
	mul.f64 	%fd20, %fd19, 0d4008000000000000;
	mul.wide.u32 	%rd40, %r68, -858993459;
	shr.u64 	%rd41, %rd40, 35;
	cvt.u32.u64	%r8, %rd41;
	add.f32 	%f24, %f253, 0fC0000000;
	mov.u32 	%r245, 0;
	sqrt.rn.f32 	%f25, %f24;
	mov.u32 	%r259, %r245;
	mov.u32 	%r258, %r7;

BB4_29:
	mov.u32 	%r11, %r258;
	mov.u32 	%r9, %r245;
	setp.lt.u32	%p46, %r9, 3;
	@%p46 bra 	BB4_37;
	bra.uni 	BB4_30;

BB4_37:
	cvt.rn.f64.u32	%fd98, %r9;
	div.rn.f64 	%fd238, %fd98, 0d4008000000000000;
	mov.f64 	%fd239, %fd238;
	bra.uni 	BB4_38;

BB4_30:
	abs.f32 	%f170, %f25;
	mov.b32 	 %r129, %f25;
	and.b32  	%r130, %r129, -2147483648;
	or.b32  	%r131, %r130, 1056964608;
	mov.b32 	 %f171, %r131;
	add.f32 	%f172, %f25, %f171;
	cvt.rzi.f32.f32	%f173, %f172;
	setp.gt.f32	%p47, %f170, 0f4B000000;
	selp.f32	%f259, %f25, %f173, %p47;
	setp.geu.f32	%p48, %f170, 0f3F000000;
	@%p48 bra 	BB4_32;

	cvt.rzi.f32.f32	%f259, %f25;

BB4_32:
	add.s32 	%r132, %r9, -2;
	cvt.rzi.u32.f32	%r133, %f259;
	rem.u32 	%r134, %r132, %r133;
	cvt.rn.f32.u32	%f174, %r134;
	div.rn.f32 	%f29, %f174, %f25;
	div.u32 	%r135, %r132, %r133;
	cvt.rn.f32.u32	%f175, %r135;
	div.rn.f32 	%f30, %f175, %f25;
	setp.le.f32	%p49, %f30, 0f3F800000;
	@%p49 bra 	BB4_34;

	mov.u64 	%rd42, $str10;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, $str1;
	cvta.global.u64 	%rd45, %rd44;
	mov.u32 	%r136, 126;
	mov.u64 	%rd46, 0;
	mov.u64 	%rd47, 2;
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd45;
	.param .b32 param2;
	st.param.b32	[param2+0], %r136;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd46;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd47;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 26

BB4_34:
	setp.le.f32	%p50, %f29, 0f3F800000;
	@%p50 bra 	BB4_36;

	mov.u64 	%rd48, $str11;
	cvta.global.u64 	%rd49, %rd48;
	mov.u64 	%rd50, $str1;
	cvta.global.u64 	%rd51, %rd50;
	mov.u32 	%r137, 127;
	mov.u64 	%rd52, 0;
	mov.u64 	%rd53, 2;
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd49;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 param2;
	st.param.b32	[param2+0], %r137;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd52;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd53;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 27

BB4_36:
	cvt.f64.f32	%fd238, %f29;
	cvt.f64.f32	%fd239, %f30;

BB4_38:
	ld.param.f64 	%fd235, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd234, [fractalRenderAdvancedDouble_param_3];
	add.f64 	%fd99, %fd8, %fd239;
	neg.f64 	%fd100, %fd99;
	add.f64 	%fd101, %fd7, %fd238;
	fma.rn.f64 	%fd241, %fd5, %fd101, %fd234;
	fma.rn.f64 	%fd240, %fd6, %fd100, %fd235;
	setp.eq.s32	%p51, %r68, 0;
	mov.u32 	%r249, 0;
	mov.u32 	%r248, 10;
	@%p51 bra 	BB4_50;

BB4_39:
	mul.f64 	%fd102, %fd240, %fd240;
	mul.f64 	%fd103, %fd241, %fd241;
	sub.f64 	%fd104, %fd103, %fd102;
	mul.f64 	%fd105, %fd241, %fd240;
	fma.rn.f64 	%fd106, %fd241, %fd240, %fd105;
	mul.f64 	%fd107, %fd241, %fd104;
	mul.f64 	%fd108, %fd240, %fd106;
	sub.f64 	%fd109, %fd107, %fd108;
	mul.f64 	%fd110, %fd241, %fd106;
	fma.rn.f64 	%fd111, %fd240, %fd104, %fd110;
	fma.rn.f64 	%fd112, %fd241, %fd15, %fd16;
	mul.f64 	%fd113, %fd106, %fd17;
	fma.rn.f64 	%fd114, %fd104, %fd17, %fd112;
	fma.rn.f64 	%fd115, %fd240, %fd15, %fd113;
	fma.rn.f64 	%fd116, %fd109, %fd19, %fd114;
	fma.rn.f64 	%fd117, %fd111, %fd19, %fd115;
	fma.rn.f64 	%fd118, %fd241, %fd18, %fd15;
	mul.f64 	%fd119, %fd106, %fd20;
	fma.rn.f64 	%fd120, %fd104, %fd20, %fd118;
	fma.rn.f64 	%fd121, %fd240, %fd18, %fd119;
	abs.f64 	%fd122, %fd120;
	abs.f64 	%fd123, %fd121;
	add.f64 	%fd124, %fd122, %fd123;
	rcp.rn.f64 	%fd125, %fd124;
	mul.f64 	%fd126, %fd116, %fd125;
	mul.f64 	%fd127, %fd117, %fd125;
	mul.f64 	%fd128, %fd120, %fd125;
	mul.f64 	%fd129, %fd121, %fd125;
	mul.f64 	%fd130, %fd129, %fd129;
	fma.rn.f64 	%fd131, %fd128, %fd128, %fd130;
	rcp.rn.f64 	%fd132, %fd131;
	mul.f64 	%fd133, %fd127, %fd129;
	fma.rn.f64 	%fd134, %fd126, %fd128, %fd133;
	mul.f64 	%fd135, %fd132, %fd134;
	mul.f64 	%fd136, %fd127, %fd128;
	mul.f64 	%fd137, %fd126, %fd129;
	sub.f64 	%fd138, %fd136, %fd137;
	mul.f64 	%fd139, %fd132, %fd138;
	sub.f64 	%fd241, %fd241, %fd135;
	sub.f64 	%fd240, %fd240, %fd139;
	add.s32 	%r249, %r249, 1;
	setp.ne.s32	%p52, %r249, %r248;
	@%p52 bra 	BB4_49;

	sub.f64 	%fd140, %fd241, %fd9;
	abs.f64 	%fd141, %fd140;
	setp.geu.f64	%p53, %fd141, 0d3F1A36E2EB1C432D;
	@%p53 bra 	BB4_42;

	sub.f64 	%fd142, %fd240, %fd10;
	abs.f64 	%fd143, %fd142;
	setp.lt.f64	%p54, %fd143, 0d3F1A36E2EB1C432D;
	mov.u32 	%r253, 1;
	@%p54 bra 	BB4_47;

BB4_42:
	sub.f64 	%fd144, %fd241, %fd11;
	abs.f64 	%fd145, %fd144;
	setp.geu.f64	%p55, %fd145, 0d3F1A36E2EB1C432D;
	@%p55 bra 	BB4_44;

	sub.f64 	%fd146, %fd240, %fd12;
	abs.f64 	%fd147, %fd146;
	setp.lt.f64	%p56, %fd147, 0d3F1A36E2EB1C432D;
	mov.u32 	%r253, 2;
	@%p56 bra 	BB4_47;

BB4_44:
	sub.f64 	%fd148, %fd241, %fd13;
	abs.f64 	%fd149, %fd148;
	mov.pred 	%p143, 0;
	setp.geu.f64	%p58, %fd149, 0d3F1A36E2EB1C432D;
	@%p58 bra 	BB4_46;

	sub.f64 	%fd150, %fd240, %fd14;
	abs.f64 	%fd151, %fd150;
	setp.lt.f64	%p143, %fd151, 0d3F1A36E2EB1C432D;

BB4_46:
	selp.b32	%r253, 3, 0, %p143;

BB4_47:
	setp.ne.s32	%p59, %r253, 0;
	@%p59 bra 	BB4_57;

	add.s32 	%r17, %r8, %r248;
	mov.u32 	%r249, %r248;
	mov.u32 	%r248, %r17;

BB4_49:
	setp.lt.u32	%p60, %r249, %r68;
	@%p60 bra 	BB4_39;

BB4_50:
	sub.f64 	%fd152, %fd241, %fd9;
	abs.f64 	%fd153, %fd152;
	setp.geu.f64	%p61, %fd153, 0d3F1A36E2EB1C432D;
	@%p61 bra 	BB4_52;

	sub.f64 	%fd154, %fd240, %fd10;
	abs.f64 	%fd155, %fd154;
	setp.lt.f64	%p62, %fd155, 0d3F1A36E2EB1C432D;
	mov.u32 	%r253, 1;
	@%p62 bra 	BB4_57;

BB4_52:
	sub.f64 	%fd156, %fd241, %fd11;
	abs.f64 	%fd157, %fd156;
	setp.geu.f64	%p63, %fd157, 0d3F1A36E2EB1C432D;
	@%p63 bra 	BB4_54;

	sub.f64 	%fd158, %fd240, %fd12;
	abs.f64 	%fd159, %fd158;
	setp.lt.f64	%p64, %fd159, 0d3F1A36E2EB1C432D;
	mov.u32 	%r253, 2;
	@%p64 bra 	BB4_57;

BB4_54:
	sub.f64 	%fd160, %fd241, %fd13;
	abs.f64 	%fd161, %fd160;
	mov.pred 	%p144, 0;
	setp.geu.f64	%p66, %fd161, 0d3F1A36E2EB1C432D;
	@%p66 bra 	BB4_56;

	sub.f64 	%fd162, %fd240, %fd14;
	abs.f64 	%fd163, %fd162;
	setp.lt.f64	%p144, %fd163, 0d3F1A36E2EB1C432D;

BB4_56:
	selp.b32	%r253, 3, 0, %p144;

BB4_57:
	cvt.rn.f32.u32	%f176, %r253;
	cvt.rzi.u32.f32	%r22, %f176;
	add.s32 	%r259, %r22, %r259;
	setp.gt.u32	%p67, %r9, 9;
	@%p67 bra 	BB4_59;

	cvt.rn.f32.u32	%f177, %r22;
	add.u64 	%rd54, %SP, 0;
	cvta.to.local.u64 	%rd55, %rd54;
	mul.wide.u32 	%rd56, %r9, 4;
	add.s64 	%rd57, %rd55, %rd56;
	st.local.f32 	[%rd57], %f177;

BB4_59:
	ld.param.u32 	%r217, [fractalRenderAdvancedDouble_param_6];
	setp.lt.u32	%p68, %r9, 10;
	and.b32  	%r144, %r217, 1;
	setp.eq.b32	%p69, %r144, 1;
	setp.ne.s32	%p70, %r9, 0;
	and.pred  	%p71, %p68, %p70;
	and.pred  	%p72, %p71, %p69;
	shr.u32 	%r145, %r11, 1;
	setp.eq.s32	%p73, %r9, %r145;
	or.pred  	%p74, %p72, %p73;
	add.s32 	%r245, %r9, 1;
	mov.u32 	%r258, %r11;
	@!%p74 bra 	BB4_73;
	bra.uni 	BB4_60;

BB4_60:
	div.u32 	%r146, %r259, %r245;
	cvt.rn.f32.u32	%f31, %r146;
	setp.eq.s32	%p75, %r9, 0;
	mov.f32 	%f264, 0f00000000;
	@%p75 bra 	BB4_69;

	and.b32  	%r148, %r9, 3;
	setp.eq.s32	%p76, %r148, 0;
	mov.f32 	%f264, 0f00000000;
	mov.u32 	%r257, 0;
	@%p76 bra 	BB4_67;

	setp.eq.s32	%p77, %r148, 1;
	mov.f32 	%f261, 0f00000000;
	mov.u32 	%r255, 0;
	@%p77 bra 	BB4_66;

	setp.eq.s32	%p78, %r148, 2;
	mov.f32 	%f260, 0f00000000;
	mov.u32 	%r254, 0;
	@%p78 bra 	BB4_65;

	add.u64 	%rd58, %SP, 0;
	cvta.to.local.u64 	%rd59, %rd58;
	ld.local.f32 	%f182, [%rd59];
	sub.f32 	%f183, %f182, %f31;
	fma.rn.f32 	%f260, %f183, %f183, 0f00000000;
	mov.u32 	%r254, 1;

BB4_65:
	add.u64 	%rd60, %SP, 0;
	cvta.to.local.u64 	%rd61, %rd60;
	mul.wide.u32 	%rd62, %r254, 4;
	add.s64 	%rd63, %rd61, %rd62;
	ld.local.f32 	%f184, [%rd63];
	sub.f32 	%f185, %f184, %f31;
	fma.rn.f32 	%f261, %f185, %f185, %f260;
	add.s32 	%r255, %r254, 1;

BB4_66:
	add.u64 	%rd64, %SP, 0;
	cvta.to.local.u64 	%rd65, %rd64;
	mul.wide.u32 	%rd66, %r255, 4;
	add.s64 	%rd67, %rd65, %rd66;
	ld.local.f32 	%f186, [%rd67];
	sub.f32 	%f187, %f186, %f31;
	fma.rn.f32 	%f264, %f187, %f187, %f261;
	add.s32 	%r257, %r255, 1;

BB4_67:
	add.u64 	%rd68, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd68;
	setp.lt.u32	%p79, %r9, 4;
	@%p79 bra 	BB4_69;

BB4_68:
	mul.wide.u32 	%rd69, %r257, 4;
	add.s64 	%rd70, %rd1, %rd69;
	ld.local.f32 	%f188, [%rd70];
	sub.f32 	%f189, %f188, %f31;
	fma.rn.f32 	%f190, %f189, %f189, %f264;
	add.s32 	%r154, %r257, 1;
	mul.wide.u32 	%rd71, %r154, 4;
	add.s64 	%rd72, %rd1, %rd71;
	ld.local.f32 	%f191, [%rd72];
	sub.f32 	%f192, %f191, %f31;
	fma.rn.f32 	%f193, %f192, %f192, %f190;
	add.s32 	%r155, %r257, 2;
	mul.wide.u32 	%rd73, %r155, 4;
	add.s64 	%rd74, %rd1, %rd73;
	ld.local.f32 	%f194, [%rd74];
	sub.f32 	%f195, %f194, %f31;
	fma.rn.f32 	%f196, %f195, %f195, %f193;
	add.s32 	%r156, %r257, 3;
	mul.wide.u32 	%rd75, %r156, 4;
	add.s64 	%rd76, %rd1, %rd75;
	ld.local.f32 	%f197, [%rd76];
	sub.f32 	%f198, %f197, %f31;
	fma.rn.f32 	%f264, %f198, %f198, %f196;
	add.s32 	%r257, %r257, 4;
	setp.lt.u32	%p80, %r257, %r9;
	@%p80 bra 	BB4_68;

BB4_69:
	add.s32 	%r157, %r9, -1;
	cvt.rn.f32.u32	%f199, %r157;
	div.rn.f32 	%f200, %f264, %f199;
	div.rn.f32 	%f41, %f200, %f31;
	setp.ne.s32	%p81, %r9, 1;
	@%p81 bra 	BB4_71;

	// inline asm
	activemask.b32 %r158;
	// inline asm
	add.u64 	%rd77, %SP, 0;
	cvta.to.local.u64 	%rd78, %rd77;
	ld.local.v2.f32 	{%f201, %f202}, [%rd78];
	sub.f32 	%f205, %f201, %f202;
	abs.f32 	%f206, %f205;
	setp.lt.f32	%p82, %f206, 0f34000000;
	vote.sync.all.pred 	%p83, %p82, %r158;
	mov.u32 	%r258, 2;
	@%p83 bra 	BB4_73;

BB4_71:
	// inline asm
	activemask.b32 %r161;
	// inline asm
	setp.lt.f32	%p84, %f41, 0f3C23D70A;
	vote.sync.all.pred 	%p85, %p84, %r161;
	mov.u32 	%r258, %r245;
	@%p85 bra 	BB4_73;

	// inline asm
	activemask.b32 %r163;
	// inline asm
	setp.le.f32	%p86, %f41, 0f3F800000;
	vote.sync.all.pred 	%p87, %p86, %r163;
	setp.ge.u32	%p88, %r9, %r145;
	and.pred  	%p89, %p87, %p88;
	selp.b32	%r258, %r245, %r11, %p89;

BB4_73:
	setp.lt.u32	%p90, %r245, %r258;
	@%p90 bra 	BB4_29;

BB4_74:
	cvt.rn.f32.u32	%f276, %r258;
	div.u32 	%r166, %r259, %r258;
	cvt.rn.f32.u32	%f266, %r166;

BB4_75:
	mov.u16 	%rs11, 1;
	mul.f32 	%f207, %f257, 0f3F400000;
	add.f32 	%f257, %f207, %f276;
	mul.f32 	%f208, %f276, %f266;
	fma.rn.f32 	%f209, %f274, %f207, %f208;
	div.rn.f32 	%f274, %f209, %f257;

BB4_128:
	ld.param.u64 	%rd135, [fractalRenderAdvancedDouble_param_0];
	mov.u32 	%r244, %ntid.x;
	mov.u32 	%r243, %tid.x;
	mov.u32 	%r242, %tid.y;
	mad.lo.s32 	%r241, %r244, %r242, %r243;
	shl.b32 	%r240, %r244, 2;
	and.b32  	%r239, %r241, 15;
	rem.u32 	%r238, %r241, %r240;
	sub.s32 	%r237, %r238, %r239;
	and.b32  	%r236, %r241, 3;
	shr.u32 	%r235, %r237, 2;
	add.s32 	%r234, %r235, %r236;
	mov.u32 	%r233, %ctaid.x;
	mad.lo.s32 	%r232, %r233, %r244, %r234;
	mov.u32 	%r230, %tid.x;
	mov.u32 	%r229, %tid.y;
	mov.u32 	%r228, %ntid.x;
	mad.lo.s32 	%r227, %r228, %r229, %r230;
	ld.param.u32 	%r226, [fractalRenderAdvancedDouble_param_1];
	shl.b32 	%r225, %r228, 2;
	div.u32 	%r224, %r227, %r225;
	bfe.u32 	%r223, %r227, 2, 2;
	shl.b32 	%r222, %r224, 2;
	add.s32 	%r221, %r222, %r223;
	mov.u32 	%r220, %ntid.y;
	mov.u32 	%r219, %ctaid.y;
	mad.lo.s32 	%r218, %r219, %r220, %r221;
	mul.lo.s32 	%r215, %r218, %r226;
	cvt.u64.u32	%rd124, %r215;
	cvta.to.global.u64 	%rd125, %rd135;
	add.s64 	%rd126, %rd125, %rd124;
	mul.wide.u32 	%rd127, %r232, 16;
	add.s64 	%rd128, %rd126, %rd127;
	st.global.f32 	[%rd128], %f274;
	st.global.f32 	[%rd128+4], %f257;
	st.global.f32 	[%rd128+12], %f276;
	st.global.u8 	[%rd128+8], %rs11;
	setp.gt.f32	%p141, %f257, 0f00000000;
	@%p141 bra 	BB4_130;

	mov.u64 	%rd129, $str8;
	cvta.global.u64 	%rd130, %rd129;
	mov.u64 	%rd131, $str1;
	cvta.global.u64 	%rd132, %rd131;
	mov.u32 	%r216, 393;
	mov.u64 	%rd133, 0;
	mov.u64 	%rd134, 2;
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd130;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd132;
	.param .b32 param2;
	st.param.b32	[param2+0], %r216;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd133;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd134;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 31

BB4_130:
	ret;
}

	// .globl	compose
.visible .entry compose(
	.param .u64 compose_param_0,
	.param .u32 compose_param_1,
	.param .u64 compose_param_2,
	.param .u32 compose_param_3,
	.param .u64 compose_param_4,
	.param .u32 compose_param_5,
	.param .u32 compose_param_6,
	.param .u64 compose_param_7,
	.param .u32 compose_param_8,
	.param .f32 compose_param_9
)
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<20>;
	.reg .b32 	%r<40>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [compose_param_0];
	ld.param.u32 	%r9, [compose_param_1];
	ld.param.u64 	%rd3, [compose_param_4];
	ld.param.u32 	%r10, [compose_param_5];
	ld.param.u32 	%r11, [compose_param_6];
	ld.param.f32 	%f6, [compose_param_9];
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %tid.x;
	mad.lo.s32 	%r1, %r13, %r12, %r14;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %ntid.y;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r2, %r15, %r16, %r17;
	setp.ge.u32	%p1, %r2, %r11;
	setp.ge.u32	%p2, %r1, %r10;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_14;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.lo.s32 	%r18, %r2, %r9;
	cvt.u64.u32	%rd5, %r18;
	add.s64 	%rd6, %rd4, %rd5;
	mul.wide.u32 	%rd7, %r1, 16;
	add.s64 	%rd8, %rd6, %rd7;
	add.s64 	%rd1, %rd8, 12;
	ld.const.u8 	%rs1, [VISUALIZE_SAMPLE_COUNT];
	setp.eq.s16	%p4, %rs1, 0;
	@%p4 bra 	BB5_5;

	ld.global.f32 	%f7, [%rd1+-8];
	cvt.rzi.u32.f32	%r19, %f7;
	cvt.f64.f32	%fd1, %f6;
	mov.f64 	%fd2, 0d3FF0000000000000;
	max.f64 	%fd3, %fd2, %fd1;
	cvt.rzi.u32.f64	%r3, %fd3;
	min.u32 	%r20, %r19, %r3;
	cvt.rn.f32.u32	%f8, %r20;
	cvt.rn.f32.u32	%f1, %r3;
	div.rn.f32 	%f9, %f8, %f1;
	mul.f32 	%f10, %f9, 0f437F0000;
	cvt.rzi.s32.f32	%r21, %f10;
	and.b32  	%r22, %r21, 255;
	prmt.b32 	%r23, %r22, %r22, 30212;
	prmt.b32 	%r38, %r22, %r23, 28756;
	ld.global.u8 	%rs2, [%rd1+-4];
	setp.eq.s16	%p5, %rs2, 0;
	@%p5 bra 	BB5_4;

	ld.global.f32 	%f11, [%rd1];
	cvt.rzi.u32.f32	%r24, %f11;
	min.u32 	%r25, %r24, %r3;
	cvt.rn.f32.u32	%f12, %r25;
	div.rn.f32 	%f13, %f12, %f1;
	mul.f32 	%f14, %f13, 0f437F0000;
	cvt.rzi.s32.f32	%r26, %f14;
	and.b32  	%r27, %r26, 255;
	prmt.b32 	%r28, %r27, %r27, 30212;
	prmt.b32 	%r38, %r27, %r28, 28756;

BB5_4:
	or.b32  	%r39, %r38, -16777216;
	bra.uni 	BB5_13;

BB5_5:
	ld.global.f32 	%f2, [%rd1+-12];
	abs.f32 	%f15, %f2;
	mov.b32 	 %r29, %f2;
	and.b32  	%r30, %r29, -2147483648;
	or.b32  	%r31, %r30, 1056964608;
	mov.b32 	 %f16, %r31;
	add.f32 	%f17, %f2, %f16;
	cvt.rzi.f32.f32	%f18, %f17;
	setp.gt.f32	%p6, %f15, 0f4B000000;
	selp.f32	%f19, %f2, %f18, %p6;
	setp.geu.f32	%p7, %f15, 0f3F000000;
	@%p7 bra 	BB5_7;

	cvt.rzi.f32.f32	%f19, %f2;

BB5_7:
	cvt.rzi.u32.f32	%r33, %f19;
	mov.u32 	%r39, -16776961;
	setp.eq.s32	%p8, %r33, 1;
	@%p8 bra 	BB5_13;

	setp.eq.s32	%p9, %r33, 2;
	@%p9 bra 	BB5_11;
	bra.uni 	BB5_9;

BB5_11:
	mov.u32 	%r39, -16711936;
	bra.uni 	BB5_13;

BB5_9:
	setp.ne.s32	%p10, %r33, 3;
	@%p10 bra 	BB5_12;

	mov.u32 	%r39, -65536;
	bra.uni 	BB5_13;

BB5_12:
	mov.u32 	%r39, -16777216;

BB5_13:
	shl.b32 	%r37, %r1, 2;
	sust.b.2d.b32.trap 	[%rd3, {%r37, %r2}], {%r39};

BB5_14:
	ret;
}

	// .globl	fractalRenderUnderSampled
.visible .entry fractalRenderUnderSampled(
	.param .u64 fractalRenderUnderSampled_param_0,
	.param .u32 fractalRenderUnderSampled_param_1,
	.param .u32 fractalRenderUnderSampled_param_2,
	.param .u32 fractalRenderUnderSampled_param_3,
	.param .f32 fractalRenderUnderSampled_param_4,
	.param .f32 fractalRenderUnderSampled_param_5,
	.param .f32 fractalRenderUnderSampled_param_6,
	.param .f32 fractalRenderUnderSampled_param_7,
	.param .u32 fractalRenderUnderSampled_param_8,
	.param .u32 fractalRenderUnderSampled_param_9
)
{
	.reg .pred 	%p<29>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<98>;
	.reg .b32 	%r<73>;
	.reg .f64 	%fd<47>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [fractalRenderUnderSampled_param_0];
	ld.param.u32 	%r20, [fractalRenderUnderSampled_param_1];
	ld.param.u32 	%r21, [fractalRenderUnderSampled_param_2];
	ld.param.u32 	%r22, [fractalRenderUnderSampled_param_3];
	ld.param.f32 	%f12, [fractalRenderUnderSampled_param_4];
	ld.param.f32 	%f13, [fractalRenderUnderSampled_param_5];
	ld.param.f32 	%f14, [fractalRenderUnderSampled_param_6];
	ld.param.f32 	%f15, [fractalRenderUnderSampled_param_7];
	ld.param.u32 	%r23, [fractalRenderUnderSampled_param_8];
	ld.param.u32 	%r24, [fractalRenderUnderSampled_param_9];
	mov.u32 	%r25, %ntid.x;
	mov.u32 	%r26, %ctaid.x;
	mov.u32 	%r27, %tid.x;
	mad.lo.s32 	%r28, %r26, %r25, %r27;
	mul.lo.s32 	%r1, %r28, %r24;
	mov.u32 	%r29, %ctaid.y;
	mov.u32 	%r30, %ntid.y;
	mov.u32 	%r31, %tid.y;
	mad.lo.s32 	%r32, %r29, %r30, %r31;
	mul.lo.s32 	%r2, %r32, %r24;
	sub.s32 	%r33, %r22, %r24;
	setp.ge.u32	%p3, %r2, %r33;
	sub.s32 	%r34, %r21, %r24;
	setp.ge.u32	%p4, %r1, %r34;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB6_30;

	sub.f32 	%f16, %f14, %f12;
	cvt.rn.f32.u32	%f17, %r21;
	div.rn.f32 	%f18, %f16, %f17;
	cvt.rn.f32.u32	%f19, %r22;
	sub.f32 	%f20, %f15, %f13;
	div.rn.f32 	%f21, %f20, %f19;
	cvt.rn.f32.u32	%f22, %r1;
	fma.rn.f32 	%f95, %f22, %f18, %f12;
	cvt.rn.f32.u32	%f23, %r2;
	mul.f32 	%f24, %f23, %f21;
	sub.f32 	%f94, %f15, %f24;
	setp.eq.s32	%p6, %r23, 0;
	@%p6 bra 	BB6_14;

	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd46, [roots];
	ld.const.f64 	%fd45, [roots+8];
	ld.const.f64 	%fd44, [roots+16];
	ld.const.f64 	%fd43, [roots+24];
	ld.const.f64 	%fd42, [roots+32];
	ld.const.f64 	%fd41, [roots+40];
	mul.wide.u32 	%rd3, %r23, -858993459;
	shr.u64 	%rd4, %rd3, 35;
	cvt.u32.u64	%r3, %rd4;
	mov.u32 	%r64, 0;
	mov.u32 	%r63, 10;

BB6_3:
	mul.f32 	%f25, %f94, %f94;
	mul.f32 	%f26, %f95, %f95;
	sub.f32 	%f27, %f26, %f25;
	mul.f32 	%f28, %f95, %f94;
	fma.rn.f32 	%f29, %f95, %f94, %f28;
	mul.f32 	%f30, %f95, %f27;
	mul.f32 	%f31, %f94, %f29;
	sub.f32 	%f32, %f30, %f31;
	mul.f32 	%f33, %f95, %f29;
	fma.rn.f32 	%f34, %f94, %f27, %f33;
	cvt.f64.f32	%fd25, %f95;
	cvt.f64.f32	%fd26, %f94;
	fma.rn.f64 	%fd27, %fd25, %fd1, %fd2;
	cvt.f64.f32	%fd28, %f27;
	cvt.f64.f32	%fd29, %f29;
	mul.f64 	%fd30, %fd29, %fd3;
	fma.rn.f64 	%fd31, %fd28, %fd3, %fd27;
	fma.rn.f64 	%fd32, %fd26, %fd1, %fd30;
	cvt.f64.f32	%fd33, %f32;
	cvt.f64.f32	%fd34, %f34;
	fma.rn.f64 	%fd35, %fd33, %fd5, %fd31;
	fma.rn.f64 	%fd36, %fd34, %fd5, %fd32;
	cvt.rn.f32.f64	%f35, %fd35;
	cvt.rn.f32.f64	%f36, %fd36;
	fma.rn.f64 	%fd37, %fd25, %fd4, %fd1;
	mul.f64 	%fd38, %fd29, %fd6;
	fma.rn.f64 	%fd39, %fd28, %fd6, %fd37;
	fma.rn.f64 	%fd40, %fd26, %fd4, %fd38;
	cvt.rn.f32.f64	%f37, %fd39;
	cvt.rn.f32.f64	%f38, %fd40;
	abs.f32 	%f39, %f37;
	abs.f32 	%f40, %f38;
	add.f32 	%f41, %f39, %f40;
	rcp.rn.f32 	%f42, %f41;
	mul.f32 	%f43, %f35, %f42;
	mul.f32 	%f44, %f36, %f42;
	mul.f32 	%f45, %f42, %f37;
	mul.f32 	%f46, %f42, %f38;
	mul.f32 	%f47, %f46, %f46;
	fma.rn.f32 	%f48, %f45, %f45, %f47;
	rcp.rn.f32 	%f49, %f48;
	mul.f32 	%f50, %f44, %f46;
	fma.rn.f32 	%f51, %f43, %f45, %f50;
	mul.f32 	%f52, %f49, %f51;
	mul.f32 	%f53, %f44, %f45;
	mul.f32 	%f54, %f43, %f46;
	sub.f32 	%f55, %f53, %f54;
	mul.f32 	%f56, %f49, %f55;
	sub.f32 	%f95, %f95, %f52;
	sub.f32 	%f94, %f94, %f56;
	add.s32 	%r64, %r64, 1;
	setp.ne.s32	%p7, %r64, %r63;
	@%p7 bra 	BB6_13;

	cvt.rn.f32.f64	%f57, %fd46;
	sub.f32 	%f58, %f95, %f57;
	abs.f32 	%f59, %f58;
	setp.geu.f32	%p8, %f59, 0f38D1B717;
	@%p8 bra 	BB6_6;

	cvt.rn.f32.f64	%f60, %fd45;
	sub.f32 	%f61, %f94, %f60;
	abs.f32 	%f62, %f61;
	setp.lt.f32	%p9, %f62, 0f38D1B717;
	mov.u32 	%r68, 1;
	@%p9 bra 	BB6_11;

BB6_6:
	cvt.rn.f32.f64	%f63, %fd44;
	sub.f32 	%f64, %f95, %f63;
	abs.f32 	%f65, %f64;
	setp.geu.f32	%p10, %f65, 0f38D1B717;
	@%p10 bra 	BB6_8;

	cvt.rn.f32.f64	%f66, %fd43;
	sub.f32 	%f67, %f94, %f66;
	abs.f32 	%f68, %f67;
	setp.lt.f32	%p11, %f68, 0f38D1B717;
	mov.u32 	%r68, 2;
	@%p11 bra 	BB6_11;

BB6_8:
	cvt.rn.f32.f64	%f69, %fd42;
	sub.f32 	%f70, %f95, %f69;
	abs.f32 	%f71, %f70;
	mov.pred 	%p28, 0;
	setp.geu.f32	%p13, %f71, 0f38D1B717;
	@%p13 bra 	BB6_10;

	cvt.rn.f32.f64	%f72, %fd41;
	sub.f32 	%f73, %f94, %f72;
	abs.f32 	%f74, %f73;
	setp.lt.f32	%p28, %f74, 0f38D1B717;

BB6_10:
	selp.b32	%r68, 3, 0, %p28;

BB6_11:
	setp.ne.s32	%p14, %r68, 0;
	@%p14 bra 	BB6_21;

	add.s32 	%r9, %r3, %r63;
	mov.u32 	%r64, %r63;
	mov.u32 	%r63, %r9;

BB6_13:
	setp.lt.u32	%p15, %r64, %r23;
	@%p15 bra 	BB6_3;
	bra.uni 	BB6_15;

BB6_14:
	ld.const.f64 	%fd46, [roots];
	ld.const.f64 	%fd45, [roots+8];
	ld.const.f64 	%fd44, [roots+16];
	ld.const.f64 	%fd43, [roots+24];
	ld.const.f64 	%fd42, [roots+32];
	ld.const.f64 	%fd41, [roots+40];

BB6_15:
	cvt.rn.f32.f64	%f75, %fd46;
	sub.f32 	%f76, %f95, %f75;
	abs.f32 	%f77, %f76;
	setp.geu.f32	%p16, %f77, 0f38D1B717;
	@%p16 bra 	BB6_17;

	cvt.rn.f32.f64	%f78, %fd45;
	sub.f32 	%f79, %f94, %f78;
	abs.f32 	%f80, %f79;
	setp.lt.f32	%p17, %f80, 0f38D1B717;
	mov.u32 	%r68, 1;
	@%p17 bra 	BB6_21;

BB6_17:
	cvt.rn.f32.f64	%f81, %fd44;
	sub.f32 	%f82, %f95, %f81;
	abs.f32 	%f83, %f82;
	setp.geu.f32	%p18, %f83, 0f38D1B717;
	@%p18 bra 	BB6_19;

	cvt.rn.f32.f64	%f84, %fd43;
	sub.f32 	%f85, %f94, %f84;
	abs.f32 	%f86, %f85;
	setp.lt.f32	%p19, %f86, 0f38D1B717;
	mov.u32 	%r68, 2;
	@%p19 bra 	BB6_21;

BB6_19:
	cvt.rn.f32.f64	%f87, %fd42;
	sub.f32 	%f88, %f95, %f87;
	cvt.rn.f32.f64	%f89, %fd41;
	sub.f32 	%f9, %f94, %f89;
	abs.f32 	%f90, %f88;
	mov.u32 	%r68, 0;
	setp.geu.f32	%p20, %f90, 0f38D1B717;
	@%p20 bra 	BB6_21;

	abs.f32 	%f91, %f9;
	setp.lt.f32	%p21, %f91, 0f38D1B717;
	selp.b32	%r68, 3, 0, %p21;

BB6_21:
	setp.eq.s32	%p22, %r24, 0;
	@%p22 bra 	BB6_30;

	cvt.rn.f32.u32	%f92, %r68;
	cvt.rzi.u32.f32	%r46, %f92;
	mul.lo.s32 	%r52, %r2, %r20;
	cvt.u64.u32	%rd5, %r52;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd5;
	cvt.rn.f32.u32	%f93, %r24;
	rcp.rn.f32 	%f10, %f93;
	cvt.rn.f32.u32	%f11, %r46;
	mul.wide.u32 	%rd8, %r1, 16;
	add.s64 	%rd1, %rd7, %rd8;
	and.b32  	%r45, %r24, 3;
	mov.u32 	%r69, 1;
	mov.u32 	%r72, 0;
	setp.eq.s32	%p23, %r45, 0;
	@%p23 bra 	BB6_28;

	setp.eq.s32	%p24, %r45, 1;
	mov.u32 	%r70, %r72;
	@%p24 bra 	BB6_27;

	setp.eq.s32	%p25, %r45, 2;
	@%p25 bra 	BB6_26;

	st.global.f32 	[%rd1], %f11;
	st.global.f32 	[%rd1+4], %f10;
	mov.u32 	%r59, 0;
	st.global.u32 	[%rd1+12], %r59;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd1+8], %rs1;
	mov.u32 	%r69, 2;

BB6_26:
	st.global.f32 	[%rd1], %f11;
	st.global.f32 	[%rd1+4], %f10;
	mov.u32 	%r60, 0;
	st.global.u32 	[%rd1+12], %r60;
	mov.u16 	%rs2, 0;
	st.global.u8 	[%rd1+8], %rs2;
	mov.u32 	%r70, %r69;

BB6_27:
	st.global.f32 	[%rd1], %f11;
	st.global.f32 	[%rd1+4], %f10;
	st.global.u32 	[%rd1+12], %r72;
	mov.u16 	%rs3, 0;
	st.global.u8 	[%rd1+8], %rs3;
	add.s32 	%r72, %r70, 1;

BB6_28:
	setp.lt.u32	%p26, %r24, 4;
	@%p26 bra 	BB6_30;

BB6_29:
	st.global.f32 	[%rd1], %f11;
	st.global.f32 	[%rd1+4], %f10;
	mov.u32 	%r62, 0;
	st.global.u32 	[%rd1+12], %r62;
	mov.u16 	%rs4, 0;
	st.global.u8 	[%rd1+8], %rs4;
	add.s32 	%r72, %r72, 4;
	setp.lt.u32	%p27, %r72, %r24;
	@%p27 bra 	BB6_29;

BB6_30:
	ret;
}

	// .globl	debug
.visible .entry debug(

)
{



	ret;
}


