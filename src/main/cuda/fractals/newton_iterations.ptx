//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24330188
// Cuda compilation tools, release 9.2, V9.2.148
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	init
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 8 .b8 roots[48];
.const .align 8 .b8 coefficients[32];
.const .align 4 .u32 colorMagnifier;
.global .align 4 .f32 PI_F = 0f40490FDB;
.global .align 4 .u32 MAX_SS_LEVEL = 256;
.global .align 4 .u32 seed;
.global .align 4 .u32 WARP_SIZE_X = 8;
.global .align 4 .u32 WARP_SIZE_Y = 4;
.global .align 4 .u32 USE_ADAPTIVE_SS_FLAG_MASK = 1;
.global .align 4 .u32 VISUALISE_SAMPLE_COUNT_FLAG_MASK = 2;
.global .align 4 .u32 USE_FOVEATION_FLAG_MASK = 4;
.global .align 4 .u32 USE_SAMPLE_REUSE_FLAG_MASK = 8;
.global .align 4 .u32 IS_ZOOMING_FLAG_MASK = 16;
.global .align 4 .u32 visualityAmplifyCoeff = 10;
.global .align 4 .f32 screenDistance = 0f42700000;
.global .align 16 .b8 $str[34] = {98, 0, 108, 0, 111, 0, 99, 0, 107, 0, 68, 0, 105, 0, 109, 0, 46, 0, 120, 0, 32, 0, 61, 0, 61, 0, 32, 0, 51, 0, 50, 0, 0, 0};
.global .align 16 .b8 $str1[138] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 82, 0, 101, 0, 110, 0, 100, 0, 101, 0, 114, 0, 101, 0, 114, 0, 71, 0, 101, 0, 110, 0, 101, 0, 114, 0, 105, 0, 99, 0, 46, 0, 99, 0, 117, 0, 0, 0};
.global .align 16 .b8 $str2[40] = {112, 0, 79, 0, 117, 0, 116, 0, 112, 0, 117, 0, 116, 0, 45, 0, 62, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str5[34] = {118, 0, 105, 0, 115, 0, 117, 0, 97, 0, 108, 0, 65, 0, 110, 0, 103, 0, 108, 0, 101, 0, 32, 0, 62, 0, 61, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str6[66] = {114, 0, 101, 0, 117, 0, 115, 0, 105, 0, 110, 0, 103, 0, 83, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 32, 0, 124, 0, 124, 0, 32, 0, 115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str7[34] = {114, 0, 101, 0, 115, 0, 117, 0, 108, 0, 116, 0, 87, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str8[56] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 60, 0, 61, 0, 32, 0, 77, 0, 65, 0, 88, 0, 95, 0, 83, 0, 83, 0, 95, 0, 76, 0, 69, 0, 86, 0, 69, 0, 76, 0, 0, 0};
.global .align 16 .b8 $str9[54] = {112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 73, 0, 100, 0, 120, 0, 32, 0, 60, 0, 32, 0, 112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 76, 0, 101, 0, 110, 0, 103, 0, 116, 0, 104, 0, 0, 0};
.global .align 16 .b8 $str10[146] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 115, 0, 47, 0, 110, 0, 101, 0, 119, 0, 116, 0, 111, 0, 110, 0, 95, 0, 105, 0, 116, 0, 101, 0, 114, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 115, 0, 46, 0, 99, 0, 117, 0, 0, 0};

.visible .entry init(

)
{



	ret;
}

	// .globl	fractalRenderMainFloat
.visible .entry fractalRenderMainFloat(
	.param .u64 fractalRenderMainFloat_param_0,
	.param .u32 fractalRenderMainFloat_param_1,
	.param .align 4 .b8 fractalRenderMainFloat_param_2[8],
	.param .align 4 .b8 fractalRenderMainFloat_param_3[16],
	.param .u32 fractalRenderMainFloat_param_4,
	.param .u32 fractalRenderMainFloat_param_5,
	.param .u32 fractalRenderMainFloat_param_6
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<33>;
	.reg .f32 	%f<124>;
	.reg .b32 	%r<95>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<49>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainFloat_param_0];
	ld.param.u32 	%r26, [fractalRenderMainFloat_param_1];
	ld.param.u32 	%r28, [fractalRenderMainFloat_param_2+4];
	ld.param.u32 	%r27, [fractalRenderMainFloat_param_2];
	ld.param.f32 	%f36, [fractalRenderMainFloat_param_3+12];
	ld.param.f32 	%f35, [fractalRenderMainFloat_param_3+8];
	ld.param.f32 	%f34, [fractalRenderMainFloat_param_3+4];
	ld.param.f32 	%f33, [fractalRenderMainFloat_param_3];
	ld.param.u32 	%r29, [fractalRenderMainFloat_param_4];
	ld.param.u32 	%r92, [fractalRenderMainFloat_param_5];
	ld.param.u32 	%r31, [fractalRenderMainFloat_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r32, 64;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB1_2:
	mov.u32 	%r33, %tid.x;
	mov.u32 	%r34, %tid.y;
	mad.lo.s32 	%r35, %r1, %r34, %r33;
	shl.b32 	%r36, %r1, 2;
	and.b32  	%r37, %r35, 15;
	rem.u32 	%r38, %r35, %r36;
	sub.s32 	%r39, %r38, %r37;
	shr.u32 	%r40, %r39, 2;
	and.b32  	%r41, %r35, 3;
	add.s32 	%r42, %r40, %r41;
	div.u32 	%r43, %r35, %r36;
	shl.b32 	%r44, %r43, 2;
	bfe.u32 	%r45, %r35, 2, 2;
	add.s32 	%r46, %r44, %r45;
	mov.u32 	%r47, %ctaid.x;
	mad.lo.s32 	%r4, %r47, %r1, %r42;
	mov.u32 	%r48, %ctaid.y;
	mov.u32 	%r49, %ntid.y;
	mad.lo.s32 	%r5, %r48, %r49, %r46;
	setp.lt.u32	%p2, %r4, %r27;
	setp.lt.u32	%p3, %r5, %r28;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB1_32;
	bra.uni 	BB1_3;

BB1_3:
	setp.lt.u32	%p5, %r92, 257;
	@%p5 bra 	BB1_5;

	mov.u64 	%rd9, $str8;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r50, 96;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r50;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_5:
	setp.eq.s32	%p6, %r92, 0;
	cvt.rn.f32.u32	%f123, %r92;
	mov.u32 	%r93, 0;
	@%p6 bra 	BB1_6;

	cvt.rn.f32.u32	%f4, %r4;
	cvt.rn.f32.u32	%f5, %r5;
	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f6, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f7, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f8, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f9, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f10, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f11, %fd12;
	cvt.rn.f32.u32	%f37, %r27;
	sub.f32 	%f38, %f35, %f33;
	div.rn.f32 	%f12, %f38, %f37;
	cvt.rn.f32.u32	%f39, %r28;
	sub.f32 	%f40, %f36, %f34;
	div.rn.f32 	%f13, %f40, %f39;
	mov.u32 	%r54, 0;
	mov.u32 	%r83, %r54;
	mov.u32 	%r93, %r54;

BB1_8:
	cvt.rn.f32.u32	%f41, %r83;
	div.rn.f32 	%f42, %f41, %f123;
	add.f32 	%f43, %f4, %f42;
	add.f32 	%f44, %f5, %f42;
	neg.f32 	%f45, %f44;
	fma.rn.f32 	%f117, %f12, %f43, %f33;
	fma.rn.f32 	%f116, %f13, %f45, %f36;
	setp.eq.s32	%p7, %r29, 0;
	mov.u32 	%r87, %r54;
	@%p7 bra 	BB1_16;

BB1_9:
	mul.f32 	%f46, %f116, %f116;
	mul.f32 	%f47, %f117, %f117;
	sub.f32 	%f48, %f47, %f46;
	mul.f32 	%f49, %f117, %f116;
	fma.rn.f32 	%f50, %f117, %f116, %f49;
	mul.f32 	%f51, %f117, %f48;
	mul.f32 	%f52, %f116, %f50;
	sub.f32 	%f53, %f51, %f52;
	mul.f32 	%f54, %f117, %f50;
	fma.rn.f32 	%f55, %f116, %f48, %f54;
	cvt.f64.f32	%fd13, %f117;
	cvt.f64.f32	%fd14, %f116;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f48;
	cvt.f64.f32	%fd17, %f50;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f53;
	cvt.f64.f32	%fd22, %f55;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f56, %fd23;
	cvt.rn.f32.f64	%f57, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f58, %fd27;
	cvt.rn.f32.f64	%f59, %fd28;
	abs.f32 	%f60, %f58;
	abs.f32 	%f61, %f59;
	add.f32 	%f62, %f60, %f61;
	rcp.rn.f32 	%f63, %f62;
	mul.f32 	%f64, %f56, %f63;
	mul.f32 	%f65, %f57, %f63;
	mul.f32 	%f66, %f63, %f58;
	mul.f32 	%f67, %f63, %f59;
	mul.f32 	%f68, %f67, %f67;
	fma.rn.f32 	%f69, %f66, %f66, %f68;
	rcp.rn.f32 	%f70, %f69;
	mul.f32 	%f71, %f65, %f67;
	fma.rn.f32 	%f72, %f64, %f66, %f71;
	mul.f32 	%f73, %f70, %f72;
	mul.f32 	%f74, %f65, %f66;
	mul.f32 	%f75, %f64, %f67;
	sub.f32 	%f76, %f74, %f75;
	mul.f32 	%f77, %f70, %f76;
	sub.f32 	%f117, %f117, %f73;
	sub.f32 	%f116, %f116, %f77;
	add.s32 	%r87, %r87, 1;
	sub.f32 	%f78, %f117, %f6;
	abs.f32 	%f79, %f78;
	setp.geu.f32	%p8, %f79, 0f38D1B717;
	@%p8 bra 	BB1_11;

	sub.f32 	%f80, %f116, %f7;
	abs.f32 	%f81, %f80;
	setp.lt.f32	%p9, %f81, 0f38D1B717;
	@%p9 bra 	BB1_16;

BB1_11:
	sub.f32 	%f82, %f117, %f8;
	abs.f32 	%f83, %f82;
	setp.geu.f32	%p10, %f83, 0f38D1B717;
	@%p10 bra 	BB1_13;

	sub.f32 	%f84, %f116, %f9;
	abs.f32 	%f85, %f84;
	setp.lt.f32	%p11, %f85, 0f38D1B717;
	@%p11 bra 	BB1_16;

BB1_13:
	sub.f32 	%f86, %f117, %f10;
	abs.f32 	%f87, %f86;
	setp.lt.f32	%p12, %f87, 0f38D1B717;
	@%p12 bra 	BB1_15;
	bra.uni 	BB1_14;

BB1_15:
	setp.lt.u32	%p14, %r87, %r29;
	sub.f32 	%f88, %f116, %f11;
	abs.f32 	%f89, %f88;
	setp.geu.f32	%p15, %f89, 0f38D1B717;
	and.pred  	%p16, %p15, %p14;
	@%p16 bra 	BB1_9;
	bra.uni 	BB1_16;

BB1_14:
	setp.lt.u32	%p13, %r87, %r29;
	@%p13 bra 	BB1_9;

BB1_16:
	add.s32 	%r93, %r87, %r93;
	setp.gt.u32	%p17, %r83, 9;
	@%p17 bra 	BB1_18;

	add.u64 	%rd15, %SP, 0;
	cvta.to.local.u64 	%rd16, %rd15;
	mul.wide.u32 	%rd17, %r83, 4;
	add.s64 	%rd18, %rd16, %rd17;
	st.local.u32 	[%rd18], %r87;

BB1_18:
	and.b32  	%r57, %r31, 1;
	setp.eq.b32	%p18, %r57, 1;
	and.b32  	%r58, %r83, -9;
	setp.eq.s32	%p19, %r58, 2;
	and.pred  	%p20, %p19, %p18;
	add.s32 	%r13, %r83, 1;
	@!%p20 bra 	BB1_29;
	bra.uni 	BB1_19;

BB1_19:
	div.u32 	%r59, %r93, %r13;
	cvt.rn.f32.u32	%f21, %r59;
	setp.eq.s32	%p21, %r83, 0;
	mov.f32 	%f122, 0f00000000;
	@%p21 bra 	BB1_28;

	and.b32  	%r14, %r83, 3;
	setp.eq.s32	%p22, %r14, 0;
	mov.f32 	%f122, 0f00000000;
	mov.u32 	%r91, 0;
	@%p22 bra 	BB1_26;

	setp.eq.s32	%p23, %r14, 1;
	mov.f32 	%f119, 0f00000000;
	mov.u32 	%r89, 0;
	@%p23 bra 	BB1_25;

	setp.eq.s32	%p24, %r14, 2;
	mov.f32 	%f118, 0f00000000;
	mov.u32 	%r88, 0;
	@%p24 bra 	BB1_24;

	add.u64 	%rd19, %SP, 0;
	cvta.to.local.u64 	%rd20, %rd19;
	ld.local.u32 	%r64, [%rd20];
	cvt.rn.f32.u32	%f94, %r64;
	sub.f32 	%f95, %f94, %f21;
	fma.rn.f32 	%f118, %f95, %f95, 0f00000000;
	mov.u32 	%r88, 1;

BB1_24:
	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd22, %rd21;
	mul.wide.u32 	%rd23, %r88, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.local.u32 	%r65, [%rd24];
	cvt.rn.f32.u32	%f96, %r65;
	sub.f32 	%f97, %f96, %f21;
	fma.rn.f32 	%f119, %f97, %f97, %f118;
	add.s32 	%r89, %r88, 1;

BB1_25:
	add.u64 	%rd25, %SP, 0;
	cvta.to.local.u64 	%rd26, %rd25;
	mul.wide.u32 	%rd27, %r89, 4;
	add.s64 	%rd28, %rd26, %rd27;
	ld.local.u32 	%r66, [%rd28];
	cvt.rn.f32.u32	%f98, %r66;
	sub.f32 	%f99, %f98, %f21;
	fma.rn.f32 	%f122, %f99, %f99, %f119;
	add.s32 	%r91, %r89, 1;

BB1_26:
	add.u64 	%rd29, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd29;
	setp.lt.u32	%p25, %r83, 4;
	@%p25 bra 	BB1_28;

BB1_27:
	mul.wide.u32 	%rd30, %r91, 4;
	add.s64 	%rd31, %rd1, %rd30;
	ld.local.u32 	%r67, [%rd31];
	cvt.rn.f32.u32	%f100, %r67;
	sub.f32 	%f101, %f100, %f21;
	fma.rn.f32 	%f102, %f101, %f101, %f122;
	add.s32 	%r68, %r91, 1;
	mul.wide.u32 	%rd32, %r68, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.local.u32 	%r69, [%rd33];
	cvt.rn.f32.u32	%f103, %r69;
	sub.f32 	%f104, %f103, %f21;
	fma.rn.f32 	%f105, %f104, %f104, %f102;
	add.s32 	%r70, %r91, 2;
	mul.wide.u32 	%rd34, %r70, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.local.u32 	%r71, [%rd35];
	cvt.rn.f32.u32	%f106, %r71;
	sub.f32 	%f107, %f106, %f21;
	fma.rn.f32 	%f108, %f107, %f107, %f105;
	add.s32 	%r72, %r91, 3;
	mul.wide.u32 	%rd36, %r72, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r73, [%rd37];
	cvt.rn.f32.u32	%f109, %r73;
	sub.f32 	%f110, %f109, %f21;
	fma.rn.f32 	%f122, %f110, %f110, %f108;
	add.s32 	%r91, %r91, 4;
	setp.lt.u32	%p26, %r91, %r83;
	@%p26 bra 	BB1_27;

BB1_28:
	add.s32 	%r75, %r83, -1;
	cvt.rn.f32.u32	%f111, %r75;
	div.rn.f32 	%f112, %f122, %f111;
	div.rn.f32 	%f113, %f112, %f21;
	setp.eq.s32	%p27, %r83, 2;
	selp.f32	%f114, 0f3C23D70A, 0f3DCCCCCD, %p27;
	// inline asm
	activemask.b32 %r74;
	// inline asm
	setp.le.f32	%p28, %f113, %f114;
	vote.sync.all.pred 	%p29, %p28, %r74;
	selp.b32	%r92, %r13, %r92, %p29;

BB1_29:
	cvt.rn.f32.u32	%f123, %r92;
	setp.lt.u32	%p30, %r13, %r92;
	mov.u32 	%r83, %r13;
	@%p30 bra 	BB1_8;
	bra.uni 	BB1_30;

BB1_6:
	mov.u32 	%r92, %r93;

BB1_30:
	and.b32  	%r77, %r31, 2;
	setp.eq.s32	%p31, %r77, 0;
	mul.lo.s32 	%r78, %r92, 10;
	div.u32 	%r79, %r93, %r92;
	selp.b32	%r80, %r79, %r78, %p31;
	mul.lo.s32 	%r81, %r5, %r26;
	cvt.u64.u32	%rd38, %r81;
	cvta.to.global.u64 	%rd39, %rd2;
	add.s64 	%rd40, %rd39, %rd38;
	mul.wide.u32 	%rd41, %r4, 8;
	add.s64 	%rd42, %rd40, %rd41;
	st.global.u32 	[%rd42], %r80;
	st.global.f32 	[%rd42+4], %f123;
	setp.gt.f32	%p32, %f123, 0f00000000;
	@%p32 bra 	BB1_32;

	mov.u64 	%rd43, $str2;
	cvta.global.u64 	%rd44, %rd43;
	mov.u64 	%rd45, $str1;
	cvta.global.u64 	%rd46, %rd45;
	mov.u32 	%r82, 166;
	mov.u64 	%rd47, 0;
	mov.u64 	%rd48, 2;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd44;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd46;
	.param .b32 param2;
	st.param.b32	[param2+0], %r82;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd47;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd48;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB1_32:
	ret;
}

	// .globl	fractalRenderMainDouble
.visible .entry fractalRenderMainDouble(
	.param .u64 fractalRenderMainDouble_param_0,
	.param .u32 fractalRenderMainDouble_param_1,
	.param .align 4 .b8 fractalRenderMainDouble_param_2[8],
	.param .align 8 .b8 fractalRenderMainDouble_param_3[32],
	.param .u32 fractalRenderMainDouble_param_4,
	.param .u32 fractalRenderMainDouble_param_5,
	.param .u32 fractalRenderMainDouble_param_6
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<33>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<122>;
	.reg .f64 	%fd<143>;
	.reg .b64 	%rd<49>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainDouble_param_0];
	ld.param.u32 	%r28, [fractalRenderMainDouble_param_2+4];
	ld.param.u32 	%r27, [fractalRenderMainDouble_param_2];
	ld.param.f64 	%fd38, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd37, [fractalRenderMainDouble_param_3+16];
	ld.param.f64 	%fd36, [fractalRenderMainDouble_param_3+8];
	ld.param.f64 	%fd35, [fractalRenderMainDouble_param_3];
	ld.param.u32 	%r29, [fractalRenderMainDouble_param_4];
	ld.param.u32 	%r30, [fractalRenderMainDouble_param_5];
	ld.param.u32 	%r31, [fractalRenderMainDouble_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r32, 64;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB2_2:
	mov.u32 	%r33, %tid.x;
	mov.u32 	%r34, %tid.y;
	mad.lo.s32 	%r35, %r1, %r34, %r33;
	shl.b32 	%r36, %r1, 2;
	and.b32  	%r37, %r35, 15;
	rem.u32 	%r38, %r35, %r36;
	sub.s32 	%r39, %r38, %r37;
	shr.u32 	%r40, %r39, 2;
	and.b32  	%r41, %r35, 3;
	add.s32 	%r42, %r40, %r41;
	div.u32 	%r43, %r35, %r36;
	shl.b32 	%r44, %r43, 2;
	bfe.u32 	%r45, %r35, 2, 2;
	add.s32 	%r46, %r44, %r45;
	mov.u32 	%r47, %ctaid.x;
	mad.lo.s32 	%r4, %r47, %r1, %r42;
	mov.u32 	%r48, %ctaid.y;
	mov.u32 	%r49, %ntid.y;
	mad.lo.s32 	%r5, %r48, %r49, %r46;
	setp.lt.u32	%p2, %r4, %r27;
	setp.lt.u32	%p3, %r5, %r28;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB2_31;
	bra.uni 	BB2_3;

BB2_3:
	setp.lt.u32	%p5, %r30, 257;
	@%p5 bra 	BB2_5;

	mov.u64 	%rd9, $str8;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r50, 96;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r50;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB2_5:
	setp.eq.s32	%p6, %r30, 0;
	mov.u32 	%r120, 0;
	mov.u32 	%r119, %r120;
	@%p6 bra 	BB2_29;

	cvt.rn.f64.u32	%fd3, %r4;
	cvt.rn.f64.u32	%fd4, %r5;
	ld.const.f64 	%fd7, [coefficients+16];
	add.f64 	%fd8, %fd7, %fd7;
	ld.const.f64 	%fd9, [coefficients+24];
	mul.f64 	%fd10, %fd9, 0d4008000000000000;
	cvt.rn.f64.u32	%fd39, %r27;
	sub.f64 	%fd40, %fd37, %fd35;
	div.rn.f64 	%fd17, %fd40, %fd39;
	cvt.rn.f64.u32	%fd41, %r28;
	sub.f64 	%fd42, %fd38, %fd36;
	div.rn.f64 	%fd18, %fd42, %fd41;
	mov.u32 	%r110, 0;
	mov.u32 	%r120, %r110;
	mov.u32 	%r119, %r30;

BB2_7:
	mov.u32 	%r114, 0;
	ld.param.f64 	%fd126, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd125, [fractalRenderMainDouble_param_3];
	cvt.rn.f64.u32	%fd43, %r119;
	cvt.rn.f64.u32	%fd44, %r110;
	div.rn.f64 	%fd45, %fd44, %fd43;
	add.f64 	%fd46, %fd3, %fd45;
	add.f64 	%fd47, %fd4, %fd45;
	neg.f64 	%fd48, %fd47;
	fma.rn.f64 	%fd137, %fd17, %fd46, %fd125;
	fma.rn.f64 	%fd136, %fd18, %fd48, %fd126;
	setp.eq.s32	%p7, %r29, 0;
	@%p7 bra 	BB2_15;

BB2_8:
	ld.const.f64 	%fd131, [roots];
	ld.const.f64 	%fd130, [coefficients+24];
	ld.const.f64 	%fd129, [coefficients+16];
	ld.const.f64 	%fd128, [coefficients];
	ld.const.f64 	%fd127, [coefficients+8];
	mul.f64 	%fd49, %fd136, %fd136;
	mul.f64 	%fd50, %fd137, %fd137;
	sub.f64 	%fd51, %fd50, %fd49;
	mul.f64 	%fd52, %fd137, %fd136;
	fma.rn.f64 	%fd53, %fd137, %fd136, %fd52;
	mul.f64 	%fd54, %fd137, %fd51;
	mul.f64 	%fd55, %fd136, %fd53;
	sub.f64 	%fd56, %fd54, %fd55;
	mul.f64 	%fd57, %fd137, %fd53;
	fma.rn.f64 	%fd58, %fd136, %fd51, %fd57;
	fma.rn.f64 	%fd59, %fd137, %fd127, %fd128;
	mul.f64 	%fd60, %fd53, %fd129;
	fma.rn.f64 	%fd61, %fd51, %fd129, %fd59;
	fma.rn.f64 	%fd62, %fd136, %fd127, %fd60;
	fma.rn.f64 	%fd63, %fd56, %fd130, %fd61;
	fma.rn.f64 	%fd64, %fd58, %fd130, %fd62;
	fma.rn.f64 	%fd65, %fd137, %fd8, %fd127;
	mul.f64 	%fd66, %fd53, %fd10;
	fma.rn.f64 	%fd67, %fd51, %fd10, %fd65;
	fma.rn.f64 	%fd68, %fd136, %fd8, %fd66;
	abs.f64 	%fd69, %fd67;
	abs.f64 	%fd70, %fd68;
	add.f64 	%fd71, %fd69, %fd70;
	rcp.rn.f64 	%fd72, %fd71;
	mul.f64 	%fd73, %fd63, %fd72;
	mul.f64 	%fd74, %fd64, %fd72;
	mul.f64 	%fd75, %fd67, %fd72;
	mul.f64 	%fd76, %fd68, %fd72;
	mul.f64 	%fd77, %fd76, %fd76;
	fma.rn.f64 	%fd78, %fd75, %fd75, %fd77;
	rcp.rn.f64 	%fd79, %fd78;
	mul.f64 	%fd80, %fd74, %fd76;
	fma.rn.f64 	%fd81, %fd73, %fd75, %fd80;
	mul.f64 	%fd82, %fd79, %fd81;
	mul.f64 	%fd83, %fd74, %fd75;
	mul.f64 	%fd84, %fd73, %fd76;
	sub.f64 	%fd85, %fd83, %fd84;
	mul.f64 	%fd86, %fd79, %fd85;
	sub.f64 	%fd137, %fd137, %fd82;
	sub.f64 	%fd136, %fd136, %fd86;
	add.s32 	%r114, %r114, 1;
	sub.f64 	%fd87, %fd137, %fd131;
	abs.f64 	%fd88, %fd87;
	setp.geu.f64	%p8, %fd88, 0d3F1A36E2EB1C432D;
	@%p8 bra 	BB2_10;

	ld.const.f64 	%fd133, [roots+8];
	sub.f64 	%fd89, %fd136, %fd133;
	abs.f64 	%fd90, %fd89;
	setp.lt.f64	%p9, %fd90, 0d3F1A36E2EB1C432D;
	@%p9 bra 	BB2_15;

BB2_10:
	ld.const.f64 	%fd124, [roots+16];
	sub.f64 	%fd91, %fd137, %fd124;
	abs.f64 	%fd92, %fd91;
	setp.geu.f64	%p10, %fd92, 0d3F1A36E2EB1C432D;
	@%p10 bra 	BB2_12;

	ld.const.f64 	%fd132, [roots+24];
	sub.f64 	%fd93, %fd136, %fd132;
	abs.f64 	%fd94, %fd93;
	setp.lt.f64	%p11, %fd94, 0d3F1A36E2EB1C432D;
	@%p11 bra 	BB2_15;

BB2_12:
	ld.const.f64 	%fd134, [roots+32];
	sub.f64 	%fd95, %fd137, %fd134;
	abs.f64 	%fd96, %fd95;
	setp.lt.f64	%p12, %fd96, 0d3F1A36E2EB1C432D;
	@%p12 bra 	BB2_14;
	bra.uni 	BB2_13;

BB2_14:
	ld.const.f64 	%fd135, [roots+40];
	setp.lt.u32	%p14, %r114, %r29;
	sub.f64 	%fd97, %fd136, %fd135;
	abs.f64 	%fd98, %fd97;
	setp.geu.f64	%p15, %fd98, 0d3F1A36E2EB1C432D;
	and.pred  	%p16, %p15, %p14;
	@%p16 bra 	BB2_8;
	bra.uni 	BB2_15;

BB2_13:
	setp.lt.u32	%p13, %r114, %r29;
	@%p13 bra 	BB2_8;

BB2_15:
	add.s32 	%r120, %r114, %r120;
	setp.gt.u32	%p17, %r110, 9;
	@%p17 bra 	BB2_17;

	add.u64 	%rd15, %SP, 0;
	cvta.to.local.u64 	%rd16, %rd15;
	mul.wide.u32 	%rd17, %r110, 4;
	add.s64 	%rd18, %rd16, %rd17;
	st.local.u32 	[%rd18], %r114;

BB2_17:
	and.b32  	%r57, %r31, 1;
	setp.eq.b32	%p18, %r57, 1;
	and.b32  	%r58, %r110, -9;
	setp.eq.s32	%p19, %r58, 2;
	and.pred  	%p20, %p19, %p18;
	add.s32 	%r13, %r110, 1;
	@!%p20 bra 	BB2_28;
	bra.uni 	BB2_18;

BB2_18:
	div.u32 	%r59, %r120, %r13;
	cvt.rn.f64.u32	%fd25, %r59;
	setp.eq.s32	%p21, %r110, 0;
	mov.f64 	%fd142, 0d0000000000000000;
	@%p21 bra 	BB2_27;

	and.b32  	%r14, %r110, 3;
	setp.eq.s32	%p22, %r14, 0;
	mov.f64 	%fd142, 0d0000000000000000;
	mov.u32 	%r118, 0;
	@%p22 bra 	BB2_25;

	setp.eq.s32	%p23, %r14, 1;
	mov.f64 	%fd139, 0d0000000000000000;
	mov.u32 	%r116, 0;
	@%p23 bra 	BB2_24;

	setp.eq.s32	%p24, %r14, 2;
	mov.f64 	%fd138, 0d0000000000000000;
	mov.u32 	%r115, 0;
	@%p24 bra 	BB2_23;

	add.u64 	%rd19, %SP, 0;
	cvta.to.local.u64 	%rd20, %rd19;
	ld.local.u32 	%r64, [%rd20];
	cvt.rn.f64.u32	%fd103, %r64;
	sub.f64 	%fd104, %fd103, %fd25;
	fma.rn.f64 	%fd138, %fd104, %fd104, 0d0000000000000000;
	mov.u32 	%r115, 1;

BB2_23:
	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd22, %rd21;
	mul.wide.u32 	%rd23, %r115, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.local.u32 	%r65, [%rd24];
	cvt.rn.f64.u32	%fd105, %r65;
	sub.f64 	%fd106, %fd105, %fd25;
	fma.rn.f64 	%fd139, %fd106, %fd106, %fd138;
	add.s32 	%r116, %r115, 1;

BB2_24:
	add.u64 	%rd25, %SP, 0;
	cvta.to.local.u64 	%rd26, %rd25;
	mul.wide.u32 	%rd27, %r116, 4;
	add.s64 	%rd28, %rd26, %rd27;
	ld.local.u32 	%r66, [%rd28];
	cvt.rn.f64.u32	%fd107, %r66;
	sub.f64 	%fd108, %fd107, %fd25;
	fma.rn.f64 	%fd142, %fd108, %fd108, %fd139;
	add.s32 	%r118, %r116, 1;

BB2_25:
	add.u64 	%rd29, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd29;
	setp.lt.u32	%p25, %r110, 4;
	@%p25 bra 	BB2_27;

BB2_26:
	mul.wide.u32 	%rd30, %r118, 4;
	add.s64 	%rd31, %rd1, %rd30;
	ld.local.u32 	%r67, [%rd31];
	cvt.rn.f64.u32	%fd109, %r67;
	sub.f64 	%fd110, %fd109, %fd25;
	fma.rn.f64 	%fd111, %fd110, %fd110, %fd142;
	add.s32 	%r68, %r118, 1;
	mul.wide.u32 	%rd32, %r68, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.local.u32 	%r69, [%rd33];
	cvt.rn.f64.u32	%fd112, %r69;
	sub.f64 	%fd113, %fd112, %fd25;
	fma.rn.f64 	%fd114, %fd113, %fd113, %fd111;
	add.s32 	%r70, %r118, 2;
	mul.wide.u32 	%rd34, %r70, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.local.u32 	%r71, [%rd35];
	cvt.rn.f64.u32	%fd115, %r71;
	sub.f64 	%fd116, %fd115, %fd25;
	fma.rn.f64 	%fd117, %fd116, %fd116, %fd114;
	add.s32 	%r72, %r118, 3;
	mul.wide.u32 	%rd36, %r72, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r73, [%rd37];
	cvt.rn.f64.u32	%fd118, %r73;
	sub.f64 	%fd119, %fd118, %fd25;
	fma.rn.f64 	%fd142, %fd119, %fd119, %fd117;
	add.s32 	%r118, %r118, 4;
	setp.lt.u32	%p26, %r118, %r110;
	@%p26 bra 	BB2_26;

BB2_27:
	add.s32 	%r75, %r110, -1;
	cvt.rn.f64.u32	%fd120, %r75;
	div.rn.f64 	%fd121, %fd142, %fd120;
	div.rn.f64 	%fd122, %fd121, %fd25;
	setp.eq.s32	%p27, %r110, 2;
	selp.f64	%fd123, 0d3F847AE140000000, 0d3FB99999A0000000, %p27;
	// inline asm
	activemask.b32 %r74;
	// inline asm
	setp.le.f64	%p28, %fd122, %fd123;
	vote.sync.all.pred 	%p29, %p28, %r74;
	selp.b32	%r119, %r13, %r119, %p29;

BB2_28:
	setp.lt.u32	%p30, %r13, %r119;
	mov.u32 	%r110, %r13;
	@%p30 bra 	BB2_7;

BB2_29:
	mov.u32 	%r109, %ntid.x;
	mov.u32 	%r108, %tid.x;
	mov.u32 	%r107, %tid.y;
	mad.lo.s32 	%r106, %r109, %r107, %r108;
	shl.b32 	%r105, %r109, 2;
	and.b32  	%r104, %r106, 15;
	rem.u32 	%r103, %r106, %r105;
	sub.s32 	%r102, %r103, %r104;
	and.b32  	%r101, %r106, 3;
	shr.u32 	%r100, %r102, 2;
	add.s32 	%r99, %r100, %r101;
	mov.u32 	%r98, %ctaid.x;
	mad.lo.s32 	%r97, %r98, %r109, %r99;
	mov.u32 	%r95, %tid.x;
	mov.u32 	%r94, %tid.y;
	mov.u32 	%r93, %ntid.x;
	mad.lo.s32 	%r92, %r93, %r94, %r95;
	ld.param.u32 	%r91, [fractalRenderMainDouble_param_1];
	shl.b32 	%r90, %r93, 2;
	div.u32 	%r89, %r92, %r90;
	bfe.u32 	%r88, %r92, 2, 2;
	shl.b32 	%r87, %r89, 2;
	add.s32 	%r86, %r87, %r88;
	mov.u32 	%r85, %ntid.y;
	mov.u32 	%r84, %ctaid.y;
	mad.lo.s32 	%r83, %r84, %r85, %r86;
	and.b32  	%r77, %r31, 2;
	setp.eq.s32	%p31, %r77, 0;
	mul.lo.s32 	%r78, %r119, 10;
	div.u32 	%r79, %r120, %r119;
	selp.b32	%r80, %r79, %r78, %p31;
	mul.lo.s32 	%r81, %r83, %r91;
	cvt.u64.u32	%rd38, %r81;
	cvta.to.global.u64 	%rd39, %rd2;
	add.s64 	%rd40, %rd39, %rd38;
	mul.wide.u32 	%rd41, %r97, 8;
	add.s64 	%rd42, %rd40, %rd41;
	st.global.u32 	[%rd42], %r80;
	cvt.rn.f32.u32	%f1, %r119;
	st.global.f32 	[%rd42+4], %f1;
	setp.gt.f32	%p32, %f1, 0f00000000;
	@%p32 bra 	BB2_31;

	mov.u64 	%rd43, $str2;
	cvta.global.u64 	%rd44, %rd43;
	mov.u64 	%rd45, $str1;
	cvta.global.u64 	%rd46, %rd45;
	mov.u32 	%r82, 166;
	mov.u64 	%rd47, 0;
	mov.u64 	%rd48, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd44;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd46;
	.param .b32 param2;
	st.param.b32	[param2+0], %r82;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd47;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd48;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB2_31:
	ret;
}

	// .globl	fractalRenderAdvancedFloat
.visible .entry fractalRenderAdvancedFloat(
	.param .u64 fractalRenderAdvancedFloat_param_0,
	.param .u32 fractalRenderAdvancedFloat_param_1,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_2[8],
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_3[16],
	.param .u32 fractalRenderAdvancedFloat_param_4,
	.param .u32 fractalRenderAdvancedFloat_param_5,
	.param .u32 fractalRenderAdvancedFloat_param_6,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_7[16],
	.param .u64 fractalRenderAdvancedFloat_param_8,
	.param .u32 fractalRenderAdvancedFloat_param_9,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<62>;
	.reg .b16 	%rs<6>;
	.reg .f32 	%f<218>;
	.reg .b32 	%r<131>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<67>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderAdvancedFloat_param_0];
	ld.param.u32 	%r39, [fractalRenderAdvancedFloat_param_2+4];
	ld.param.u32 	%r38, [fractalRenderAdvancedFloat_param_2];
	ld.param.f32 	%f52, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f51, [fractalRenderAdvancedFloat_param_3+8];
	ld.param.f32 	%f50, [fractalRenderAdvancedFloat_param_3+4];
	ld.param.f32 	%f49, [fractalRenderAdvancedFloat_param_3];
	ld.param.u32 	%r40, [fractalRenderAdvancedFloat_param_4];
	ld.param.u32 	%r117, [fractalRenderAdvancedFloat_param_5];
	ld.param.u32 	%r42, [fractalRenderAdvancedFloat_param_6];
	ld.param.f32 	%f56, [fractalRenderAdvancedFloat_param_7+12];
	ld.param.f32 	%f55, [fractalRenderAdvancedFloat_param_7+8];
	ld.param.f32 	%f54, [fractalRenderAdvancedFloat_param_7+4];
	ld.param.f32 	%f53, [fractalRenderAdvancedFloat_param_7];
	ld.param.u64 	%rd3, [fractalRenderAdvancedFloat_param_8];
	ld.param.u32 	%r43, [fractalRenderAdvancedFloat_param_9];
	ld.param.u32 	%r45, [fractalRenderAdvancedFloat_param_10+4];
	ld.param.u32 	%r44, [fractalRenderAdvancedFloat_param_10];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB3_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r46, 64;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r46;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB3_2:
	mov.u32 	%r47, %tid.x;
	mov.u32 	%r48, %tid.y;
	mad.lo.s32 	%r49, %r1, %r48, %r47;
	shl.b32 	%r50, %r1, 2;
	and.b32  	%r51, %r49, 15;
	rem.u32 	%r52, %r49, %r50;
	sub.s32 	%r53, %r52, %r51;
	shr.u32 	%r54, %r53, 2;
	and.b32  	%r55, %r49, 3;
	add.s32 	%r56, %r54, %r55;
	div.u32 	%r57, %r49, %r50;
	shl.b32 	%r58, %r57, 2;
	bfe.u32 	%r59, %r49, 2, 2;
	add.s32 	%r60, %r58, %r59;
	mov.u32 	%r61, %ctaid.x;
	mad.lo.s32 	%r4, %r61, %r1, %r56;
	mov.u32 	%r62, %ctaid.y;
	mov.u32 	%r63, %ntid.y;
	mad.lo.s32 	%r5, %r62, %r63, %r60;
	setp.lt.u32	%p2, %r4, %r38;
	setp.lt.u32	%p3, %r5, %r39;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB3_52;
	bra.uni 	BB3_3;

BB3_3:
	and.b32  	%r65, %r42, 8;
	setp.eq.s32	%p5, %r65, 0;
	mov.u16 	%rs5, 0;
	@%p5 bra 	BB3_10;

	cvt.rn.f32.u32	%f58, %r4;
	sub.f32 	%f59, %f55, %f53;
	sub.f32 	%f60, %f51, %f49;
	div.rn.f32 	%f61, %f60, %f59;
	sub.f32 	%f62, %f56, %f54;
	sub.f32 	%f63, %f52, %f50;
	div.rn.f32 	%f64, %f63, %f62;
	sub.f32 	%f65, %f49, %f53;
	div.rn.f32 	%f66, %f65, %f60;
	sub.f32 	%f67, %f56, %f52;
	div.rn.f32 	%f68, %f67, %f63;
	cvt.rn.f32.u32	%f69, %r38;
	mul.f32 	%f70, %f69, %f66;
	cvt.rn.f32.u32	%f71, %r39;
	mul.f32 	%f72, %f71, %f68;
	cvt.rn.f32.u32	%f73, %r5;
	fma.rn.f32 	%f5, %f58, %f61, %f70;
	fma.rn.f32 	%f6, %f73, %f64, %f72;
	abs.f32 	%f74, %f5;
	mov.b32 	 %r66, %f5;
	and.b32  	%r67, %r66, -2147483648;
	or.b32  	%r68, %r67, 1056964608;
	mov.b32 	 %f75, %r68;
	add.f32 	%f76, %f5, %f75;
	cvt.rzi.f32.f32	%f77, %f76;
	setp.gt.f32	%p6, %f74, 0f4B000000;
	selp.f32	%f206, %f5, %f77, %p6;
	setp.geu.f32	%p7, %f74, 0f3F000000;
	@%p7 bra 	BB3_6;

	cvt.rzi.f32.f32	%f206, %f5;

BB3_6:
	cvt.rzi.s32.f32	%r6, %f206;
	mov.b32 	 %r69, %f6;
	and.b32  	%r70, %r69, -2147483648;
	or.b32  	%r71, %r70, 1056964608;
	mov.b32 	 %f78, %r71;
	add.f32 	%f79, %f6, %f78;
	cvt.rzi.f32.f32	%f80, %f79;
	abs.f32 	%f81, %f6;
	setp.gt.f32	%p8, %f81, 0f4B000000;
	selp.f32	%f207, %f6, %f80, %p8;
	setp.geu.f32	%p9, %f81, 0f3F000000;
	@%p9 bra 	BB3_8;

	cvt.rzi.f32.f32	%f207, %f6;

BB3_8:
	setp.lt.u32	%p10, %r6, %r38;
	setp.gt.s32	%p11, %r6, -1;
	and.pred  	%p12, %p11, %p10;
	cvt.rzi.s32.f32	%r7, %f207;
	setp.gt.s32	%p13, %r7, -1;
	and.pred  	%p14, %p12, %p13;
	setp.lt.u32	%p15, %r7, %r39;
	and.pred  	%p16, %p15, %p14;
	@!%p16 bra 	BB3_10;
	bra.uni 	BB3_9;

BB3_9:
	cvta.to.global.u64 	%rd10, %rd3;
	mul.lo.s32 	%r73, %r7, %r43;
	cvt.u64.u32	%rd11, %r73;
	add.s64 	%rd12, %rd10, %rd11;
	mul.wide.u32 	%rd13, %r6, 8;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.u32 	%r116, [%rd14];
	ld.global.f32 	%f208, [%rd14+4];
	mov.u16 	%rs5, 1;

BB3_10:
	and.b32  	%r74, %r42, 4;
	setp.eq.s32	%p17, %r74, 0;
	@%p17 bra 	BB3_17;

	and.b32  	%r75, %r4, -8;
	cvt.rn.f32.u32	%f83, %r75;
	and.b32  	%r76, %r5, -4;
	cvt.rn.f32.u32	%f84, %r76;
	cvt.rn.f32.u32	%f85, %r44;
	sub.f32 	%f86, %f85, %f83;
	cvt.rn.f32.u32	%f87, %r45;
	sub.f32 	%f88, %f87, %f84;
	mul.f32 	%f89, %f88, %f88;
	fma.rn.f32 	%f90, %f86, %f86, %f89;
	sqrt.rn.f32 	%f91, %f90;
	mul.f32 	%f92, %f91, 0f3CD94079;
	ld.global.f32 	%f93, [screenDistance];
	div.rn.f32 	%f15, %f92, %f93;
	abs.f32 	%f16, %f15;
	setp.leu.f32	%p18, %f16, 0f3F800000;
	mov.f32 	%f209, %f16;
	@%p18 bra 	BB3_13;

	rcp.rn.f32 	%f209, %f16;

BB3_13:
	mul.rn.f32 	%f94, %f209, %f209;
	mov.f32 	%f95, 0fC0B59883;
	mov.f32 	%f96, 0fBF52C7EA;
	fma.rn.f32 	%f97, %f94, %f96, %f95;
	mov.f32 	%f98, 0fC0D21907;
	fma.rn.f32 	%f99, %f97, %f94, %f98;
	mul.f32 	%f100, %f94, %f99;
	mul.f32 	%f101, %f209, %f100;
	add.f32 	%f102, %f94, 0f41355DC0;
	mov.f32 	%f103, 0f41E6BD60;
	fma.rn.f32 	%f104, %f102, %f94, %f103;
	mov.f32 	%f105, 0f419D92C8;
	fma.rn.f32 	%f106, %f104, %f94, %f105;
	rcp.rn.f32 	%f107, %f106;
	fma.rn.f32 	%f108, %f101, %f107, %f209;
	mov.f32 	%f109, 0f3FC90FDB;
	sub.f32 	%f110, %f109, %f108;
	setp.gt.f32	%p19, %f16, 0f3F800000;
	selp.f32	%f111, %f110, %f108, %p19;
	mov.b32 	 %r77, %f111;
	mov.b32 	 %r78, %f15;
	and.b32  	%r79, %r78, -2147483648;
	or.b32  	%r80, %r77, %r79;
	mov.b32 	 %f112, %r80;
	setp.gtu.f32	%p20, %f16, 0f7F800000;
	selp.f32	%f113, %f111, %f112, %p20;
	mul.f32 	%f114, %f113, 0f43340000;
	div.rn.f32 	%f19, %f114, 0f40490FDB;
	setp.ge.f32	%p21, %f19, 0f00000000;
	@%p21 bra 	BB3_15;

	mov.u64 	%rd15, $str5;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r81, 207;
	mov.u64 	%rd19, 0;
	mov.u64 	%rd20, 2;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r81;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd20;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB3_15:
	fma.rn.f32 	%f115, %f19, 0fBC964FDA, 0f3F8CEADD;
	setp.gtu.f32	%p22, %f19, 0f40B00000;
	selp.f32	%f116, %f115, 0f3F800000, %p22;
	cvt.rn.f32.u32	%f117, %r117;
	mul.f32 	%f118, %f117, %f116;
	cvt.rzi.u32.f32	%r117, %f118;
	setp.gtu.f32	%p23, %f19, 0f42700000;
	@%p23 bra 	BB3_17;

	mov.u32 	%r82, 1;
	max.u32 	%r117, %r82, %r117;

BB3_17:
	setp.eq.f32	%p24, %f208, 0f00000000;
	setp.eq.s16	%p25, %rs5, 0;
	or.pred  	%p26, %p25, %p24;
	setp.eq.s32	%p27, %r117, 0;
	and.pred  	%p28, %p26, %p27;
	selp.b32	%r13, 1, %r117, %p28;
	cvt.rn.f32.u32	%f119, %r38;
	sub.f32 	%f120, %f51, %f49;
	div.rn.f32 	%f20, %f120, %f119;
	cvt.rn.f32.u32	%f121, %r39;
	sub.f32 	%f122, %f52, %f50;
	div.rn.f32 	%f21, %f122, %f121;
	setp.lt.u32	%p29, %r13, 257;
	@%p29 bra 	BB3_19;

	mov.u64 	%rd21, $str8;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r83, 96;
	mov.u64 	%rd25, 0;
	mov.u64 	%rd26, 2;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r83;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB3_19:
	setp.eq.s32	%p30, %r13, 0;
	mov.u32 	%r128, 0;
	mov.u32 	%r127, %r128;
	@%p30 bra 	BB3_43;

	cvt.rn.f32.u32	%f22, %r4;
	cvt.rn.f32.u32	%f23, %r5;
	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f24, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f25, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f26, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f27, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f28, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f29, %fd12;
	mov.u32 	%r87, 0;
	mov.u32 	%r118, %r87;
	mov.u32 	%r128, %r87;
	mov.u32 	%r127, %r13;

BB3_21:
	ld.param.f32 	%f205, [fractalRenderAdvancedFloat_param_3];
	cvt.rn.f32.u32	%f123, %r127;
	cvt.rn.f32.u32	%f124, %r118;
	div.rn.f32 	%f125, %f124, %f123;
	add.f32 	%f126, %f22, %f125;
	add.f32 	%f127, %f23, %f125;
	neg.f32 	%f128, %f127;
	fma.rn.f32 	%f211, %f20, %f126, %f205;
	fma.rn.f32 	%f210, %f21, %f128, %f52;
	setp.eq.s32	%p31, %r40, 0;
	mov.u32 	%r122, %r87;
	@%p31 bra 	BB3_29;

BB3_22:
	mul.f32 	%f129, %f210, %f210;
	mul.f32 	%f130, %f211, %f211;
	sub.f32 	%f131, %f130, %f129;
	mul.f32 	%f132, %f211, %f210;
	fma.rn.f32 	%f133, %f211, %f210, %f132;
	mul.f32 	%f134, %f211, %f131;
	mul.f32 	%f135, %f210, %f133;
	sub.f32 	%f136, %f134, %f135;
	mul.f32 	%f137, %f211, %f133;
	fma.rn.f32 	%f138, %f210, %f131, %f137;
	cvt.f64.f32	%fd13, %f211;
	cvt.f64.f32	%fd14, %f210;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f131;
	cvt.f64.f32	%fd17, %f133;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f136;
	cvt.f64.f32	%fd22, %f138;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f139, %fd23;
	cvt.rn.f32.f64	%f140, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f141, %fd27;
	cvt.rn.f32.f64	%f142, %fd28;
	abs.f32 	%f143, %f141;
	abs.f32 	%f144, %f142;
	add.f32 	%f145, %f143, %f144;
	rcp.rn.f32 	%f146, %f145;
	mul.f32 	%f147, %f139, %f146;
	mul.f32 	%f148, %f140, %f146;
	mul.f32 	%f149, %f146, %f141;
	mul.f32 	%f150, %f146, %f142;
	mul.f32 	%f151, %f150, %f150;
	fma.rn.f32 	%f152, %f149, %f149, %f151;
	rcp.rn.f32 	%f153, %f152;
	mul.f32 	%f154, %f148, %f150;
	fma.rn.f32 	%f155, %f147, %f149, %f154;
	mul.f32 	%f156, %f153, %f155;
	mul.f32 	%f157, %f148, %f149;
	mul.f32 	%f158, %f147, %f150;
	sub.f32 	%f159, %f157, %f158;
	mul.f32 	%f160, %f153, %f159;
	sub.f32 	%f211, %f211, %f156;
	sub.f32 	%f210, %f210, %f160;
	add.s32 	%r122, %r122, 1;
	sub.f32 	%f161, %f211, %f24;
	abs.f32 	%f162, %f161;
	setp.geu.f32	%p32, %f162, 0f38D1B717;
	@%p32 bra 	BB3_24;

	sub.f32 	%f163, %f210, %f25;
	abs.f32 	%f164, %f163;
	setp.lt.f32	%p33, %f164, 0f38D1B717;
	@%p33 bra 	BB3_29;

BB3_24:
	sub.f32 	%f165, %f211, %f26;
	abs.f32 	%f166, %f165;
	setp.geu.f32	%p34, %f166, 0f38D1B717;
	@%p34 bra 	BB3_26;

	sub.f32 	%f167, %f210, %f27;
	abs.f32 	%f168, %f167;
	setp.lt.f32	%p35, %f168, 0f38D1B717;
	@%p35 bra 	BB3_29;

BB3_26:
	sub.f32 	%f169, %f211, %f28;
	abs.f32 	%f170, %f169;
	setp.lt.f32	%p36, %f170, 0f38D1B717;
	@%p36 bra 	BB3_28;
	bra.uni 	BB3_27;

BB3_28:
	setp.lt.u32	%p38, %r122, %r40;
	sub.f32 	%f171, %f210, %f29;
	abs.f32 	%f172, %f171;
	setp.geu.f32	%p39, %f172, 0f38D1B717;
	and.pred  	%p40, %p39, %p38;
	@%p40 bra 	BB3_22;
	bra.uni 	BB3_29;

BB3_27:
	setp.lt.u32	%p37, %r122, %r40;
	@%p37 bra 	BB3_22;

BB3_29:
	add.s32 	%r128, %r122, %r128;
	setp.gt.u32	%p41, %r118, 9;
	@%p41 bra 	BB3_31;

	add.u64 	%rd27, %SP, 0;
	cvta.to.local.u64 	%rd28, %rd27;
	mul.wide.u32 	%rd29, %r118, 4;
	add.s64 	%rd30, %rd28, %rd29;
	st.local.u32 	[%rd30], %r122;

BB3_31:
	and.b32  	%r90, %r42, 1;
	setp.eq.b32	%p42, %r90, 1;
	and.b32  	%r91, %r118, -9;
	setp.eq.s32	%p43, %r91, 2;
	and.pred  	%p44, %p43, %p42;
	add.s32 	%r21, %r118, 1;
	@!%p44 bra 	BB3_42;
	bra.uni 	BB3_32;

BB3_32:
	div.u32 	%r92, %r128, %r21;
	cvt.rn.f32.u32	%f36, %r92;
	setp.eq.s32	%p45, %r118, 0;
	mov.f32 	%f216, 0f00000000;
	@%p45 bra 	BB3_41;

	and.b32  	%r22, %r118, 3;
	setp.eq.s32	%p46, %r22, 0;
	mov.f32 	%f216, 0f00000000;
	mov.u32 	%r126, 0;
	@%p46 bra 	BB3_39;

	setp.eq.s32	%p47, %r22, 1;
	mov.f32 	%f213, 0f00000000;
	mov.u32 	%r124, 0;
	@%p47 bra 	BB3_38;

	setp.eq.s32	%p48, %r22, 2;
	mov.f32 	%f212, 0f00000000;
	mov.u32 	%r123, 0;
	@%p48 bra 	BB3_37;

	add.u64 	%rd31, %SP, 0;
	cvta.to.local.u64 	%rd32, %rd31;
	ld.local.u32 	%r97, [%rd32];
	cvt.rn.f32.u32	%f177, %r97;
	sub.f32 	%f178, %f177, %f36;
	fma.rn.f32 	%f212, %f178, %f178, 0f00000000;
	mov.u32 	%r123, 1;

BB3_37:
	add.u64 	%rd33, %SP, 0;
	cvta.to.local.u64 	%rd34, %rd33;
	mul.wide.u32 	%rd35, %r123, 4;
	add.s64 	%rd36, %rd34, %rd35;
	ld.local.u32 	%r98, [%rd36];
	cvt.rn.f32.u32	%f179, %r98;
	sub.f32 	%f180, %f179, %f36;
	fma.rn.f32 	%f213, %f180, %f180, %f212;
	add.s32 	%r124, %r123, 1;

BB3_38:
	add.u64 	%rd37, %SP, 0;
	cvta.to.local.u64 	%rd38, %rd37;
	mul.wide.u32 	%rd39, %r124, 4;
	add.s64 	%rd40, %rd38, %rd39;
	ld.local.u32 	%r99, [%rd40];
	cvt.rn.f32.u32	%f181, %r99;
	sub.f32 	%f182, %f181, %f36;
	fma.rn.f32 	%f216, %f182, %f182, %f213;
	add.s32 	%r126, %r124, 1;

BB3_39:
	add.u64 	%rd41, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd41;
	setp.lt.u32	%p49, %r118, 4;
	@%p49 bra 	BB3_41;

BB3_40:
	mul.wide.u32 	%rd42, %r126, 4;
	add.s64 	%rd43, %rd1, %rd42;
	ld.local.u32 	%r100, [%rd43];
	cvt.rn.f32.u32	%f183, %r100;
	sub.f32 	%f184, %f183, %f36;
	fma.rn.f32 	%f185, %f184, %f184, %f216;
	add.s32 	%r101, %r126, 1;
	mul.wide.u32 	%rd44, %r101, 4;
	add.s64 	%rd45, %rd1, %rd44;
	ld.local.u32 	%r102, [%rd45];
	cvt.rn.f32.u32	%f186, %r102;
	sub.f32 	%f187, %f186, %f36;
	fma.rn.f32 	%f188, %f187, %f187, %f185;
	add.s32 	%r103, %r126, 2;
	mul.wide.u32 	%rd46, %r103, 4;
	add.s64 	%rd47, %rd1, %rd46;
	ld.local.u32 	%r104, [%rd47];
	cvt.rn.f32.u32	%f189, %r104;
	sub.f32 	%f190, %f189, %f36;
	fma.rn.f32 	%f191, %f190, %f190, %f188;
	add.s32 	%r105, %r126, 3;
	mul.wide.u32 	%rd48, %r105, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.u32 	%r106, [%rd49];
	cvt.rn.f32.u32	%f192, %r106;
	sub.f32 	%f193, %f192, %f36;
	fma.rn.f32 	%f216, %f193, %f193, %f191;
	add.s32 	%r126, %r126, 4;
	setp.lt.u32	%p50, %r126, %r118;
	@%p50 bra 	BB3_40;

BB3_41:
	add.s32 	%r108, %r118, -1;
	cvt.rn.f32.u32	%f194, %r108;
	div.rn.f32 	%f195, %f216, %f194;
	div.rn.f32 	%f196, %f195, %f36;
	setp.eq.s32	%p51, %r118, 2;
	selp.f32	%f197, 0f3C23D70A, 0f3DCCCCCD, %p51;
	// inline asm
	activemask.b32 %r107;
	// inline asm
	setp.le.f32	%p52, %f196, %f197;
	vote.sync.all.pred 	%p53, %p52, %r107;
	selp.b32	%r127, %r21, %r127, %p53;

BB3_42:
	setp.lt.u32	%p54, %r21, %r127;
	mov.u32 	%r118, %r21;
	@%p54 bra 	BB3_21;

BB3_43:
	div.u32 	%r130, %r128, %r127;
	setp.ne.s16	%p55, %rs5, 0;
	setp.ne.s32	%p56, %r127, 0;
	or.pred  	%p57, %p56, %p55;
	@%p57 bra 	BB3_45;

	mov.u64 	%rd50, $str6;
	cvta.global.u64 	%rd51, %rd50;
	mov.u64 	%rd52, $str1;
	cvta.global.u64 	%rd53, %rd52;
	mov.u32 	%r110, 263;
	mov.u64 	%rd54, 0;
	mov.u64 	%rd55, 2;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd51;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd53;
	.param .b32 param2;
	st.param.b32	[param2+0], %r110;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd54;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd55;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB3_45:
	@%p25 bra 	BB3_49;

	setp.eq.s32	%p59, %r127, 0;
	@%p59 bra 	BB3_47;

	and.b32  	%r111, %r42, 16;
	setp.eq.s32	%p60, %r111, 0;
	mul.f32 	%f198, %f208, 0f3F19999A;
	selp.f32	%f199, %f208, %f198, %p60;
	cvt.rn.f32.u32	%f200, %r127;
	add.f32 	%f208, %f199, %f200;
	cvt.rn.f32.u32	%f201, %r116;
	mul.lo.s32 	%r112, %r130, %r127;
	cvt.rn.f32.u32	%f202, %r112;
	fma.rn.f32 	%f203, %f201, %f199, %f202;
	div.rn.f32 	%f204, %f203, %f208;
	cvt.rzi.u32.f32	%r130, %f204;
	bra.uni 	BB3_50;

BB3_49:
	cvt.rn.f32.u32	%f208, %r127;
	bra.uni 	BB3_50;

BB3_47:
	mov.u32 	%r130, %r116;

BB3_50:
	ld.param.u32 	%r115, [fractalRenderAdvancedFloat_param_1];
	mul.lo.s32 	%r113, %r5, %r115;
	cvt.u64.u32	%rd56, %r113;
	cvta.to.global.u64 	%rd57, %rd2;
	add.s64 	%rd58, %rd57, %rd56;
	mul.wide.u32 	%rd59, %r4, 8;
	add.s64 	%rd60, %rd58, %rd59;
	st.global.u32 	[%rd60], %r130;
	st.global.f32 	[%rd60+4], %f208;
	setp.gt.f32	%p61, %f208, 0f00000000;
	@%p61 bra 	BB3_52;

	mov.u64 	%rd61, $str7;
	cvta.global.u64 	%rd62, %rd61;
	mov.u64 	%rd63, $str1;
	cvta.global.u64 	%rd64, %rd63;
	mov.u32 	%r114, 292;
	mov.u64 	%rd65, 0;
	mov.u64 	%rd66, 2;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd62;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd64;
	.param .b32 param2;
	st.param.b32	[param2+0], %r114;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd65;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd66;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB3_52:
	ret;
}

	// .globl	fractalRenderAdvancedDouble
.visible .entry fractalRenderAdvancedDouble(
	.param .u64 fractalRenderAdvancedDouble_param_0,
	.param .u32 fractalRenderAdvancedDouble_param_1,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_2[8],
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_3[32],
	.param .u32 fractalRenderAdvancedDouble_param_4,
	.param .u32 fractalRenderAdvancedDouble_param_5,
	.param .u32 fractalRenderAdvancedDouble_param_6,
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_7[32],
	.param .u64 fractalRenderAdvancedDouble_param_8,
	.param .u32 fractalRenderAdvancedDouble_param_9,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot4[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<63>;
	.reg .b16 	%rs<6>;
	.reg .f32 	%f<59>;
	.reg .b32 	%r<159>;
	.reg .f64 	%fd<171>;
	.reg .b64 	%rd<68>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r39, [fractalRenderAdvancedDouble_param_2+4];
	ld.param.u32 	%r38, [fractalRenderAdvancedDouble_param_2];
	ld.param.f64 	%fd48, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd47, [fractalRenderAdvancedDouble_param_3+16];
	ld.param.f64 	%fd46, [fractalRenderAdvancedDouble_param_3+8];
	ld.param.f64 	%fd45, [fractalRenderAdvancedDouble_param_3];
	ld.param.u32 	%r40, [fractalRenderAdvancedDouble_param_4];
	ld.param.u32 	%r145, [fractalRenderAdvancedDouble_param_5];
	ld.param.u32 	%r42, [fractalRenderAdvancedDouble_param_6];
	ld.param.f64 	%fd52, [fractalRenderAdvancedDouble_param_7+24];
	ld.param.f64 	%fd51, [fractalRenderAdvancedDouble_param_7+16];
	ld.param.f64 	%fd50, [fractalRenderAdvancedDouble_param_7+8];
	ld.param.f64 	%fd49, [fractalRenderAdvancedDouble_param_7];
	ld.param.u64 	%rd3, [fractalRenderAdvancedDouble_param_8];
	ld.param.u32 	%r43, [fractalRenderAdvancedDouble_param_9];
	ld.param.u32 	%r45, [fractalRenderAdvancedDouble_param_10+4];
	ld.param.u32 	%r44, [fractalRenderAdvancedDouble_param_10];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB4_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r46, 64;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r46;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB4_2:
	mov.u32 	%r47, %tid.x;
	mov.u32 	%r48, %tid.y;
	mad.lo.s32 	%r49, %r1, %r48, %r47;
	shl.b32 	%r50, %r1, 2;
	and.b32  	%r51, %r49, 15;
	rem.u32 	%r52, %r49, %r50;
	sub.s32 	%r53, %r52, %r51;
	shr.u32 	%r54, %r53, 2;
	and.b32  	%r55, %r49, 3;
	add.s32 	%r56, %r54, %r55;
	div.u32 	%r57, %r49, %r50;
	shl.b32 	%r58, %r57, 2;
	bfe.u32 	%r59, %r49, 2, 2;
	add.s32 	%r60, %r58, %r59;
	mov.u32 	%r61, %ctaid.x;
	mad.lo.s32 	%r4, %r61, %r1, %r56;
	mov.u32 	%r62, %ctaid.y;
	mov.u32 	%r63, %ntid.y;
	mad.lo.s32 	%r5, %r62, %r63, %r60;
	setp.lt.u32	%p2, %r4, %r38;
	setp.lt.u32	%p3, %r5, %r39;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB4_52;
	bra.uni 	BB4_3;

BB4_3:
	and.b32  	%r65, %r42, 8;
	setp.eq.s32	%p5, %r65, 0;
	mov.u16 	%rs5, 0;
	@%p5 bra 	BB4_10;

	cvt.rn.f64.u32	%fd53, %r4;
	sub.f64 	%fd54, %fd51, %fd49;
	sub.f64 	%fd55, %fd47, %fd45;
	div.rn.f64 	%fd56, %fd55, %fd54;
	sub.f64 	%fd57, %fd52, %fd50;
	sub.f64 	%fd58, %fd48, %fd46;
	div.rn.f64 	%fd59, %fd58, %fd57;
	sub.f64 	%fd60, %fd45, %fd49;
	div.rn.f64 	%fd61, %fd60, %fd55;
	sub.f64 	%fd62, %fd52, %fd48;
	div.rn.f64 	%fd63, %fd62, %fd58;
	cvt.rn.f64.u32	%fd64, %r38;
	mul.f64 	%fd65, %fd64, %fd61;
	cvt.rn.f64.u32	%fd66, %r39;
	mul.f64 	%fd67, %fd66, %fd63;
	cvt.rn.f64.u32	%fd68, %r5;
	fma.rn.f64 	%fd162, %fd53, %fd56, %fd65;
	fma.rn.f64 	%fd163, %fd68, %fd59, %fd67;
	abs.f64 	%fd7, %fd162;
	setp.ge.f64	%p6, %fd7, 0d4330000000000000;
	@%p6 bra 	BB4_6;

	add.f64 	%fd69, %fd7, 0d3FE0000000000000;
	cvt.rzi.f64.f64	%fd70, %fd69;
	setp.lt.f64	%p7, %fd7, 0d3FE0000000000000;
	selp.f64	%fd71, 0d0000000000000000, %fd70, %p7;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r66, %temp}, %fd71;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r67}, %fd71;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r68}, %fd162;
	}
	and.b32  	%r69, %r68, -2147483648;
	or.b32  	%r70, %r67, %r69;
	mov.b64 	%fd162, {%r66, %r70};

BB4_6:
	cvt.rzi.s32.f64	%r6, %fd162;
	abs.f64 	%fd10, %fd163;
	setp.ge.f64	%p8, %fd10, 0d4330000000000000;
	@%p8 bra 	BB4_8;

	add.f64 	%fd72, %fd10, 0d3FE0000000000000;
	cvt.rzi.f64.f64	%fd73, %fd72;
	setp.lt.f64	%p9, %fd10, 0d3FE0000000000000;
	selp.f64	%fd74, 0d0000000000000000, %fd73, %p9;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r71, %temp}, %fd74;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r72}, %fd74;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r73}, %fd163;
	}
	and.b32  	%r74, %r73, -2147483648;
	or.b32  	%r75, %r72, %r74;
	mov.b64 	%fd163, {%r71, %r75};

BB4_8:
	setp.lt.u32	%p10, %r6, %r38;
	setp.gt.s32	%p11, %r6, -1;
	and.pred  	%p12, %p11, %p10;
	cvt.rzi.s32.f64	%r7, %fd163;
	setp.gt.s32	%p13, %r7, -1;
	and.pred  	%p14, %p12, %p13;
	setp.lt.u32	%p15, %r7, %r39;
	and.pred  	%p16, %p15, %p14;
	@!%p16 bra 	BB4_10;
	bra.uni 	BB4_9;

BB4_9:
	cvta.to.global.u64 	%rd10, %rd3;
	mul.lo.s32 	%r77, %r7, %r43;
	cvt.u64.u32	%rd11, %r77;
	add.s64 	%rd12, %rd10, %rd11;
	mul.wide.u32 	%rd13, %r6, 8;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.u32 	%r144, [%rd14];
	ld.global.f32 	%f56, [%rd14+4];
	mov.u16 	%rs5, 1;

BB4_10:
	and.b32  	%r78, %r42, 4;
	setp.eq.s32	%p17, %r78, 0;
	@%p17 bra 	BB4_17;

	and.b32  	%r79, %r4, -8;
	cvt.rn.f32.u32	%f13, %r79;
	and.b32  	%r80, %r5, -4;
	cvt.rn.f32.u32	%f14, %r80;
	cvt.rn.f32.u32	%f15, %r44;
	sub.f32 	%f16, %f15, %f13;
	cvt.rn.f32.u32	%f17, %r45;
	sub.f32 	%f18, %f17, %f14;
	mul.f32 	%f19, %f18, %f18;
	fma.rn.f32 	%f20, %f16, %f16, %f19;
	sqrt.rn.f32 	%f21, %f20;
	mul.f32 	%f22, %f21, 0f3CD94079;
	ld.global.f32 	%f23, [screenDistance];
	div.rn.f32 	%f3, %f22, %f23;
	abs.f32 	%f4, %f3;
	setp.leu.f32	%p18, %f4, 0f3F800000;
	mov.f32 	%f57, %f4;
	@%p18 bra 	BB4_13;

	rcp.rn.f32 	%f57, %f4;

BB4_13:
	mul.rn.f32 	%f24, %f57, %f57;
	mov.f32 	%f25, 0fC0B59883;
	mov.f32 	%f26, 0fBF52C7EA;
	fma.rn.f32 	%f27, %f24, %f26, %f25;
	mov.f32 	%f28, 0fC0D21907;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mul.f32 	%f30, %f24, %f29;
	mul.f32 	%f31, %f57, %f30;
	add.f32 	%f32, %f24, 0f41355DC0;
	mov.f32 	%f33, 0f41E6BD60;
	fma.rn.f32 	%f34, %f32, %f24, %f33;
	mov.f32 	%f35, 0f419D92C8;
	fma.rn.f32 	%f36, %f34, %f24, %f35;
	rcp.rn.f32 	%f37, %f36;
	fma.rn.f32 	%f38, %f31, %f37, %f57;
	mov.f32 	%f39, 0f3FC90FDB;
	sub.f32 	%f40, %f39, %f38;
	setp.gt.f32	%p19, %f4, 0f3F800000;
	selp.f32	%f41, %f40, %f38, %p19;
	mov.b32 	 %r81, %f41;
	mov.b32 	 %r82, %f3;
	and.b32  	%r83, %r82, -2147483648;
	or.b32  	%r84, %r81, %r83;
	mov.b32 	 %f42, %r84;
	setp.gtu.f32	%p20, %f4, 0f7F800000;
	selp.f32	%f43, %f41, %f42, %p20;
	mul.f32 	%f44, %f43, 0f43340000;
	div.rn.f32 	%f7, %f44, 0f40490FDB;
	setp.ge.f32	%p21, %f7, 0f00000000;
	@%p21 bra 	BB4_15;

	mov.u64 	%rd15, $str5;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r85, 207;
	mov.u64 	%rd19, 0;
	mov.u64 	%rd20, 2;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r85;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd20;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB4_15:
	fma.rn.f32 	%f45, %f7, 0fBC964FDA, 0f3F8CEADD;
	setp.gtu.f32	%p22, %f7, 0f40B00000;
	selp.f32	%f46, %f45, 0f3F800000, %p22;
	cvt.rn.f32.u32	%f47, %r145;
	mul.f32 	%f48, %f47, %f46;
	cvt.rzi.u32.f32	%r145, %f48;
	setp.gtu.f32	%p23, %f7, 0f42700000;
	@%p23 bra 	BB4_17;

	mov.u32 	%r86, 1;
	max.u32 	%r145, %r86, %r145;

BB4_17:
	setp.eq.f32	%p24, %f56, 0f00000000;
	setp.eq.s16	%p25, %rs5, 0;
	or.pred  	%p26, %p25, %p24;
	setp.eq.s32	%p27, %r145, 0;
	and.pred  	%p28, %p26, %p27;
	selp.b32	%r13, 1, %r145, %p28;
	cvt.rn.f64.u32	%fd75, %r38;
	sub.f64 	%fd76, %fd47, %fd45;
	div.rn.f64 	%fd13, %fd76, %fd75;
	cvt.rn.f64.u32	%fd77, %r39;
	sub.f64 	%fd78, %fd48, %fd46;
	div.rn.f64 	%fd14, %fd78, %fd77;
	setp.lt.u32	%p29, %r13, 257;
	@%p29 bra 	BB4_19;

	mov.u64 	%rd21, $str8;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r87, 96;
	mov.u64 	%rd25, 0;
	mov.u64 	%rd26, 2;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r87;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 13

BB4_19:
	setp.eq.s32	%p30, %r13, 0;
	mov.u32 	%r156, 0;
	mov.u32 	%r155, %r156;
	@%p30 bra 	BB4_43;

	cvt.rn.f64.u32	%fd15, %r4;
	cvt.rn.f64.u32	%fd16, %r5;
	ld.const.f64 	%fd17, [coefficients+8];
	ld.const.f64 	%fd18, [coefficients];
	ld.const.f64 	%fd19, [coefficients+16];
	add.f64 	%fd20, %fd19, %fd19;
	ld.const.f64 	%fd21, [coefficients+24];
	mul.f64 	%fd22, %fd21, 0d4008000000000000;
	ld.const.f64 	%fd23, [roots];
	ld.const.f64 	%fd24, [roots+8];
	ld.const.f64 	%fd25, [roots+16];
	ld.const.f64 	%fd26, [roots+24];
	ld.const.f64 	%fd27, [roots+32];
	mov.u32 	%r91, 0;
	ld.const.f64 	%fd28, [roots+40];
	mov.u32 	%r146, %r91;
	mov.u32 	%r156, %r91;
	mov.u32 	%r155, %r13;

BB4_21:
	ld.param.f64 	%fd161, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd160, [fractalRenderAdvancedDouble_param_3];
	cvt.rn.f64.u32	%fd79, %r155;
	cvt.rn.f64.u32	%fd80, %r146;
	div.rn.f64 	%fd81, %fd80, %fd79;
	add.f64 	%fd82, %fd15, %fd81;
	add.f64 	%fd83, %fd16, %fd81;
	neg.f64 	%fd84, %fd83;
	fma.rn.f64 	%fd165, %fd13, %fd82, %fd160;
	fma.rn.f64 	%fd164, %fd14, %fd84, %fd161;
	setp.eq.s32	%p31, %r40, 0;
	mov.u32 	%r149, %r91;
	mov.u32 	%r150, %r91;
	@%p31 bra 	BB4_29;

BB4_22:
	mul.f64 	%fd85, %fd164, %fd164;
	mul.f64 	%fd86, %fd165, %fd165;
	sub.f64 	%fd87, %fd86, %fd85;
	mul.f64 	%fd88, %fd165, %fd164;
	fma.rn.f64 	%fd89, %fd165, %fd164, %fd88;
	mul.f64 	%fd90, %fd165, %fd87;
	mul.f64 	%fd91, %fd164, %fd89;
	sub.f64 	%fd92, %fd90, %fd91;
	mul.f64 	%fd93, %fd165, %fd89;
	fma.rn.f64 	%fd94, %fd164, %fd87, %fd93;
	fma.rn.f64 	%fd95, %fd165, %fd17, %fd18;
	mul.f64 	%fd96, %fd89, %fd19;
	fma.rn.f64 	%fd97, %fd87, %fd19, %fd95;
	fma.rn.f64 	%fd98, %fd164, %fd17, %fd96;
	fma.rn.f64 	%fd99, %fd92, %fd21, %fd97;
	fma.rn.f64 	%fd100, %fd94, %fd21, %fd98;
	fma.rn.f64 	%fd101, %fd165, %fd20, %fd17;
	mul.f64 	%fd102, %fd89, %fd22;
	fma.rn.f64 	%fd103, %fd87, %fd22, %fd101;
	fma.rn.f64 	%fd104, %fd164, %fd20, %fd102;
	abs.f64 	%fd105, %fd103;
	abs.f64 	%fd106, %fd104;
	add.f64 	%fd107, %fd105, %fd106;
	rcp.rn.f64 	%fd108, %fd107;
	mul.f64 	%fd109, %fd99, %fd108;
	mul.f64 	%fd110, %fd100, %fd108;
	mul.f64 	%fd111, %fd103, %fd108;
	mul.f64 	%fd112, %fd104, %fd108;
	mul.f64 	%fd113, %fd112, %fd112;
	fma.rn.f64 	%fd114, %fd111, %fd111, %fd113;
	rcp.rn.f64 	%fd115, %fd114;
	mul.f64 	%fd116, %fd110, %fd112;
	fma.rn.f64 	%fd117, %fd109, %fd111, %fd116;
	mul.f64 	%fd118, %fd115, %fd117;
	mul.f64 	%fd119, %fd110, %fd111;
	mul.f64 	%fd120, %fd109, %fd112;
	sub.f64 	%fd121, %fd119, %fd120;
	mul.f64 	%fd122, %fd115, %fd121;
	sub.f64 	%fd165, %fd165, %fd118;
	sub.f64 	%fd164, %fd164, %fd122;
	sub.f64 	%fd123, %fd165, %fd23;
	abs.f64 	%fd124, %fd123;
	setp.geu.f64	%p32, %fd124, 0d3F1A36E2EB1C432D;
	@%p32 bra 	BB4_24;

	add.s32 	%r150, %r149, 1;
	sub.f64 	%fd125, %fd164, %fd24;
	abs.f64 	%fd126, %fd125;
	setp.lt.f64	%p33, %fd126, 0d3F1A36E2EB1C432D;
	@%p33 bra 	BB4_29;

BB4_24:
	sub.f64 	%fd127, %fd165, %fd25;
	abs.f64 	%fd128, %fd127;
	setp.geu.f64	%p34, %fd128, 0d3F1A36E2EB1C432D;
	@%p34 bra 	BB4_26;

	add.s32 	%r150, %r149, 1;
	sub.f64 	%fd129, %fd164, %fd26;
	abs.f64 	%fd130, %fd129;
	setp.lt.f64	%p35, %fd130, 0d3F1A36E2EB1C432D;
	@%p35 bra 	BB4_29;

BB4_26:
	sub.f64 	%fd131, %fd165, %fd27;
	abs.f64 	%fd132, %fd131;
	add.s32 	%r149, %r149, 1;
	setp.lt.f64	%p36, %fd132, 0d3F1A36E2EB1C432D;
	@%p36 bra 	BB4_28;
	bra.uni 	BB4_27;

BB4_28:
	setp.lt.u32	%p38, %r149, %r40;
	sub.f64 	%fd133, %fd164, %fd28;
	abs.f64 	%fd134, %fd133;
	setp.geu.f64	%p39, %fd134, 0d3F1A36E2EB1C432D;
	and.pred  	%p40, %p39, %p38;
	mov.u32 	%r150, %r149;
	@%p40 bra 	BB4_22;
	bra.uni 	BB4_29;

BB4_27:
	setp.lt.u32	%p37, %r149, %r40;
	mov.u32 	%r150, %r149;
	@%p37 bra 	BB4_22;

BB4_29:
	add.s32 	%r156, %r150, %r156;
	setp.gt.u32	%p41, %r146, 9;
	@%p41 bra 	BB4_31;

	add.u64 	%rd27, %SP, 0;
	cvta.to.local.u64 	%rd28, %rd27;
	mul.wide.u32 	%rd29, %r146, 4;
	add.s64 	%rd30, %rd28, %rd29;
	st.local.u32 	[%rd30], %r150;

BB4_31:
	and.b32  	%r94, %r42, 1;
	setp.eq.b32	%p42, %r94, 1;
	and.b32  	%r95, %r146, -9;
	setp.eq.s32	%p43, %r95, 2;
	and.pred  	%p44, %p43, %p42;
	add.s32 	%r21, %r146, 1;
	@!%p44 bra 	BB4_42;
	bra.uni 	BB4_32;

BB4_32:
	div.u32 	%r96, %r156, %r21;
	cvt.rn.f64.u32	%fd35, %r96;
	setp.eq.s32	%p45, %r146, 0;
	mov.f64 	%fd170, 0d0000000000000000;
	@%p45 bra 	BB4_41;

	and.b32  	%r22, %r146, 3;
	setp.eq.s32	%p46, %r22, 0;
	mov.f64 	%fd170, 0d0000000000000000;
	mov.u32 	%r154, 0;
	@%p46 bra 	BB4_39;

	setp.eq.s32	%p47, %r22, 1;
	mov.f64 	%fd167, 0d0000000000000000;
	mov.u32 	%r152, 0;
	@%p47 bra 	BB4_38;

	setp.eq.s32	%p48, %r22, 2;
	mov.f64 	%fd166, 0d0000000000000000;
	mov.u32 	%r151, 0;
	@%p48 bra 	BB4_37;

	add.u64 	%rd31, %SP, 0;
	cvta.to.local.u64 	%rd32, %rd31;
	ld.local.u32 	%r101, [%rd32];
	cvt.rn.f64.u32	%fd139, %r101;
	sub.f64 	%fd140, %fd139, %fd35;
	fma.rn.f64 	%fd166, %fd140, %fd140, 0d0000000000000000;
	mov.u32 	%r151, 1;

BB4_37:
	add.u64 	%rd33, %SP, 0;
	cvta.to.local.u64 	%rd34, %rd33;
	mul.wide.u32 	%rd35, %r151, 4;
	add.s64 	%rd36, %rd34, %rd35;
	ld.local.u32 	%r102, [%rd36];
	cvt.rn.f64.u32	%fd141, %r102;
	sub.f64 	%fd142, %fd141, %fd35;
	fma.rn.f64 	%fd167, %fd142, %fd142, %fd166;
	add.s32 	%r152, %r151, 1;

BB4_38:
	add.u64 	%rd37, %SP, 0;
	cvta.to.local.u64 	%rd38, %rd37;
	mul.wide.u32 	%rd39, %r152, 4;
	add.s64 	%rd40, %rd38, %rd39;
	ld.local.u32 	%r103, [%rd40];
	cvt.rn.f64.u32	%fd143, %r103;
	sub.f64 	%fd144, %fd143, %fd35;
	fma.rn.f64 	%fd170, %fd144, %fd144, %fd167;
	add.s32 	%r154, %r152, 1;

BB4_39:
	add.u64 	%rd41, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd41;
	setp.lt.u32	%p49, %r146, 4;
	@%p49 bra 	BB4_41;

BB4_40:
	mul.wide.u32 	%rd42, %r154, 4;
	add.s64 	%rd43, %rd1, %rd42;
	ld.local.u32 	%r104, [%rd43];
	cvt.rn.f64.u32	%fd145, %r104;
	sub.f64 	%fd146, %fd145, %fd35;
	fma.rn.f64 	%fd147, %fd146, %fd146, %fd170;
	add.s32 	%r105, %r154, 1;
	mul.wide.u32 	%rd44, %r105, 4;
	add.s64 	%rd45, %rd1, %rd44;
	ld.local.u32 	%r106, [%rd45];
	cvt.rn.f64.u32	%fd148, %r106;
	sub.f64 	%fd149, %fd148, %fd35;
	fma.rn.f64 	%fd150, %fd149, %fd149, %fd147;
	add.s32 	%r107, %r154, 2;
	mul.wide.u32 	%rd46, %r107, 4;
	add.s64 	%rd47, %rd1, %rd46;
	ld.local.u32 	%r108, [%rd47];
	cvt.rn.f64.u32	%fd151, %r108;
	sub.f64 	%fd152, %fd151, %fd35;
	fma.rn.f64 	%fd153, %fd152, %fd152, %fd150;
	add.s32 	%r109, %r154, 3;
	mul.wide.u32 	%rd48, %r109, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.u32 	%r110, [%rd49];
	cvt.rn.f64.u32	%fd154, %r110;
	sub.f64 	%fd155, %fd154, %fd35;
	fma.rn.f64 	%fd170, %fd155, %fd155, %fd153;
	add.s32 	%r154, %r154, 4;
	setp.lt.u32	%p50, %r154, %r146;
	@%p50 bra 	BB4_40;

BB4_41:
	add.s32 	%r112, %r146, -1;
	cvt.rn.f64.u32	%fd156, %r112;
	div.rn.f64 	%fd157, %fd170, %fd156;
	div.rn.f64 	%fd158, %fd157, %fd35;
	setp.eq.s32	%p51, %r146, 2;
	selp.f64	%fd159, 0d3F847AE140000000, 0d3FB99999A0000000, %p51;
	// inline asm
	activemask.b32 %r111;
	// inline asm
	setp.le.f64	%p52, %fd158, %fd159;
	vote.sync.all.pred 	%p53, %p52, %r111;
	selp.b32	%r155, %r21, %r155, %p53;

BB4_42:
	setp.lt.u32	%p54, %r21, %r155;
	mov.u32 	%r146, %r21;
	@%p54 bra 	BB4_21;

BB4_43:
	div.u32 	%r158, %r156, %r155;
	setp.ne.s16	%p55, %rs5, 0;
	setp.ne.s32	%p56, %r155, 0;
	or.pred  	%p57, %p56, %p55;
	@%p57 bra 	BB4_45;

	mov.u64 	%rd50, $str6;
	cvta.global.u64 	%rd51, %rd50;
	mov.u64 	%rd52, $str1;
	cvta.global.u64 	%rd53, %rd52;
	mov.u32 	%r114, 263;
	mov.u64 	%rd54, 0;
	mov.u64 	%rd55, 2;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd51;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd53;
	.param .b32 param2;
	st.param.b32	[param2+0], %r114;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd54;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd55;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14

BB4_45:
	setp.eq.s16	%p62, %rs5, 0;
	@%p62 bra 	BB4_49;

	setp.eq.s32	%p59, %r155, 0;
	@%p59 bra 	BB4_47;

	and.b32  	%r115, %r42, 16;
	setp.eq.s32	%p60, %r115, 0;
	mul.f32 	%f49, %f56, 0f3F19999A;
	selp.f32	%f50, %f56, %f49, %p60;
	cvt.rn.f32.u32	%f51, %r155;
	add.f32 	%f56, %f50, %f51;
	cvt.rn.f32.u32	%f52, %r144;
	mul.lo.s32 	%r116, %r158, %r155;
	cvt.rn.f32.u32	%f53, %r116;
	fma.rn.f32 	%f54, %f52, %f50, %f53;
	div.rn.f32 	%f55, %f54, %f56;
	cvt.rzi.u32.f32	%r158, %f55;
	bra.uni 	BB4_50;

BB4_49:
	cvt.rn.f32.u32	%f56, %r155;
	bra.uni 	BB4_50;

BB4_47:
	mov.u32 	%r158, %r144;

BB4_50:
	mov.u32 	%r139, %ntid.x;
	mov.u32 	%r138, %tid.x;
	mov.u32 	%r137, %tid.y;
	mad.lo.s32 	%r136, %r139, %r137, %r138;
	shl.b32 	%r135, %r139, 2;
	ld.param.u64 	%rd67, [fractalRenderAdvancedDouble_param_0];
	ld.param.u32 	%r134, [fractalRenderAdvancedDouble_param_1];
	div.u32 	%r133, %r136, %r135;
	bfe.u32 	%r132, %r136, 2, 2;
	shl.b32 	%r131, %r133, 2;
	add.s32 	%r130, %r131, %r132;
	mov.u32 	%r129, %ntid.y;
	mov.u32 	%r128, %ctaid.y;
	mad.lo.s32 	%r127, %r128, %r129, %r130;
	and.b32  	%r126, %r136, 15;
	rem.u32 	%r125, %r136, %r135;
	sub.s32 	%r124, %r125, %r126;
	and.b32  	%r123, %r136, 3;
	shr.u32 	%r122, %r124, 2;
	add.s32 	%r121, %r122, %r123;
	mov.u32 	%r120, %ctaid.x;
	mad.lo.s32 	%r119, %r120, %r139, %r121;
	mul.lo.s32 	%r117, %r127, %r134;
	cvt.u64.u32	%rd56, %r117;
	cvta.to.global.u64 	%rd57, %rd67;
	add.s64 	%rd58, %rd57, %rd56;
	mul.wide.u32 	%rd59, %r119, 8;
	add.s64 	%rd60, %rd58, %rd59;
	st.global.u32 	[%rd60], %r158;
	st.global.f32 	[%rd60+4], %f56;
	setp.gt.f32	%p61, %f56, 0f00000000;
	@%p61 bra 	BB4_52;

	mov.u64 	%rd61, $str7;
	cvta.global.u64 	%rd62, %rd61;
	mov.u64 	%rd63, $str1;
	cvta.global.u64 	%rd64, %rd63;
	mov.u32 	%r118, 292;
	mov.u64 	%rd65, 0;
	mov.u64 	%rd66, 2;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd62;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd64;
	.param .b32 param2;
	st.param.b32	[param2+0], %r118;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd65;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd66;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 15

BB4_52:
	ret;
}

	// .globl	compose
.visible .entry compose(
	.param .u64 compose_param_0,
	.param .u32 compose_param_1,
	.param .u64 compose_param_2,
	.param .u32 compose_param_3,
	.param .u64 compose_param_4,
	.param .u32 compose_param_5,
	.param .u32 compose_param_6,
	.param .u64 compose_param_7,
	.param .u32 compose_param_8
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd1, [compose_param_0];
	ld.param.u32 	%r4, [compose_param_1];
	ld.param.u64 	%rd2, [compose_param_4];
	ld.param.u32 	%r6, [compose_param_5];
	ld.param.u32 	%r7, [compose_param_6];
	ld.param.u64 	%rd3, [compose_param_7];
	ld.param.u32 	%r5, [compose_param_8];
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r9, %r8, %r10;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r2, %r11, %r12, %r13;
	setp.ge.u32	%p1, %r2, %r7;
	setp.ge.u32	%p2, %r1, %r6;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_4;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.lo.s32 	%r14, %r2, %r4;
	cvt.u64.u32	%rd5, %r14;
	add.s64 	%rd6, %rd4, %rd5;
	mul.wide.u32 	%rd7, %r1, 8;
	add.s64 	%rd8, %rd6, %rd7;
	ld.const.u32 	%r15, [colorMagnifier];
	ld.global.u32 	%r16, [%rd8];
	mul.lo.s32 	%r17, %r15, %r16;
	rem.u32 	%r18, %r17, %r5;
	sub.s32 	%r19, %r5, %r18;
	add.s32 	%r3, %r19, -1;
	setp.lt.u32	%p4, %r3, %r5;
	@%p4 bra 	BB5_3;

	mov.u64 	%rd9, $str9;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str10;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r20, 73;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r20;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 16

BB5_3:
	shl.b32 	%r21, %r3, 2;
	mov.u32 	%r22, 0;
	suld.b.2d.b32.trap {%r23}, [%rd3, {%r21, %r22}];
	shl.b32 	%r24, %r1, 2;
	sust.b.2d.b32.trap 	[%rd2, {%r24, %r2}], {%r23};

BB5_4:
	ret;
}

	// .globl	fractalRenderUnderSampled
.visible .entry fractalRenderUnderSampled(
	.param .u64 fractalRenderUnderSampled_param_0,
	.param .u32 fractalRenderUnderSampled_param_1,
	.param .u32 fractalRenderUnderSampled_param_2,
	.param .u32 fractalRenderUnderSampled_param_3,
	.param .f32 fractalRenderUnderSampled_param_4,
	.param .f32 fractalRenderUnderSampled_param_5,
	.param .f32 fractalRenderUnderSampled_param_6,
	.param .f32 fractalRenderUnderSampled_param_7,
	.param .u32 fractalRenderUnderSampled_param_8,
	.param .u32 fractalRenderUnderSampled_param_9
)
{
	.reg .pred 	%p<21>;
	.reg .f32 	%f<74>;
	.reg .b32 	%r<93>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<29>;


	ld.param.u64 	%rd4, [fractalRenderUnderSampled_param_0];
	ld.param.u32 	%r34, [fractalRenderUnderSampled_param_1];
	ld.param.u32 	%r35, [fractalRenderUnderSampled_param_2];
	ld.param.u32 	%r36, [fractalRenderUnderSampled_param_3];
	ld.param.f32 	%f14, [fractalRenderUnderSampled_param_4];
	ld.param.f32 	%f15, [fractalRenderUnderSampled_param_5];
	ld.param.f32 	%f16, [fractalRenderUnderSampled_param_6];
	ld.param.f32 	%f17, [fractalRenderUnderSampled_param_7];
	ld.param.u32 	%r37, [fractalRenderUnderSampled_param_8];
	ld.param.u32 	%r38, [fractalRenderUnderSampled_param_9];
	mov.u32 	%r39, %ntid.x;
	mov.u32 	%r40, %ctaid.x;
	mov.u32 	%r41, %tid.x;
	mad.lo.s32 	%r42, %r40, %r39, %r41;
	mul.lo.s32 	%r1, %r42, %r38;
	mov.u32 	%r43, %ctaid.y;
	mov.u32 	%r44, %ntid.y;
	mov.u32 	%r45, %tid.y;
	mad.lo.s32 	%r46, %r43, %r44, %r45;
	mul.lo.s32 	%r2, %r46, %r38;
	sub.s32 	%r47, %r36, %r38;
	setp.ge.u32	%p1, %r2, %r47;
	sub.s32 	%r48, %r35, %r38;
	setp.ge.u32	%p2, %r1, %r48;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB6_22;

	sub.f32 	%f18, %f16, %f14;
	cvt.rn.f32.u32	%f19, %r35;
	div.rn.f32 	%f20, %f18, %f19;
	cvt.rn.f32.u32	%f21, %r1;
	fma.rn.f32 	%f73, %f21, %f20, %f14;
	setp.eq.s32	%p4, %r37, 0;
	mov.u32 	%r83, 0;
	@%p4 bra 	BB6_10;

	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f2, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f3, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f4, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f5, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f6, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f7, %fd12;
	cvt.rn.f32.u32	%f22, %r2;
	sub.f32 	%f23, %f17, %f15;
	cvt.rn.f32.u32	%f24, %r36;
	div.rn.f32 	%f25, %f23, %f24;
	mul.f32 	%f26, %f22, %f25;
	sub.f32 	%f72, %f17, %f26;
	mov.u32 	%r83, 0;

BB6_3:
	mul.f32 	%f27, %f72, %f72;
	mul.f32 	%f28, %f73, %f73;
	sub.f32 	%f29, %f28, %f27;
	mul.f32 	%f30, %f73, %f72;
	fma.rn.f32 	%f31, %f73, %f72, %f30;
	mul.f32 	%f32, %f73, %f29;
	mul.f32 	%f33, %f72, %f31;
	sub.f32 	%f34, %f32, %f33;
	mul.f32 	%f35, %f73, %f31;
	fma.rn.f32 	%f36, %f72, %f29, %f35;
	cvt.f64.f32	%fd13, %f73;
	cvt.f64.f32	%fd14, %f72;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f29;
	cvt.f64.f32	%fd17, %f31;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f34;
	cvt.f64.f32	%fd22, %f36;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f37, %fd23;
	cvt.rn.f32.f64	%f38, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f39, %fd27;
	cvt.rn.f32.f64	%f40, %fd28;
	abs.f32 	%f41, %f39;
	abs.f32 	%f42, %f40;
	add.f32 	%f43, %f41, %f42;
	rcp.rn.f32 	%f44, %f43;
	mul.f32 	%f45, %f37, %f44;
	mul.f32 	%f46, %f38, %f44;
	mul.f32 	%f47, %f44, %f39;
	mul.f32 	%f48, %f44, %f40;
	mul.f32 	%f49, %f48, %f48;
	fma.rn.f32 	%f50, %f47, %f47, %f49;
	rcp.rn.f32 	%f51, %f50;
	mul.f32 	%f52, %f46, %f48;
	fma.rn.f32 	%f53, %f45, %f47, %f52;
	mul.f32 	%f54, %f51, %f53;
	mul.f32 	%f55, %f46, %f47;
	mul.f32 	%f56, %f45, %f48;
	sub.f32 	%f57, %f55, %f56;
	mul.f32 	%f58, %f51, %f57;
	sub.f32 	%f73, %f73, %f54;
	sub.f32 	%f72, %f72, %f58;
	add.s32 	%r83, %r83, 1;
	sub.f32 	%f59, %f73, %f2;
	abs.f32 	%f60, %f59;
	setp.geu.f32	%p5, %f60, 0f38D1B717;
	@%p5 bra 	BB6_5;

	sub.f32 	%f61, %f72, %f3;
	abs.f32 	%f62, %f61;
	setp.lt.f32	%p6, %f62, 0f38D1B717;
	@%p6 bra 	BB6_10;

BB6_5:
	sub.f32 	%f63, %f73, %f4;
	abs.f32 	%f64, %f63;
	setp.geu.f32	%p7, %f64, 0f38D1B717;
	@%p7 bra 	BB6_7;

	sub.f32 	%f65, %f72, %f5;
	abs.f32 	%f66, %f65;
	setp.lt.f32	%p8, %f66, 0f38D1B717;
	@%p8 bra 	BB6_10;

BB6_7:
	sub.f32 	%f67, %f73, %f6;
	abs.f32 	%f68, %f67;
	setp.lt.f32	%p9, %f68, 0f38D1B717;
	@%p9 bra 	BB6_9;
	bra.uni 	BB6_8;

BB6_9:
	setp.lt.u32	%p11, %r83, %r37;
	sub.f32 	%f69, %f72, %f7;
	abs.f32 	%f70, %f69;
	setp.geu.f32	%p12, %f70, 0f38D1B717;
	and.pred  	%p13, %p12, %p11;
	@%p13 bra 	BB6_3;
	bra.uni 	BB6_10;

BB6_8:
	setp.lt.u32	%p10, %r83, %r37;
	@%p10 bra 	BB6_3;

BB6_10:
	setp.eq.s32	%p14, %r38, 0;
	@%p14 bra 	BB6_22;

	cvta.to.global.u64 	%rd1, %rd4;
	cvt.rn.f32.u32	%f71, %r38;
	rcp.rn.f32 	%f13, %f71;
	and.b32  	%r6, %r38, 3;
	mul.lo.s32 	%r56, %r2, %r34;
	cvt.u64.u32	%rd5, %r56;
	add.s64 	%rd2, %rd1, %rd5;
	add.s32 	%r8, %r2, 3;
	shl.b32 	%r9, %r34, 2;
	add.s32 	%r10, %r2, 2;
	add.s32 	%r11, %r2, 1;
	mov.u32 	%r51, 0;
	mov.u32 	%r84, %r51;

BB6_12:
	add.s32 	%r64, %r84, %r1;
	cvt.u64.u32	%rd3, %r64;
	setp.eq.s32	%p15, %r6, 0;
	mov.u32 	%r92, %r51;
	@%p15 bra 	BB6_18;

	setp.eq.s32	%p16, %r6, 1;
	mov.u32 	%r86, %r51;
	@%p16 bra 	BB6_17;

	setp.eq.s32	%p17, %r6, 2;
	mov.u32 	%r85, %r51;
	@%p17 bra 	BB6_16;

	shl.b64 	%rd6, %rd3, 3;
	add.s64 	%rd7, %rd2, %rd6;
	st.global.u32 	[%rd7], %r83;
	st.global.f32 	[%rd7+4], %f13;
	mov.u32 	%r85, 1;

BB6_16:
	mad.lo.s32 	%r70, %r46, %r38, %r85;
	mul.lo.s32 	%r71, %r70, %r34;
	cvt.u64.u32	%rd8, %r71;
	add.s64 	%rd9, %rd1, %rd8;
	shl.b64 	%rd10, %rd3, 3;
	add.s64 	%rd11, %rd9, %rd10;
	st.global.u32 	[%rd11], %r83;
	st.global.f32 	[%rd11+4], %f13;
	add.s32 	%r86, %r85, 1;

BB6_17:
	mad.lo.s32 	%r76, %r46, %r38, %r86;
	mul.lo.s32 	%r77, %r76, %r34;
	cvt.u64.u32	%rd12, %r77;
	add.s64 	%rd13, %rd1, %rd12;
	shl.b64 	%rd14, %rd3, 3;
	add.s64 	%rd15, %rd13, %rd14;
	st.global.u32 	[%rd15], %r83;
	st.global.f32 	[%rd15+4], %f13;
	add.s32 	%r92, %r86, 1;

BB6_18:
	setp.lt.u32	%p18, %r38, 4;
	@%p18 bra 	BB6_21;

	add.s32 	%r78, %r8, %r92;
	mul.lo.s32 	%r91, %r34, %r78;
	add.s32 	%r79, %r10, %r92;
	mul.lo.s32 	%r90, %r34, %r79;
	add.s32 	%r80, %r11, %r92;
	mul.lo.s32 	%r89, %r34, %r80;
	add.s32 	%r81, %r2, %r92;
	mul.lo.s32 	%r88, %r34, %r81;

BB6_20:
	cvt.u64.u32	%rd16, %r88;
	add.s64 	%rd17, %rd1, %rd16;
	shl.b64 	%rd18, %rd3, 3;
	add.s64 	%rd19, %rd17, %rd18;
	st.global.u32 	[%rd19], %r83;
	st.global.f32 	[%rd19+4], %f13;
	cvt.u64.u32	%rd20, %r89;
	add.s64 	%rd21, %rd1, %rd20;
	add.s64 	%rd22, %rd21, %rd18;
	st.global.u32 	[%rd22], %r83;
	st.global.f32 	[%rd22+4], %f13;
	cvt.u64.u32	%rd23, %r90;
	add.s64 	%rd24, %rd1, %rd23;
	add.s64 	%rd25, %rd24, %rd18;
	st.global.u32 	[%rd25], %r83;
	st.global.f32 	[%rd25+4], %f13;
	cvt.u64.u32	%rd26, %r91;
	add.s64 	%rd27, %rd1, %rd26;
	add.s64 	%rd28, %rd27, %rd18;
	st.global.u32 	[%rd28], %r83;
	st.global.f32 	[%rd28+4], %f13;
	add.s32 	%r91, %r91, %r9;
	add.s32 	%r90, %r90, %r9;
	add.s32 	%r89, %r89, %r9;
	add.s32 	%r88, %r88, %r9;
	add.s32 	%r92, %r92, 4;
	setp.lt.u32	%p19, %r92, %r38;
	@%p19 bra 	BB6_20;

BB6_21:
	add.s32 	%r84, %r84, 1;
	setp.lt.u32	%p20, %r84, %r38;
	@%p20 bra 	BB6_12;

BB6_22:
	ret;
}

	// .globl	debug
.visible .entry debug(

)
{



	ret;
}


