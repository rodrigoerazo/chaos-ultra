//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24330188
// Cuda compilation tools, release 9.2, V9.2.148
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	init
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 8 .b8 roots[48];
.const .align 8 .b8 coefficients[32];
.const .align 4 .u32 colorMagnifier;
.const .align 1 .u8 VISUALIZE_SAMPLE_COUNT;
.global .align 4 .u32 seed;
.global .align 4 .u32 WARP_SIZE_X = 8;
.global .align 4 .u32 WARP_SIZE_Y = 4;
.global .align 4 .u32 USE_ADAPTIVE_SS_FLAG_MASK = 1;
.global .align 4 .u32 USE_FOVEATION_FLAG_MASK = 4;
.global .align 4 .u32 USE_SAMPLE_REUSE_FLAG_MASK = 8;
.global .align 4 .u32 IS_ZOOMING_FLAG_MASK = 16;
.global .align 4 .u32 visualityAmplifyCoeff = 10;
.global .align 4 .f32 screenDistance = 0f42700000;
.global .align 16 .b8 $str[34] = {98, 0, 108, 0, 111, 0, 99, 0, 107, 0, 68, 0, 105, 0, 109, 0, 46, 0, 120, 0, 32, 0, 61, 0, 61, 0, 32, 0, 51, 0, 50, 0, 0, 0};
.global .align 16 .b8 $str1[138] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 82, 0, 101, 0, 110, 0, 100, 0, 101, 0, 114, 0, 101, 0, 114, 0, 71, 0, 101, 0, 110, 0, 101, 0, 114, 0, 105, 0, 99, 0, 46, 0, 99, 0, 117, 0, 0, 0};
.global .align 16 .b8 $str2[40] = {112, 0, 79, 0, 117, 0, 116, 0, 112, 0, 117, 0, 116, 0, 45, 0, 62, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str5[34] = {118, 0, 105, 0, 115, 0, 117, 0, 97, 0, 108, 0, 65, 0, 110, 0, 103, 0, 108, 0, 101, 0, 32, 0, 62, 0, 61, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str6[66] = {114, 0, 101, 0, 117, 0, 115, 0, 105, 0, 110, 0, 103, 0, 83, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 32, 0, 124, 0, 124, 0, 32, 0, 115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str7[36] = {114, 0, 101, 0, 115, 0, 117, 0, 108, 0, 116, 0, 46, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str8[56] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 60, 0, 61, 0, 32, 0, 77, 0, 65, 0, 88, 0, 95, 0, 83, 0, 83, 0, 95, 0, 76, 0, 69, 0, 86, 0, 69, 0, 76, 0, 0, 0};
.global .align 16 .b8 $str9[54] = {112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 73, 0, 100, 0, 120, 0, 32, 0, 60, 0, 32, 0, 112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 76, 0, 101, 0, 110, 0, 103, 0, 116, 0, 104, 0, 0, 0};
.global .align 16 .b8 $str10[146] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 115, 0, 47, 0, 110, 0, 101, 0, 119, 0, 116, 0, 111, 0, 110, 0, 95, 0, 105, 0, 116, 0, 101, 0, 114, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 115, 0, 46, 0, 99, 0, 117, 0, 0, 0};

.visible .entry init(

)
{



	ret;
}

	// .globl	fractalRenderMainFloat
.visible .entry fractalRenderMainFloat(
	.param .u64 fractalRenderMainFloat_param_0,
	.param .u32 fractalRenderMainFloat_param_1,
	.param .align 4 .b8 fractalRenderMainFloat_param_2[8],
	.param .align 4 .b8 fractalRenderMainFloat_param_3[16],
	.param .u32 fractalRenderMainFloat_param_4,
	.param .u32 fractalRenderMainFloat_param_5,
	.param .u32 fractalRenderMainFloat_param_6
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<42>;
	.reg .f32 	%f<123>;
	.reg .b32 	%r<104>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<51>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainFloat_param_0];
	ld.param.u32 	%r25, [fractalRenderMainFloat_param_1];
	ld.param.u32 	%r27, [fractalRenderMainFloat_param_2+4];
	ld.param.u32 	%r26, [fractalRenderMainFloat_param_2];
	ld.param.f32 	%f37, [fractalRenderMainFloat_param_3+12];
	ld.param.f32 	%f36, [fractalRenderMainFloat_param_3+8];
	ld.param.f32 	%f35, [fractalRenderMainFloat_param_3+4];
	ld.param.f32 	%f34, [fractalRenderMainFloat_param_3];
	ld.param.u32 	%r28, [fractalRenderMainFloat_param_4];
	ld.param.u32 	%r101, [fractalRenderMainFloat_param_5];
	ld.param.u32 	%r30, [fractalRenderMainFloat_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r31, 65;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r31;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB1_2:
	mov.u32 	%r32, %tid.x;
	mov.u32 	%r33, %tid.y;
	mad.lo.s32 	%r34, %r1, %r33, %r32;
	shl.b32 	%r35, %r1, 2;
	and.b32  	%r36, %r34, 15;
	rem.u32 	%r37, %r34, %r35;
	sub.s32 	%r38, %r37, %r36;
	shr.u32 	%r39, %r38, 2;
	and.b32  	%r40, %r34, 3;
	add.s32 	%r41, %r39, %r40;
	div.u32 	%r42, %r34, %r35;
	shl.b32 	%r43, %r42, 2;
	bfe.u32 	%r44, %r34, 2, 2;
	add.s32 	%r45, %r43, %r44;
	mov.u32 	%r46, %ctaid.x;
	mad.lo.s32 	%r4, %r46, %r1, %r41;
	mov.u32 	%r47, %ctaid.y;
	mov.u32 	%r48, %ntid.y;
	mad.lo.s32 	%r5, %r47, %r48, %r45;
	setp.lt.u32	%p2, %r4, %r26;
	setp.lt.u32	%p3, %r5, %r27;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB1_35;
	bra.uni 	BB1_3;

BB1_3:
	setp.lt.u32	%p5, %r101, 257;
	@%p5 bra 	BB1_5;

	mov.u64 	%rd9, $str8;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r49, 110;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r49;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_5:
	setp.eq.s32	%p6, %r101, 0;
	cvt.rn.f32.u32	%f122, %r101;
	mov.u32 	%r102, 0;
	@%p6 bra 	BB1_6;

	cvt.rn.f32.u32	%f4, %r4;
	cvt.rn.f32.u32	%f5, %r5;
	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f6, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f7, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f8, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f9, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f10, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f11, %fd12;
	cvt.rn.f32.u32	%f38, %r26;
	sub.f32 	%f39, %f36, %f34;
	div.rn.f32 	%f12, %f39, %f38;
	cvt.rn.f32.u32	%f40, %r27;
	sub.f32 	%f41, %f37, %f35;
	div.rn.f32 	%f13, %f41, %f40;
	mov.u32 	%r53, 0;
	and.b32  	%r56, %r30, 1;
	mov.u32 	%r92, %r53;
	mov.u32 	%r102, %r53;

BB1_8:
	mov.u32 	%r8, %r101;
	mov.u32 	%r6, %r92;
	cvt.rn.f32.u32	%f42, %r6;
	div.rn.f32 	%f43, %f42, %f122;
	add.f32 	%f44, %f4, %f43;
	add.f32 	%f45, %f5, %f43;
	neg.f32 	%f46, %f45;
	fma.rn.f32 	%f116, %f12, %f44, %f34;
	fma.rn.f32 	%f115, %f13, %f46, %f37;
	setp.eq.s32	%p7, %r28, 0;
	mov.u32 	%r96, %r53;
	@%p7 bra 	BB1_16;

BB1_9:
	mul.f32 	%f47, %f115, %f115;
	mul.f32 	%f48, %f116, %f116;
	sub.f32 	%f49, %f48, %f47;
	mul.f32 	%f50, %f116, %f115;
	fma.rn.f32 	%f51, %f116, %f115, %f50;
	mul.f32 	%f52, %f116, %f49;
	mul.f32 	%f53, %f115, %f51;
	sub.f32 	%f54, %f52, %f53;
	mul.f32 	%f55, %f116, %f51;
	fma.rn.f32 	%f56, %f115, %f49, %f55;
	cvt.f64.f32	%fd13, %f116;
	cvt.f64.f32	%fd14, %f115;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f49;
	cvt.f64.f32	%fd17, %f51;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f54;
	cvt.f64.f32	%fd22, %f56;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f57, %fd23;
	cvt.rn.f32.f64	%f58, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f59, %fd27;
	cvt.rn.f32.f64	%f60, %fd28;
	abs.f32 	%f61, %f59;
	abs.f32 	%f62, %f60;
	add.f32 	%f63, %f61, %f62;
	rcp.rn.f32 	%f64, %f63;
	mul.f32 	%f65, %f57, %f64;
	mul.f32 	%f66, %f58, %f64;
	mul.f32 	%f67, %f64, %f59;
	mul.f32 	%f68, %f64, %f60;
	mul.f32 	%f69, %f68, %f68;
	fma.rn.f32 	%f70, %f67, %f67, %f69;
	rcp.rn.f32 	%f71, %f70;
	mul.f32 	%f72, %f66, %f68;
	fma.rn.f32 	%f73, %f65, %f67, %f72;
	mul.f32 	%f74, %f71, %f73;
	mul.f32 	%f75, %f66, %f67;
	mul.f32 	%f76, %f65, %f68;
	sub.f32 	%f77, %f75, %f76;
	mul.f32 	%f78, %f71, %f77;
	sub.f32 	%f116, %f116, %f74;
	sub.f32 	%f115, %f115, %f78;
	add.s32 	%r96, %r96, 1;
	sub.f32 	%f79, %f116, %f6;
	abs.f32 	%f80, %f79;
	setp.geu.f32	%p8, %f80, 0f38D1B717;
	@%p8 bra 	BB1_11;

	sub.f32 	%f81, %f115, %f7;
	abs.f32 	%f82, %f81;
	setp.lt.f32	%p9, %f82, 0f38D1B717;
	@%p9 bra 	BB1_16;

BB1_11:
	sub.f32 	%f83, %f116, %f8;
	abs.f32 	%f84, %f83;
	setp.geu.f32	%p10, %f84, 0f38D1B717;
	@%p10 bra 	BB1_13;

	sub.f32 	%f85, %f115, %f9;
	abs.f32 	%f86, %f85;
	setp.lt.f32	%p11, %f86, 0f38D1B717;
	@%p11 bra 	BB1_16;

BB1_13:
	sub.f32 	%f87, %f116, %f10;
	abs.f32 	%f88, %f87;
	setp.lt.f32	%p12, %f88, 0f38D1B717;
	@%p12 bra 	BB1_15;
	bra.uni 	BB1_14;

BB1_15:
	setp.lt.u32	%p14, %r96, %r28;
	sub.f32 	%f89, %f115, %f11;
	abs.f32 	%f90, %f89;
	setp.geu.f32	%p15, %f90, 0f38D1B717;
	and.pred  	%p16, %p15, %p14;
	@%p16 bra 	BB1_9;
	bra.uni 	BB1_16;

BB1_14:
	setp.lt.u32	%p13, %r96, %r28;
	@%p13 bra 	BB1_9;

BB1_16:
	add.s32 	%r102, %r96, %r102;
	setp.gt.u32	%p17, %r6, 9;
	@%p17 bra 	BB1_18;

	add.u64 	%rd15, %SP, 0;
	cvta.to.local.u64 	%rd16, %rd15;
	mul.wide.u32 	%rd17, %r6, 4;
	add.s64 	%rd18, %rd16, %rd17;
	st.local.u32 	[%rd18], %r96;

BB1_18:
	setp.lt.u32	%p18, %r6, 10;
	setp.eq.b32	%p19, %r56, 1;
	setp.ne.s32	%p20, %r6, 0;
	and.pred  	%p21, %p18, %p20;
	and.pred  	%p22, %p21, %p19;
	shr.u32 	%r57, %r8, 1;
	setp.eq.s32	%p23, %r6, %r57;
	or.pred  	%p24, %p22, %p23;
	add.s32 	%r92, %r6, 1;
	mov.u32 	%r101, %r8;
	@!%p24 bra 	BB1_32;
	bra.uni 	BB1_19;

BB1_19:
	div.u32 	%r58, %r102, %r92;
	cvt.rn.f32.u32	%f21, %r58;
	setp.eq.s32	%p25, %r6, 0;
	mov.f32 	%f121, 0f00000000;
	@%p25 bra 	BB1_28;

	and.b32  	%r60, %r6, 3;
	setp.eq.s32	%p26, %r60, 0;
	mov.f32 	%f121, 0f00000000;
	mov.u32 	%r100, 0;
	@%p26 bra 	BB1_26;

	setp.eq.s32	%p27, %r60, 1;
	mov.f32 	%f118, 0f00000000;
	mov.u32 	%r98, 0;
	@%p27 bra 	BB1_25;

	setp.eq.s32	%p28, %r60, 2;
	mov.f32 	%f117, 0f00000000;
	mov.u32 	%r97, 0;
	@%p28 bra 	BB1_24;

	add.u64 	%rd19, %SP, 0;
	cvta.to.local.u64 	%rd20, %rd19;
	ld.local.u32 	%r66, [%rd20];
	cvt.rn.f32.u32	%f95, %r66;
	sub.f32 	%f96, %f95, %f21;
	fma.rn.f32 	%f117, %f96, %f96, 0f00000000;
	mov.u32 	%r97, 1;

BB1_24:
	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd22, %rd21;
	mul.wide.u32 	%rd23, %r97, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.local.u32 	%r67, [%rd24];
	cvt.rn.f32.u32	%f97, %r67;
	sub.f32 	%f98, %f97, %f21;
	fma.rn.f32 	%f118, %f98, %f98, %f117;
	add.s32 	%r98, %r97, 1;

BB1_25:
	add.u64 	%rd25, %SP, 0;
	cvta.to.local.u64 	%rd26, %rd25;
	mul.wide.u32 	%rd27, %r98, 4;
	add.s64 	%rd28, %rd26, %rd27;
	ld.local.u32 	%r68, [%rd28];
	cvt.rn.f32.u32	%f99, %r68;
	sub.f32 	%f100, %f99, %f21;
	fma.rn.f32 	%f121, %f100, %f100, %f118;
	add.s32 	%r100, %r98, 1;

BB1_26:
	add.u64 	%rd29, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd29;
	setp.lt.u32	%p29, %r6, 4;
	@%p29 bra 	BB1_28;

BB1_27:
	mul.wide.u32 	%rd30, %r100, 4;
	add.s64 	%rd31, %rd1, %rd30;
	ld.local.u32 	%r69, [%rd31];
	cvt.rn.f32.u32	%f101, %r69;
	sub.f32 	%f102, %f101, %f21;
	fma.rn.f32 	%f103, %f102, %f102, %f121;
	add.s32 	%r70, %r100, 1;
	mul.wide.u32 	%rd32, %r70, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.local.u32 	%r71, [%rd33];
	cvt.rn.f32.u32	%f104, %r71;
	sub.f32 	%f105, %f104, %f21;
	fma.rn.f32 	%f106, %f105, %f105, %f103;
	add.s32 	%r72, %r100, 2;
	mul.wide.u32 	%rd34, %r72, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.local.u32 	%r73, [%rd35];
	cvt.rn.f32.u32	%f107, %r73;
	sub.f32 	%f108, %f107, %f21;
	fma.rn.f32 	%f109, %f108, %f108, %f106;
	add.s32 	%r74, %r100, 3;
	mul.wide.u32 	%rd36, %r74, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r75, [%rd37];
	cvt.rn.f32.u32	%f110, %r75;
	sub.f32 	%f111, %f110, %f21;
	fma.rn.f32 	%f121, %f111, %f111, %f109;
	add.s32 	%r100, %r100, 4;
	setp.lt.u32	%p30, %r100, %r6;
	@%p30 bra 	BB1_27;

BB1_28:
	add.s32 	%r76, %r6, -1;
	cvt.rn.f32.u32	%f112, %r76;
	div.rn.f32 	%f113, %f121, %f112;
	div.rn.f32 	%f31, %f113, %f21;
	setp.ne.s32	%p31, %r6, 1;
	@%p31 bra 	BB1_30;

	// inline asm
	activemask.b32 %r77;
	// inline asm
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd39, %rd38;
	ld.local.v2.u32 	{%r79, %r80}, [%rd39];
	setp.eq.s32	%p32, %r79, %r80;
	vote.sync.all.pred 	%p33, %p32, %r77;
	mov.u32 	%r101, 2;
	@%p33 bra 	BB1_32;

BB1_30:
	// inline asm
	activemask.b32 %r84;
	// inline asm
	setp.lt.f32	%p34, %f31, 0f3C23D70A;
	vote.sync.all.pred 	%p35, %p34, %r84;
	mov.u32 	%r101, %r92;
	@%p35 bra 	BB1_32;

	// inline asm
	activemask.b32 %r86;
	// inline asm
	setp.le.f32	%p36, %f31, 0f3F800000;
	vote.sync.all.pred 	%p37, %p36, %r86;
	setp.ge.u32	%p38, %r6, %r57;
	and.pred  	%p39, %p37, %p38;
	selp.b32	%r101, %r92, %r8, %p39;

BB1_32:
	cvt.rn.f32.u32	%f122, %r101;
	setp.lt.u32	%p40, %r92, %r101;
	@%p40 bra 	BB1_8;
	bra.uni 	BB1_33;

BB1_6:
	mov.u32 	%r101, %r102;

BB1_33:
	mul.lo.s32 	%r89, %r5, %r25;
	cvt.u64.u32	%rd40, %r89;
	cvta.to.global.u64 	%rd41, %rd2;
	add.s64 	%rd42, %rd41, %rd40;
	mul.wide.u32 	%rd43, %r4, 8;
	add.s64 	%rd44, %rd42, %rd43;
	div.u32 	%r90, %r102, %r101;
	st.global.u32 	[%rd44], %r90;
	st.global.f32 	[%rd44+4], %f122;
	setp.gt.f32	%p41, %f122, 0f00000000;
	@%p41 bra 	BB1_35;

	mov.u64 	%rd45, $str2;
	cvta.global.u64 	%rd46, %rd45;
	mov.u64 	%rd47, $str1;
	cvta.global.u64 	%rd48, %rd47;
	mov.u32 	%r91, 192;
	mov.u64 	%rd49, 0;
	mov.u64 	%rd50, 2;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r91;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd49;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd50;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB1_35:
	ret;
}

	// .globl	fractalRenderMainDouble
.visible .entry fractalRenderMainDouble(
	.param .u64 fractalRenderMainDouble_param_0,
	.param .u32 fractalRenderMainDouble_param_1,
	.param .align 4 .b8 fractalRenderMainDouble_param_2[8],
	.param .align 8 .b8 fractalRenderMainDouble_param_3[32],
	.param .u32 fractalRenderMainDouble_param_4,
	.param .u32 fractalRenderMainDouble_param_5,
	.param .u32 fractalRenderMainDouble_param_6
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<42>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<131>;
	.reg .f64 	%fd<142>;
	.reg .b64 	%rd<51>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainDouble_param_0];
	ld.param.u32 	%r27, [fractalRenderMainDouble_param_2+4];
	ld.param.u32 	%r26, [fractalRenderMainDouble_param_2];
	ld.param.f64 	%fd39, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd38, [fractalRenderMainDouble_param_3+16];
	ld.param.f64 	%fd37, [fractalRenderMainDouble_param_3+8];
	ld.param.f64 	%fd36, [fractalRenderMainDouble_param_3];
	ld.param.u32 	%r28, [fractalRenderMainDouble_param_4];
	ld.param.u32 	%r29, [fractalRenderMainDouble_param_5];
	ld.param.u32 	%r30, [fractalRenderMainDouble_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r31, 65;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r31;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB2_2:
	mov.u32 	%r32, %tid.x;
	mov.u32 	%r33, %tid.y;
	mad.lo.s32 	%r34, %r1, %r33, %r32;
	shl.b32 	%r35, %r1, 2;
	and.b32  	%r36, %r34, 15;
	rem.u32 	%r37, %r34, %r35;
	sub.s32 	%r38, %r37, %r36;
	shr.u32 	%r39, %r38, 2;
	and.b32  	%r40, %r34, 3;
	add.s32 	%r41, %r39, %r40;
	div.u32 	%r42, %r34, %r35;
	shl.b32 	%r43, %r42, 2;
	bfe.u32 	%r44, %r34, 2, 2;
	add.s32 	%r45, %r43, %r44;
	mov.u32 	%r46, %ctaid.x;
	mad.lo.s32 	%r4, %r46, %r1, %r41;
	mov.u32 	%r47, %ctaid.y;
	mov.u32 	%r48, %ntid.y;
	mad.lo.s32 	%r5, %r47, %r48, %r45;
	setp.lt.u32	%p2, %r4, %r26;
	setp.lt.u32	%p3, %r5, %r27;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB2_34;
	bra.uni 	BB2_3;

BB2_3:
	setp.lt.u32	%p5, %r29, 257;
	@%p5 bra 	BB2_5;

	mov.u64 	%rd9, $str8;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r49, 110;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r49;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB2_5:
	setp.eq.s32	%p6, %r29, 0;
	mov.u32 	%r129, 0;
	mov.u32 	%r128, %r129;
	@%p6 bra 	BB2_32;

	cvt.rn.f64.u32	%fd3, %r4;
	cvt.rn.f64.u32	%fd4, %r5;
	ld.const.f64 	%fd7, [coefficients+16];
	add.f64 	%fd8, %fd7, %fd7;
	ld.const.f64 	%fd9, [coefficients+24];
	mul.f64 	%fd10, %fd9, 0d4008000000000000;
	cvt.rn.f64.u32	%fd40, %r26;
	sub.f64 	%fd41, %fd38, %fd36;
	div.rn.f64 	%fd17, %fd41, %fd40;
	cvt.rn.f64.u32	%fd42, %r27;
	sub.f64 	%fd43, %fd39, %fd37;
	div.rn.f64 	%fd18, %fd43, %fd42;
	mov.u32 	%r119, 0;
	and.b32  	%r56, %r30, 1;
	mov.u32 	%r129, %r119;
	mov.u32 	%r128, %r29;

BB2_7:
	mov.u32 	%r8, %r128;
	mov.u32 	%r6, %r119;
	mov.u32 	%r123, 0;
	ld.param.f64 	%fd125, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd124, [fractalRenderMainDouble_param_3];
	cvt.rn.f64.u32	%fd44, %r8;
	cvt.rn.f64.u32	%fd45, %r6;
	div.rn.f64 	%fd46, %fd45, %fd44;
	add.f64 	%fd47, %fd3, %fd46;
	add.f64 	%fd48, %fd4, %fd46;
	neg.f64 	%fd49, %fd48;
	fma.rn.f64 	%fd136, %fd17, %fd47, %fd124;
	fma.rn.f64 	%fd135, %fd18, %fd49, %fd125;
	setp.eq.s32	%p7, %r28, 0;
	@%p7 bra 	BB2_15;

BB2_8:
	ld.const.f64 	%fd130, [roots];
	ld.const.f64 	%fd129, [coefficients+24];
	ld.const.f64 	%fd128, [coefficients+16];
	ld.const.f64 	%fd127, [coefficients];
	ld.const.f64 	%fd126, [coefficients+8];
	mul.f64 	%fd50, %fd135, %fd135;
	mul.f64 	%fd51, %fd136, %fd136;
	sub.f64 	%fd52, %fd51, %fd50;
	mul.f64 	%fd53, %fd136, %fd135;
	fma.rn.f64 	%fd54, %fd136, %fd135, %fd53;
	mul.f64 	%fd55, %fd136, %fd52;
	mul.f64 	%fd56, %fd135, %fd54;
	sub.f64 	%fd57, %fd55, %fd56;
	mul.f64 	%fd58, %fd136, %fd54;
	fma.rn.f64 	%fd59, %fd135, %fd52, %fd58;
	fma.rn.f64 	%fd60, %fd136, %fd126, %fd127;
	mul.f64 	%fd61, %fd54, %fd128;
	fma.rn.f64 	%fd62, %fd52, %fd128, %fd60;
	fma.rn.f64 	%fd63, %fd135, %fd126, %fd61;
	fma.rn.f64 	%fd64, %fd57, %fd129, %fd62;
	fma.rn.f64 	%fd65, %fd59, %fd129, %fd63;
	fma.rn.f64 	%fd66, %fd136, %fd8, %fd126;
	mul.f64 	%fd67, %fd54, %fd10;
	fma.rn.f64 	%fd68, %fd52, %fd10, %fd66;
	fma.rn.f64 	%fd69, %fd135, %fd8, %fd67;
	abs.f64 	%fd70, %fd68;
	abs.f64 	%fd71, %fd69;
	add.f64 	%fd72, %fd70, %fd71;
	rcp.rn.f64 	%fd73, %fd72;
	mul.f64 	%fd74, %fd64, %fd73;
	mul.f64 	%fd75, %fd65, %fd73;
	mul.f64 	%fd76, %fd68, %fd73;
	mul.f64 	%fd77, %fd69, %fd73;
	mul.f64 	%fd78, %fd77, %fd77;
	fma.rn.f64 	%fd79, %fd76, %fd76, %fd78;
	rcp.rn.f64 	%fd80, %fd79;
	mul.f64 	%fd81, %fd75, %fd77;
	fma.rn.f64 	%fd82, %fd74, %fd76, %fd81;
	mul.f64 	%fd83, %fd80, %fd82;
	mul.f64 	%fd84, %fd75, %fd76;
	mul.f64 	%fd85, %fd74, %fd77;
	sub.f64 	%fd86, %fd84, %fd85;
	mul.f64 	%fd87, %fd80, %fd86;
	sub.f64 	%fd136, %fd136, %fd83;
	sub.f64 	%fd135, %fd135, %fd87;
	add.s32 	%r123, %r123, 1;
	sub.f64 	%fd88, %fd136, %fd130;
	abs.f64 	%fd89, %fd88;
	setp.geu.f64	%p8, %fd89, 0d3F1A36E2EB1C432D;
	@%p8 bra 	BB2_10;

	ld.const.f64 	%fd132, [roots+8];
	sub.f64 	%fd90, %fd135, %fd132;
	abs.f64 	%fd91, %fd90;
	setp.lt.f64	%p9, %fd91, 0d3F1A36E2EB1C432D;
	@%p9 bra 	BB2_15;

BB2_10:
	ld.const.f64 	%fd123, [roots+16];
	sub.f64 	%fd92, %fd136, %fd123;
	abs.f64 	%fd93, %fd92;
	setp.geu.f64	%p10, %fd93, 0d3F1A36E2EB1C432D;
	@%p10 bra 	BB2_12;

	ld.const.f64 	%fd131, [roots+24];
	sub.f64 	%fd94, %fd135, %fd131;
	abs.f64 	%fd95, %fd94;
	setp.lt.f64	%p11, %fd95, 0d3F1A36E2EB1C432D;
	@%p11 bra 	BB2_15;

BB2_12:
	ld.const.f64 	%fd133, [roots+32];
	sub.f64 	%fd96, %fd136, %fd133;
	abs.f64 	%fd97, %fd96;
	setp.lt.f64	%p12, %fd97, 0d3F1A36E2EB1C432D;
	@%p12 bra 	BB2_14;
	bra.uni 	BB2_13;

BB2_14:
	ld.const.f64 	%fd134, [roots+40];
	setp.lt.u32	%p14, %r123, %r28;
	sub.f64 	%fd98, %fd135, %fd134;
	abs.f64 	%fd99, %fd98;
	setp.geu.f64	%p15, %fd99, 0d3F1A36E2EB1C432D;
	and.pred  	%p16, %p15, %p14;
	@%p16 bra 	BB2_8;
	bra.uni 	BB2_15;

BB2_13:
	setp.lt.u32	%p13, %r123, %r28;
	@%p13 bra 	BB2_8;

BB2_15:
	add.s32 	%r129, %r123, %r129;
	setp.gt.u32	%p17, %r6, 9;
	@%p17 bra 	BB2_17;

	add.u64 	%rd15, %SP, 0;
	cvta.to.local.u64 	%rd16, %rd15;
	mul.wide.u32 	%rd17, %r6, 4;
	add.s64 	%rd18, %rd16, %rd17;
	st.local.u32 	[%rd18], %r123;

BB2_17:
	setp.lt.u32	%p18, %r6, 10;
	setp.eq.b32	%p19, %r56, 1;
	setp.ne.s32	%p20, %r6, 0;
	and.pred  	%p21, %p18, %p20;
	and.pred  	%p22, %p21, %p19;
	shr.u32 	%r57, %r8, 1;
	setp.eq.s32	%p23, %r6, %r57;
	or.pred  	%p24, %p22, %p23;
	add.s32 	%r119, %r6, 1;
	mov.u32 	%r128, %r8;
	@!%p24 bra 	BB2_31;
	bra.uni 	BB2_18;

BB2_18:
	div.u32 	%r58, %r129, %r119;
	cvt.rn.f64.u32	%fd25, %r58;
	setp.eq.s32	%p25, %r6, 0;
	mov.f64 	%fd141, 0d0000000000000000;
	@%p25 bra 	BB2_27;

	and.b32  	%r60, %r6, 3;
	setp.eq.s32	%p26, %r60, 0;
	mov.f64 	%fd141, 0d0000000000000000;
	mov.u32 	%r127, 0;
	@%p26 bra 	BB2_25;

	setp.eq.s32	%p27, %r60, 1;
	mov.f64 	%fd138, 0d0000000000000000;
	mov.u32 	%r125, 0;
	@%p27 bra 	BB2_24;

	setp.eq.s32	%p28, %r60, 2;
	mov.f64 	%fd137, 0d0000000000000000;
	mov.u32 	%r124, 0;
	@%p28 bra 	BB2_23;

	add.u64 	%rd19, %SP, 0;
	cvta.to.local.u64 	%rd20, %rd19;
	ld.local.u32 	%r66, [%rd20];
	cvt.rn.f64.u32	%fd104, %r66;
	sub.f64 	%fd105, %fd104, %fd25;
	fma.rn.f64 	%fd137, %fd105, %fd105, 0d0000000000000000;
	mov.u32 	%r124, 1;

BB2_23:
	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd22, %rd21;
	mul.wide.u32 	%rd23, %r124, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.local.u32 	%r67, [%rd24];
	cvt.rn.f64.u32	%fd106, %r67;
	sub.f64 	%fd107, %fd106, %fd25;
	fma.rn.f64 	%fd138, %fd107, %fd107, %fd137;
	add.s32 	%r125, %r124, 1;

BB2_24:
	add.u64 	%rd25, %SP, 0;
	cvta.to.local.u64 	%rd26, %rd25;
	mul.wide.u32 	%rd27, %r125, 4;
	add.s64 	%rd28, %rd26, %rd27;
	ld.local.u32 	%r68, [%rd28];
	cvt.rn.f64.u32	%fd108, %r68;
	sub.f64 	%fd109, %fd108, %fd25;
	fma.rn.f64 	%fd141, %fd109, %fd109, %fd138;
	add.s32 	%r127, %r125, 1;

BB2_25:
	add.u64 	%rd29, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd29;
	setp.lt.u32	%p29, %r6, 4;
	@%p29 bra 	BB2_27;

BB2_26:
	mul.wide.u32 	%rd30, %r127, 4;
	add.s64 	%rd31, %rd1, %rd30;
	ld.local.u32 	%r69, [%rd31];
	cvt.rn.f64.u32	%fd110, %r69;
	sub.f64 	%fd111, %fd110, %fd25;
	fma.rn.f64 	%fd112, %fd111, %fd111, %fd141;
	add.s32 	%r70, %r127, 1;
	mul.wide.u32 	%rd32, %r70, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.local.u32 	%r71, [%rd33];
	cvt.rn.f64.u32	%fd113, %r71;
	sub.f64 	%fd114, %fd113, %fd25;
	fma.rn.f64 	%fd115, %fd114, %fd114, %fd112;
	add.s32 	%r72, %r127, 2;
	mul.wide.u32 	%rd34, %r72, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.local.u32 	%r73, [%rd35];
	cvt.rn.f64.u32	%fd116, %r73;
	sub.f64 	%fd117, %fd116, %fd25;
	fma.rn.f64 	%fd118, %fd117, %fd117, %fd115;
	add.s32 	%r74, %r127, 3;
	mul.wide.u32 	%rd36, %r74, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r75, [%rd37];
	cvt.rn.f64.u32	%fd119, %r75;
	sub.f64 	%fd120, %fd119, %fd25;
	fma.rn.f64 	%fd141, %fd120, %fd120, %fd118;
	add.s32 	%r127, %r127, 4;
	setp.lt.u32	%p30, %r127, %r6;
	@%p30 bra 	BB2_26;

BB2_27:
	add.s32 	%r76, %r6, -1;
	cvt.rn.f64.u32	%fd121, %r76;
	div.rn.f64 	%fd122, %fd141, %fd121;
	div.rn.f64 	%fd35, %fd122, %fd25;
	setp.ne.s32	%p31, %r6, 1;
	@%p31 bra 	BB2_29;

	// inline asm
	activemask.b32 %r77;
	// inline asm
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd39, %rd38;
	ld.local.v2.u32 	{%r79, %r80}, [%rd39];
	setp.eq.s32	%p32, %r79, %r80;
	vote.sync.all.pred 	%p33, %p32, %r77;
	mov.u32 	%r128, 2;
	@%p33 bra 	BB2_31;

BB2_29:
	// inline asm
	activemask.b32 %r84;
	// inline asm
	setp.lt.f64	%p34, %fd35, 0d3F847AE140000000;
	vote.sync.all.pred 	%p35, %p34, %r84;
	mov.u32 	%r128, %r119;
	@%p35 bra 	BB2_31;

	// inline asm
	activemask.b32 %r86;
	// inline asm
	setp.le.f64	%p36, %fd35, 0d3FF0000000000000;
	vote.sync.all.pred 	%p37, %p36, %r86;
	setp.ge.u32	%p38, %r6, %r57;
	and.pred  	%p39, %p37, %p38;
	selp.b32	%r128, %r119, %r8, %p39;

BB2_31:
	setp.lt.u32	%p40, %r119, %r128;
	@%p40 bra 	BB2_7;

BB2_32:
	mov.u32 	%r118, %ntid.x;
	mov.u32 	%r117, %tid.x;
	mov.u32 	%r116, %tid.y;
	mad.lo.s32 	%r115, %r118, %r116, %r117;
	shl.b32 	%r114, %r118, 2;
	and.b32  	%r113, %r115, 15;
	rem.u32 	%r112, %r115, %r114;
	sub.s32 	%r111, %r112, %r113;
	and.b32  	%r110, %r115, 3;
	shr.u32 	%r109, %r111, 2;
	add.s32 	%r108, %r109, %r110;
	mov.u32 	%r107, %ctaid.x;
	mad.lo.s32 	%r106, %r107, %r118, %r108;
	mov.u32 	%r104, %tid.x;
	mov.u32 	%r103, %tid.y;
	mov.u32 	%r102, %ntid.x;
	mad.lo.s32 	%r101, %r102, %r103, %r104;
	ld.param.u32 	%r100, [fractalRenderMainDouble_param_1];
	shl.b32 	%r99, %r102, 2;
	div.u32 	%r98, %r101, %r99;
	bfe.u32 	%r97, %r101, 2, 2;
	shl.b32 	%r96, %r98, 2;
	add.s32 	%r95, %r96, %r97;
	mov.u32 	%r94, %ntid.y;
	mov.u32 	%r93, %ctaid.y;
	mad.lo.s32 	%r92, %r93, %r94, %r95;
	mul.lo.s32 	%r89, %r92, %r100;
	cvt.u64.u32	%rd40, %r89;
	cvta.to.global.u64 	%rd41, %rd2;
	add.s64 	%rd42, %rd41, %rd40;
	mul.wide.u32 	%rd43, %r106, 8;
	add.s64 	%rd44, %rd42, %rd43;
	div.u32 	%r90, %r129, %r128;
	st.global.u32 	[%rd44], %r90;
	cvt.rn.f32.u32	%f1, %r128;
	st.global.f32 	[%rd44+4], %f1;
	setp.gt.f32	%p41, %f1, 0f00000000;
	@%p41 bra 	BB2_34;

	mov.u64 	%rd45, $str2;
	cvta.global.u64 	%rd46, %rd45;
	mov.u64 	%rd47, $str1;
	cvta.global.u64 	%rd48, %rd47;
	mov.u32 	%r91, 192;
	mov.u64 	%rd49, 0;
	mov.u64 	%rd50, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r91;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd49;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd50;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB2_34:
	ret;
}

	// .globl	fractalRenderAdvancedFloat
.visible .entry fractalRenderAdvancedFloat(
	.param .u64 fractalRenderAdvancedFloat_param_0,
	.param .u32 fractalRenderAdvancedFloat_param_1,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_2[8],
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_3[16],
	.param .u32 fractalRenderAdvancedFloat_param_4,
	.param .u32 fractalRenderAdvancedFloat_param_5,
	.param .u32 fractalRenderAdvancedFloat_param_6,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_7[16],
	.param .u64 fractalRenderAdvancedFloat_param_8,
	.param .u32 fractalRenderAdvancedFloat_param_9,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<72>;
	.reg .b16 	%rs<6>;
	.reg .f32 	%f<217>;
	.reg .b32 	%r<143>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<69>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderAdvancedFloat_param_0];
	ld.param.u32 	%r38, [fractalRenderAdvancedFloat_param_2+4];
	ld.param.u32 	%r37, [fractalRenderAdvancedFloat_param_2];
	ld.param.f32 	%f53, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f52, [fractalRenderAdvancedFloat_param_3+8];
	ld.param.f32 	%f51, [fractalRenderAdvancedFloat_param_3+4];
	ld.param.f32 	%f50, [fractalRenderAdvancedFloat_param_3];
	ld.param.u32 	%r39, [fractalRenderAdvancedFloat_param_4];
	ld.param.u32 	%r129, [fractalRenderAdvancedFloat_param_5];
	ld.param.u32 	%r41, [fractalRenderAdvancedFloat_param_6];
	ld.param.f32 	%f57, [fractalRenderAdvancedFloat_param_7+12];
	ld.param.f32 	%f56, [fractalRenderAdvancedFloat_param_7+8];
	ld.param.f32 	%f55, [fractalRenderAdvancedFloat_param_7+4];
	ld.param.f32 	%f54, [fractalRenderAdvancedFloat_param_7];
	ld.param.u64 	%rd3, [fractalRenderAdvancedFloat_param_8];
	ld.param.u32 	%r42, [fractalRenderAdvancedFloat_param_9];
	ld.param.u32 	%r44, [fractalRenderAdvancedFloat_param_10+4];
	ld.param.u32 	%r43, [fractalRenderAdvancedFloat_param_10];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB3_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r45, 65;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r45;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB3_2:
	mov.u32 	%r46, %tid.x;
	mov.u32 	%r47, %tid.y;
	mad.lo.s32 	%r48, %r1, %r47, %r46;
	shl.b32 	%r49, %r1, 2;
	and.b32  	%r50, %r48, 15;
	rem.u32 	%r51, %r48, %r49;
	sub.s32 	%r52, %r51, %r50;
	shr.u32 	%r53, %r52, 2;
	and.b32  	%r54, %r48, 3;
	add.s32 	%r55, %r53, %r54;
	div.u32 	%r56, %r48, %r49;
	shl.b32 	%r57, %r56, 2;
	bfe.u32 	%r58, %r48, 2, 2;
	add.s32 	%r59, %r57, %r58;
	mov.u32 	%r60, %ctaid.x;
	mad.lo.s32 	%r4, %r60, %r1, %r55;
	mov.u32 	%r61, %ctaid.y;
	mov.u32 	%r62, %ntid.y;
	mad.lo.s32 	%r5, %r61, %r62, %r59;
	setp.lt.u32	%p2, %r4, %r37;
	setp.lt.u32	%p3, %r5, %r38;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB3_55;
	bra.uni 	BB3_3;

BB3_3:
	and.b32  	%r64, %r41, 8;
	setp.eq.s32	%p5, %r64, 0;
	mov.u16 	%rs5, 0;
	@%p5 bra 	BB3_10;

	cvt.rn.f32.u32	%f59, %r4;
	sub.f32 	%f60, %f56, %f54;
	sub.f32 	%f61, %f52, %f50;
	div.rn.f32 	%f62, %f61, %f60;
	sub.f32 	%f63, %f57, %f55;
	sub.f32 	%f64, %f53, %f51;
	div.rn.f32 	%f65, %f64, %f63;
	sub.f32 	%f66, %f50, %f54;
	div.rn.f32 	%f67, %f66, %f61;
	sub.f32 	%f68, %f57, %f53;
	div.rn.f32 	%f69, %f68, %f64;
	cvt.rn.f32.u32	%f70, %r37;
	mul.f32 	%f71, %f70, %f67;
	cvt.rn.f32.u32	%f72, %r38;
	mul.f32 	%f73, %f72, %f69;
	cvt.rn.f32.u32	%f74, %r5;
	fma.rn.f32 	%f5, %f59, %f62, %f71;
	fma.rn.f32 	%f6, %f74, %f65, %f73;
	abs.f32 	%f75, %f5;
	mov.b32 	 %r65, %f5;
	and.b32  	%r66, %r65, -2147483648;
	or.b32  	%r67, %r66, 1056964608;
	mov.b32 	 %f76, %r67;
	add.f32 	%f77, %f5, %f76;
	cvt.rzi.f32.f32	%f78, %f77;
	setp.gt.f32	%p6, %f75, 0f4B000000;
	selp.f32	%f205, %f5, %f78, %p6;
	setp.geu.f32	%p7, %f75, 0f3F000000;
	@%p7 bra 	BB3_6;

	cvt.rzi.f32.f32	%f205, %f5;

BB3_6:
	cvt.rzi.s32.f32	%r6, %f205;
	mov.b32 	 %r68, %f6;
	and.b32  	%r69, %r68, -2147483648;
	or.b32  	%r70, %r69, 1056964608;
	mov.b32 	 %f79, %r70;
	add.f32 	%f80, %f6, %f79;
	cvt.rzi.f32.f32	%f81, %f80;
	abs.f32 	%f82, %f6;
	setp.gt.f32	%p8, %f82, 0f4B000000;
	selp.f32	%f206, %f6, %f81, %p8;
	setp.geu.f32	%p9, %f82, 0f3F000000;
	@%p9 bra 	BB3_8;

	cvt.rzi.f32.f32	%f206, %f6;

BB3_8:
	setp.lt.u32	%p10, %r6, %r37;
	setp.gt.s32	%p11, %r6, -1;
	and.pred  	%p12, %p11, %p10;
	cvt.rzi.s32.f32	%r7, %f206;
	setp.gt.s32	%p13, %r7, -1;
	and.pred  	%p14, %p12, %p13;
	setp.lt.u32	%p15, %r7, %r38;
	and.pred  	%p16, %p15, %p14;
	@!%p16 bra 	BB3_10;
	bra.uni 	BB3_9;

BB3_9:
	cvta.to.global.u64 	%rd10, %rd3;
	mul.lo.s32 	%r72, %r7, %r42;
	cvt.u64.u32	%rd11, %r72;
	add.s64 	%rd12, %rd10, %rd11;
	mul.wide.u32 	%rd13, %r6, 8;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.u32 	%r128, [%rd14];
	ld.global.f32 	%f207, [%rd14+4];
	mov.u16 	%rs5, 1;

BB3_10:
	and.b32  	%r73, %r41, 4;
	setp.eq.s32	%p17, %r73, 0;
	@%p17 bra 	BB3_17;

	and.b32  	%r74, %r4, -8;
	cvt.rn.f32.u32	%f84, %r74;
	and.b32  	%r75, %r5, -4;
	cvt.rn.f32.u32	%f85, %r75;
	cvt.rn.f32.u32	%f86, %r43;
	sub.f32 	%f87, %f86, %f84;
	cvt.rn.f32.u32	%f88, %r44;
	sub.f32 	%f89, %f88, %f85;
	mul.f32 	%f90, %f89, %f89;
	fma.rn.f32 	%f91, %f87, %f87, %f90;
	sqrt.rn.f32 	%f92, %f91;
	mul.f32 	%f93, %f92, 0f3CD94079;
	ld.global.f32 	%f94, [screenDistance];
	div.rn.f32 	%f15, %f93, %f94;
	abs.f32 	%f16, %f15;
	setp.leu.f32	%p18, %f16, 0f3F800000;
	mov.f32 	%f208, %f16;
	@%p18 bra 	BB3_13;

	rcp.rn.f32 	%f208, %f16;

BB3_13:
	mul.rn.f32 	%f95, %f208, %f208;
	mov.f32 	%f96, 0fC0B59883;
	mov.f32 	%f97, 0fBF52C7EA;
	fma.rn.f32 	%f98, %f95, %f97, %f96;
	mov.f32 	%f99, 0fC0D21907;
	fma.rn.f32 	%f100, %f98, %f95, %f99;
	mul.f32 	%f101, %f95, %f100;
	mul.f32 	%f102, %f208, %f101;
	add.f32 	%f103, %f95, 0f41355DC0;
	mov.f32 	%f104, 0f41E6BD60;
	fma.rn.f32 	%f105, %f103, %f95, %f104;
	mov.f32 	%f106, 0f419D92C8;
	fma.rn.f32 	%f107, %f105, %f95, %f106;
	rcp.rn.f32 	%f108, %f107;
	fma.rn.f32 	%f109, %f102, %f108, %f208;
	mov.f32 	%f110, 0f3FC90FDB;
	sub.f32 	%f111, %f110, %f109;
	setp.gt.f32	%p19, %f16, 0f3F800000;
	selp.f32	%f112, %f111, %f109, %p19;
	mov.b32 	 %r76, %f112;
	mov.b32 	 %r77, %f15;
	and.b32  	%r78, %r77, -2147483648;
	or.b32  	%r79, %r76, %r78;
	mov.b32 	 %f113, %r79;
	setp.gtu.f32	%p20, %f16, 0f7F800000;
	selp.f32	%f114, %f112, %f113, %p20;
	mul.f32 	%f115, %f114, 0f43340000;
	div.rn.f32 	%f19, %f115, 0f40490FDB;
	setp.ge.f32	%p21, %f19, 0f00000000;
	@%p21 bra 	BB3_15;

	mov.u64 	%rd15, $str5;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r80, 233;
	mov.u64 	%rd19, 0;
	mov.u64 	%rd20, 2;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r80;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd20;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB3_15:
	fma.rn.f32 	%f116, %f19, 0fBC964FDA, 0f3F8CEADD;
	setp.gtu.f32	%p22, %f19, 0f40B00000;
	selp.f32	%f117, %f116, 0f3F800000, %p22;
	cvt.rn.f32.u32	%f118, %r129;
	mul.f32 	%f119, %f118, %f117;
	cvt.rzi.u32.f32	%r129, %f119;
	setp.gtu.f32	%p23, %f19, 0f42700000;
	@%p23 bra 	BB3_17;

	mov.u32 	%r81, 1;
	max.u32 	%r129, %r81, %r129;

BB3_17:
	setp.eq.f32	%p24, %f207, 0f00000000;
	setp.eq.s16	%p25, %rs5, 0;
	or.pred  	%p26, %p25, %p24;
	setp.eq.s32	%p27, %r129, 0;
	and.pred  	%p28, %p26, %p27;
	selp.b32	%r13, 1, %r129, %p28;
	cvt.rn.f32.u32	%f120, %r37;
	sub.f32 	%f121, %f52, %f50;
	div.rn.f32 	%f20, %f121, %f120;
	cvt.rn.f32.u32	%f122, %r38;
	sub.f32 	%f123, %f53, %f51;
	div.rn.f32 	%f21, %f123, %f122;
	setp.lt.u32	%p29, %r13, 257;
	@%p29 bra 	BB3_19;

	mov.u64 	%rd21, $str8;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r82, 110;
	mov.u64 	%rd25, 0;
	mov.u64 	%rd26, 2;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r82;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB3_19:
	setp.eq.s32	%p30, %r13, 0;
	mov.u32 	%r140, 0;
	mov.u32 	%r139, %r140;
	@%p30 bra 	BB3_46;

	cvt.rn.f32.u32	%f22, %r4;
	cvt.rn.f32.u32	%f23, %r5;
	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f24, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f25, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f26, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f27, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f28, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f29, %fd12;
	mov.u32 	%r86, 0;
	mov.u32 	%r130, %r86;
	mov.u32 	%r140, %r86;
	mov.u32 	%r139, %r13;

BB3_21:
	mov.u32 	%r16, %r139;
	mov.u32 	%r14, %r130;
	ld.param.f32 	%f204, [fractalRenderAdvancedFloat_param_3];
	cvt.rn.f32.u32	%f124, %r16;
	cvt.rn.f32.u32	%f125, %r14;
	div.rn.f32 	%f126, %f125, %f124;
	add.f32 	%f127, %f22, %f126;
	add.f32 	%f128, %f23, %f126;
	neg.f32 	%f129, %f128;
	fma.rn.f32 	%f210, %f20, %f127, %f204;
	fma.rn.f32 	%f209, %f21, %f129, %f53;
	setp.eq.s32	%p31, %r39, 0;
	mov.u32 	%r134, %r86;
	@%p31 bra 	BB3_29;

BB3_22:
	mul.f32 	%f130, %f209, %f209;
	mul.f32 	%f131, %f210, %f210;
	sub.f32 	%f132, %f131, %f130;
	mul.f32 	%f133, %f210, %f209;
	fma.rn.f32 	%f134, %f210, %f209, %f133;
	mul.f32 	%f135, %f210, %f132;
	mul.f32 	%f136, %f209, %f134;
	sub.f32 	%f137, %f135, %f136;
	mul.f32 	%f138, %f210, %f134;
	fma.rn.f32 	%f139, %f209, %f132, %f138;
	cvt.f64.f32	%fd13, %f210;
	cvt.f64.f32	%fd14, %f209;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f132;
	cvt.f64.f32	%fd17, %f134;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f137;
	cvt.f64.f32	%fd22, %f139;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f140, %fd23;
	cvt.rn.f32.f64	%f141, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f142, %fd27;
	cvt.rn.f32.f64	%f143, %fd28;
	abs.f32 	%f144, %f142;
	abs.f32 	%f145, %f143;
	add.f32 	%f146, %f144, %f145;
	rcp.rn.f32 	%f147, %f146;
	mul.f32 	%f148, %f140, %f147;
	mul.f32 	%f149, %f141, %f147;
	mul.f32 	%f150, %f147, %f142;
	mul.f32 	%f151, %f147, %f143;
	mul.f32 	%f152, %f151, %f151;
	fma.rn.f32 	%f153, %f150, %f150, %f152;
	rcp.rn.f32 	%f154, %f153;
	mul.f32 	%f155, %f149, %f151;
	fma.rn.f32 	%f156, %f148, %f150, %f155;
	mul.f32 	%f157, %f154, %f156;
	mul.f32 	%f158, %f149, %f150;
	mul.f32 	%f159, %f148, %f151;
	sub.f32 	%f160, %f158, %f159;
	mul.f32 	%f161, %f154, %f160;
	sub.f32 	%f210, %f210, %f157;
	sub.f32 	%f209, %f209, %f161;
	add.s32 	%r134, %r134, 1;
	sub.f32 	%f162, %f210, %f24;
	abs.f32 	%f163, %f162;
	setp.geu.f32	%p32, %f163, 0f38D1B717;
	@%p32 bra 	BB3_24;

	sub.f32 	%f164, %f209, %f25;
	abs.f32 	%f165, %f164;
	setp.lt.f32	%p33, %f165, 0f38D1B717;
	@%p33 bra 	BB3_29;

BB3_24:
	sub.f32 	%f166, %f210, %f26;
	abs.f32 	%f167, %f166;
	setp.geu.f32	%p34, %f167, 0f38D1B717;
	@%p34 bra 	BB3_26;

	sub.f32 	%f168, %f209, %f27;
	abs.f32 	%f169, %f168;
	setp.lt.f32	%p35, %f169, 0f38D1B717;
	@%p35 bra 	BB3_29;

BB3_26:
	sub.f32 	%f170, %f210, %f28;
	abs.f32 	%f171, %f170;
	setp.lt.f32	%p36, %f171, 0f38D1B717;
	@%p36 bra 	BB3_28;
	bra.uni 	BB3_27;

BB3_28:
	setp.lt.u32	%p38, %r134, %r39;
	sub.f32 	%f172, %f209, %f29;
	abs.f32 	%f173, %f172;
	setp.geu.f32	%p39, %f173, 0f38D1B717;
	and.pred  	%p40, %p39, %p38;
	@%p40 bra 	BB3_22;
	bra.uni 	BB3_29;

BB3_27:
	setp.lt.u32	%p37, %r134, %r39;
	@%p37 bra 	BB3_22;

BB3_29:
	add.s32 	%r140, %r134, %r140;
	setp.gt.u32	%p41, %r14, 9;
	@%p41 bra 	BB3_31;

	add.u64 	%rd27, %SP, 0;
	cvta.to.local.u64 	%rd28, %rd27;
	mul.wide.u32 	%rd29, %r14, 4;
	add.s64 	%rd30, %rd28, %rd29;
	st.local.u32 	[%rd30], %r134;

BB3_31:
	setp.lt.u32	%p42, %r14, 10;
	and.b32  	%r89, %r41, 1;
	setp.eq.b32	%p43, %r89, 1;
	setp.ne.s32	%p44, %r14, 0;
	and.pred  	%p45, %p42, %p44;
	and.pred  	%p46, %p45, %p43;
	shr.u32 	%r90, %r16, 1;
	setp.eq.s32	%p47, %r14, %r90;
	or.pred  	%p48, %p46, %p47;
	add.s32 	%r130, %r14, 1;
	mov.u32 	%r139, %r16;
	@!%p48 bra 	BB3_45;
	bra.uni 	BB3_32;

BB3_32:
	div.u32 	%r91, %r140, %r130;
	cvt.rn.f32.u32	%f36, %r91;
	setp.eq.s32	%p49, %r14, 0;
	mov.f32 	%f215, 0f00000000;
	@%p49 bra 	BB3_41;

	and.b32  	%r93, %r14, 3;
	setp.eq.s32	%p50, %r93, 0;
	mov.f32 	%f215, 0f00000000;
	mov.u32 	%r138, 0;
	@%p50 bra 	BB3_39;

	setp.eq.s32	%p51, %r93, 1;
	mov.f32 	%f212, 0f00000000;
	mov.u32 	%r136, 0;
	@%p51 bra 	BB3_38;

	setp.eq.s32	%p52, %r93, 2;
	mov.f32 	%f211, 0f00000000;
	mov.u32 	%r135, 0;
	@%p52 bra 	BB3_37;

	add.u64 	%rd31, %SP, 0;
	cvta.to.local.u64 	%rd32, %rd31;
	ld.local.u32 	%r99, [%rd32];
	cvt.rn.f32.u32	%f178, %r99;
	sub.f32 	%f179, %f178, %f36;
	fma.rn.f32 	%f211, %f179, %f179, 0f00000000;
	mov.u32 	%r135, 1;

BB3_37:
	add.u64 	%rd33, %SP, 0;
	cvta.to.local.u64 	%rd34, %rd33;
	mul.wide.u32 	%rd35, %r135, 4;
	add.s64 	%rd36, %rd34, %rd35;
	ld.local.u32 	%r100, [%rd36];
	cvt.rn.f32.u32	%f180, %r100;
	sub.f32 	%f181, %f180, %f36;
	fma.rn.f32 	%f212, %f181, %f181, %f211;
	add.s32 	%r136, %r135, 1;

BB3_38:
	add.u64 	%rd37, %SP, 0;
	cvta.to.local.u64 	%rd38, %rd37;
	mul.wide.u32 	%rd39, %r136, 4;
	add.s64 	%rd40, %rd38, %rd39;
	ld.local.u32 	%r101, [%rd40];
	cvt.rn.f32.u32	%f182, %r101;
	sub.f32 	%f183, %f182, %f36;
	fma.rn.f32 	%f215, %f183, %f183, %f212;
	add.s32 	%r138, %r136, 1;

BB3_39:
	add.u64 	%rd41, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd41;
	setp.lt.u32	%p53, %r14, 4;
	@%p53 bra 	BB3_41;

BB3_40:
	mul.wide.u32 	%rd42, %r138, 4;
	add.s64 	%rd43, %rd1, %rd42;
	ld.local.u32 	%r102, [%rd43];
	cvt.rn.f32.u32	%f184, %r102;
	sub.f32 	%f185, %f184, %f36;
	fma.rn.f32 	%f186, %f185, %f185, %f215;
	add.s32 	%r103, %r138, 1;
	mul.wide.u32 	%rd44, %r103, 4;
	add.s64 	%rd45, %rd1, %rd44;
	ld.local.u32 	%r104, [%rd45];
	cvt.rn.f32.u32	%f187, %r104;
	sub.f32 	%f188, %f187, %f36;
	fma.rn.f32 	%f189, %f188, %f188, %f186;
	add.s32 	%r105, %r138, 2;
	mul.wide.u32 	%rd46, %r105, 4;
	add.s64 	%rd47, %rd1, %rd46;
	ld.local.u32 	%r106, [%rd47];
	cvt.rn.f32.u32	%f190, %r106;
	sub.f32 	%f191, %f190, %f36;
	fma.rn.f32 	%f192, %f191, %f191, %f189;
	add.s32 	%r107, %r138, 3;
	mul.wide.u32 	%rd48, %r107, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.u32 	%r108, [%rd49];
	cvt.rn.f32.u32	%f193, %r108;
	sub.f32 	%f194, %f193, %f36;
	fma.rn.f32 	%f215, %f194, %f194, %f192;
	add.s32 	%r138, %r138, 4;
	setp.lt.u32	%p54, %r138, %r14;
	@%p54 bra 	BB3_40;

BB3_41:
	add.s32 	%r109, %r14, -1;
	cvt.rn.f32.u32	%f195, %r109;
	div.rn.f32 	%f196, %f215, %f195;
	div.rn.f32 	%f46, %f196, %f36;
	setp.ne.s32	%p55, %r14, 1;
	@%p55 bra 	BB3_43;

	// inline asm
	activemask.b32 %r110;
	// inline asm
	add.u64 	%rd50, %SP, 0;
	cvta.to.local.u64 	%rd51, %rd50;
	ld.local.v2.u32 	{%r112, %r113}, [%rd51];
	setp.eq.s32	%p56, %r112, %r113;
	vote.sync.all.pred 	%p57, %p56, %r110;
	mov.u32 	%r139, 2;
	@%p57 bra 	BB3_45;

BB3_43:
	// inline asm
	activemask.b32 %r117;
	// inline asm
	setp.lt.f32	%p58, %f46, 0f3C23D70A;
	vote.sync.all.pred 	%p59, %p58, %r117;
	mov.u32 	%r139, %r130;
	@%p59 bra 	BB3_45;

	// inline asm
	activemask.b32 %r119;
	// inline asm
	setp.le.f32	%p60, %f46, 0f3F800000;
	vote.sync.all.pred 	%p61, %p60, %r119;
	setp.ge.u32	%p62, %r14, %r90;
	and.pred  	%p63, %p61, %p62;
	selp.b32	%r139, %r130, %r16, %p63;

BB3_45:
	setp.lt.u32	%p64, %r130, %r139;
	@%p64 bra 	BB3_21;

BB3_46:
	div.u32 	%r142, %r140, %r139;
	setp.ne.s16	%p65, %rs5, 0;
	setp.ne.s32	%p66, %r139, 0;
	or.pred  	%p67, %p66, %p65;
	@%p67 bra 	BB3_48;

	mov.u64 	%rd52, $str6;
	cvta.global.u64 	%rd53, %rd52;
	mov.u64 	%rd54, $str1;
	cvta.global.u64 	%rd55, %rd54;
	mov.u32 	%r122, 287;
	mov.u64 	%rd56, 0;
	mov.u64 	%rd57, 2;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd53;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd55;
	.param .b32 param2;
	st.param.b32	[param2+0], %r122;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd56;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd57;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB3_48:
	@%p25 bra 	BB3_52;

	setp.eq.s32	%p69, %r139, 0;
	@%p69 bra 	BB3_50;

	and.b32  	%r123, %r41, 16;
	setp.eq.s32	%p70, %r123, 0;
	mul.f32 	%f197, %f207, 0f3B808081;
	selp.f32	%f198, %f207, %f197, %p70;
	cvt.rn.f32.u32	%f199, %r139;
	add.f32 	%f207, %f198, %f199;
	cvt.rn.f32.u32	%f200, %r128;
	mul.lo.s32 	%r124, %r142, %r139;
	cvt.rn.f32.u32	%f201, %r124;
	fma.rn.f32 	%f202, %f200, %f198, %f201;
	div.rn.f32 	%f203, %f202, %f207;
	cvt.rzi.u32.f32	%r142, %f203;
	bra.uni 	BB3_53;

BB3_52:
	cvt.rn.f32.u32	%f207, %r139;
	bra.uni 	BB3_53;

BB3_50:
	mov.u32 	%r142, %r128;

BB3_53:
	ld.param.u32 	%r127, [fractalRenderAdvancedFloat_param_1];
	mul.lo.s32 	%r125, %r5, %r127;
	cvt.u64.u32	%rd58, %r125;
	cvta.to.global.u64 	%rd59, %rd2;
	add.s64 	%rd60, %rd59, %rd58;
	mul.wide.u32 	%rd61, %r4, 8;
	add.s64 	%rd62, %rd60, %rd61;
	st.global.u32 	[%rd62], %r142;
	st.global.f32 	[%rd62+4], %f207;
	setp.gt.f32	%p71, %f207, 0f00000000;
	@%p71 bra 	BB3_55;

	mov.u64 	%rd63, $str7;
	cvta.global.u64 	%rd64, %rd63;
	mov.u64 	%rd65, $str1;
	cvta.global.u64 	%rd66, %rd65;
	mov.u32 	%r126, 309;
	mov.u64 	%rd67, 0;
	mov.u64 	%rd68, 2;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd64;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 param2;
	st.param.b32	[param2+0], %r126;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd67;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd68;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB3_55:
	ret;
}

	// .globl	fractalRenderAdvancedDouble
.visible .entry fractalRenderAdvancedDouble(
	.param .u64 fractalRenderAdvancedDouble_param_0,
	.param .u32 fractalRenderAdvancedDouble_param_1,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_2[8],
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_3[32],
	.param .u32 fractalRenderAdvancedDouble_param_4,
	.param .u32 fractalRenderAdvancedDouble_param_5,
	.param .u32 fractalRenderAdvancedDouble_param_6,
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_7[32],
	.param .u64 fractalRenderAdvancedDouble_param_8,
	.param .u32 fractalRenderAdvancedDouble_param_9,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot4[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<73>;
	.reg .b16 	%rs<6>;
	.reg .f32 	%f<59>;
	.reg .b32 	%r<171>;
	.reg .f64 	%fd<170>;
	.reg .b64 	%rd<70>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r38, [fractalRenderAdvancedDouble_param_2+4];
	ld.param.u32 	%r37, [fractalRenderAdvancedDouble_param_2];
	ld.param.f64 	%fd49, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd48, [fractalRenderAdvancedDouble_param_3+16];
	ld.param.f64 	%fd47, [fractalRenderAdvancedDouble_param_3+8];
	ld.param.f64 	%fd46, [fractalRenderAdvancedDouble_param_3];
	ld.param.u32 	%r39, [fractalRenderAdvancedDouble_param_4];
	ld.param.u32 	%r157, [fractalRenderAdvancedDouble_param_5];
	ld.param.u32 	%r41, [fractalRenderAdvancedDouble_param_6];
	ld.param.f64 	%fd53, [fractalRenderAdvancedDouble_param_7+24];
	ld.param.f64 	%fd52, [fractalRenderAdvancedDouble_param_7+16];
	ld.param.f64 	%fd51, [fractalRenderAdvancedDouble_param_7+8];
	ld.param.f64 	%fd50, [fractalRenderAdvancedDouble_param_7];
	ld.param.u64 	%rd3, [fractalRenderAdvancedDouble_param_8];
	ld.param.u32 	%r42, [fractalRenderAdvancedDouble_param_9];
	ld.param.u32 	%r44, [fractalRenderAdvancedDouble_param_10+4];
	ld.param.u32 	%r43, [fractalRenderAdvancedDouble_param_10];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB4_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r45, 65;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r45;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB4_2:
	mov.u32 	%r46, %tid.x;
	mov.u32 	%r47, %tid.y;
	mad.lo.s32 	%r48, %r1, %r47, %r46;
	shl.b32 	%r49, %r1, 2;
	and.b32  	%r50, %r48, 15;
	rem.u32 	%r51, %r48, %r49;
	sub.s32 	%r52, %r51, %r50;
	shr.u32 	%r53, %r52, 2;
	and.b32  	%r54, %r48, 3;
	add.s32 	%r55, %r53, %r54;
	div.u32 	%r56, %r48, %r49;
	shl.b32 	%r57, %r56, 2;
	bfe.u32 	%r58, %r48, 2, 2;
	add.s32 	%r59, %r57, %r58;
	mov.u32 	%r60, %ctaid.x;
	mad.lo.s32 	%r4, %r60, %r1, %r55;
	mov.u32 	%r61, %ctaid.y;
	mov.u32 	%r62, %ntid.y;
	mad.lo.s32 	%r5, %r61, %r62, %r59;
	setp.lt.u32	%p2, %r4, %r37;
	setp.lt.u32	%p3, %r5, %r38;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB4_55;
	bra.uni 	BB4_3;

BB4_3:
	and.b32  	%r64, %r41, 8;
	setp.eq.s32	%p5, %r64, 0;
	mov.u16 	%rs5, 0;
	@%p5 bra 	BB4_10;

	cvt.rn.f64.u32	%fd54, %r4;
	sub.f64 	%fd55, %fd52, %fd50;
	sub.f64 	%fd56, %fd48, %fd46;
	div.rn.f64 	%fd57, %fd56, %fd55;
	sub.f64 	%fd58, %fd53, %fd51;
	sub.f64 	%fd59, %fd49, %fd47;
	div.rn.f64 	%fd60, %fd59, %fd58;
	sub.f64 	%fd61, %fd46, %fd50;
	div.rn.f64 	%fd62, %fd61, %fd56;
	sub.f64 	%fd63, %fd53, %fd49;
	div.rn.f64 	%fd64, %fd63, %fd59;
	cvt.rn.f64.u32	%fd65, %r37;
	mul.f64 	%fd66, %fd65, %fd62;
	cvt.rn.f64.u32	%fd67, %r38;
	mul.f64 	%fd68, %fd67, %fd64;
	cvt.rn.f64.u32	%fd69, %r5;
	fma.rn.f64 	%fd161, %fd54, %fd57, %fd66;
	fma.rn.f64 	%fd162, %fd69, %fd60, %fd68;
	abs.f64 	%fd7, %fd161;
	setp.ge.f64	%p6, %fd7, 0d4330000000000000;
	@%p6 bra 	BB4_6;

	add.f64 	%fd70, %fd7, 0d3FE0000000000000;
	cvt.rzi.f64.f64	%fd71, %fd70;
	setp.lt.f64	%p7, %fd7, 0d3FE0000000000000;
	selp.f64	%fd72, 0d0000000000000000, %fd71, %p7;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r65, %temp}, %fd72;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r66}, %fd72;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r67}, %fd161;
	}
	and.b32  	%r68, %r67, -2147483648;
	or.b32  	%r69, %r66, %r68;
	mov.b64 	%fd161, {%r65, %r69};

BB4_6:
	cvt.rzi.s32.f64	%r6, %fd161;
	abs.f64 	%fd10, %fd162;
	setp.ge.f64	%p8, %fd10, 0d4330000000000000;
	@%p8 bra 	BB4_8;

	add.f64 	%fd73, %fd10, 0d3FE0000000000000;
	cvt.rzi.f64.f64	%fd74, %fd73;
	setp.lt.f64	%p9, %fd10, 0d3FE0000000000000;
	selp.f64	%fd75, 0d0000000000000000, %fd74, %p9;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r70, %temp}, %fd75;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r71}, %fd75;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r72}, %fd162;
	}
	and.b32  	%r73, %r72, -2147483648;
	or.b32  	%r74, %r71, %r73;
	mov.b64 	%fd162, {%r70, %r74};

BB4_8:
	setp.lt.u32	%p10, %r6, %r37;
	setp.gt.s32	%p11, %r6, -1;
	and.pred  	%p12, %p11, %p10;
	cvt.rzi.s32.f64	%r7, %fd162;
	setp.gt.s32	%p13, %r7, -1;
	and.pred  	%p14, %p12, %p13;
	setp.lt.u32	%p15, %r7, %r38;
	and.pred  	%p16, %p15, %p14;
	@!%p16 bra 	BB4_10;
	bra.uni 	BB4_9;

BB4_9:
	cvta.to.global.u64 	%rd10, %rd3;
	mul.lo.s32 	%r76, %r7, %r42;
	cvt.u64.u32	%rd11, %r76;
	add.s64 	%rd12, %rd10, %rd11;
	mul.wide.u32 	%rd13, %r6, 8;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.u32 	%r156, [%rd14];
	ld.global.f32 	%f56, [%rd14+4];
	mov.u16 	%rs5, 1;

BB4_10:
	and.b32  	%r77, %r41, 4;
	setp.eq.s32	%p17, %r77, 0;
	@%p17 bra 	BB4_17;

	and.b32  	%r78, %r4, -8;
	cvt.rn.f32.u32	%f13, %r78;
	and.b32  	%r79, %r5, -4;
	cvt.rn.f32.u32	%f14, %r79;
	cvt.rn.f32.u32	%f15, %r43;
	sub.f32 	%f16, %f15, %f13;
	cvt.rn.f32.u32	%f17, %r44;
	sub.f32 	%f18, %f17, %f14;
	mul.f32 	%f19, %f18, %f18;
	fma.rn.f32 	%f20, %f16, %f16, %f19;
	sqrt.rn.f32 	%f21, %f20;
	mul.f32 	%f22, %f21, 0f3CD94079;
	ld.global.f32 	%f23, [screenDistance];
	div.rn.f32 	%f3, %f22, %f23;
	abs.f32 	%f4, %f3;
	setp.leu.f32	%p18, %f4, 0f3F800000;
	mov.f32 	%f57, %f4;
	@%p18 bra 	BB4_13;

	rcp.rn.f32 	%f57, %f4;

BB4_13:
	mul.rn.f32 	%f24, %f57, %f57;
	mov.f32 	%f25, 0fC0B59883;
	mov.f32 	%f26, 0fBF52C7EA;
	fma.rn.f32 	%f27, %f24, %f26, %f25;
	mov.f32 	%f28, 0fC0D21907;
	fma.rn.f32 	%f29, %f27, %f24, %f28;
	mul.f32 	%f30, %f24, %f29;
	mul.f32 	%f31, %f57, %f30;
	add.f32 	%f32, %f24, 0f41355DC0;
	mov.f32 	%f33, 0f41E6BD60;
	fma.rn.f32 	%f34, %f32, %f24, %f33;
	mov.f32 	%f35, 0f419D92C8;
	fma.rn.f32 	%f36, %f34, %f24, %f35;
	rcp.rn.f32 	%f37, %f36;
	fma.rn.f32 	%f38, %f31, %f37, %f57;
	mov.f32 	%f39, 0f3FC90FDB;
	sub.f32 	%f40, %f39, %f38;
	setp.gt.f32	%p19, %f4, 0f3F800000;
	selp.f32	%f41, %f40, %f38, %p19;
	mov.b32 	 %r80, %f41;
	mov.b32 	 %r81, %f3;
	and.b32  	%r82, %r81, -2147483648;
	or.b32  	%r83, %r80, %r82;
	mov.b32 	 %f42, %r83;
	setp.gtu.f32	%p20, %f4, 0f7F800000;
	selp.f32	%f43, %f41, %f42, %p20;
	mul.f32 	%f44, %f43, 0f43340000;
	div.rn.f32 	%f7, %f44, 0f40490FDB;
	setp.ge.f32	%p21, %f7, 0f00000000;
	@%p21 bra 	BB4_15;

	mov.u64 	%rd15, $str5;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r84, 233;
	mov.u64 	%rd19, 0;
	mov.u64 	%rd20, 2;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r84;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd20;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB4_15:
	fma.rn.f32 	%f45, %f7, 0fBC964FDA, 0f3F8CEADD;
	setp.gtu.f32	%p22, %f7, 0f40B00000;
	selp.f32	%f46, %f45, 0f3F800000, %p22;
	cvt.rn.f32.u32	%f47, %r157;
	mul.f32 	%f48, %f47, %f46;
	cvt.rzi.u32.f32	%r157, %f48;
	setp.gtu.f32	%p23, %f7, 0f42700000;
	@%p23 bra 	BB4_17;

	mov.u32 	%r85, 1;
	max.u32 	%r157, %r85, %r157;

BB4_17:
	setp.eq.f32	%p24, %f56, 0f00000000;
	setp.eq.s16	%p25, %rs5, 0;
	or.pred  	%p26, %p25, %p24;
	setp.eq.s32	%p27, %r157, 0;
	and.pred  	%p28, %p26, %p27;
	selp.b32	%r13, 1, %r157, %p28;
	cvt.rn.f64.u32	%fd76, %r37;
	sub.f64 	%fd77, %fd48, %fd46;
	div.rn.f64 	%fd13, %fd77, %fd76;
	cvt.rn.f64.u32	%fd78, %r38;
	sub.f64 	%fd79, %fd49, %fd47;
	div.rn.f64 	%fd14, %fd79, %fd78;
	setp.lt.u32	%p29, %r13, 257;
	@%p29 bra 	BB4_19;

	mov.u64 	%rd21, $str8;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r86, 110;
	mov.u64 	%rd25, 0;
	mov.u64 	%rd26, 2;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r86;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 13

BB4_19:
	setp.eq.s32	%p30, %r13, 0;
	mov.u32 	%r168, 0;
	mov.u32 	%r167, %r168;
	@%p30 bra 	BB4_46;

	cvt.rn.f64.u32	%fd15, %r4;
	cvt.rn.f64.u32	%fd16, %r5;
	ld.const.f64 	%fd17, [coefficients+8];
	ld.const.f64 	%fd18, [coefficients];
	ld.const.f64 	%fd19, [coefficients+16];
	add.f64 	%fd20, %fd19, %fd19;
	ld.const.f64 	%fd21, [coefficients+24];
	mul.f64 	%fd22, %fd21, 0d4008000000000000;
	ld.const.f64 	%fd23, [roots];
	ld.const.f64 	%fd24, [roots+8];
	ld.const.f64 	%fd25, [roots+16];
	ld.const.f64 	%fd26, [roots+24];
	ld.const.f64 	%fd27, [roots+32];
	mov.u32 	%r90, 0;
	ld.const.f64 	%fd28, [roots+40];
	mov.u32 	%r158, %r90;
	mov.u32 	%r168, %r90;
	mov.u32 	%r167, %r13;

BB4_21:
	mov.u32 	%r16, %r167;
	mov.u32 	%r14, %r158;
	ld.param.f64 	%fd160, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd159, [fractalRenderAdvancedDouble_param_3];
	cvt.rn.f64.u32	%fd80, %r16;
	cvt.rn.f64.u32	%fd81, %r14;
	div.rn.f64 	%fd82, %fd81, %fd80;
	add.f64 	%fd83, %fd15, %fd82;
	add.f64 	%fd84, %fd16, %fd82;
	neg.f64 	%fd85, %fd84;
	fma.rn.f64 	%fd164, %fd13, %fd83, %fd159;
	fma.rn.f64 	%fd163, %fd14, %fd85, %fd160;
	setp.eq.s32	%p31, %r39, 0;
	mov.u32 	%r161, %r90;
	mov.u32 	%r162, %r90;
	@%p31 bra 	BB4_29;

BB4_22:
	mul.f64 	%fd86, %fd163, %fd163;
	mul.f64 	%fd87, %fd164, %fd164;
	sub.f64 	%fd88, %fd87, %fd86;
	mul.f64 	%fd89, %fd164, %fd163;
	fma.rn.f64 	%fd90, %fd164, %fd163, %fd89;
	mul.f64 	%fd91, %fd164, %fd88;
	mul.f64 	%fd92, %fd163, %fd90;
	sub.f64 	%fd93, %fd91, %fd92;
	mul.f64 	%fd94, %fd164, %fd90;
	fma.rn.f64 	%fd95, %fd163, %fd88, %fd94;
	fma.rn.f64 	%fd96, %fd164, %fd17, %fd18;
	mul.f64 	%fd97, %fd90, %fd19;
	fma.rn.f64 	%fd98, %fd88, %fd19, %fd96;
	fma.rn.f64 	%fd99, %fd163, %fd17, %fd97;
	fma.rn.f64 	%fd100, %fd93, %fd21, %fd98;
	fma.rn.f64 	%fd101, %fd95, %fd21, %fd99;
	fma.rn.f64 	%fd102, %fd164, %fd20, %fd17;
	mul.f64 	%fd103, %fd90, %fd22;
	fma.rn.f64 	%fd104, %fd88, %fd22, %fd102;
	fma.rn.f64 	%fd105, %fd163, %fd20, %fd103;
	abs.f64 	%fd106, %fd104;
	abs.f64 	%fd107, %fd105;
	add.f64 	%fd108, %fd106, %fd107;
	rcp.rn.f64 	%fd109, %fd108;
	mul.f64 	%fd110, %fd100, %fd109;
	mul.f64 	%fd111, %fd101, %fd109;
	mul.f64 	%fd112, %fd104, %fd109;
	mul.f64 	%fd113, %fd105, %fd109;
	mul.f64 	%fd114, %fd113, %fd113;
	fma.rn.f64 	%fd115, %fd112, %fd112, %fd114;
	rcp.rn.f64 	%fd116, %fd115;
	mul.f64 	%fd117, %fd111, %fd113;
	fma.rn.f64 	%fd118, %fd110, %fd112, %fd117;
	mul.f64 	%fd119, %fd116, %fd118;
	mul.f64 	%fd120, %fd111, %fd112;
	mul.f64 	%fd121, %fd110, %fd113;
	sub.f64 	%fd122, %fd120, %fd121;
	mul.f64 	%fd123, %fd116, %fd122;
	sub.f64 	%fd164, %fd164, %fd119;
	sub.f64 	%fd163, %fd163, %fd123;
	sub.f64 	%fd124, %fd164, %fd23;
	abs.f64 	%fd125, %fd124;
	setp.geu.f64	%p32, %fd125, 0d3F1A36E2EB1C432D;
	@%p32 bra 	BB4_24;

	add.s32 	%r162, %r161, 1;
	sub.f64 	%fd126, %fd163, %fd24;
	abs.f64 	%fd127, %fd126;
	setp.lt.f64	%p33, %fd127, 0d3F1A36E2EB1C432D;
	@%p33 bra 	BB4_29;

BB4_24:
	sub.f64 	%fd128, %fd164, %fd25;
	abs.f64 	%fd129, %fd128;
	setp.geu.f64	%p34, %fd129, 0d3F1A36E2EB1C432D;
	@%p34 bra 	BB4_26;

	add.s32 	%r162, %r161, 1;
	sub.f64 	%fd130, %fd163, %fd26;
	abs.f64 	%fd131, %fd130;
	setp.lt.f64	%p35, %fd131, 0d3F1A36E2EB1C432D;
	@%p35 bra 	BB4_29;

BB4_26:
	sub.f64 	%fd132, %fd164, %fd27;
	abs.f64 	%fd133, %fd132;
	add.s32 	%r161, %r161, 1;
	setp.lt.f64	%p36, %fd133, 0d3F1A36E2EB1C432D;
	@%p36 bra 	BB4_28;
	bra.uni 	BB4_27;

BB4_28:
	setp.lt.u32	%p38, %r161, %r39;
	sub.f64 	%fd134, %fd163, %fd28;
	abs.f64 	%fd135, %fd134;
	setp.geu.f64	%p39, %fd135, 0d3F1A36E2EB1C432D;
	and.pred  	%p40, %p39, %p38;
	mov.u32 	%r162, %r161;
	@%p40 bra 	BB4_22;
	bra.uni 	BB4_29;

BB4_27:
	setp.lt.u32	%p37, %r161, %r39;
	mov.u32 	%r162, %r161;
	@%p37 bra 	BB4_22;

BB4_29:
	add.s32 	%r168, %r162, %r168;
	setp.gt.u32	%p41, %r14, 9;
	@%p41 bra 	BB4_31;

	add.u64 	%rd27, %SP, 0;
	cvta.to.local.u64 	%rd28, %rd27;
	mul.wide.u32 	%rd29, %r14, 4;
	add.s64 	%rd30, %rd28, %rd29;
	st.local.u32 	[%rd30], %r162;

BB4_31:
	setp.lt.u32	%p42, %r14, 10;
	and.b32  	%r93, %r41, 1;
	setp.eq.b32	%p43, %r93, 1;
	setp.ne.s32	%p44, %r14, 0;
	and.pred  	%p45, %p42, %p44;
	and.pred  	%p46, %p45, %p43;
	shr.u32 	%r94, %r16, 1;
	setp.eq.s32	%p47, %r14, %r94;
	or.pred  	%p48, %p46, %p47;
	add.s32 	%r158, %r14, 1;
	mov.u32 	%r167, %r16;
	@!%p48 bra 	BB4_45;
	bra.uni 	BB4_32;

BB4_32:
	div.u32 	%r95, %r168, %r158;
	cvt.rn.f64.u32	%fd35, %r95;
	setp.eq.s32	%p49, %r14, 0;
	mov.f64 	%fd169, 0d0000000000000000;
	@%p49 bra 	BB4_41;

	and.b32  	%r97, %r14, 3;
	setp.eq.s32	%p50, %r97, 0;
	mov.f64 	%fd169, 0d0000000000000000;
	mov.u32 	%r166, 0;
	@%p50 bra 	BB4_39;

	setp.eq.s32	%p51, %r97, 1;
	mov.f64 	%fd166, 0d0000000000000000;
	mov.u32 	%r164, 0;
	@%p51 bra 	BB4_38;

	setp.eq.s32	%p52, %r97, 2;
	mov.f64 	%fd165, 0d0000000000000000;
	mov.u32 	%r163, 0;
	@%p52 bra 	BB4_37;

	add.u64 	%rd31, %SP, 0;
	cvta.to.local.u64 	%rd32, %rd31;
	ld.local.u32 	%r103, [%rd32];
	cvt.rn.f64.u32	%fd140, %r103;
	sub.f64 	%fd141, %fd140, %fd35;
	fma.rn.f64 	%fd165, %fd141, %fd141, 0d0000000000000000;
	mov.u32 	%r163, 1;

BB4_37:
	add.u64 	%rd33, %SP, 0;
	cvta.to.local.u64 	%rd34, %rd33;
	mul.wide.u32 	%rd35, %r163, 4;
	add.s64 	%rd36, %rd34, %rd35;
	ld.local.u32 	%r104, [%rd36];
	cvt.rn.f64.u32	%fd142, %r104;
	sub.f64 	%fd143, %fd142, %fd35;
	fma.rn.f64 	%fd166, %fd143, %fd143, %fd165;
	add.s32 	%r164, %r163, 1;

BB4_38:
	add.u64 	%rd37, %SP, 0;
	cvta.to.local.u64 	%rd38, %rd37;
	mul.wide.u32 	%rd39, %r164, 4;
	add.s64 	%rd40, %rd38, %rd39;
	ld.local.u32 	%r105, [%rd40];
	cvt.rn.f64.u32	%fd144, %r105;
	sub.f64 	%fd145, %fd144, %fd35;
	fma.rn.f64 	%fd169, %fd145, %fd145, %fd166;
	add.s32 	%r166, %r164, 1;

BB4_39:
	add.u64 	%rd41, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd41;
	setp.lt.u32	%p53, %r14, 4;
	@%p53 bra 	BB4_41;

BB4_40:
	mul.wide.u32 	%rd42, %r166, 4;
	add.s64 	%rd43, %rd1, %rd42;
	ld.local.u32 	%r106, [%rd43];
	cvt.rn.f64.u32	%fd146, %r106;
	sub.f64 	%fd147, %fd146, %fd35;
	fma.rn.f64 	%fd148, %fd147, %fd147, %fd169;
	add.s32 	%r107, %r166, 1;
	mul.wide.u32 	%rd44, %r107, 4;
	add.s64 	%rd45, %rd1, %rd44;
	ld.local.u32 	%r108, [%rd45];
	cvt.rn.f64.u32	%fd149, %r108;
	sub.f64 	%fd150, %fd149, %fd35;
	fma.rn.f64 	%fd151, %fd150, %fd150, %fd148;
	add.s32 	%r109, %r166, 2;
	mul.wide.u32 	%rd46, %r109, 4;
	add.s64 	%rd47, %rd1, %rd46;
	ld.local.u32 	%r110, [%rd47];
	cvt.rn.f64.u32	%fd152, %r110;
	sub.f64 	%fd153, %fd152, %fd35;
	fma.rn.f64 	%fd154, %fd153, %fd153, %fd151;
	add.s32 	%r111, %r166, 3;
	mul.wide.u32 	%rd48, %r111, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.u32 	%r112, [%rd49];
	cvt.rn.f64.u32	%fd155, %r112;
	sub.f64 	%fd156, %fd155, %fd35;
	fma.rn.f64 	%fd169, %fd156, %fd156, %fd154;
	add.s32 	%r166, %r166, 4;
	setp.lt.u32	%p54, %r166, %r14;
	@%p54 bra 	BB4_40;

BB4_41:
	add.s32 	%r113, %r14, -1;
	cvt.rn.f64.u32	%fd157, %r113;
	div.rn.f64 	%fd158, %fd169, %fd157;
	div.rn.f64 	%fd45, %fd158, %fd35;
	setp.ne.s32	%p55, %r14, 1;
	@%p55 bra 	BB4_43;

	// inline asm
	activemask.b32 %r114;
	// inline asm
	add.u64 	%rd50, %SP, 0;
	cvta.to.local.u64 	%rd51, %rd50;
	ld.local.v2.u32 	{%r116, %r117}, [%rd51];
	setp.eq.s32	%p56, %r116, %r117;
	vote.sync.all.pred 	%p57, %p56, %r114;
	mov.u32 	%r167, 2;
	@%p57 bra 	BB4_45;

BB4_43:
	// inline asm
	activemask.b32 %r121;
	// inline asm
	setp.lt.f64	%p58, %fd45, 0d3F847AE140000000;
	vote.sync.all.pred 	%p59, %p58, %r121;
	mov.u32 	%r167, %r158;
	@%p59 bra 	BB4_45;

	// inline asm
	activemask.b32 %r123;
	// inline asm
	setp.le.f64	%p60, %fd45, 0d3FF0000000000000;
	vote.sync.all.pred 	%p61, %p60, %r123;
	setp.ge.u32	%p62, %r14, %r94;
	and.pred  	%p63, %p61, %p62;
	selp.b32	%r167, %r158, %r16, %p63;

BB4_45:
	setp.lt.u32	%p64, %r158, %r167;
	@%p64 bra 	BB4_21;

BB4_46:
	div.u32 	%r170, %r168, %r167;
	setp.ne.s16	%p65, %rs5, 0;
	setp.ne.s32	%p66, %r167, 0;
	or.pred  	%p67, %p66, %p65;
	@%p67 bra 	BB4_48;

	mov.u64 	%rd52, $str6;
	cvta.global.u64 	%rd53, %rd52;
	mov.u64 	%rd54, $str1;
	cvta.global.u64 	%rd55, %rd54;
	mov.u32 	%r126, 287;
	mov.u64 	%rd56, 0;
	mov.u64 	%rd57, 2;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd53;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd55;
	.param .b32 param2;
	st.param.b32	[param2+0], %r126;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd56;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd57;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14

BB4_48:
	setp.eq.s16	%p72, %rs5, 0;
	@%p72 bra 	BB4_52;

	setp.eq.s32	%p69, %r167, 0;
	@%p69 bra 	BB4_50;

	and.b32  	%r127, %r41, 16;
	setp.eq.s32	%p70, %r127, 0;
	mul.f32 	%f49, %f56, 0f3B808081;
	selp.f32	%f50, %f56, %f49, %p70;
	cvt.rn.f32.u32	%f51, %r167;
	add.f32 	%f56, %f50, %f51;
	cvt.rn.f32.u32	%f52, %r156;
	mul.lo.s32 	%r128, %r170, %r167;
	cvt.rn.f32.u32	%f53, %r128;
	fma.rn.f32 	%f54, %f52, %f50, %f53;
	div.rn.f32 	%f55, %f54, %f56;
	cvt.rzi.u32.f32	%r170, %f55;
	bra.uni 	BB4_53;

BB4_52:
	cvt.rn.f32.u32	%f56, %r167;
	bra.uni 	BB4_53;

BB4_50:
	mov.u32 	%r170, %r156;

BB4_53:
	mov.u32 	%r151, %ntid.x;
	mov.u32 	%r150, %tid.x;
	mov.u32 	%r149, %tid.y;
	mad.lo.s32 	%r148, %r151, %r149, %r150;
	shl.b32 	%r147, %r151, 2;
	ld.param.u64 	%rd69, [fractalRenderAdvancedDouble_param_0];
	ld.param.u32 	%r146, [fractalRenderAdvancedDouble_param_1];
	div.u32 	%r145, %r148, %r147;
	bfe.u32 	%r144, %r148, 2, 2;
	shl.b32 	%r143, %r145, 2;
	add.s32 	%r142, %r143, %r144;
	mov.u32 	%r141, %ntid.y;
	mov.u32 	%r140, %ctaid.y;
	mad.lo.s32 	%r139, %r140, %r141, %r142;
	and.b32  	%r138, %r148, 15;
	rem.u32 	%r137, %r148, %r147;
	sub.s32 	%r136, %r137, %r138;
	and.b32  	%r135, %r148, 3;
	shr.u32 	%r134, %r136, 2;
	add.s32 	%r133, %r134, %r135;
	mov.u32 	%r132, %ctaid.x;
	mad.lo.s32 	%r131, %r132, %r151, %r133;
	mul.lo.s32 	%r129, %r139, %r146;
	cvt.u64.u32	%rd58, %r129;
	cvta.to.global.u64 	%rd59, %rd69;
	add.s64 	%rd60, %rd59, %rd58;
	mul.wide.u32 	%rd61, %r131, 8;
	add.s64 	%rd62, %rd60, %rd61;
	st.global.u32 	[%rd62], %r170;
	st.global.f32 	[%rd62+4], %f56;
	setp.gt.f32	%p71, %f56, 0f00000000;
	@%p71 bra 	BB4_55;

	mov.u64 	%rd63, $str7;
	cvta.global.u64 	%rd64, %rd63;
	mov.u64 	%rd65, $str1;
	cvta.global.u64 	%rd66, %rd65;
	mov.u32 	%r130, 309;
	mov.u64 	%rd67, 0;
	mov.u64 	%rd68, 2;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd64;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 param2;
	st.param.b32	[param2+0], %r130;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd67;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd68;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 15

BB4_55:
	ret;
}

	// .globl	compose
.visible .entry compose(
	.param .u64 compose_param_0,
	.param .u32 compose_param_1,
	.param .u64 compose_param_2,
	.param .u32 compose_param_3,
	.param .u64 compose_param_4,
	.param .u32 compose_param_5,
	.param .u32 compose_param_6,
	.param .u64 compose_param_7,
	.param .u32 compose_param_8,
	.param .u32 compose_param_9
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<35>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [compose_param_0];
	ld.param.u32 	%r7, [compose_param_1];
	ld.param.u64 	%rd3, [compose_param_4];
	ld.param.u32 	%r10, [compose_param_5];
	ld.param.u32 	%r11, [compose_param_6];
	ld.param.u64 	%rd4, [compose_param_7];
	ld.param.u32 	%r8, [compose_param_8];
	ld.param.u32 	%r9, [compose_param_9];
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %tid.x;
	mad.lo.s32 	%r1, %r13, %r12, %r14;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %ntid.y;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r2, %r15, %r16, %r17;
	setp.ge.u32	%p1, %r2, %r11;
	setp.ge.u32	%p2, %r1, %r10;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_7;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.lo.s32 	%r18, %r2, %r7;
	cvt.u64.u32	%rd6, %r18;
	add.s64 	%rd7, %rd5, %rd6;
	ld.const.u8 	%rs1, [VISUALIZE_SAMPLE_COUNT];
	setp.eq.s16	%p4, %rs1, 0;
	mul.wide.u32 	%rd8, %r1, 8;
	add.s64 	%rd1, %rd7, %rd8;
	@%p4 bra 	BB5_3;

	ld.global.f32 	%f1, [%rd1+4];
	cvt.rzi.u32.f32	%r19, %f1;
	min.u32 	%r20, %r19, %r9;
	cvt.rn.f32.u32	%f2, %r20;
	cvt.rn.f32.u32	%f3, %r9;
	div.rn.f32 	%f4, %f2, %f3;
	mul.f32 	%f5, %f4, 0f437F0000;
	cvt.rzi.s32.f32	%r21, %f5;
	and.b32  	%r22, %r21, 255;
	prmt.b32 	%r23, %r22, %r22, 30212;
	prmt.b32 	%r24, %r22, %r23, 28756;
	or.b32  	%r34, %r24, -16777216;
	bra.uni 	BB5_6;

BB5_3:
	ld.global.u32 	%r25, [%rd1];
	ld.const.u32 	%r26, [colorMagnifier];
	mul.lo.s32 	%r27, %r26, %r25;
	rem.u32 	%r28, %r27, %r8;
	sub.s32 	%r29, %r8, %r28;
	add.s32 	%r4, %r29, -1;
	setp.lt.u32	%p5, %r4, %r8;
	@%p5 bra 	BB5_5;

	mov.u64 	%rd9, $str9;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str10;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r30, 73;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r30;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 16

BB5_5:
	shl.b32 	%r31, %r4, 2;
	mov.u32 	%r32, 0;
	suld.b.2d.b32.trap {%r34}, [%rd4, {%r31, %r32}];

BB5_6:
	shl.b32 	%r33, %r1, 2;
	sust.b.2d.b32.trap 	[%rd3, {%r33, %r2}], {%r34};

BB5_7:
	ret;
}

	// .globl	fractalRenderUnderSampled
.visible .entry fractalRenderUnderSampled(
	.param .u64 fractalRenderUnderSampled_param_0,
	.param .u32 fractalRenderUnderSampled_param_1,
	.param .u32 fractalRenderUnderSampled_param_2,
	.param .u32 fractalRenderUnderSampled_param_3,
	.param .f32 fractalRenderUnderSampled_param_4,
	.param .f32 fractalRenderUnderSampled_param_5,
	.param .f32 fractalRenderUnderSampled_param_6,
	.param .f32 fractalRenderUnderSampled_param_7,
	.param .u32 fractalRenderUnderSampled_param_8,
	.param .u32 fractalRenderUnderSampled_param_9
)
{
	.reg .pred 	%p<20>;
	.reg .f32 	%f<74>;
	.reg .b32 	%r<51>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [fractalRenderUnderSampled_param_0];
	ld.param.u32 	%r12, [fractalRenderUnderSampled_param_1];
	ld.param.u32 	%r13, [fractalRenderUnderSampled_param_2];
	ld.param.u32 	%r14, [fractalRenderUnderSampled_param_3];
	ld.param.f32 	%f14, [fractalRenderUnderSampled_param_4];
	ld.param.f32 	%f15, [fractalRenderUnderSampled_param_5];
	ld.param.f32 	%f16, [fractalRenderUnderSampled_param_6];
	ld.param.f32 	%f17, [fractalRenderUnderSampled_param_7];
	ld.param.u32 	%r15, [fractalRenderUnderSampled_param_8];
	ld.param.u32 	%r16, [fractalRenderUnderSampled_param_9];
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r20, %r18, %r17, %r19;
	mul.lo.s32 	%r1, %r20, %r16;
	mov.u32 	%r21, %ctaid.y;
	mov.u32 	%r22, %ntid.y;
	mov.u32 	%r23, %tid.y;
	mad.lo.s32 	%r24, %r21, %r22, %r23;
	mul.lo.s32 	%r2, %r24, %r16;
	sub.s32 	%r25, %r14, %r16;
	setp.ge.u32	%p1, %r2, %r25;
	sub.s32 	%r26, %r13, %r16;
	setp.ge.u32	%p2, %r1, %r26;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB6_19;

	sub.f32 	%f18, %f16, %f14;
	cvt.rn.f32.u32	%f19, %r13;
	div.rn.f32 	%f20, %f18, %f19;
	cvt.rn.f32.u32	%f21, %r1;
	fma.rn.f32 	%f73, %f21, %f20, %f14;
	setp.eq.s32	%p4, %r15, 0;
	mov.u32 	%r46, 0;
	@%p4 bra 	BB6_10;

	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f2, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f3, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f4, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f5, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f6, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f7, %fd12;
	cvt.rn.f32.u32	%f22, %r2;
	sub.f32 	%f23, %f17, %f15;
	cvt.rn.f32.u32	%f24, %r14;
	div.rn.f32 	%f25, %f23, %f24;
	mul.f32 	%f26, %f22, %f25;
	sub.f32 	%f72, %f17, %f26;
	mov.u32 	%r46, 0;

BB6_3:
	mul.f32 	%f27, %f72, %f72;
	mul.f32 	%f28, %f73, %f73;
	sub.f32 	%f29, %f28, %f27;
	mul.f32 	%f30, %f73, %f72;
	fma.rn.f32 	%f31, %f73, %f72, %f30;
	mul.f32 	%f32, %f73, %f29;
	mul.f32 	%f33, %f72, %f31;
	sub.f32 	%f34, %f32, %f33;
	mul.f32 	%f35, %f73, %f31;
	fma.rn.f32 	%f36, %f72, %f29, %f35;
	cvt.f64.f32	%fd13, %f73;
	cvt.f64.f32	%fd14, %f72;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f29;
	cvt.f64.f32	%fd17, %f31;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f34;
	cvt.f64.f32	%fd22, %f36;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f37, %fd23;
	cvt.rn.f32.f64	%f38, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f39, %fd27;
	cvt.rn.f32.f64	%f40, %fd28;
	abs.f32 	%f41, %f39;
	abs.f32 	%f42, %f40;
	add.f32 	%f43, %f41, %f42;
	rcp.rn.f32 	%f44, %f43;
	mul.f32 	%f45, %f37, %f44;
	mul.f32 	%f46, %f38, %f44;
	mul.f32 	%f47, %f44, %f39;
	mul.f32 	%f48, %f44, %f40;
	mul.f32 	%f49, %f48, %f48;
	fma.rn.f32 	%f50, %f47, %f47, %f49;
	rcp.rn.f32 	%f51, %f50;
	mul.f32 	%f52, %f46, %f48;
	fma.rn.f32 	%f53, %f45, %f47, %f52;
	mul.f32 	%f54, %f51, %f53;
	mul.f32 	%f55, %f46, %f47;
	mul.f32 	%f56, %f45, %f48;
	sub.f32 	%f57, %f55, %f56;
	mul.f32 	%f58, %f51, %f57;
	sub.f32 	%f73, %f73, %f54;
	sub.f32 	%f72, %f72, %f58;
	add.s32 	%r46, %r46, 1;
	sub.f32 	%f59, %f73, %f2;
	abs.f32 	%f60, %f59;
	setp.geu.f32	%p5, %f60, 0f38D1B717;
	@%p5 bra 	BB6_5;

	sub.f32 	%f61, %f72, %f3;
	abs.f32 	%f62, %f61;
	setp.lt.f32	%p6, %f62, 0f38D1B717;
	@%p6 bra 	BB6_10;

BB6_5:
	sub.f32 	%f63, %f73, %f4;
	abs.f32 	%f64, %f63;
	setp.geu.f32	%p7, %f64, 0f38D1B717;
	@%p7 bra 	BB6_7;

	sub.f32 	%f65, %f72, %f5;
	abs.f32 	%f66, %f65;
	setp.lt.f32	%p8, %f66, 0f38D1B717;
	@%p8 bra 	BB6_10;

BB6_7:
	sub.f32 	%f67, %f73, %f6;
	abs.f32 	%f68, %f67;
	setp.lt.f32	%p9, %f68, 0f38D1B717;
	@%p9 bra 	BB6_9;
	bra.uni 	BB6_8;

BB6_9:
	setp.lt.u32	%p11, %r46, %r15;
	sub.f32 	%f69, %f72, %f7;
	abs.f32 	%f70, %f69;
	setp.geu.f32	%p12, %f70, 0f38D1B717;
	and.pred  	%p13, %p12, %p11;
	@%p13 bra 	BB6_3;
	bra.uni 	BB6_10;

BB6_8:
	setp.lt.u32	%p10, %r46, %r15;
	@%p10 bra 	BB6_3;

BB6_10:
	setp.eq.s32	%p14, %r16, 0;
	@%p14 bra 	BB6_19;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.lo.s32 	%r38, %r2, %r12;
	cvt.u64.u32	%rd4, %r38;
	add.s64 	%rd5, %rd3, %rd4;
	cvt.rn.f32.u32	%f71, %r16;
	rcp.rn.f32 	%f13, %f71;
	mul.wide.u32 	%rd6, %r1, 8;
	add.s64 	%rd1, %rd5, %rd6;
	and.b32  	%r32, %r16, 3;
	mov.u32 	%r47, 1;
	mov.u32 	%r50, 0;
	setp.eq.s32	%p15, %r32, 0;
	@%p15 bra 	BB6_17;

	setp.eq.s32	%p16, %r32, 1;
	@%p16 bra 	BB6_16;

	setp.eq.s32	%p17, %r32, 2;
	@%p17 bra 	BB6_15;

	st.global.u32 	[%rd1], %r46;
	st.global.f32 	[%rd1+4], %f13;
	mov.u32 	%r47, 2;

BB6_15:
	st.global.u32 	[%rd1], %r46;
	st.global.f32 	[%rd1+4], %f13;
	mov.u32 	%r50, %r47;

BB6_16:
	st.global.u32 	[%rd1], %r46;
	st.global.f32 	[%rd1+4], %f13;
	add.s32 	%r50, %r50, 1;

BB6_17:
	setp.lt.u32	%p18, %r16, 4;
	@%p18 bra 	BB6_19;

BB6_18:
	st.global.u32 	[%rd1], %r46;
	st.global.f32 	[%rd1+4], %f13;
	add.s32 	%r50, %r50, 4;
	setp.lt.u32	%p19, %r50, %r16;
	@%p19 bra 	BB6_18;

BB6_19:
	ret;
}

	// .globl	debug
.visible .entry debug(

)
{



	ret;
}


