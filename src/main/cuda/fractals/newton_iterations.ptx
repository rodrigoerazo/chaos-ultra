//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24330188
// Cuda compilation tools, release 9.2, V9.2.148
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	init
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 8 .b8 roots[48];
.const .align 8 .b8 coefficients[32];
.const .align 4 .u32 colorMagnifier;
.const .align 1 .u8 VISUALIZE_SAMPLE_COUNT;
.global .align 4 .u32 seed;
.global .align 4 .u32 WARP_SIZE_X = 8;
.global .align 4 .u32 WARP_SIZE_Y = 4;
.global .align 4 .u32 USE_ADAPTIVE_SS_FLAG_MASK = 1;
.global .align 4 .u32 USE_FOVEATION_FLAG_MASK = 4;
.global .align 4 .u32 USE_SAMPLE_REUSE_FLAG_MASK = 8;
.global .align 4 .u32 IS_ZOOMING_FLAG_MASK = 16;
.global .align 4 .u32 ZOOMING_IN_FLAG_MASK = 32;
.global .align 4 .u32 visualityAmplifyCoeff = 10;
.global .align 4 .f32 screenDistance = 0f42700000;
.global .align 4 .f32 pixelRealWidthInCm = 0f3CD94079;
.global .align 16 .b8 $str[34] = {98, 0, 108, 0, 111, 0, 99, 0, 107, 0, 68, 0, 105, 0, 109, 0, 46, 0, 120, 0, 32, 0, 61, 0, 61, 0, 32, 0, 51, 0, 50, 0, 0, 0};
.global .align 16 .b8 $str1[138] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 82, 0, 101, 0, 110, 0, 100, 0, 101, 0, 114, 0, 101, 0, 114, 0, 71, 0, 101, 0, 110, 0, 101, 0, 114, 0, 105, 0, 99, 0, 46, 0, 99, 0, 117, 0, 0, 0};
.global .align 16 .b8 $str2[42] = {109, 0, 97, 0, 120, 0, 83, 0, 117, 0, 112, 0, 101, 0, 114, 0, 83, 0, 97, 0, 109, 0, 112, 0, 108, 0, 105, 0, 110, 0, 103, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str3[34] = {118, 0, 105, 0, 115, 0, 117, 0, 97, 0, 108, 0, 65, 0, 110, 0, 103, 0, 108, 0, 101, 0, 32, 0, 62, 0, 61, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str4[44] = {109, 0, 97, 0, 120, 0, 83, 0, 117, 0, 112, 0, 101, 0, 114, 0, 83, 0, 97, 0, 109, 0, 112, 0, 108, 0, 105, 0, 110, 0, 103, 0, 32, 0, 62, 0, 61, 0, 32, 0, 49, 0, 0, 0};
.global .align 16 .b8 $str5[40] = {112, 0, 79, 0, 117, 0, 116, 0, 112, 0, 117, 0, 116, 0, 45, 0, 62, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str8[36] = {114, 0, 101, 0, 115, 0, 117, 0, 108, 0, 116, 0, 46, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str9[68] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 60, 0, 61, 0, 32, 0, 77, 0, 65, 0, 88, 0, 95, 0, 83, 0, 85, 0, 80, 0, 69, 0, 82, 0, 95, 0, 83, 0, 65, 0, 77, 0, 80, 0, 76, 0, 73, 0, 78, 0, 71, 0, 0, 0};
.global .align 16 .b8 $str10[16] = {100, 0, 121, 0, 32, 0, 60, 0, 61, 0, 32, 0, 49, 0, 0, 0};
.global .align 16 .b8 $str11[16] = {100, 0, 120, 0, 32, 0, 60, 0, 61, 0, 32, 0, 49, 0, 0, 0};
.global .align 16 .b8 $str12[54] = {112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 73, 0, 100, 0, 120, 0, 32, 0, 60, 0, 32, 0, 112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 76, 0, 101, 0, 110, 0, 103, 0, 116, 0, 104, 0, 0, 0};
.global .align 16 .b8 $str13[146] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 115, 0, 47, 0, 110, 0, 101, 0, 119, 0, 116, 0, 111, 0, 110, 0, 95, 0, 105, 0, 116, 0, 101, 0, 114, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 115, 0, 46, 0, 99, 0, 117, 0, 0, 0};

.visible .entry init(

)
{



	ret;
}

	// .globl	fractalRenderMainFloat
.visible .entry fractalRenderMainFloat(
	.param .u64 fractalRenderMainFloat_param_0,
	.param .u32 fractalRenderMainFloat_param_1,
	.param .align 4 .b8 fractalRenderMainFloat_param_2[8],
	.param .align 4 .b8 fractalRenderMainFloat_param_3[16],
	.param .u32 fractalRenderMainFloat_param_4,
	.param .f32 fractalRenderMainFloat_param_5,
	.param .u32 fractalRenderMainFloat_param_6
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<51>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<160>;
	.reg .b32 	%r<110>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<69>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainFloat_param_0];
	ld.param.u32 	%r27, [fractalRenderMainFloat_param_1];
	ld.param.u32 	%r29, [fractalRenderMainFloat_param_2+4];
	ld.param.u32 	%r28, [fractalRenderMainFloat_param_2];
	ld.param.f32 	%f49, [fractalRenderMainFloat_param_3+12];
	ld.param.f32 	%f48, [fractalRenderMainFloat_param_3+8];
	ld.param.f32 	%f47, [fractalRenderMainFloat_param_3+4];
	ld.param.f32 	%f46, [fractalRenderMainFloat_param_3];
	ld.param.u32 	%r30, [fractalRenderMainFloat_param_4];
	ld.param.f32 	%f50, [fractalRenderMainFloat_param_5];
	ld.param.u32 	%r31, [fractalRenderMainFloat_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r32, 59;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB1_2:
	mov.u32 	%r33, %tid.x;
	mov.u32 	%r34, %tid.y;
	mad.lo.s32 	%r35, %r1, %r34, %r33;
	shl.b32 	%r36, %r1, 2;
	and.b32  	%r37, %r35, 15;
	rem.u32 	%r38, %r35, %r36;
	sub.s32 	%r39, %r38, %r37;
	shr.u32 	%r40, %r39, 2;
	and.b32  	%r41, %r35, 3;
	add.s32 	%r42, %r40, %r41;
	div.u32 	%r43, %r35, %r36;
	shl.b32 	%r44, %r43, 2;
	bfe.u32 	%r45, %r35, 2, 2;
	add.s32 	%r46, %r44, %r45;
	mov.u32 	%r47, %ctaid.x;
	mad.lo.s32 	%r4, %r47, %r1, %r42;
	mov.u32 	%r48, %ctaid.y;
	mov.u32 	%r49, %ntid.y;
	mad.lo.s32 	%r5, %r48, %r49, %r46;
	setp.lt.u32	%p2, %r4, %r28;
	setp.lt.u32	%p3, %r5, %r29;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB1_48;
	bra.uni 	BB1_3;

BB1_3:
	setp.ge.f32	%p5, %f50, 0f3F800000;
	@%p5 bra 	BB1_5;

	mov.u64 	%rd9, $str4;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r50, 213;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r50;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_5:
	setp.lt.f32	%p6, %f50, 0f3F800000;
	mov.f32 	%f158, 0f00000000;
	mov.f32 	%f159, %f158;
	@%p6 bra 	BB1_46;

	abs.f32 	%f53, %f50;
	mov.b32 	 %r51, %f50;
	and.b32  	%r52, %r51, -2147483648;
	or.b32  	%r53, %r52, 1056964608;
	mov.b32 	 %f54, %r53;
	add.f32 	%f55, %f54, %f50;
	cvt.rzi.f32.f32	%f56, %f55;
	setp.gt.f32	%p7, %f53, 0f4B000000;
	selp.f32	%f147, %f50, %f56, %p7;
	setp.geu.f32	%p8, %f53, 0f3F000000;
	@%p8 bra 	BB1_8;

	cvt.rzi.f32.f32	%f147, %f50;

BB1_8:
	cvt.rzi.u32.f32	%r54, %f147;
	mov.u32 	%r55, 64;
	min.u32 	%r6, %r55, %r54;
	setp.lt.u32	%p9, %r6, 65;
	@%p9 bra 	BB1_10;

	mov.u64 	%rd15, $str9;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r56, 113;
	mov.u64 	%rd19, 0;
	mov.u64 	%rd20, 2;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r56;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd20;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB1_10:
	setp.eq.s32	%p10, %r6, 0;
	mov.u32 	%r108, 0;
	mov.u32 	%r107, %r108;
	@%p10 bra 	BB1_45;

	cvt.rn.f32.u32	%f6, %r4;
	cvt.rn.f32.u32	%f7, %r5;
	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f8, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f9, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f10, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f11, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f12, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f13, %fd12;
	cvt.rn.f32.u32	%f57, %r28;
	sub.f32 	%f58, %f48, %f46;
	div.rn.f32 	%f14, %f58, %f57;
	cvt.rn.f32.u32	%f59, %r29;
	sub.f32 	%f60, %f49, %f47;
	div.rn.f32 	%f15, %f60, %f59;
	mov.u32 	%r98, 0;
	and.b32  	%r72, %r31, 1;
	mov.u32 	%r108, %r98;
	mov.u32 	%r107, %r6;

BB1_12:
	mov.u32 	%r9, %r107;
	mov.u32 	%r7, %r98;
	setp.lt.u32	%p11, %r7, 3;
	@%p11 bra 	BB1_19;
	bra.uni 	BB1_13;

BB1_19:
	cvt.rn.f32.u32	%f68, %r7;
	div.rn.f32 	%f149, %f68, 0f40400000;
	mov.f32 	%f150, %f149;
	bra.uni 	BB1_20;

BB1_13:
	add.f32 	%f61, %f50, 0fC0000000;
	sqrt.rn.f32 	%f16, %f61;
	abs.f32 	%f62, %f16;
	mov.b32 	 %r61, %f16;
	and.b32  	%r62, %r61, -2147483648;
	or.b32  	%r63, %r62, 1056964608;
	mov.b32 	 %f63, %r63;
	add.f32 	%f64, %f16, %f63;
	cvt.rzi.f32.f32	%f65, %f64;
	setp.gt.f32	%p12, %f62, 0f4B000000;
	selp.f32	%f148, %f16, %f65, %p12;
	setp.geu.f32	%p13, %f62, 0f3F000000;
	@%p13 bra 	BB1_15;

	cvt.rzi.f32.f32	%f148, %f16;

BB1_15:
	add.s32 	%r64, %r7, -2;
	cvt.rzi.u32.f32	%r65, %f148;
	rem.u32 	%r66, %r64, %r65;
	cvt.rn.f32.u32	%f66, %r66;
	div.rn.f32 	%f149, %f66, %f16;
	div.u32 	%r67, %r64, %r65;
	cvt.rn.f32.u32	%f67, %r67;
	div.rn.f32 	%f150, %f67, %f16;
	setp.le.f32	%p14, %f150, 0f3F800000;
	@%p14 bra 	BB1_17;

	mov.u64 	%rd21, $str10;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r68, 132;
	mov.u64 	%rd25, 0;
	mov.u64 	%rd26, 2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r68;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB1_17:
	setp.le.f32	%p15, %f149, 0f3F800000;
	@%p15 bra 	BB1_20;

	mov.u64 	%rd27, $str11;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, $str1;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r69, 133;
	mov.u64 	%rd31, 0;
	mov.u64 	%rd32, 2;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r69;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB1_20:
	add.f32 	%f69, %f7, %f150;
	neg.f32 	%f70, %f69;
	add.f32 	%f71, %f6, %f149;
	fma.rn.f32 	%f152, %f14, %f71, %f46;
	fma.rn.f32 	%f151, %f15, %f70, %f49;
	setp.eq.s32	%p16, %r30, 0;
	mov.u32 	%r102, 0;
	@%p16 bra 	BB1_28;

BB1_21:
	mul.f32 	%f72, %f151, %f151;
	mul.f32 	%f73, %f152, %f152;
	sub.f32 	%f74, %f73, %f72;
	mul.f32 	%f75, %f152, %f151;
	fma.rn.f32 	%f76, %f152, %f151, %f75;
	mul.f32 	%f77, %f152, %f74;
	mul.f32 	%f78, %f151, %f76;
	sub.f32 	%f79, %f77, %f78;
	mul.f32 	%f80, %f152, %f76;
	fma.rn.f32 	%f81, %f151, %f74, %f80;
	cvt.f64.f32	%fd13, %f152;
	cvt.f64.f32	%fd14, %f151;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f74;
	cvt.f64.f32	%fd17, %f76;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f79;
	cvt.f64.f32	%fd22, %f81;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f82, %fd23;
	cvt.rn.f32.f64	%f83, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f84, %fd27;
	cvt.rn.f32.f64	%f85, %fd28;
	abs.f32 	%f86, %f84;
	abs.f32 	%f87, %f85;
	add.f32 	%f88, %f86, %f87;
	rcp.rn.f32 	%f89, %f88;
	mul.f32 	%f90, %f82, %f89;
	mul.f32 	%f91, %f83, %f89;
	mul.f32 	%f92, %f89, %f84;
	mul.f32 	%f93, %f89, %f85;
	mul.f32 	%f94, %f93, %f93;
	fma.rn.f32 	%f95, %f92, %f92, %f94;
	rcp.rn.f32 	%f96, %f95;
	mul.f32 	%f97, %f91, %f93;
	fma.rn.f32 	%f98, %f90, %f92, %f97;
	mul.f32 	%f99, %f96, %f98;
	mul.f32 	%f100, %f91, %f92;
	mul.f32 	%f101, %f90, %f93;
	sub.f32 	%f102, %f100, %f101;
	mul.f32 	%f103, %f96, %f102;
	sub.f32 	%f152, %f152, %f99;
	sub.f32 	%f151, %f151, %f103;
	add.s32 	%r102, %r102, 1;
	sub.f32 	%f104, %f152, %f8;
	abs.f32 	%f105, %f104;
	setp.geu.f32	%p17, %f105, 0f38D1B717;
	@%p17 bra 	BB1_23;

	sub.f32 	%f106, %f151, %f9;
	abs.f32 	%f107, %f106;
	setp.lt.f32	%p18, %f107, 0f38D1B717;
	@%p18 bra 	BB1_28;

BB1_23:
	sub.f32 	%f108, %f152, %f10;
	abs.f32 	%f109, %f108;
	setp.geu.f32	%p19, %f109, 0f38D1B717;
	@%p19 bra 	BB1_25;

	sub.f32 	%f110, %f151, %f11;
	abs.f32 	%f111, %f110;
	setp.lt.f32	%p20, %f111, 0f38D1B717;
	@%p20 bra 	BB1_28;

BB1_25:
	sub.f32 	%f112, %f152, %f12;
	abs.f32 	%f113, %f112;
	setp.lt.f32	%p21, %f113, 0f38D1B717;
	@%p21 bra 	BB1_27;
	bra.uni 	BB1_26;

BB1_27:
	setp.lt.u32	%p23, %r102, %r30;
	sub.f32 	%f114, %f151, %f13;
	abs.f32 	%f115, %f114;
	setp.geu.f32	%p24, %f115, 0f38D1B717;
	and.pred  	%p25, %p24, %p23;
	@%p25 bra 	BB1_21;
	bra.uni 	BB1_28;

BB1_26:
	setp.lt.u32	%p22, %r102, %r30;
	@%p22 bra 	BB1_21;

BB1_28:
	cvt.rn.f32.u32	%f116, %r102;
	cvt.rzi.u32.f32	%r13, %f116;
	add.s32 	%r108, %r13, %r108;
	setp.gt.u32	%p26, %r7, 9;
	@%p26 bra 	BB1_30;

	cvt.rn.f32.u32	%f117, %r13;
	add.u64 	%rd33, %SP, 0;
	cvta.to.local.u64 	%rd34, %rd33;
	mul.wide.u32 	%rd35, %r7, 4;
	add.s64 	%rd36, %rd34, %rd35;
	st.local.f32 	[%rd36], %f117;

BB1_30:
	setp.lt.u32	%p27, %r7, 10;
	setp.eq.b32	%p28, %r72, 1;
	setp.ne.s32	%p29, %r7, 0;
	and.pred  	%p30, %p27, %p29;
	and.pred  	%p31, %p30, %p28;
	shr.u32 	%r73, %r9, 1;
	setp.eq.s32	%p32, %r7, %r73;
	or.pred  	%p33, %p31, %p32;
	add.s32 	%r98, %r7, 1;
	mov.u32 	%r107, %r9;
	@!%p33 bra 	BB1_44;
	bra.uni 	BB1_31;

BB1_31:
	div.u32 	%r74, %r108, %r98;
	cvt.rn.f32.u32	%f31, %r74;
	setp.eq.s32	%p34, %r7, 0;
	mov.f32 	%f157, 0f00000000;
	@%p34 bra 	BB1_40;

	and.b32  	%r76, %r7, 3;
	setp.eq.s32	%p35, %r76, 0;
	mov.f32 	%f157, 0f00000000;
	mov.u32 	%r106, 0;
	@%p35 bra 	BB1_38;

	setp.eq.s32	%p36, %r76, 1;
	mov.f32 	%f154, 0f00000000;
	mov.u32 	%r104, 0;
	@%p36 bra 	BB1_37;

	setp.eq.s32	%p37, %r76, 2;
	mov.f32 	%f153, 0f00000000;
	mov.u32 	%r103, 0;
	@%p37 bra 	BB1_36;

	add.u64 	%rd37, %SP, 0;
	cvta.to.local.u64 	%rd38, %rd37;
	ld.local.f32 	%f122, [%rd38];
	sub.f32 	%f123, %f122, %f31;
	fma.rn.f32 	%f153, %f123, %f123, 0f00000000;
	mov.u32 	%r103, 1;

BB1_36:
	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd39;
	mul.wide.u32 	%rd41, %r103, 4;
	add.s64 	%rd42, %rd40, %rd41;
	ld.local.f32 	%f124, [%rd42];
	sub.f32 	%f125, %f124, %f31;
	fma.rn.f32 	%f154, %f125, %f125, %f153;
	add.s32 	%r104, %r103, 1;

BB1_37:
	add.u64 	%rd43, %SP, 0;
	cvta.to.local.u64 	%rd44, %rd43;
	mul.wide.u32 	%rd45, %r104, 4;
	add.s64 	%rd46, %rd44, %rd45;
	ld.local.f32 	%f126, [%rd46];
	sub.f32 	%f127, %f126, %f31;
	fma.rn.f32 	%f157, %f127, %f127, %f154;
	add.s32 	%r106, %r104, 1;

BB1_38:
	add.u64 	%rd47, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd47;
	setp.lt.u32	%p38, %r7, 4;
	@%p38 bra 	BB1_40;

BB1_39:
	mul.wide.u32 	%rd48, %r106, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.f32 	%f128, [%rd49];
	sub.f32 	%f129, %f128, %f31;
	fma.rn.f32 	%f130, %f129, %f129, %f157;
	add.s32 	%r82, %r106, 1;
	mul.wide.u32 	%rd50, %r82, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.f32 	%f131, [%rd51];
	sub.f32 	%f132, %f131, %f31;
	fma.rn.f32 	%f133, %f132, %f132, %f130;
	add.s32 	%r83, %r106, 2;
	mul.wide.u32 	%rd52, %r83, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.f32 	%f134, [%rd53];
	sub.f32 	%f135, %f134, %f31;
	fma.rn.f32 	%f136, %f135, %f135, %f133;
	add.s32 	%r84, %r106, 3;
	mul.wide.u32 	%rd54, %r84, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.f32 	%f137, [%rd55];
	sub.f32 	%f138, %f137, %f31;
	fma.rn.f32 	%f157, %f138, %f138, %f136;
	add.s32 	%r106, %r106, 4;
	setp.lt.u32	%p39, %r106, %r7;
	@%p39 bra 	BB1_39;

BB1_40:
	add.s32 	%r85, %r7, -1;
	cvt.rn.f32.u32	%f139, %r85;
	div.rn.f32 	%f140, %f157, %f139;
	div.rn.f32 	%f41, %f140, %f31;
	setp.ne.s32	%p40, %r7, 1;
	@%p40 bra 	BB1_42;

	// inline asm
	activemask.b32 %r86;
	// inline asm
	add.u64 	%rd56, %SP, 0;
	cvta.to.local.u64 	%rd57, %rd56;
	ld.local.v2.f32 	{%f141, %f142}, [%rd57];
	sub.f32 	%f145, %f141, %f142;
	abs.f32 	%f146, %f145;
	setp.lt.f32	%p41, %f146, 0f34000000;
	vote.sync.all.pred 	%p42, %p41, %r86;
	mov.u32 	%r107, 2;
	@%p42 bra 	BB1_44;

BB1_42:
	// inline asm
	activemask.b32 %r89;
	// inline asm
	setp.lt.f32	%p43, %f41, 0f3C23D70A;
	vote.sync.all.pred 	%p44, %p43, %r89;
	mov.u32 	%r107, %r98;
	@%p44 bra 	BB1_44;

	// inline asm
	activemask.b32 %r91;
	// inline asm
	setp.le.f32	%p45, %f41, 0f3F800000;
	vote.sync.all.pred 	%p46, %p45, %r91;
	setp.ge.u32	%p47, %r7, %r73;
	and.pred  	%p48, %p46, %p47;
	selp.b32	%r107, %r98, %r9, %p48;

BB1_44:
	setp.lt.u32	%p49, %r98, %r107;
	@%p49 bra 	BB1_12;

BB1_45:
	cvt.rn.f32.u32	%f158, %r107;
	div.u32 	%r94, %r108, %r107;
	cvt.rn.f32.u32	%f159, %r94;

BB1_46:
	mul.lo.s32 	%r95, %r5, %r27;
	cvt.u64.u32	%rd58, %r95;
	cvta.to.global.u64 	%rd59, %rd2;
	add.s64 	%rd60, %rd59, %rd58;
	mul.wide.u32 	%rd61, %r4, 16;
	add.s64 	%rd62, %rd60, %rd61;
	st.global.f32 	[%rd62], %f159;
	st.global.f32 	[%rd62+4], %f158;
	mov.u32 	%r96, 0;
	st.global.u32 	[%rd62+12], %r96;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd62+8], %rs1;
	setp.gt.f32	%p50, %f158, 0f00000000;
	@%p50 bra 	BB1_48;

	mov.u64 	%rd63, $str5;
	cvta.global.u64 	%rd64, %rd63;
	mov.u64 	%rd65, $str1;
	cvta.global.u64 	%rd66, %rd65;
	mov.u32 	%r97, 220;
	mov.u64 	%rd67, 0;
	mov.u64 	%rd68, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd64;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 param2;
	st.param.b32	[param2+0], %r97;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd67;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd68;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB1_48:
	ret;
}

	// .globl	fractalRenderMainDouble
.visible .entry fractalRenderMainDouble(
	.param .u64 fractalRenderMainDouble_param_0,
	.param .u32 fractalRenderMainDouble_param_1,
	.param .align 4 .b8 fractalRenderMainDouble_param_2[8],
	.param .align 8 .b8 fractalRenderMainDouble_param_3[32],
	.param .u32 fractalRenderMainDouble_param_4,
	.param .f32 fractalRenderMainDouble_param_5,
	.param .u32 fractalRenderMainDouble_param_6
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<51>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<80>;
	.reg .b32 	%r<131>;
	.reg .f64 	%fd<108>;
	.reg .b64 	%rd<69>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainDouble_param_0];
	ld.param.u32 	%r29, [fractalRenderMainDouble_param_2+4];
	ld.param.u32 	%r28, [fractalRenderMainDouble_param_2];
	ld.param.f64 	%fd33, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd32, [fractalRenderMainDouble_param_3+16];
	ld.param.f64 	%fd31, [fractalRenderMainDouble_param_3+8];
	ld.param.f64 	%fd30, [fractalRenderMainDouble_param_3];
	ld.param.u32 	%r30, [fractalRenderMainDouble_param_4];
	ld.param.f32 	%f25, [fractalRenderMainDouble_param_5];
	ld.param.u32 	%r31, [fractalRenderMainDouble_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r32, 59;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB2_2:
	mov.u32 	%r33, %tid.x;
	mov.u32 	%r34, %tid.y;
	mad.lo.s32 	%r35, %r1, %r34, %r33;
	shl.b32 	%r36, %r1, 2;
	and.b32  	%r37, %r35, 15;
	rem.u32 	%r38, %r35, %r36;
	sub.s32 	%r39, %r38, %r37;
	shr.u32 	%r40, %r39, 2;
	and.b32  	%r41, %r35, 3;
	add.s32 	%r42, %r40, %r41;
	div.u32 	%r43, %r35, %r36;
	shl.b32 	%r44, %r43, 2;
	bfe.u32 	%r45, %r35, 2, 2;
	add.s32 	%r46, %r44, %r45;
	mov.u32 	%r47, %ctaid.x;
	mad.lo.s32 	%r4, %r47, %r1, %r42;
	mov.u32 	%r48, %ctaid.y;
	mov.u32 	%r49, %ntid.y;
	mad.lo.s32 	%r5, %r48, %r49, %r46;
	setp.lt.u32	%p2, %r4, %r28;
	setp.lt.u32	%p3, %r5, %r29;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB2_49;
	bra.uni 	BB2_3;

BB2_3:
	setp.ge.f32	%p5, %f25, 0f3F800000;
	@%p5 bra 	BB2_5;

	mov.u64 	%rd9, $str4;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r50, 213;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r50;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB2_5:
	setp.lt.f32	%p6, %f25, 0f3F800000;
	mov.f32 	%f78, 0f00000000;
	mov.f32 	%f79, %f78;
	@%p6 bra 	BB2_47;

	abs.f32 	%f28, %f25;
	mov.b32 	 %r51, %f25;
	and.b32  	%r52, %r51, -2147483648;
	or.b32  	%r53, %r52, 1056964608;
	mov.b32 	 %f29, %r53;
	add.f32 	%f30, %f29, %f25;
	cvt.rzi.f32.f32	%f31, %f30;
	setp.gt.f32	%p7, %f28, 0f4B000000;
	selp.f32	%f71, %f25, %f31, %p7;
	setp.geu.f32	%p8, %f28, 0f3F000000;
	@%p8 bra 	BB2_8;

	cvt.rzi.f32.f32	%f71, %f25;

BB2_8:
	cvt.rzi.u32.f32	%r54, %f71;
	mov.u32 	%r55, 64;
	min.u32 	%r6, %r55, %r54;
	setp.lt.u32	%p9, %r6, 65;
	@%p9 bra 	BB2_10;

	mov.u64 	%rd15, $str9;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r56, 113;
	mov.u64 	%rd19, 0;
	mov.u64 	%rd20, 2;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r56;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd20;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB2_10:
	setp.eq.s32	%p10, %r6, 0;
	mov.u32 	%r129, 0;
	mov.u32 	%r128, %r129;
	@%p10 bra 	BB2_46;

	cvt.rn.f64.u32	%fd3, %r4;
	cvt.rn.f64.u32	%fd4, %r5;
	ld.const.f64 	%fd7, [coefficients+16];
	add.f64 	%fd8, %fd7, %fd7;
	ld.const.f64 	%fd9, [coefficients+24];
	mul.f64 	%fd10, %fd9, 0d4008000000000000;
	cvt.rn.f64.u32	%fd34, %r28;
	sub.f64 	%fd35, %fd32, %fd30;
	div.rn.f64 	%fd17, %fd35, %fd34;
	cvt.rn.f64.u32	%fd36, %r29;
	sub.f64 	%fd37, %fd33, %fd31;
	div.rn.f64 	%fd18, %fd37, %fd36;
	mov.u32 	%r119, 0;
	and.b32  	%r72, %r31, 1;
	mov.u32 	%r129, %r119;
	mov.u32 	%r128, %r6;

BB2_12:
	mov.u32 	%r9, %r128;
	mov.u32 	%r7, %r119;
	setp.lt.u32	%p11, %r7, 3;
	@%p11 bra 	BB2_20;
	bra.uni 	BB2_13;

BB2_20:
	cvt.rn.f64.u32	%fd38, %r7;
	div.rn.f64 	%fd104, %fd38, 0d4008000000000000;
	mov.f64 	%fd105, %fd104;
	bra.uni 	BB2_21;

BB2_13:
	ld.param.f32 	%f70, [fractalRenderMainDouble_param_5];
	add.f32 	%f32, %f70, 0fC0000000;
	sqrt.rn.f32 	%f4, %f32;
	abs.f32 	%f33, %f4;
	mov.b32 	 %r61, %f4;
	and.b32  	%r62, %r61, -2147483648;
	or.b32  	%r63, %r62, 1056964608;
	mov.b32 	 %f34, %r63;
	add.f32 	%f35, %f4, %f34;
	cvt.rzi.f32.f32	%f36, %f35;
	setp.gt.f32	%p12, %f33, 0f4B000000;
	selp.f32	%f72, %f4, %f36, %p12;
	setp.geu.f32	%p13, %f33, 0f3F000000;
	@%p13 bra 	BB2_15;

	cvt.rzi.f32.f32	%f72, %f4;

BB2_15:
	add.s32 	%r64, %r7, -2;
	cvt.rzi.u32.f32	%r65, %f72;
	rem.u32 	%r66, %r64, %r65;
	cvt.rn.f32.u32	%f37, %r66;
	div.rn.f32 	%f8, %f37, %f4;
	div.u32 	%r67, %r64, %r65;
	cvt.rn.f32.u32	%f38, %r67;
	div.rn.f32 	%f9, %f38, %f4;
	setp.le.f32	%p14, %f9, 0f3F800000;
	@%p14 bra 	BB2_17;

	mov.u64 	%rd21, $str10;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r68, 132;
	mov.u64 	%rd25, 0;
	mov.u64 	%rd26, 2;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r68;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB2_17:
	setp.le.f32	%p15, %f8, 0f3F800000;
	@%p15 bra 	BB2_19;

	mov.u64 	%rd27, $str11;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, $str1;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r69, 133;
	mov.u64 	%rd31, 0;
	mov.u64 	%rd32, 2;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r69;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB2_19:
	cvt.f64.f32	%fd104, %f8;
	cvt.f64.f32	%fd105, %f9;

BB2_21:
	ld.param.f64 	%fd94, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd93, [fractalRenderMainDouble_param_3];
	add.f64 	%fd39, %fd4, %fd105;
	neg.f64 	%fd40, %fd39;
	add.f64 	%fd41, %fd3, %fd104;
	fma.rn.f64 	%fd107, %fd17, %fd41, %fd93;
	fma.rn.f64 	%fd106, %fd18, %fd40, %fd94;
	setp.eq.s32	%p16, %r30, 0;
	mov.u32 	%r123, 0;
	@%p16 bra 	BB2_29;

BB2_22:
	ld.const.f64 	%fd99, [roots];
	ld.const.f64 	%fd98, [coefficients+24];
	ld.const.f64 	%fd97, [coefficients+16];
	ld.const.f64 	%fd96, [coefficients];
	ld.const.f64 	%fd95, [coefficients+8];
	mul.f64 	%fd42, %fd106, %fd106;
	mul.f64 	%fd43, %fd107, %fd107;
	sub.f64 	%fd44, %fd43, %fd42;
	mul.f64 	%fd45, %fd107, %fd106;
	fma.rn.f64 	%fd46, %fd107, %fd106, %fd45;
	mul.f64 	%fd47, %fd107, %fd44;
	mul.f64 	%fd48, %fd106, %fd46;
	sub.f64 	%fd49, %fd47, %fd48;
	mul.f64 	%fd50, %fd107, %fd46;
	fma.rn.f64 	%fd51, %fd106, %fd44, %fd50;
	fma.rn.f64 	%fd52, %fd107, %fd95, %fd96;
	mul.f64 	%fd53, %fd46, %fd97;
	fma.rn.f64 	%fd54, %fd44, %fd97, %fd52;
	fma.rn.f64 	%fd55, %fd106, %fd95, %fd53;
	fma.rn.f64 	%fd56, %fd49, %fd98, %fd54;
	fma.rn.f64 	%fd57, %fd51, %fd98, %fd55;
	fma.rn.f64 	%fd58, %fd107, %fd8, %fd95;
	mul.f64 	%fd59, %fd46, %fd10;
	fma.rn.f64 	%fd60, %fd44, %fd10, %fd58;
	fma.rn.f64 	%fd61, %fd106, %fd8, %fd59;
	abs.f64 	%fd62, %fd60;
	abs.f64 	%fd63, %fd61;
	add.f64 	%fd64, %fd62, %fd63;
	rcp.rn.f64 	%fd65, %fd64;
	mul.f64 	%fd66, %fd56, %fd65;
	mul.f64 	%fd67, %fd57, %fd65;
	mul.f64 	%fd68, %fd60, %fd65;
	mul.f64 	%fd69, %fd61, %fd65;
	mul.f64 	%fd70, %fd69, %fd69;
	fma.rn.f64 	%fd71, %fd68, %fd68, %fd70;
	rcp.rn.f64 	%fd72, %fd71;
	mul.f64 	%fd73, %fd67, %fd69;
	fma.rn.f64 	%fd74, %fd66, %fd68, %fd73;
	mul.f64 	%fd75, %fd72, %fd74;
	mul.f64 	%fd76, %fd67, %fd68;
	mul.f64 	%fd77, %fd66, %fd69;
	sub.f64 	%fd78, %fd76, %fd77;
	mul.f64 	%fd79, %fd72, %fd78;
	sub.f64 	%fd107, %fd107, %fd75;
	sub.f64 	%fd106, %fd106, %fd79;
	add.s32 	%r123, %r123, 1;
	sub.f64 	%fd80, %fd107, %fd99;
	abs.f64 	%fd81, %fd80;
	setp.geu.f64	%p17, %fd81, 0d3F1A36E2EB1C432D;
	@%p17 bra 	BB2_24;

	ld.const.f64 	%fd101, [roots+8];
	sub.f64 	%fd82, %fd106, %fd101;
	abs.f64 	%fd83, %fd82;
	setp.lt.f64	%p18, %fd83, 0d3F1A36E2EB1C432D;
	@%p18 bra 	BB2_29;

BB2_24:
	ld.const.f64 	%fd92, [roots+16];
	sub.f64 	%fd84, %fd107, %fd92;
	abs.f64 	%fd85, %fd84;
	setp.geu.f64	%p19, %fd85, 0d3F1A36E2EB1C432D;
	@%p19 bra 	BB2_26;

	ld.const.f64 	%fd100, [roots+24];
	sub.f64 	%fd86, %fd106, %fd100;
	abs.f64 	%fd87, %fd86;
	setp.lt.f64	%p20, %fd87, 0d3F1A36E2EB1C432D;
	@%p20 bra 	BB2_29;

BB2_26:
	ld.const.f64 	%fd102, [roots+32];
	sub.f64 	%fd88, %fd107, %fd102;
	abs.f64 	%fd89, %fd88;
	setp.lt.f64	%p21, %fd89, 0d3F1A36E2EB1C432D;
	@%p21 bra 	BB2_28;
	bra.uni 	BB2_27;

BB2_28:
	ld.const.f64 	%fd103, [roots+40];
	setp.lt.u32	%p23, %r123, %r30;
	sub.f64 	%fd90, %fd106, %fd103;
	abs.f64 	%fd91, %fd90;
	setp.geu.f64	%p24, %fd91, 0d3F1A36E2EB1C432D;
	and.pred  	%p25, %p24, %p23;
	@%p25 bra 	BB2_22;
	bra.uni 	BB2_29;

BB2_27:
	setp.lt.u32	%p22, %r123, %r30;
	@%p22 bra 	BB2_22;

BB2_29:
	cvt.rn.f32.u32	%f39, %r123;
	cvt.rzi.u32.f32	%r13, %f39;
	add.s32 	%r129, %r13, %r129;
	setp.gt.u32	%p26, %r7, 9;
	@%p26 bra 	BB2_31;

	cvt.rn.f32.u32	%f40, %r13;
	add.u64 	%rd33, %SP, 0;
	cvta.to.local.u64 	%rd34, %rd33;
	mul.wide.u32 	%rd35, %r7, 4;
	add.s64 	%rd36, %rd34, %rd35;
	st.local.f32 	[%rd36], %f40;

BB2_31:
	setp.lt.u32	%p27, %r7, 10;
	setp.eq.b32	%p28, %r72, 1;
	setp.ne.s32	%p29, %r7, 0;
	and.pred  	%p30, %p27, %p29;
	and.pred  	%p31, %p30, %p28;
	shr.u32 	%r73, %r9, 1;
	setp.eq.s32	%p32, %r7, %r73;
	or.pred  	%p33, %p31, %p32;
	add.s32 	%r119, %r7, 1;
	mov.u32 	%r128, %r9;
	@!%p33 bra 	BB2_45;
	bra.uni 	BB2_32;

BB2_32:
	div.u32 	%r74, %r129, %r119;
	cvt.rn.f32.u32	%f10, %r74;
	setp.eq.s32	%p34, %r7, 0;
	mov.f32 	%f77, 0f00000000;
	@%p34 bra 	BB2_41;

	and.b32  	%r76, %r7, 3;
	setp.eq.s32	%p35, %r76, 0;
	mov.f32 	%f77, 0f00000000;
	mov.u32 	%r127, 0;
	@%p35 bra 	BB2_39;

	setp.eq.s32	%p36, %r76, 1;
	mov.f32 	%f74, 0f00000000;
	mov.u32 	%r125, 0;
	@%p36 bra 	BB2_38;

	setp.eq.s32	%p37, %r76, 2;
	mov.f32 	%f73, 0f00000000;
	mov.u32 	%r124, 0;
	@%p37 bra 	BB2_37;

	add.u64 	%rd37, %SP, 0;
	cvta.to.local.u64 	%rd38, %rd37;
	ld.local.f32 	%f45, [%rd38];
	sub.f32 	%f46, %f45, %f10;
	fma.rn.f32 	%f73, %f46, %f46, 0f00000000;
	mov.u32 	%r124, 1;

BB2_37:
	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd39;
	mul.wide.u32 	%rd41, %r124, 4;
	add.s64 	%rd42, %rd40, %rd41;
	ld.local.f32 	%f47, [%rd42];
	sub.f32 	%f48, %f47, %f10;
	fma.rn.f32 	%f74, %f48, %f48, %f73;
	add.s32 	%r125, %r124, 1;

BB2_38:
	add.u64 	%rd43, %SP, 0;
	cvta.to.local.u64 	%rd44, %rd43;
	mul.wide.u32 	%rd45, %r125, 4;
	add.s64 	%rd46, %rd44, %rd45;
	ld.local.f32 	%f49, [%rd46];
	sub.f32 	%f50, %f49, %f10;
	fma.rn.f32 	%f77, %f50, %f50, %f74;
	add.s32 	%r127, %r125, 1;

BB2_39:
	add.u64 	%rd47, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd47;
	setp.lt.u32	%p38, %r7, 4;
	@%p38 bra 	BB2_41;

BB2_40:
	mul.wide.u32 	%rd48, %r127, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.f32 	%f51, [%rd49];
	sub.f32 	%f52, %f51, %f10;
	fma.rn.f32 	%f53, %f52, %f52, %f77;
	add.s32 	%r82, %r127, 1;
	mul.wide.u32 	%rd50, %r82, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.f32 	%f54, [%rd51];
	sub.f32 	%f55, %f54, %f10;
	fma.rn.f32 	%f56, %f55, %f55, %f53;
	add.s32 	%r83, %r127, 2;
	mul.wide.u32 	%rd52, %r83, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.f32 	%f57, [%rd53];
	sub.f32 	%f58, %f57, %f10;
	fma.rn.f32 	%f59, %f58, %f58, %f56;
	add.s32 	%r84, %r127, 3;
	mul.wide.u32 	%rd54, %r84, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.f32 	%f60, [%rd55];
	sub.f32 	%f61, %f60, %f10;
	fma.rn.f32 	%f77, %f61, %f61, %f59;
	add.s32 	%r127, %r127, 4;
	setp.lt.u32	%p39, %r127, %r7;
	@%p39 bra 	BB2_40;

BB2_41:
	add.s32 	%r85, %r7, -1;
	cvt.rn.f32.u32	%f62, %r85;
	div.rn.f32 	%f63, %f77, %f62;
	div.rn.f32 	%f20, %f63, %f10;
	setp.ne.s32	%p40, %r7, 1;
	@%p40 bra 	BB2_43;

	// inline asm
	activemask.b32 %r86;
	// inline asm
	add.u64 	%rd56, %SP, 0;
	cvta.to.local.u64 	%rd57, %rd56;
	ld.local.v2.f32 	{%f64, %f65}, [%rd57];
	sub.f32 	%f68, %f64, %f65;
	abs.f32 	%f69, %f68;
	setp.lt.f32	%p41, %f69, 0f34000000;
	vote.sync.all.pred 	%p42, %p41, %r86;
	mov.u32 	%r128, 2;
	@%p42 bra 	BB2_45;

BB2_43:
	// inline asm
	activemask.b32 %r89;
	// inline asm
	setp.lt.f32	%p43, %f20, 0f3C23D70A;
	vote.sync.all.pred 	%p44, %p43, %r89;
	mov.u32 	%r128, %r119;
	@%p44 bra 	BB2_45;

	// inline asm
	activemask.b32 %r91;
	// inline asm
	setp.le.f32	%p45, %f20, 0f3F800000;
	vote.sync.all.pred 	%p46, %p45, %r91;
	setp.ge.u32	%p47, %r7, %r73;
	and.pred  	%p48, %p46, %p47;
	selp.b32	%r128, %r119, %r9, %p48;

BB2_45:
	setp.lt.u32	%p49, %r119, %r128;
	@%p49 bra 	BB2_12;

BB2_46:
	cvt.rn.f32.u32	%f78, %r128;
	div.u32 	%r94, %r129, %r128;
	cvt.rn.f32.u32	%f79, %r94;

BB2_47:
	mov.u32 	%r118, %tid.y;
	mov.u32 	%r117, %ntid.x;
	mov.u32 	%r116, %tid.x;
	mad.lo.s32 	%r115, %r117, %r118, %r116;
	shl.b32 	%r114, %r117, 2;
	ld.param.u32 	%r113, [fractalRenderMainDouble_param_1];
	div.u32 	%r112, %r115, %r114;
	bfe.u32 	%r111, %r115, 2, 2;
	shl.b32 	%r110, %r112, 2;
	add.s32 	%r109, %r110, %r111;
	mov.u32 	%r108, %ntid.y;
	mov.u32 	%r107, %ctaid.y;
	mad.lo.s32 	%r106, %r107, %r108, %r109;
	and.b32  	%r105, %r115, 15;
	rem.u32 	%r104, %r115, %r114;
	sub.s32 	%r103, %r104, %r105;
	and.b32  	%r102, %r115, 3;
	shr.u32 	%r101, %r103, 2;
	add.s32 	%r100, %r101, %r102;
	mov.u32 	%r99, %ctaid.x;
	mad.lo.s32 	%r98, %r99, %r117, %r100;
	mul.lo.s32 	%r95, %r106, %r113;
	cvt.u64.u32	%rd58, %r95;
	cvta.to.global.u64 	%rd59, %rd2;
	add.s64 	%rd60, %rd59, %rd58;
	mul.wide.u32 	%rd61, %r98, 16;
	add.s64 	%rd62, %rd60, %rd61;
	st.global.f32 	[%rd62], %f79;
	st.global.f32 	[%rd62+4], %f78;
	mov.u32 	%r96, 0;
	st.global.u32 	[%rd62+12], %r96;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd62+8], %rs1;
	setp.gt.f32	%p50, %f78, 0f00000000;
	@%p50 bra 	BB2_49;

	mov.u64 	%rd63, $str5;
	cvta.global.u64 	%rd64, %rd63;
	mov.u64 	%rd65, $str1;
	cvta.global.u64 	%rd66, %rd65;
	mov.u32 	%r97, 220;
	mov.u64 	%rd67, 0;
	mov.u64 	%rd68, 2;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd64;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 param2;
	st.param.b32	[param2+0], %r97;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd67;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd68;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB2_49:
	ret;
}

	// .globl	fractalRenderAdvancedFloat
.visible .entry fractalRenderAdvancedFloat(
	.param .u64 fractalRenderAdvancedFloat_param_0,
	.param .u32 fractalRenderAdvancedFloat_param_1,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_2[8],
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_3[16],
	.param .u32 fractalRenderAdvancedFloat_param_4,
	.param .f32 fractalRenderAdvancedFloat_param_5,
	.param .u32 fractalRenderAdvancedFloat_param_6,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_7[16],
	.param .u64 fractalRenderAdvancedFloat_param_8,
	.param .u32 fractalRenderAdvancedFloat_param_9,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<123>;
	.reg .b16 	%rs<12>;
	.reg .f32 	%f<453>;
	.reg .b32 	%r<212>;
	.reg .f64 	%fd<64>;
	.reg .b64 	%rd<122>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd4, [fractalRenderAdvancedFloat_param_0];
	ld.param.u32 	%r56, [fractalRenderAdvancedFloat_param_2+4];
	ld.param.u32 	%r55, [fractalRenderAdvancedFloat_param_2];
	ld.param.f32 	%f120, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f119, [fractalRenderAdvancedFloat_param_3+8];
	ld.param.f32 	%f118, [fractalRenderAdvancedFloat_param_3+4];
	ld.param.f32 	%f117, [fractalRenderAdvancedFloat_param_3];
	ld.param.u32 	%r57, [fractalRenderAdvancedFloat_param_4];
	ld.param.f32 	%f421, [fractalRenderAdvancedFloat_param_5];
	ld.param.u32 	%r58, [fractalRenderAdvancedFloat_param_6];
	ld.param.f32 	%f125, [fractalRenderAdvancedFloat_param_7+12];
	ld.param.f32 	%f124, [fractalRenderAdvancedFloat_param_7+8];
	ld.param.f32 	%f123, [fractalRenderAdvancedFloat_param_7+4];
	ld.param.f32 	%f122, [fractalRenderAdvancedFloat_param_7];
	ld.param.u64 	%rd5, [fractalRenderAdvancedFloat_param_8];
	ld.param.u32 	%r59, [fractalRenderAdvancedFloat_param_9];
	ld.param.u32 	%r61, [fractalRenderAdvancedFloat_param_10+4];
	ld.param.u32 	%r60, [fractalRenderAdvancedFloat_param_10];
	add.u64 	%rd6, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd6;
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p3, %r1, 32;
	@%p3 bra 	BB3_2;

	mov.u64 	%rd7, $str;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, $str1;
	cvta.global.u64 	%rd10, %rd9;
	mov.u32 	%r62, 59;
	mov.u64 	%rd11, 0;
	mov.u64 	%rd12, 2;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 param2;
	st.param.b32	[param2+0], %r62;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd11;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd12;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB3_2:
	mov.u32 	%r63, %tid.x;
	mov.u32 	%r64, %tid.y;
	mad.lo.s32 	%r65, %r1, %r64, %r63;
	shl.b32 	%r66, %r1, 2;
	and.b32  	%r67, %r65, 15;
	rem.u32 	%r68, %r65, %r66;
	sub.s32 	%r69, %r68, %r67;
	shr.u32 	%r70, %r69, 2;
	and.b32  	%r71, %r65, 3;
	add.s32 	%r72, %r70, %r71;
	div.u32 	%r73, %r65, %r66;
	shl.b32 	%r74, %r73, 2;
	bfe.u32 	%r75, %r65, 2, 2;
	add.s32 	%r76, %r74, %r75;
	mov.u32 	%r77, %ctaid.x;
	mad.lo.s32 	%r4, %r77, %r1, %r72;
	mov.u32 	%r78, %ctaid.y;
	mov.u32 	%r79, %ntid.y;
	mad.lo.s32 	%r5, %r78, %r79, %r76;
	setp.lt.u32	%p4, %r4, %r55;
	setp.gt.u32	%p5, %r56, %r5;
	and.pred  	%p6, %p4, %p5;
	@!%p6 bra 	BB3_106;
	bra.uni 	BB3_3;

BB3_3:
	and.b32  	%r80, %r58, 52;
	mov.u16 	%rs10, 0;
	setp.ne.s32	%p7, %r80, 52;
	@%p7 bra 	BB3_12;

	setp.gt.f32	%p8, %f421, 0f00000000;
	@%p8 bra 	BB3_6;

	mov.u64 	%rd13, $str2;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, $str1;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r81, 263;
	mov.u64 	%rd17, 0;
	mov.u64 	%rd18, 2;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 param2;
	st.param.b32	[param2+0], %r81;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd17;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd18;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 13

BB3_6:
	and.b32  	%r82, %r4, -8;
	cvt.rn.f32.u32	%f126, %r82;
	and.b32  	%r83, %r5, -4;
	cvt.rn.f32.u32	%f127, %r83;
	cvt.rn.f32.u32	%f128, %r60;
	sub.f32 	%f129, %f128, %f126;
	cvt.rn.f32.u32	%f130, %r61;
	sub.f32 	%f131, %f130, %f127;
	mul.f32 	%f132, %f131, %f131;
	fma.rn.f32 	%f133, %f129, %f129, %f132;
	sqrt.rn.f32 	%f134, %f133;
	ld.global.f32 	%f135, [pixelRealWidthInCm];
	mul.f32 	%f136, %f134, %f135;
	ld.global.f32 	%f137, [screenDistance];
	div.rn.f32 	%f1, %f136, %f137;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p9, %f2, 0f3F800000;
	mov.f32 	%f420, %f2;
	@%p9 bra 	BB3_8;

	rcp.rn.f32 	%f420, %f2;

BB3_8:
	mul.rn.f32 	%f138, %f420, %f420;
	mov.f32 	%f139, 0fC0B59883;
	mov.f32 	%f140, 0fBF52C7EA;
	fma.rn.f32 	%f141, %f138, %f140, %f139;
	mov.f32 	%f142, 0fC0D21907;
	fma.rn.f32 	%f143, %f141, %f138, %f142;
	mul.f32 	%f144, %f138, %f143;
	mul.f32 	%f145, %f420, %f144;
	add.f32 	%f146, %f138, 0f41355DC0;
	mov.f32 	%f147, 0f41E6BD60;
	fma.rn.f32 	%f148, %f146, %f138, %f147;
	mov.f32 	%f149, 0f419D92C8;
	fma.rn.f32 	%f150, %f148, %f138, %f149;
	rcp.rn.f32 	%f151, %f150;
	fma.rn.f32 	%f152, %f145, %f151, %f420;
	mov.f32 	%f153, 0f3FC90FDB;
	sub.f32 	%f154, %f153, %f152;
	setp.gt.f32	%p10, %f2, 0f3F800000;
	selp.f32	%f155, %f154, %f152, %p10;
	mov.b32 	 %r84, %f155;
	mov.b32 	 %r85, %f1;
	and.b32  	%r86, %r85, -2147483648;
	or.b32  	%r87, %r84, %r86;
	mov.b32 	 %f156, %r87;
	setp.gtu.f32	%p11, %f2, 0f7F800000;
	selp.f32	%f157, %f155, %f156, %p11;
	mul.f32 	%f158, %f157, 0f43340000;
	div.rn.f32 	%f5, %f158, 0f40490FDB;
	setp.ge.f32	%p12, %f5, 0f00000000;
	@%p12 bra 	BB3_10;

	mov.u64 	%rd19, $str3;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, $str1;
	cvta.global.u64 	%rd22, %rd21;
	mov.u32 	%r88, 276;
	mov.u64 	%rd23, 0;
	mov.u64 	%rd24, 2;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b32 param2;
	st.param.b32	[param2+0], %r88;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14

BB3_10:
	mul.f32 	%f159, %f421, 0f40B00000;
	setp.ltu.f32	%p13, %f421, 0f3F800000;
	selp.f32	%f160, %f159, 0f40B00000, %p13;
	mov.f32 	%f161, 0f42700000;
	sub.f32 	%f162, %f161, %f160;
	mov.f32 	%f163, 0fBF800000;
	div.rn.f32 	%f164, %f163, %f162;
	fma.rn.f32 	%f165, %f160, 0f80000000, 0f42700000;
	div.rn.f32 	%f166, %f165, %f162;
	fma.rn.f32 	%f167, %f5, %f164, %f166;
	cvt.f64.f32	%fd13, %f167;
	mov.f64 	%fd14, 0d3FF0000000000000;
	min.f64 	%fd15, %fd14, %fd13;
	cvt.rn.f32.f64	%f168, %fd15;
	mul.f32 	%f421, %f168, %f421;
	setp.gtu.f32	%p14, %f5, %f160;
	@%p14 bra 	BB3_12;

	cvt.f64.f32	%fd16, %f421;
	max.f64 	%fd18, %fd14, %fd16;
	cvt.rn.f32.f64	%f421, %fd18;
	mov.u16 	%rs10, 1;

BB3_12:
	and.b32  	%r89, %r58, 8;
	setp.eq.s32	%p16, %r89, 0;
	mov.pred 	%p122, -1;
	mov.f32 	%f450, 0f00000000;
	@%p16 bra 	BB3_13;

	sub.s32 	%r90, %r56, %r5;
	cvt.rn.f32.u32	%f171, %r90;
	cvt.rn.f32.u32	%f172, %r55;
	cvt.rn.f32.u32	%f173, %r4;
	div.rn.f32 	%f174, %f173, %f172;
	cvt.rn.f32.u32	%f175, %r56;
	div.rn.f32 	%f176, %f171, %f175;
	sub.f32 	%f177, %f119, %f117;
	sub.f32 	%f178, %f120, %f118;
	fma.rn.f32 	%f179, %f177, %f174, %f117;
	fma.rn.f32 	%f180, %f178, %f176, %f118;
	sub.f32 	%f181, %f179, %f122;
	sub.f32 	%f182, %f180, %f123;
	sub.f32 	%f183, %f124, %f122;
	div.rn.f32 	%f184, %f181, %f183;
	sub.f32 	%f185, %f125, %f123;
	div.rn.f32 	%f186, %f182, %f185;
	mul.f32 	%f13, %f172, %f184;
	mul.f32 	%f187, %f175, %f186;
	sub.f32 	%f14, %f175, %f187;
	abs.f32 	%f188, %f13;
	mov.b32 	 %r91, %f13;
	and.b32  	%r92, %r91, -2147483648;
	or.b32  	%r93, %r92, 1056964608;
	mov.b32 	 %f189, %r93;
	add.f32 	%f190, %f13, %f189;
	cvt.rzi.f32.f32	%f191, %f190;
	setp.gt.f32	%p17, %f188, 0f4B000000;
	selp.f32	%f422, %f13, %f191, %p17;
	setp.geu.f32	%p18, %f188, 0f3F000000;
	@%p18 bra 	BB3_16;

	cvt.rzi.f32.f32	%f422, %f13;

BB3_16:
	cvt.rzi.s32.f32	%r6, %f422;
	mov.b32 	 %r94, %f14;
	and.b32  	%r95, %r94, -2147483648;
	or.b32  	%r96, %r95, 1056964608;
	mov.b32 	 %f192, %r96;
	add.f32 	%f193, %f14, %f192;
	cvt.rzi.f32.f32	%f194, %f193;
	abs.f32 	%f195, %f14;
	setp.gt.f32	%p19, %f195, 0f4B000000;
	selp.f32	%f423, %f14, %f194, %p19;
	setp.geu.f32	%p20, %f195, 0f3F000000;
	@%p20 bra 	BB3_18;

	cvt.rzi.f32.f32	%f423, %f14;

BB3_18:
	add.s32 	%r97, %r55, -2;
	setp.lt.u32	%p22, %r6, %r97;
	setp.gt.s32	%p23, %r6, 1;
	and.pred  	%p24, %p23, %p22;
	cvt.rzi.s32.f32	%r98, %f423;
	setp.gt.s32	%p25, %r98, 1;
	and.pred  	%p26, %p24, %p25;
	add.s32 	%r99, %r56, -2;
	setp.lt.u32	%p27, %r98, %r99;
	and.pred  	%p28, %p27, %p26;
	mov.f32 	%f425, %f450;
	@!%p28 bra 	BB3_20;
	bra.uni 	BB3_19;

BB3_19:
	cvt.rmi.f32.f32	%f198, %f13;
	cvt.rzi.u32.f32	%r100, %f198;
	cvt.rmi.f32.f32	%f199, %f14;
	cvt.rzi.u32.f32	%r101, %f199;
	cvt.rn.f32.u32	%f200, %r100;
	sub.f32 	%f201, %f13, %f200;
	cvt.rn.f32.u32	%f202, %r101;
	sub.f32 	%f203, %f14, %f202;
	mul.lo.s32 	%r102, %r101, %r59;
	cvt.u64.u32	%rd25, %r102;
	cvta.to.global.u64 	%rd26, %rd5;
	add.s64 	%rd27, %rd26, %rd25;
	mul.wide.u32 	%rd28, %r100, 16;
	add.s64 	%rd29, %rd27, %rd28;
	add.s32 	%r103, %r100, 1;
	mul.wide.u32 	%rd30, %r103, 16;
	add.s64 	%rd31, %rd27, %rd30;
	add.s32 	%r104, %r101, 1;
	mul.lo.s32 	%r105, %r104, %r59;
	cvt.u64.u32	%rd32, %r105;
	add.s64 	%rd33, %rd26, %rd32;
	add.s64 	%rd34, %rd33, %rd28;
	add.s64 	%rd35, %rd33, %rd30;
	mov.f32 	%f204, 0f3F800000;
	sub.f32 	%f205, %f204, %f201;
	sub.f32 	%f206, %f204, %f203;
	mul.f32 	%f207, %f205, %f206;
	ld.global.f32 	%f208, [%rd29];
	mul.f32 	%f209, %f201, %f206;
	ld.global.f32 	%f210, [%rd31];
	mul.f32 	%f211, %f210, %f209;
	fma.rn.f32 	%f212, %f208, %f207, %f211;
	mul.f32 	%f213, %f205, %f203;
	ld.global.f32 	%f214, [%rd34];
	fma.rn.f32 	%f215, %f213, %f214, %f212;
	mul.f32 	%f216, %f201, %f203;
	ld.global.f32 	%f217, [%rd35];
	fma.rn.f32 	%f450, %f216, %f217, %f215;
	ld.global.f32 	%f218, [%rd29+4];
	ld.global.f32 	%f219, [%rd31+4];
	mul.f32 	%f220, %f209, %f219;
	fma.rn.f32 	%f221, %f218, %f207, %f220;
	ld.global.f32 	%f222, [%rd34+4];
	fma.rn.f32 	%f223, %f213, %f222, %f221;
	ld.global.f32 	%f224, [%rd35+4];
	fma.rn.f32 	%f425, %f216, %f224, %f223;
	cvt.f64.f32	%fd19, %f425;
	setp.lt.f64	%p122, %fd19, 0d3FB999999999999A;
	bra.uni 	BB3_20;

BB3_13:
	mov.f32 	%f425, %f450;

BB3_20:
	@%p122 bra 	BB3_64;
	bra.uni 	BB3_21;

BB3_64:
	setp.lt.f32	%p77, %f421, 0f3F800000;
	selp.f32	%f71, 0f3F800000, %f421, %p77;
	abs.f32 	%f324, %f71;
	mov.b32 	 %r147, %f71;
	and.b32  	%r148, %r147, -2147483648;
	or.b32  	%r149, %r148, 1056964608;
	mov.b32 	 %f325, %r149;
	add.f32 	%f326, %f71, %f325;
	cvt.rzi.f32.f32	%f327, %f326;
	setp.gt.f32	%p78, %f324, 0f4B000000;
	selp.f32	%f439, %f71, %f327, %p78;
	setp.geu.f32	%p79, %f324, 0f3F000000;
	@%p79 bra 	BB3_66;

	cvt.rzi.f32.f32	%f439, %f71;

BB3_66:
	cvt.rzi.u32.f32	%r150, %f439;
	mov.u32 	%r151, 64;
	min.u32 	%r30, %r151, %r150;
	cvt.rn.f32.u32	%f328, %r55;
	sub.f32 	%f329, %f119, %f117;
	div.rn.f32 	%f75, %f329, %f328;
	cvt.rn.f32.u32	%f330, %r56;
	sub.f32 	%f331, %f120, %f118;
	div.rn.f32 	%f76, %f331, %f330;
	setp.lt.u32	%p80, %r30, 65;
	@%p80 bra 	BB3_68;

	mov.u64 	%rd79, $str9;
	cvta.global.u64 	%rd80, %rd79;
	mov.u64 	%rd81, $str1;
	cvta.global.u64 	%rd82, %rd81;
	mov.u32 	%r152, 113;
	mov.u64 	%rd83, 0;
	mov.u64 	%rd84, 2;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd80;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd82;
	.param .b32 param2;
	st.param.b32	[param2+0], %r152;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd83;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd84;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 18

BB3_68:
	setp.eq.s32	%p81, %r30, 0;
	mov.u32 	%r210, 0;
	mov.u32 	%r209, %r210;
	@%p81 bra 	BB3_103;

	cvt.rn.f32.u32	%f77, %r4;
	cvt.rn.f32.u32	%f78, %r5;
	ld.const.f64 	%fd7, [coefficients+8];
	ld.const.f64 	%fd8, [coefficients];
	ld.const.f64 	%fd9, [coefficients+16];
	add.f64 	%fd10, %fd9, %fd9;
	ld.const.f64 	%fd11, [coefficients+24];
	mul.f64 	%fd12, %fd11, 0d4008000000000000;
	ld.const.f64 	%fd42, [roots];
	cvt.rn.f32.f64	%f79, %fd42;
	ld.const.f64 	%fd43, [roots+8];
	cvt.rn.f32.f64	%f80, %fd43;
	ld.const.f64 	%fd44, [roots+16];
	cvt.rn.f32.f64	%f81, %fd44;
	ld.const.f64 	%fd45, [roots+24];
	cvt.rn.f32.f64	%f82, %fd45;
	ld.const.f64 	%fd46, [roots+32];
	cvt.rn.f32.f64	%f83, %fd46;
	ld.const.f64 	%fd47, [roots+40];
	cvt.rn.f32.f64	%f84, %fd47;
	add.f32 	%f85, %f71, 0fC0000000;
	and.b32  	%r31, %r58, 1;
	mov.u32 	%r200, 0;
	sqrt.rn.f32 	%f86, %f85;
	mov.u32 	%r210, %r200;
	mov.u32 	%r209, %r30;

BB3_70:
	mov.u32 	%r34, %r209;
	mov.u32 	%r32, %r200;
	setp.lt.u32	%p82, %r32, 3;
	@%p82 bra 	BB3_77;
	bra.uni 	BB3_71;

BB3_77:
	cvt.rn.f32.u32	%f338, %r32;
	div.rn.f32 	%f441, %f338, 0f40400000;
	mov.f32 	%f442, %f441;
	bra.uni 	BB3_78;

BB3_71:
	abs.f32 	%f332, %f86;
	mov.b32 	 %r157, %f86;
	and.b32  	%r158, %r157, -2147483648;
	or.b32  	%r159, %r158, 1056964608;
	mov.b32 	 %f333, %r159;
	add.f32 	%f334, %f86, %f333;
	cvt.rzi.f32.f32	%f335, %f334;
	setp.gt.f32	%p83, %f332, 0f4B000000;
	selp.f32	%f440, %f86, %f335, %p83;
	setp.geu.f32	%p84, %f332, 0f3F000000;
	@%p84 bra 	BB3_73;

	cvt.rzi.f32.f32	%f440, %f86;

BB3_73:
	add.s32 	%r160, %r32, -2;
	cvt.rzi.u32.f32	%r161, %f440;
	rem.u32 	%r162, %r160, %r161;
	cvt.rn.f32.u32	%f336, %r162;
	div.rn.f32 	%f441, %f336, %f86;
	div.u32 	%r163, %r160, %r161;
	cvt.rn.f32.u32	%f337, %r163;
	div.rn.f32 	%f442, %f337, %f86;
	setp.le.f32	%p85, %f442, 0f3F800000;
	@%p85 bra 	BB3_75;

	mov.u64 	%rd85, $str10;
	cvta.global.u64 	%rd86, %rd85;
	mov.u64 	%rd87, $str1;
	cvta.global.u64 	%rd88, %rd87;
	mov.u32 	%r164, 132;
	mov.u64 	%rd89, 0;
	mov.u64 	%rd90, 2;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd86;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd88;
	.param .b32 param2;
	st.param.b32	[param2+0], %r164;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd89;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd90;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 19

BB3_75:
	setp.le.f32	%p86, %f441, 0f3F800000;
	@%p86 bra 	BB3_78;

	mov.u64 	%rd91, $str11;
	cvta.global.u64 	%rd92, %rd91;
	mov.u64 	%rd93, $str1;
	cvta.global.u64 	%rd94, %rd93;
	mov.u32 	%r165, 133;
	mov.u64 	%rd95, 0;
	mov.u64 	%rd96, 2;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd92;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd94;
	.param .b32 param2;
	st.param.b32	[param2+0], %r165;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd95;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd96;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 20

BB3_78:
	add.f32 	%f339, %f78, %f442;
	neg.f32 	%f340, %f339;
	add.f32 	%f341, %f77, %f441;
	fma.rn.f32 	%f444, %f75, %f341, %f117;
	fma.rn.f32 	%f443, %f76, %f340, %f120;
	setp.eq.s32	%p87, %r57, 0;
	mov.u32 	%r204, 0;
	@%p87 bra 	BB3_86;

BB3_79:
	mul.f32 	%f342, %f443, %f443;
	mul.f32 	%f343, %f444, %f444;
	sub.f32 	%f344, %f343, %f342;
	mul.f32 	%f345, %f444, %f443;
	fma.rn.f32 	%f346, %f444, %f443, %f345;
	mul.f32 	%f347, %f444, %f344;
	mul.f32 	%f348, %f443, %f346;
	sub.f32 	%f349, %f347, %f348;
	mul.f32 	%f350, %f444, %f346;
	fma.rn.f32 	%f351, %f443, %f344, %f350;
	cvt.f64.f32	%fd48, %f444;
	cvt.f64.f32	%fd49, %f443;
	fma.rn.f64 	%fd50, %fd48, %fd7, %fd8;
	cvt.f64.f32	%fd51, %f344;
	cvt.f64.f32	%fd52, %f346;
	mul.f64 	%fd53, %fd52, %fd9;
	fma.rn.f64 	%fd54, %fd51, %fd9, %fd50;
	fma.rn.f64 	%fd55, %fd49, %fd7, %fd53;
	cvt.f64.f32	%fd56, %f349;
	cvt.f64.f32	%fd57, %f351;
	fma.rn.f64 	%fd58, %fd56, %fd11, %fd54;
	fma.rn.f64 	%fd59, %fd57, %fd11, %fd55;
	cvt.rn.f32.f64	%f352, %fd58;
	cvt.rn.f32.f64	%f353, %fd59;
	fma.rn.f64 	%fd60, %fd48, %fd10, %fd7;
	mul.f64 	%fd61, %fd52, %fd12;
	fma.rn.f64 	%fd62, %fd51, %fd12, %fd60;
	fma.rn.f64 	%fd63, %fd49, %fd10, %fd61;
	cvt.rn.f32.f64	%f354, %fd62;
	cvt.rn.f32.f64	%f355, %fd63;
	abs.f32 	%f356, %f354;
	abs.f32 	%f357, %f355;
	add.f32 	%f358, %f356, %f357;
	rcp.rn.f32 	%f359, %f358;
	mul.f32 	%f360, %f352, %f359;
	mul.f32 	%f361, %f353, %f359;
	mul.f32 	%f362, %f359, %f354;
	mul.f32 	%f363, %f359, %f355;
	mul.f32 	%f364, %f363, %f363;
	fma.rn.f32 	%f365, %f362, %f362, %f364;
	rcp.rn.f32 	%f366, %f365;
	mul.f32 	%f367, %f361, %f363;
	fma.rn.f32 	%f368, %f360, %f362, %f367;
	mul.f32 	%f369, %f366, %f368;
	mul.f32 	%f370, %f361, %f362;
	mul.f32 	%f371, %f360, %f363;
	sub.f32 	%f372, %f370, %f371;
	mul.f32 	%f373, %f366, %f372;
	sub.f32 	%f444, %f444, %f369;
	sub.f32 	%f443, %f443, %f373;
	add.s32 	%r204, %r204, 1;
	sub.f32 	%f374, %f444, %f79;
	abs.f32 	%f375, %f374;
	setp.geu.f32	%p88, %f375, 0f38D1B717;
	@%p88 bra 	BB3_81;

	sub.f32 	%f376, %f443, %f80;
	abs.f32 	%f377, %f376;
	setp.lt.f32	%p89, %f377, 0f38D1B717;
	@%p89 bra 	BB3_86;

BB3_81:
	sub.f32 	%f378, %f444, %f81;
	abs.f32 	%f379, %f378;
	setp.geu.f32	%p90, %f379, 0f38D1B717;
	@%p90 bra 	BB3_83;

	sub.f32 	%f380, %f443, %f82;
	abs.f32 	%f381, %f380;
	setp.lt.f32	%p91, %f381, 0f38D1B717;
	@%p91 bra 	BB3_86;

BB3_83:
	sub.f32 	%f382, %f444, %f83;
	abs.f32 	%f383, %f382;
	setp.lt.f32	%p92, %f383, 0f38D1B717;
	@%p92 bra 	BB3_85;
	bra.uni 	BB3_84;

BB3_85:
	setp.lt.u32	%p94, %r204, %r57;
	sub.f32 	%f384, %f443, %f84;
	abs.f32 	%f385, %f384;
	setp.geu.f32	%p95, %f385, 0f38D1B717;
	and.pred  	%p96, %p95, %p94;
	@%p96 bra 	BB3_79;
	bra.uni 	BB3_86;

BB3_84:
	setp.lt.u32	%p93, %r204, %r57;
	@%p93 bra 	BB3_79;

BB3_86:
	cvt.rn.f32.u32	%f386, %r204;
	cvt.rzi.u32.f32	%r38, %f386;
	add.s32 	%r210, %r38, %r210;
	setp.gt.u32	%p97, %r32, 9;
	@%p97 bra 	BB3_88;

	cvt.rn.f32.u32	%f387, %r38;
	mul.wide.u32 	%rd97, %r32, 4;
	add.s64 	%rd98, %rd1, %rd97;
	st.local.f32 	[%rd98], %f387;

BB3_88:
	setp.lt.u32	%p98, %r32, 10;
	setp.ne.s32	%p99, %r32, 0;
	and.pred  	%p100, %p98, %p99;
	setp.ne.s32	%p101, %r31, 0;
	and.pred  	%p102, %p100, %p101;
	shr.u32 	%r40, %r34, 1;
	setp.eq.s32	%p103, %r32, %r40;
	or.pred  	%p104, %p102, %p103;
	add.s32 	%r200, %r32, 1;
	mov.u32 	%r209, %r34;
	@!%p104 bra 	BB3_102;
	bra.uni 	BB3_89;

BB3_89:
	div.u32 	%r168, %r210, %r200;
	cvt.rn.f32.u32	%f101, %r168;
	setp.eq.s32	%p105, %r32, 0;
	mov.f32 	%f449, 0f00000000;
	@%p105 bra 	BB3_98;

	and.b32  	%r42, %r32, 3;
	setp.eq.s32	%p106, %r42, 0;
	mov.f32 	%f449, 0f00000000;
	mov.u32 	%r208, 0;
	@%p106 bra 	BB3_96;

	setp.eq.s32	%p107, %r42, 1;
	mov.f32 	%f446, 0f00000000;
	mov.u32 	%r206, 0;
	@%p107 bra 	BB3_95;

	setp.eq.s32	%p108, %r42, 2;
	mov.f32 	%f445, 0f00000000;
	mov.u32 	%r205, 0;
	@%p108 bra 	BB3_94;

	ld.local.f32 	%f392, [%rd1];
	sub.f32 	%f393, %f392, %f101;
	fma.rn.f32 	%f445, %f393, %f393, 0f00000000;
	mov.u32 	%r205, 1;

BB3_94:
	mul.wide.u32 	%rd99, %r205, 4;
	add.s64 	%rd100, %rd1, %rd99;
	ld.local.f32 	%f394, [%rd100];
	sub.f32 	%f395, %f394, %f101;
	fma.rn.f32 	%f446, %f395, %f395, %f445;
	add.s32 	%r206, %r205, 1;

BB3_95:
	mul.wide.u32 	%rd101, %r206, 4;
	add.s64 	%rd102, %rd1, %rd101;
	ld.local.f32 	%f396, [%rd102];
	sub.f32 	%f397, %f396, %f101;
	fma.rn.f32 	%f449, %f397, %f397, %f446;
	add.s32 	%r208, %r206, 1;

BB3_96:
	setp.lt.u32	%p109, %r32, 4;
	@%p109 bra 	BB3_98;

BB3_97:
	mul.wide.u32 	%rd103, %r208, 4;
	add.s64 	%rd104, %rd1, %rd103;
	ld.local.f32 	%f398, [%rd104];
	sub.f32 	%f399, %f398, %f101;
	fma.rn.f32 	%f400, %f399, %f399, %f449;
	add.s32 	%r173, %r208, 1;
	mul.wide.u32 	%rd105, %r173, 4;
	add.s64 	%rd106, %rd1, %rd105;
	ld.local.f32 	%f401, [%rd106];
	sub.f32 	%f402, %f401, %f101;
	fma.rn.f32 	%f403, %f402, %f402, %f400;
	add.s32 	%r174, %r208, 2;
	mul.wide.u32 	%rd107, %r174, 4;
	add.s64 	%rd108, %rd1, %rd107;
	ld.local.f32 	%f404, [%rd108];
	sub.f32 	%f405, %f404, %f101;
	fma.rn.f32 	%f406, %f405, %f405, %f403;
	add.s32 	%r175, %r208, 3;
	mul.wide.u32 	%rd109, %r175, 4;
	add.s64 	%rd110, %rd1, %rd109;
	ld.local.f32 	%f407, [%rd110];
	sub.f32 	%f408, %f407, %f101;
	fma.rn.f32 	%f449, %f408, %f408, %f406;
	add.s32 	%r208, %r208, 4;
	setp.lt.u32	%p110, %r208, %r32;
	@%p110 bra 	BB3_97;

BB3_98:
	add.s32 	%r176, %r32, -1;
	cvt.rn.f32.u32	%f409, %r176;
	div.rn.f32 	%f410, %f449, %f409;
	div.rn.f32 	%f111, %f410, %f101;
	setp.ne.s32	%p111, %r32, 1;
	@%p111 bra 	BB3_100;

	// inline asm
	activemask.b32 %r177;
	// inline asm
	ld.local.v2.f32 	{%f411, %f412}, [%rd1];
	sub.f32 	%f415, %f411, %f412;
	abs.f32 	%f416, %f415;
	setp.lt.f32	%p112, %f416, 0f34000000;
	vote.sync.all.pred 	%p113, %p112, %r177;
	mov.u32 	%r209, 2;
	@%p113 bra 	BB3_102;

BB3_100:
	// inline asm
	activemask.b32 %r180;
	// inline asm
	setp.lt.f32	%p114, %f111, 0f3C23D70A;
	vote.sync.all.pred 	%p115, %p114, %r180;
	mov.u32 	%r209, %r200;
	@%p115 bra 	BB3_102;

	// inline asm
	activemask.b32 %r182;
	// inline asm
	setp.le.f32	%p116, %f111, 0f3F800000;
	vote.sync.all.pred 	%p117, %p116, %r182;
	setp.ge.u32	%p118, %r32, %r40;
	and.pred  	%p119, %p117, %p118;
	selp.b32	%r209, %r200, %r34, %p119;

BB3_102:
	setp.lt.u32	%p120, %r200, %r209;
	@%p120 bra 	BB3_70;

BB3_103:
	cvt.rn.f32.u32	%f425, %r209;
	div.u32 	%r184, %r210, %r209;
	cvt.rn.f32.u32	%f450, %r184;
	mov.f32 	%f452, 0f00000000;
	mov.u16 	%rs11, 0;
	bra.uni 	BB3_104;

BB3_21:
	shr.u32 	%r106, %r58, 5;
	and.b32  	%r107, %r106, 1;
	setp.eq.b32	%p29, %r107, 1;
	not.pred 	%p30, %p29;
	setp.eq.s16	%p31, %rs10, 0;
	mov.f32 	%f452, 0f00000000;
	mov.u16 	%rs11, 1;
	or.pred  	%p32, %p31, %p30;
	@%p32 bra 	BB3_104;

	setp.lt.f32	%p33, %f421, 0f3F800000;
	mov.f32 	%f452, 0f00000000;
	mov.f32 	%f438, %f452;
	@%p33 bra 	BB3_63;

	abs.f32 	%f228, %f421;
	mov.b32 	 %r108, %f421;
	and.b32  	%r109, %r108, -2147483648;
	or.b32  	%r110, %r109, 1056964608;
	mov.b32 	 %f229, %r110;
	add.f32 	%f230, %f421, %f229;
	cvt.rzi.f32.f32	%f231, %f230;
	setp.gt.f32	%p34, %f228, 0f4B000000;
	selp.f32	%f426, %f421, %f231, %p34;
	setp.geu.f32	%p35, %f228, 0f3F000000;
	@%p35 bra 	BB3_25;

	cvt.rzi.f32.f32	%f426, %f421;

BB3_25:
	cvt.rzi.u32.f32	%r111, %f426;
	mov.u32 	%r112, 64;
	min.u32 	%r7, %r112, %r111;
	cvt.rn.f32.u32	%f232, %r55;
	sub.f32 	%f233, %f119, %f117;
	div.rn.f32 	%f28, %f233, %f232;
	cvt.rn.f32.u32	%f234, %r56;
	sub.f32 	%f235, %f120, %f118;
	div.rn.f32 	%f29, %f235, %f234;
	setp.lt.u32	%p36, %r7, 65;
	@%p36 bra 	BB3_27;

	mov.u64 	%rd36, $str9;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, $str1;
	cvta.global.u64 	%rd39, %rd38;
	mov.u32 	%r113, 113;
	mov.u64 	%rd40, 0;
	mov.u64 	%rd41, 2;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd37;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b32 param2;
	st.param.b32	[param2+0], %r113;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd40;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd41;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 15

BB3_27:
	setp.eq.s32	%p37, %r7, 0;
	mov.u32 	%r198, 0;
	mov.u32 	%r197, %r198;
	@%p37 bra 	BB3_62;

	cvt.rn.f32.u32	%f30, %r4;
	cvt.rn.f32.u32	%f31, %r5;
	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd20, [roots];
	cvt.rn.f32.f64	%f32, %fd20;
	ld.const.f64 	%fd21, [roots+8];
	cvt.rn.f32.f64	%f33, %fd21;
	ld.const.f64 	%fd22, [roots+16];
	cvt.rn.f32.f64	%f34, %fd22;
	ld.const.f64 	%fd23, [roots+24];
	cvt.rn.f32.f64	%f35, %fd23;
	ld.const.f64 	%fd24, [roots+32];
	cvt.rn.f32.f64	%f36, %fd24;
	ld.const.f64 	%fd25, [roots+40];
	cvt.rn.f32.f64	%f37, %fd25;
	add.f32 	%f38, %f421, 0fC0000000;
	mov.u32 	%r188, 0;
	sqrt.rn.f32 	%f39, %f38;
	mov.u32 	%r198, %r188;
	mov.u32 	%r197, %r7;

BB3_29:
	mov.u32 	%r10, %r197;
	mov.u32 	%r8, %r188;
	setp.lt.u32	%p38, %r8, 3;
	@%p38 bra 	BB3_36;
	bra.uni 	BB3_30;

BB3_36:
	cvt.rn.f32.u32	%f242, %r8;
	div.rn.f32 	%f428, %f242, 0f40400000;
	mov.f32 	%f429, %f428;
	bra.uni 	BB3_37;

BB3_30:
	abs.f32 	%f236, %f39;
	mov.b32 	 %r118, %f39;
	and.b32  	%r119, %r118, -2147483648;
	or.b32  	%r120, %r119, 1056964608;
	mov.b32 	 %f237, %r120;
	add.f32 	%f238, %f39, %f237;
	cvt.rzi.f32.f32	%f239, %f238;
	setp.gt.f32	%p39, %f236, 0f4B000000;
	selp.f32	%f427, %f39, %f239, %p39;
	setp.geu.f32	%p40, %f236, 0f3F000000;
	@%p40 bra 	BB3_32;

	cvt.rzi.f32.f32	%f427, %f39;

BB3_32:
	add.s32 	%r121, %r8, -2;
	cvt.rzi.u32.f32	%r122, %f427;
	rem.u32 	%r123, %r121, %r122;
	cvt.rn.f32.u32	%f240, %r123;
	div.rn.f32 	%f428, %f240, %f39;
	div.u32 	%r124, %r121, %r122;
	cvt.rn.f32.u32	%f241, %r124;
	div.rn.f32 	%f429, %f241, %f39;
	setp.le.f32	%p41, %f429, 0f3F800000;
	@%p41 bra 	BB3_34;

	mov.u64 	%rd42, $str10;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, $str1;
	cvta.global.u64 	%rd45, %rd44;
	mov.u32 	%r125, 132;
	mov.u64 	%rd46, 0;
	mov.u64 	%rd47, 2;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd45;
	.param .b32 param2;
	st.param.b32	[param2+0], %r125;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd46;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd47;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 16

BB3_34:
	setp.le.f32	%p42, %f428, 0f3F800000;
	@%p42 bra 	BB3_37;

	mov.u64 	%rd48, $str11;
	cvta.global.u64 	%rd49, %rd48;
	mov.u64 	%rd50, $str1;
	cvta.global.u64 	%rd51, %rd50;
	mov.u32 	%r126, 133;
	mov.u64 	%rd52, 0;
	mov.u64 	%rd53, 2;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd49;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 param2;
	st.param.b32	[param2+0], %r126;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd52;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd53;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 17

BB3_37:
	ld.param.f32 	%f419, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f418, [fractalRenderAdvancedFloat_param_3];
	add.f32 	%f243, %f31, %f429;
	neg.f32 	%f244, %f243;
	add.f32 	%f245, %f30, %f428;
	fma.rn.f32 	%f431, %f28, %f245, %f418;
	fma.rn.f32 	%f430, %f29, %f244, %f419;
	setp.eq.s32	%p43, %r57, 0;
	mov.u32 	%r192, 0;
	@%p43 bra 	BB3_45;

BB3_38:
	mul.f32 	%f246, %f430, %f430;
	mul.f32 	%f247, %f431, %f431;
	sub.f32 	%f248, %f247, %f246;
	mul.f32 	%f249, %f431, %f430;
	fma.rn.f32 	%f250, %f431, %f430, %f249;
	mul.f32 	%f251, %f431, %f248;
	mul.f32 	%f252, %f430, %f250;
	sub.f32 	%f253, %f251, %f252;
	mul.f32 	%f254, %f431, %f250;
	fma.rn.f32 	%f255, %f430, %f248, %f254;
	cvt.f64.f32	%fd26, %f431;
	cvt.f64.f32	%fd27, %f430;
	fma.rn.f64 	%fd28, %fd26, %fd1, %fd2;
	cvt.f64.f32	%fd29, %f248;
	cvt.f64.f32	%fd30, %f250;
	mul.f64 	%fd31, %fd30, %fd3;
	fma.rn.f64 	%fd32, %fd29, %fd3, %fd28;
	fma.rn.f64 	%fd33, %fd27, %fd1, %fd31;
	cvt.f64.f32	%fd34, %f253;
	cvt.f64.f32	%fd35, %f255;
	fma.rn.f64 	%fd36, %fd34, %fd5, %fd32;
	fma.rn.f64 	%fd37, %fd35, %fd5, %fd33;
	cvt.rn.f32.f64	%f256, %fd36;
	cvt.rn.f32.f64	%f257, %fd37;
	fma.rn.f64 	%fd38, %fd26, %fd4, %fd1;
	mul.f64 	%fd39, %fd30, %fd6;
	fma.rn.f64 	%fd40, %fd29, %fd6, %fd38;
	fma.rn.f64 	%fd41, %fd27, %fd4, %fd39;
	cvt.rn.f32.f64	%f258, %fd40;
	cvt.rn.f32.f64	%f259, %fd41;
	abs.f32 	%f260, %f258;
	abs.f32 	%f261, %f259;
	add.f32 	%f262, %f260, %f261;
	rcp.rn.f32 	%f263, %f262;
	mul.f32 	%f264, %f256, %f263;
	mul.f32 	%f265, %f257, %f263;
	mul.f32 	%f266, %f263, %f258;
	mul.f32 	%f267, %f263, %f259;
	mul.f32 	%f268, %f267, %f267;
	fma.rn.f32 	%f269, %f266, %f266, %f268;
	rcp.rn.f32 	%f270, %f269;
	mul.f32 	%f271, %f265, %f267;
	fma.rn.f32 	%f272, %f264, %f266, %f271;
	mul.f32 	%f273, %f270, %f272;
	mul.f32 	%f274, %f265, %f266;
	mul.f32 	%f275, %f264, %f267;
	sub.f32 	%f276, %f274, %f275;
	mul.f32 	%f277, %f270, %f276;
	sub.f32 	%f431, %f431, %f273;
	sub.f32 	%f430, %f430, %f277;
	add.s32 	%r192, %r192, 1;
	sub.f32 	%f278, %f431, %f32;
	abs.f32 	%f279, %f278;
	setp.geu.f32	%p44, %f279, 0f38D1B717;
	@%p44 bra 	BB3_40;

	sub.f32 	%f280, %f430, %f33;
	abs.f32 	%f281, %f280;
	setp.lt.f32	%p45, %f281, 0f38D1B717;
	@%p45 bra 	BB3_45;

BB3_40:
	sub.f32 	%f282, %f431, %f34;
	abs.f32 	%f283, %f282;
	setp.geu.f32	%p46, %f283, 0f38D1B717;
	@%p46 bra 	BB3_42;

	sub.f32 	%f284, %f430, %f35;
	abs.f32 	%f285, %f284;
	setp.lt.f32	%p47, %f285, 0f38D1B717;
	@%p47 bra 	BB3_45;

BB3_42:
	sub.f32 	%f286, %f431, %f36;
	abs.f32 	%f287, %f286;
	setp.lt.f32	%p48, %f287, 0f38D1B717;
	@%p48 bra 	BB3_44;
	bra.uni 	BB3_43;

BB3_44:
	setp.lt.u32	%p50, %r192, %r57;
	sub.f32 	%f288, %f430, %f37;
	abs.f32 	%f289, %f288;
	setp.geu.f32	%p51, %f289, 0f38D1B717;
	and.pred  	%p52, %p51, %p50;
	@%p52 bra 	BB3_38;
	bra.uni 	BB3_45;

BB3_43:
	setp.lt.u32	%p49, %r192, %r57;
	@%p49 bra 	BB3_38;

BB3_45:
	cvt.rn.f32.u32	%f290, %r192;
	cvt.rzi.u32.f32	%r14, %f290;
	add.s32 	%r198, %r14, %r198;
	setp.gt.u32	%p53, %r8, 9;
	@%p53 bra 	BB3_47;

	cvt.rn.f32.u32	%f291, %r14;
	mul.wide.u32 	%rd56, %r8, 4;
	add.s64 	%rd57, %rd1, %rd56;
	st.local.f32 	[%rd57], %f291;

BB3_47:
	setp.lt.u32	%p54, %r8, 10;
	and.b32  	%r129, %r58, 1;
	setp.eq.b32	%p55, %r129, 1;
	setp.ne.s32	%p56, %r8, 0;
	and.pred  	%p57, %p54, %p56;
	and.pred  	%p58, %p57, %p55;
	shr.u32 	%r16, %r10, 1;
	setp.eq.s32	%p59, %r8, %r16;
	or.pred  	%p60, %p58, %p59;
	add.s32 	%r188, %r8, 1;
	mov.u32 	%r197, %r10;
	@!%p60 bra 	BB3_61;
	bra.uni 	BB3_48;

BB3_48:
	div.u32 	%r130, %r198, %r188;
	cvt.rn.f32.u32	%f54, %r130;
	setp.eq.s32	%p61, %r8, 0;
	mov.f32 	%f436, 0f00000000;
	@%p61 bra 	BB3_57;

	and.b32  	%r18, %r8, 3;
	setp.eq.s32	%p62, %r18, 0;
	mov.f32 	%f436, 0f00000000;
	mov.u32 	%r196, 0;
	@%p62 bra 	BB3_55;

	setp.eq.s32	%p63, %r18, 1;
	mov.f32 	%f433, 0f00000000;
	mov.u32 	%r194, 0;
	@%p63 bra 	BB3_54;

	setp.eq.s32	%p64, %r18, 2;
	mov.f32 	%f432, 0f00000000;
	mov.u32 	%r193, 0;
	@%p64 bra 	BB3_53;

	ld.local.f32 	%f296, [%rd1];
	sub.f32 	%f297, %f296, %f54;
	fma.rn.f32 	%f432, %f297, %f297, 0f00000000;
	mov.u32 	%r193, 1;

BB3_53:
	mul.wide.u32 	%rd62, %r193, 4;
	add.s64 	%rd63, %rd1, %rd62;
	ld.local.f32 	%f298, [%rd63];
	sub.f32 	%f299, %f298, %f54;
	fma.rn.f32 	%f433, %f299, %f299, %f432;
	add.s32 	%r194, %r193, 1;

BB3_54:
	mul.wide.u32 	%rd66, %r194, 4;
	add.s64 	%rd67, %rd1, %rd66;
	ld.local.f32 	%f300, [%rd67];
	sub.f32 	%f301, %f300, %f54;
	fma.rn.f32 	%f436, %f301, %f301, %f433;
	add.s32 	%r196, %r194, 1;

BB3_55:
	setp.lt.u32	%p65, %r8, 4;
	@%p65 bra 	BB3_57;

BB3_56:
	mul.wide.u32 	%rd69, %r196, 4;
	add.s64 	%rd70, %rd1, %rd69;
	ld.local.f32 	%f302, [%rd70];
	sub.f32 	%f303, %f302, %f54;
	fma.rn.f32 	%f304, %f303, %f303, %f436;
	add.s32 	%r135, %r196, 1;
	mul.wide.u32 	%rd71, %r135, 4;
	add.s64 	%rd72, %rd1, %rd71;
	ld.local.f32 	%f305, [%rd72];
	sub.f32 	%f306, %f305, %f54;
	fma.rn.f32 	%f307, %f306, %f306, %f304;
	add.s32 	%r136, %r196, 2;
	mul.wide.u32 	%rd73, %r136, 4;
	add.s64 	%rd74, %rd1, %rd73;
	ld.local.f32 	%f308, [%rd74];
	sub.f32 	%f309, %f308, %f54;
	fma.rn.f32 	%f310, %f309, %f309, %f307;
	add.s32 	%r137, %r196, 3;
	mul.wide.u32 	%rd75, %r137, 4;
	add.s64 	%rd76, %rd1, %rd75;
	ld.local.f32 	%f311, [%rd76];
	sub.f32 	%f312, %f311, %f54;
	fma.rn.f32 	%f436, %f312, %f312, %f310;
	add.s32 	%r196, %r196, 4;
	setp.lt.u32	%p66, %r196, %r8;
	@%p66 bra 	BB3_56;

BB3_57:
	add.s32 	%r138, %r8, -1;
	cvt.rn.f32.u32	%f313, %r138;
	div.rn.f32 	%f314, %f436, %f313;
	div.rn.f32 	%f64, %f314, %f54;
	setp.ne.s32	%p67, %r8, 1;
	@%p67 bra 	BB3_59;

	// inline asm
	activemask.b32 %r139;
	// inline asm
	ld.local.v2.f32 	{%f315, %f316}, [%rd1];
	sub.f32 	%f319, %f315, %f316;
	abs.f32 	%f320, %f319;
	setp.lt.f32	%p68, %f320, 0f34000000;
	vote.sync.all.pred 	%p69, %p68, %r139;
	mov.u32 	%r197, 2;
	@%p69 bra 	BB3_61;

BB3_59:
	// inline asm
	activemask.b32 %r142;
	// inline asm
	setp.lt.f32	%p70, %f64, 0f3C23D70A;
	vote.sync.all.pred 	%p71, %p70, %r142;
	mov.u32 	%r197, %r188;
	@%p71 bra 	BB3_61;

	// inline asm
	activemask.b32 %r144;
	// inline asm
	setp.le.f32	%p72, %f64, 0f3F800000;
	vote.sync.all.pred 	%p73, %p72, %r144;
	setp.ge.u32	%p74, %r8, %r16;
	and.pred  	%p75, %p73, %p74;
	selp.b32	%r197, %r188, %r10, %p75;

BB3_61:
	setp.lt.u32	%p76, %r188, %r197;
	@%p76 bra 	BB3_29;

BB3_62:
	cvt.rn.f32.u32	%f452, %r197;
	div.u32 	%r146, %r198, %r197;
	cvt.rn.f32.u32	%f438, %r146;

BB3_63:
	mov.u16 	%rs11, 1;
	mul.f32 	%f321, %f425, 0f3F400000;
	add.f32 	%f425, %f321, %f452;
	mul.f32 	%f322, %f452, %f438;
	fma.rn.f32 	%f323, %f450, %f321, %f322;
	div.rn.f32 	%f450, %f323, %f425;

BB3_104:
	ld.param.u32 	%r187, [fractalRenderAdvancedFloat_param_1];
	mul.lo.s32 	%r185, %r5, %r187;
	cvt.u64.u32	%rd111, %r185;
	cvta.to.global.u64 	%rd112, %rd4;
	add.s64 	%rd113, %rd112, %rd111;
	mul.wide.u32 	%rd114, %r4, 16;
	add.s64 	%rd115, %rd113, %rd114;
	st.global.f32 	[%rd115], %f450;
	st.global.f32 	[%rd115+4], %f425;
	st.global.f32 	[%rd115+12], %f452;
	st.global.u8 	[%rd115+8], %rs11;
	setp.gt.f32	%p121, %f425, 0f00000000;
	@%p121 bra 	BB3_106;

	mov.u64 	%rd116, $str8;
	cvta.global.u64 	%rd117, %rd116;
	mov.u64 	%rd118, $str1;
	cvta.global.u64 	%rd119, %rd118;
	mov.u32 	%r186, 399;
	mov.u64 	%rd120, 0;
	mov.u64 	%rd121, 2;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd117;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd119;
	.param .b32 param2;
	st.param.b32	[param2+0], %r186;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd120;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd121;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 21

BB3_106:
	ret;
}

	// .globl	fractalRenderAdvancedDouble
.visible .entry fractalRenderAdvancedDouble(
	.param .u64 fractalRenderAdvancedDouble_param_0,
	.param .u32 fractalRenderAdvancedDouble_param_1,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_2[8],
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_3[32],
	.param .u32 fractalRenderAdvancedDouble_param_4,
	.param .f32 fractalRenderAdvancedDouble_param_5,
	.param .u32 fractalRenderAdvancedDouble_param_6,
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_7[32],
	.param .u64 fractalRenderAdvancedDouble_param_8,
	.param .u32 fractalRenderAdvancedDouble_param_9,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot4[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<123>;
	.reg .b16 	%rs<12>;
	.reg .f32 	%f<277>;
	.reg .b32 	%r<240>;
	.reg .f64 	%fd<218>;
	.reg .b64 	%rd<123>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r56, [fractalRenderAdvancedDouble_param_2+4];
	ld.param.u32 	%r55, [fractalRenderAdvancedDouble_param_2];
	ld.param.f64 	%fd62, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd61, [fractalRenderAdvancedDouble_param_3+16];
	ld.param.f64 	%fd60, [fractalRenderAdvancedDouble_param_3+8];
	ld.param.f64 	%fd59, [fractalRenderAdvancedDouble_param_3];
	ld.param.u32 	%r57, [fractalRenderAdvancedDouble_param_4];
	ld.param.f32 	%f253, [fractalRenderAdvancedDouble_param_5];
	ld.param.u32 	%r58, [fractalRenderAdvancedDouble_param_6];
	ld.param.f64 	%fd66, [fractalRenderAdvancedDouble_param_7+24];
	ld.param.f64 	%fd65, [fractalRenderAdvancedDouble_param_7+16];
	ld.param.f64 	%fd64, [fractalRenderAdvancedDouble_param_7+8];
	ld.param.f64 	%fd63, [fractalRenderAdvancedDouble_param_7];
	ld.param.u64 	%rd5, [fractalRenderAdvancedDouble_param_8];
	ld.param.u32 	%r59, [fractalRenderAdvancedDouble_param_9];
	ld.param.u32 	%r61, [fractalRenderAdvancedDouble_param_10+4];
	ld.param.u32 	%r60, [fractalRenderAdvancedDouble_param_10];
	add.u64 	%rd6, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd6;
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p3, %r1, 32;
	@%p3 bra 	BB4_2;

	mov.u64 	%rd7, $str;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, $str1;
	cvta.global.u64 	%rd10, %rd9;
	mov.u32 	%r62, 59;
	mov.u64 	%rd11, 0;
	mov.u64 	%rd12, 2;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 param2;
	st.param.b32	[param2+0], %r62;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd11;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd12;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 22

BB4_2:
	mov.u32 	%r63, %tid.x;
	mov.u32 	%r64, %tid.y;
	mad.lo.s32 	%r65, %r1, %r64, %r63;
	shl.b32 	%r66, %r1, 2;
	and.b32  	%r67, %r65, 15;
	rem.u32 	%r68, %r65, %r66;
	sub.s32 	%r69, %r68, %r67;
	shr.u32 	%r70, %r69, 2;
	and.b32  	%r71, %r65, 3;
	add.s32 	%r72, %r70, %r71;
	div.u32 	%r73, %r65, %r66;
	shl.b32 	%r74, %r73, 2;
	bfe.u32 	%r75, %r65, 2, 2;
	add.s32 	%r76, %r74, %r75;
	mov.u32 	%r77, %ctaid.x;
	mad.lo.s32 	%r4, %r77, %r1, %r72;
	mov.u32 	%r78, %ctaid.y;
	mov.u32 	%r79, %ntid.y;
	mad.lo.s32 	%r5, %r78, %r79, %r76;
	setp.lt.u32	%p4, %r4, %r55;
	setp.gt.u32	%p5, %r56, %r5;
	and.pred  	%p6, %p4, %p5;
	@!%p6 bra 	BB4_108;
	bra.uni 	BB4_3;

BB4_3:
	and.b32  	%r80, %r58, 52;
	mov.u16 	%rs10, 0;
	setp.ne.s32	%p7, %r80, 52;
	@%p7 bra 	BB4_12;

	setp.gt.f32	%p8, %f253, 0f00000000;
	@%p8 bra 	BB4_6;

	mov.u64 	%rd13, $str2;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, $str1;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r81, 263;
	mov.u64 	%rd17, 0;
	mov.u64 	%rd18, 2;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 param2;
	st.param.b32	[param2+0], %r81;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd17;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd18;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 23

BB4_6:
	and.b32  	%r82, %r4, -8;
	cvt.rn.f32.u32	%f76, %r82;
	and.b32  	%r83, %r5, -4;
	cvt.rn.f32.u32	%f77, %r83;
	cvt.rn.f32.u32	%f78, %r60;
	sub.f32 	%f79, %f78, %f76;
	cvt.rn.f32.u32	%f80, %r61;
	sub.f32 	%f81, %f80, %f77;
	mul.f32 	%f82, %f81, %f81;
	fma.rn.f32 	%f83, %f79, %f79, %f82;
	sqrt.rn.f32 	%f84, %f83;
	ld.global.f32 	%f85, [pixelRealWidthInCm];
	mul.f32 	%f86, %f84, %f85;
	ld.global.f32 	%f87, [screenDistance];
	div.rn.f32 	%f1, %f86, %f87;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p9, %f2, 0f3F800000;
	mov.f32 	%f252, %f2;
	@%p9 bra 	BB4_8;

	rcp.rn.f32 	%f252, %f2;

BB4_8:
	mul.rn.f32 	%f88, %f252, %f252;
	mov.f32 	%f89, 0fC0B59883;
	mov.f32 	%f90, 0fBF52C7EA;
	fma.rn.f32 	%f91, %f88, %f90, %f89;
	mov.f32 	%f92, 0fC0D21907;
	fma.rn.f32 	%f93, %f91, %f88, %f92;
	mul.f32 	%f94, %f88, %f93;
	mul.f32 	%f95, %f252, %f94;
	add.f32 	%f96, %f88, 0f41355DC0;
	mov.f32 	%f97, 0f41E6BD60;
	fma.rn.f32 	%f98, %f96, %f88, %f97;
	mov.f32 	%f99, 0f419D92C8;
	fma.rn.f32 	%f100, %f98, %f88, %f99;
	rcp.rn.f32 	%f101, %f100;
	fma.rn.f32 	%f102, %f95, %f101, %f252;
	mov.f32 	%f103, 0f3FC90FDB;
	sub.f32 	%f104, %f103, %f102;
	setp.gt.f32	%p10, %f2, 0f3F800000;
	selp.f32	%f105, %f104, %f102, %p10;
	mov.b32 	 %r84, %f105;
	mov.b32 	 %r85, %f1;
	and.b32  	%r86, %r85, -2147483648;
	or.b32  	%r87, %r84, %r86;
	mov.b32 	 %f106, %r87;
	setp.gtu.f32	%p11, %f2, 0f7F800000;
	selp.f32	%f107, %f105, %f106, %p11;
	mul.f32 	%f108, %f107, 0f43340000;
	div.rn.f32 	%f5, %f108, 0f40490FDB;
	setp.ge.f32	%p12, %f5, 0f00000000;
	@%p12 bra 	BB4_10;

	mov.u64 	%rd19, $str3;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, $str1;
	cvta.global.u64 	%rd22, %rd21;
	mov.u32 	%r88, 276;
	mov.u64 	%rd23, 0;
	mov.u64 	%rd24, 2;
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b32 param2;
	st.param.b32	[param2+0], %r88;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 24

BB4_10:
	mul.f32 	%f109, %f253, 0f40B00000;
	setp.ltu.f32	%p13, %f253, 0f3F800000;
	selp.f32	%f110, %f109, 0f40B00000, %p13;
	mov.f32 	%f111, 0f42700000;
	sub.f32 	%f112, %f111, %f110;
	mov.f32 	%f113, 0fBF800000;
	div.rn.f32 	%f114, %f113, %f112;
	fma.rn.f32 	%f115, %f110, 0f80000000, 0f42700000;
	div.rn.f32 	%f116, %f115, %f112;
	fma.rn.f32 	%f117, %f5, %f114, %f116;
	cvt.f64.f32	%fd67, %f117;
	mov.f64 	%fd68, 0d3FF0000000000000;
	min.f64 	%fd69, %fd68, %fd67;
	cvt.rn.f32.f64	%f118, %fd69;
	mul.f32 	%f253, %f118, %f253;
	setp.gtu.f32	%p14, %f5, %f110;
	@%p14 bra 	BB4_12;

	cvt.f64.f32	%fd70, %f253;
	max.f64 	%fd72, %fd68, %fd70;
	cvt.rn.f32.f64	%f253, %fd72;
	mov.u16 	%rs10, 1;

BB4_12:
	and.b32  	%r89, %r58, 8;
	setp.eq.s32	%p16, %r89, 0;
	mov.pred 	%p122, -1;
	mov.f32 	%f274, 0f00000000;
	@%p16 bra 	BB4_13;

	sub.s32 	%r90, %r56, %r5;
	cvt.rn.f64.u32	%fd73, %r90;
	cvt.rn.f64.u32	%fd74, %r55;
	cvt.rn.f64.u32	%fd75, %r4;
	div.rn.f64 	%fd76, %fd75, %fd74;
	cvt.rn.f64.u32	%fd77, %r56;
	div.rn.f64 	%fd78, %fd73, %fd77;
	sub.f64 	%fd79, %fd61, %fd59;
	sub.f64 	%fd80, %fd62, %fd60;
	fma.rn.f64 	%fd81, %fd79, %fd76, %fd59;
	fma.rn.f64 	%fd82, %fd80, %fd78, %fd60;
	sub.f64 	%fd83, %fd81, %fd63;
	sub.f64 	%fd84, %fd82, %fd64;
	sub.f64 	%fd85, %fd65, %fd63;
	div.rn.f64 	%fd86, %fd83, %fd85;
	sub.f64 	%fd87, %fd66, %fd64;
	div.rn.f64 	%fd88, %fd84, %fd87;
	cvt.rn.f32.f64	%f121, %fd86;
	cvt.rn.f32.f64	%f122, %fd88;
	cvt.rn.f32.u32	%f123, %r55;
	mul.f32 	%f9, %f123, %f121;
	cvt.rn.f32.u32	%f124, %r56;
	mul.f32 	%f125, %f124, %f122;
	sub.f32 	%f10, %f124, %f125;
	abs.f32 	%f126, %f9;
	mov.b32 	 %r91, %f9;
	and.b32  	%r92, %r91, -2147483648;
	or.b32  	%r93, %r92, 1056964608;
	mov.b32 	 %f127, %r93;
	add.f32 	%f128, %f9, %f127;
	cvt.rzi.f32.f32	%f129, %f128;
	setp.gt.f32	%p17, %f126, 0f4B000000;
	selp.f32	%f254, %f9, %f129, %p17;
	setp.geu.f32	%p18, %f126, 0f3F000000;
	@%p18 bra 	BB4_16;

	cvt.rzi.f32.f32	%f254, %f9;

BB4_16:
	cvt.rzi.s32.f32	%r6, %f254;
	mov.b32 	 %r94, %f10;
	and.b32  	%r95, %r94, -2147483648;
	or.b32  	%r96, %r95, 1056964608;
	mov.b32 	 %f130, %r96;
	add.f32 	%f131, %f10, %f130;
	cvt.rzi.f32.f32	%f132, %f131;
	abs.f32 	%f133, %f10;
	setp.gt.f32	%p19, %f133, 0f4B000000;
	selp.f32	%f255, %f10, %f132, %p19;
	setp.geu.f32	%p20, %f133, 0f3F000000;
	@%p20 bra 	BB4_18;

	cvt.rzi.f32.f32	%f255, %f10;

BB4_18:
	add.s32 	%r97, %r55, -2;
	setp.lt.u32	%p22, %r6, %r97;
	setp.gt.s32	%p23, %r6, 1;
	and.pred  	%p24, %p23, %p22;
	cvt.rzi.s32.f32	%r98, %f255;
	setp.gt.s32	%p25, %r98, 1;
	and.pred  	%p26, %p24, %p25;
	add.s32 	%r99, %r56, -2;
	setp.lt.u32	%p27, %r98, %r99;
	and.pred  	%p28, %p27, %p26;
	mov.f32 	%f257, %f274;
	@!%p28 bra 	BB4_20;
	bra.uni 	BB4_19;

BB4_19:
	cvt.rmi.f32.f32	%f136, %f9;
	cvt.rzi.u32.f32	%r100, %f136;
	cvt.rmi.f32.f32	%f137, %f10;
	cvt.rzi.u32.f32	%r101, %f137;
	cvt.rn.f32.u32	%f138, %r100;
	sub.f32 	%f139, %f9, %f138;
	cvt.rn.f32.u32	%f140, %r101;
	sub.f32 	%f141, %f10, %f140;
	mul.lo.s32 	%r102, %r101, %r59;
	cvt.u64.u32	%rd25, %r102;
	cvta.to.global.u64 	%rd26, %rd5;
	add.s64 	%rd27, %rd26, %rd25;
	mul.wide.u32 	%rd28, %r100, 16;
	add.s64 	%rd29, %rd27, %rd28;
	add.s32 	%r103, %r100, 1;
	mul.wide.u32 	%rd30, %r103, 16;
	add.s64 	%rd31, %rd27, %rd30;
	add.s32 	%r104, %r101, 1;
	mul.lo.s32 	%r105, %r104, %r59;
	cvt.u64.u32	%rd32, %r105;
	add.s64 	%rd33, %rd26, %rd32;
	add.s64 	%rd34, %rd33, %rd28;
	add.s64 	%rd35, %rd33, %rd30;
	mov.f32 	%f142, 0f3F800000;
	sub.f32 	%f143, %f142, %f139;
	sub.f32 	%f144, %f142, %f141;
	mul.f32 	%f145, %f143, %f144;
	ld.global.f32 	%f146, [%rd29];
	mul.f32 	%f147, %f139, %f144;
	ld.global.f32 	%f148, [%rd31];
	mul.f32 	%f149, %f148, %f147;
	fma.rn.f32 	%f150, %f146, %f145, %f149;
	mul.f32 	%f151, %f143, %f141;
	ld.global.f32 	%f152, [%rd34];
	fma.rn.f32 	%f153, %f151, %f152, %f150;
	mul.f32 	%f154, %f139, %f141;
	ld.global.f32 	%f155, [%rd35];
	fma.rn.f32 	%f274, %f154, %f155, %f153;
	ld.global.f32 	%f156, [%rd29+4];
	ld.global.f32 	%f157, [%rd31+4];
	mul.f32 	%f158, %f147, %f157;
	fma.rn.f32 	%f159, %f156, %f145, %f158;
	ld.global.f32 	%f160, [%rd34+4];
	fma.rn.f32 	%f161, %f151, %f160, %f159;
	ld.global.f32 	%f162, [%rd35+4];
	fma.rn.f32 	%f257, %f154, %f162, %f161;
	cvt.f64.f32	%fd89, %f257;
	setp.lt.f64	%p122, %fd89, 0d3FB999999999999A;
	bra.uni 	BB4_20;

BB4_13:
	mov.f32 	%f257, %f274;

BB4_20:
	@%p122 bra 	BB4_65;
	bra.uni 	BB4_21;

BB4_65:
	setp.lt.f32	%p77, %f253, 0f3F800000;
	selp.f32	%f48, 0f3F800000, %f253, %p77;
	abs.f32 	%f210, %f48;
	mov.b32 	 %r147, %f48;
	and.b32  	%r148, %r147, -2147483648;
	or.b32  	%r149, %r148, 1056964608;
	mov.b32 	 %f211, %r149;
	add.f32 	%f212, %f48, %f211;
	cvt.rzi.f32.f32	%f213, %f212;
	setp.gt.f32	%p78, %f210, 0f4B000000;
	selp.f32	%f267, %f48, %f213, %p78;
	setp.geu.f32	%p79, %f210, 0f3F000000;
	@%p79 bra 	BB4_67;

	cvt.rzi.f32.f32	%f267, %f48;

BB4_67:
	cvt.rzi.u32.f32	%r150, %f267;
	mov.u32 	%r151, 64;
	min.u32 	%r30, %r151, %r150;
	cvt.rn.f64.u32	%fd148, %r55;
	sub.f64 	%fd149, %fd61, %fd59;
	div.rn.f64 	%fd32, %fd149, %fd148;
	cvt.rn.f64.u32	%fd150, %r56;
	sub.f64 	%fd151, %fd62, %fd60;
	div.rn.f64 	%fd33, %fd151, %fd150;
	setp.lt.u32	%p80, %r30, 65;
	@%p80 bra 	BB4_69;

	mov.u64 	%rd79, $str9;
	cvta.global.u64 	%rd80, %rd79;
	mov.u64 	%rd81, $str1;
	cvta.global.u64 	%rd82, %rd81;
	mov.u32 	%r152, 113;
	mov.u64 	%rd83, 0;
	mov.u64 	%rd84, 2;
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd80;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd82;
	.param .b32 param2;
	st.param.b32	[param2+0], %r152;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd83;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd84;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 28

BB4_69:
	setp.eq.s32	%p81, %r30, 0;
	mov.u32 	%r238, 0;
	mov.u32 	%r237, %r238;
	@%p81 bra 	BB4_105;

	cvt.rn.f64.u32	%fd34, %r4;
	cvt.rn.f64.u32	%fd35, %r5;
	ld.const.f64 	%fd36, [coefficients+8];
	ld.const.f64 	%fd37, [coefficients];
	ld.const.f64 	%fd38, [coefficients+16];
	add.f64 	%fd39, %fd38, %fd38;
	ld.const.f64 	%fd40, [coefficients+24];
	mul.f64 	%fd41, %fd40, 0d4008000000000000;
	ld.const.f64 	%fd42, [roots];
	ld.const.f64 	%fd43, [roots+8];
	ld.const.f64 	%fd44, [roots+16];
	ld.const.f64 	%fd45, [roots+24];
	ld.const.f64 	%fd46, [roots+32];
	ld.const.f64 	%fd47, [roots+40];
	add.f32 	%f52, %f48, 0fC0000000;
	and.b32  	%r31, %r58, 1;
	mov.u32 	%r228, 0;
	sqrt.rn.f32 	%f53, %f52;
	mov.u32 	%r238, %r228;
	mov.u32 	%r237, %r30;

BB4_71:
	mov.u32 	%r34, %r237;
	mov.u32 	%r32, %r228;
	setp.lt.u32	%p82, %r32, 3;
	@%p82 bra 	BB4_79;
	bra.uni 	BB4_72;

BB4_79:
	cvt.rn.f64.u32	%fd152, %r32;
	div.rn.f64 	%fd214, %fd152, 0d4008000000000000;
	mov.f64 	%fd215, %fd214;
	bra.uni 	BB4_80;

BB4_72:
	abs.f32 	%f214, %f53;
	mov.b32 	 %r157, %f53;
	and.b32  	%r158, %r157, -2147483648;
	or.b32  	%r159, %r158, 1056964608;
	mov.b32 	 %f215, %r159;
	add.f32 	%f216, %f53, %f215;
	cvt.rzi.f32.f32	%f217, %f216;
	setp.gt.f32	%p83, %f214, 0f4B000000;
	selp.f32	%f268, %f53, %f217, %p83;
	setp.geu.f32	%p84, %f214, 0f3F000000;
	@%p84 bra 	BB4_74;

	cvt.rzi.f32.f32	%f268, %f53;

BB4_74:
	add.s32 	%r160, %r32, -2;
	cvt.rzi.u32.f32	%r161, %f268;
	rem.u32 	%r162, %r160, %r161;
	cvt.rn.f32.u32	%f218, %r162;
	div.rn.f32 	%f57, %f218, %f53;
	div.u32 	%r163, %r160, %r161;
	cvt.rn.f32.u32	%f219, %r163;
	div.rn.f32 	%f58, %f219, %f53;
	setp.le.f32	%p85, %f58, 0f3F800000;
	@%p85 bra 	BB4_76;

	mov.u64 	%rd85, $str10;
	cvta.global.u64 	%rd86, %rd85;
	mov.u64 	%rd87, $str1;
	cvta.global.u64 	%rd88, %rd87;
	mov.u32 	%r164, 132;
	mov.u64 	%rd89, 0;
	mov.u64 	%rd90, 2;
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd86;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd88;
	.param .b32 param2;
	st.param.b32	[param2+0], %r164;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd89;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd90;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 29

BB4_76:
	setp.le.f32	%p86, %f57, 0f3F800000;
	@%p86 bra 	BB4_78;

	mov.u64 	%rd91, $str11;
	cvta.global.u64 	%rd92, %rd91;
	mov.u64 	%rd93, $str1;
	cvta.global.u64 	%rd94, %rd93;
	mov.u32 	%r165, 133;
	mov.u64 	%rd95, 0;
	mov.u64 	%rd96, 2;
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd92;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd94;
	.param .b32 param2;
	st.param.b32	[param2+0], %r165;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd95;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd96;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 30

BB4_78:
	cvt.f64.f32	%fd214, %f57;
	cvt.f64.f32	%fd215, %f58;

BB4_80:
	ld.param.f64 	%fd209, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd208, [fractalRenderAdvancedDouble_param_3];
	add.f64 	%fd153, %fd35, %fd215;
	neg.f64 	%fd154, %fd153;
	add.f64 	%fd155, %fd34, %fd214;
	fma.rn.f64 	%fd217, %fd32, %fd155, %fd208;
	fma.rn.f64 	%fd216, %fd33, %fd154, %fd209;
	setp.eq.s32	%p87, %r57, 0;
	mov.u32 	%r231, 0;
	mov.u32 	%r232, %r231;
	@%p87 bra 	BB4_88;

BB4_81:
	mul.f64 	%fd156, %fd216, %fd216;
	mul.f64 	%fd157, %fd217, %fd217;
	sub.f64 	%fd158, %fd157, %fd156;
	mul.f64 	%fd159, %fd217, %fd216;
	fma.rn.f64 	%fd160, %fd217, %fd216, %fd159;
	mul.f64 	%fd161, %fd217, %fd158;
	mul.f64 	%fd162, %fd216, %fd160;
	sub.f64 	%fd163, %fd161, %fd162;
	mul.f64 	%fd164, %fd217, %fd160;
	fma.rn.f64 	%fd165, %fd216, %fd158, %fd164;
	fma.rn.f64 	%fd166, %fd217, %fd36, %fd37;
	mul.f64 	%fd167, %fd160, %fd38;
	fma.rn.f64 	%fd168, %fd158, %fd38, %fd166;
	fma.rn.f64 	%fd169, %fd216, %fd36, %fd167;
	fma.rn.f64 	%fd170, %fd163, %fd40, %fd168;
	fma.rn.f64 	%fd171, %fd165, %fd40, %fd169;
	fma.rn.f64 	%fd172, %fd217, %fd39, %fd36;
	mul.f64 	%fd173, %fd160, %fd41;
	fma.rn.f64 	%fd174, %fd158, %fd41, %fd172;
	fma.rn.f64 	%fd175, %fd216, %fd39, %fd173;
	abs.f64 	%fd176, %fd174;
	abs.f64 	%fd177, %fd175;
	add.f64 	%fd178, %fd176, %fd177;
	rcp.rn.f64 	%fd179, %fd178;
	mul.f64 	%fd180, %fd170, %fd179;
	mul.f64 	%fd181, %fd171, %fd179;
	mul.f64 	%fd182, %fd174, %fd179;
	mul.f64 	%fd183, %fd175, %fd179;
	mul.f64 	%fd184, %fd183, %fd183;
	fma.rn.f64 	%fd185, %fd182, %fd182, %fd184;
	rcp.rn.f64 	%fd186, %fd185;
	mul.f64 	%fd187, %fd181, %fd183;
	fma.rn.f64 	%fd188, %fd180, %fd182, %fd187;
	mul.f64 	%fd189, %fd186, %fd188;
	mul.f64 	%fd190, %fd181, %fd182;
	mul.f64 	%fd191, %fd180, %fd183;
	sub.f64 	%fd192, %fd190, %fd191;
	mul.f64 	%fd193, %fd186, %fd192;
	sub.f64 	%fd217, %fd217, %fd189;
	sub.f64 	%fd216, %fd216, %fd193;
	sub.f64 	%fd194, %fd217, %fd42;
	abs.f64 	%fd195, %fd194;
	setp.geu.f64	%p88, %fd195, 0d3F1A36E2EB1C432D;
	@%p88 bra 	BB4_83;

	add.s32 	%r232, %r231, 1;
	sub.f64 	%fd196, %fd216, %fd43;
	abs.f64 	%fd197, %fd196;
	setp.lt.f64	%p89, %fd197, 0d3F1A36E2EB1C432D;
	@%p89 bra 	BB4_88;

BB4_83:
	sub.f64 	%fd198, %fd217, %fd44;
	abs.f64 	%fd199, %fd198;
	setp.geu.f64	%p90, %fd199, 0d3F1A36E2EB1C432D;
	@%p90 bra 	BB4_85;

	add.s32 	%r232, %r231, 1;
	sub.f64 	%fd200, %fd216, %fd45;
	abs.f64 	%fd201, %fd200;
	setp.lt.f64	%p91, %fd201, 0d3F1A36E2EB1C432D;
	@%p91 bra 	BB4_88;

BB4_85:
	sub.f64 	%fd202, %fd217, %fd46;
	abs.f64 	%fd203, %fd202;
	add.s32 	%r231, %r231, 1;
	setp.lt.f64	%p92, %fd203, 0d3F1A36E2EB1C432D;
	@%p92 bra 	BB4_87;
	bra.uni 	BB4_86;

BB4_87:
	setp.lt.u32	%p94, %r231, %r57;
	sub.f64 	%fd204, %fd216, %fd47;
	abs.f64 	%fd205, %fd204;
	setp.geu.f64	%p95, %fd205, 0d3F1A36E2EB1C432D;
	and.pred  	%p96, %p95, %p94;
	mov.u32 	%r232, %r231;
	@%p96 bra 	BB4_81;
	bra.uni 	BB4_88;

BB4_86:
	setp.lt.u32	%p93, %r231, %r57;
	mov.u32 	%r232, %r231;
	@%p93 bra 	BB4_81;

BB4_88:
	cvt.rn.f32.u32	%f220, %r232;
	cvt.rzi.u32.f32	%r38, %f220;
	add.s32 	%r238, %r38, %r238;
	setp.gt.u32	%p97, %r32, 9;
	@%p97 bra 	BB4_90;

	cvt.rn.f32.u32	%f221, %r38;
	mul.wide.u32 	%rd97, %r32, 4;
	add.s64 	%rd98, %rd1, %rd97;
	st.local.f32 	[%rd98], %f221;

BB4_90:
	setp.lt.u32	%p98, %r32, 10;
	setp.ne.s32	%p99, %r32, 0;
	and.pred  	%p100, %p98, %p99;
	setp.ne.s32	%p101, %r31, 0;
	and.pred  	%p102, %p100, %p101;
	shr.u32 	%r40, %r34, 1;
	setp.eq.s32	%p103, %r32, %r40;
	or.pred  	%p104, %p102, %p103;
	add.s32 	%r228, %r32, 1;
	mov.u32 	%r237, %r34;
	@!%p104 bra 	BB4_104;
	bra.uni 	BB4_91;

BB4_91:
	div.u32 	%r168, %r238, %r228;
	cvt.rn.f32.u32	%f59, %r168;
	setp.eq.s32	%p105, %r32, 0;
	mov.f32 	%f273, 0f00000000;
	@%p105 bra 	BB4_100;

	and.b32  	%r42, %r32, 3;
	setp.eq.s32	%p106, %r42, 0;
	mov.f32 	%f273, 0f00000000;
	mov.u32 	%r236, 0;
	@%p106 bra 	BB4_98;

	setp.eq.s32	%p107, %r42, 1;
	mov.f32 	%f270, 0f00000000;
	mov.u32 	%r234, 0;
	@%p107 bra 	BB4_97;

	setp.eq.s32	%p108, %r42, 2;
	mov.f32 	%f269, 0f00000000;
	mov.u32 	%r233, 0;
	@%p108 bra 	BB4_96;

	ld.local.f32 	%f226, [%rd1];
	sub.f32 	%f227, %f226, %f59;
	fma.rn.f32 	%f269, %f227, %f227, 0f00000000;
	mov.u32 	%r233, 1;

BB4_96:
	mul.wide.u32 	%rd99, %r233, 4;
	add.s64 	%rd100, %rd1, %rd99;
	ld.local.f32 	%f228, [%rd100];
	sub.f32 	%f229, %f228, %f59;
	fma.rn.f32 	%f270, %f229, %f229, %f269;
	add.s32 	%r234, %r233, 1;

BB4_97:
	mul.wide.u32 	%rd101, %r234, 4;
	add.s64 	%rd102, %rd1, %rd101;
	ld.local.f32 	%f230, [%rd102];
	sub.f32 	%f231, %f230, %f59;
	fma.rn.f32 	%f273, %f231, %f231, %f270;
	add.s32 	%r236, %r234, 1;

BB4_98:
	setp.lt.u32	%p109, %r32, 4;
	@%p109 bra 	BB4_100;

BB4_99:
	mul.wide.u32 	%rd103, %r236, 4;
	add.s64 	%rd104, %rd1, %rd103;
	ld.local.f32 	%f232, [%rd104];
	sub.f32 	%f233, %f232, %f59;
	fma.rn.f32 	%f234, %f233, %f233, %f273;
	add.s32 	%r173, %r236, 1;
	mul.wide.u32 	%rd105, %r173, 4;
	add.s64 	%rd106, %rd1, %rd105;
	ld.local.f32 	%f235, [%rd106];
	sub.f32 	%f236, %f235, %f59;
	fma.rn.f32 	%f237, %f236, %f236, %f234;
	add.s32 	%r174, %r236, 2;
	mul.wide.u32 	%rd107, %r174, 4;
	add.s64 	%rd108, %rd1, %rd107;
	ld.local.f32 	%f238, [%rd108];
	sub.f32 	%f239, %f238, %f59;
	fma.rn.f32 	%f240, %f239, %f239, %f237;
	add.s32 	%r175, %r236, 3;
	mul.wide.u32 	%rd109, %r175, 4;
	add.s64 	%rd110, %rd1, %rd109;
	ld.local.f32 	%f241, [%rd110];
	sub.f32 	%f242, %f241, %f59;
	fma.rn.f32 	%f273, %f242, %f242, %f240;
	add.s32 	%r236, %r236, 4;
	setp.lt.u32	%p110, %r236, %r32;
	@%p110 bra 	BB4_99;

BB4_100:
	add.s32 	%r176, %r32, -1;
	cvt.rn.f32.u32	%f243, %r176;
	div.rn.f32 	%f244, %f273, %f243;
	div.rn.f32 	%f69, %f244, %f59;
	setp.ne.s32	%p111, %r32, 1;
	@%p111 bra 	BB4_102;

	// inline asm
	activemask.b32 %r177;
	// inline asm
	ld.local.v2.f32 	{%f245, %f246}, [%rd1];
	sub.f32 	%f249, %f245, %f246;
	abs.f32 	%f250, %f249;
	setp.lt.f32	%p112, %f250, 0f34000000;
	vote.sync.all.pred 	%p113, %p112, %r177;
	mov.u32 	%r237, 2;
	@%p113 bra 	BB4_104;

BB4_102:
	// inline asm
	activemask.b32 %r180;
	// inline asm
	setp.lt.f32	%p114, %f69, 0f3C23D70A;
	vote.sync.all.pred 	%p115, %p114, %r180;
	mov.u32 	%r237, %r228;
	@%p115 bra 	BB4_104;

	// inline asm
	activemask.b32 %r182;
	// inline asm
	setp.le.f32	%p116, %f69, 0f3F800000;
	vote.sync.all.pred 	%p117, %p116, %r182;
	setp.ge.u32	%p118, %r32, %r40;
	and.pred  	%p119, %p117, %p118;
	selp.b32	%r237, %r228, %r34, %p119;

BB4_104:
	setp.lt.u32	%p120, %r228, %r237;
	@%p120 bra 	BB4_71;

BB4_105:
	cvt.rn.f32.u32	%f257, %r237;
	div.u32 	%r184, %r238, %r237;
	cvt.rn.f32.u32	%f274, %r184;
	mov.f32 	%f276, 0f00000000;
	mov.u16 	%rs11, 0;
	bra.uni 	BB4_106;

BB4_21:
	shr.u32 	%r106, %r58, 5;
	and.b32  	%r107, %r106, 1;
	setp.eq.b32	%p29, %r107, 1;
	not.pred 	%p30, %p29;
	setp.eq.s16	%p31, %rs10, 0;
	mov.f32 	%f276, 0f00000000;
	mov.u16 	%rs11, 1;
	or.pred  	%p32, %p31, %p30;
	@%p32 bra 	BB4_106;

	setp.lt.f32	%p33, %f253, 0f3F800000;
	mov.f32 	%f276, 0f00000000;
	mov.f32 	%f266, %f276;
	@%p33 bra 	BB4_64;

	abs.f32 	%f166, %f253;
	mov.b32 	 %r108, %f253;
	and.b32  	%r109, %r108, -2147483648;
	or.b32  	%r110, %r109, 1056964608;
	mov.b32 	 %f167, %r110;
	add.f32 	%f168, %f253, %f167;
	cvt.rzi.f32.f32	%f169, %f168;
	setp.gt.f32	%p34, %f166, 0f4B000000;
	selp.f32	%f258, %f253, %f169, %p34;
	setp.geu.f32	%p35, %f166, 0f3F000000;
	@%p35 bra 	BB4_25;

	cvt.rzi.f32.f32	%f258, %f253;

BB4_25:
	cvt.rzi.u32.f32	%r111, %f258;
	mov.u32 	%r112, 64;
	min.u32 	%r7, %r112, %r111;
	cvt.rn.f64.u32	%fd90, %r55;
	sub.f64 	%fd91, %fd61, %fd59;
	div.rn.f64 	%fd5, %fd91, %fd90;
	cvt.rn.f64.u32	%fd92, %r56;
	sub.f64 	%fd93, %fd62, %fd60;
	div.rn.f64 	%fd6, %fd93, %fd92;
	setp.lt.u32	%p36, %r7, 65;
	@%p36 bra 	BB4_27;

	mov.u64 	%rd36, $str9;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, $str1;
	cvta.global.u64 	%rd39, %rd38;
	mov.u32 	%r113, 113;
	mov.u64 	%rd40, 0;
	mov.u64 	%rd41, 2;
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd37;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b32 param2;
	st.param.b32	[param2+0], %r113;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd40;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd41;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 25

BB4_27:
	setp.eq.s32	%p37, %r7, 0;
	mov.u32 	%r226, 0;
	mov.u32 	%r225, %r226;
	@%p37 bra 	BB4_63;

	cvt.rn.f64.u32	%fd7, %r4;
	cvt.rn.f64.u32	%fd8, %r5;
	ld.const.f64 	%fd9, [coefficients+8];
	ld.const.f64 	%fd10, [coefficients];
	ld.const.f64 	%fd11, [coefficients+16];
	add.f64 	%fd12, %fd11, %fd11;
	ld.const.f64 	%fd13, [coefficients+24];
	mul.f64 	%fd14, %fd13, 0d4008000000000000;
	ld.const.f64 	%fd15, [roots];
	ld.const.f64 	%fd16, [roots+8];
	ld.const.f64 	%fd17, [roots+16];
	ld.const.f64 	%fd18, [roots+24];
	ld.const.f64 	%fd19, [roots+32];
	ld.const.f64 	%fd20, [roots+40];
	add.f32 	%f24, %f253, 0fC0000000;
	mov.u32 	%r216, 0;
	sqrt.rn.f32 	%f25, %f24;
	mov.u32 	%r226, %r216;
	mov.u32 	%r225, %r7;

BB4_29:
	mov.u32 	%r10, %r225;
	mov.u32 	%r8, %r216;
	setp.lt.u32	%p38, %r8, 3;
	@%p38 bra 	BB4_37;
	bra.uni 	BB4_30;

BB4_37:
	cvt.rn.f64.u32	%fd94, %r8;
	div.rn.f64 	%fd210, %fd94, 0d4008000000000000;
	mov.f64 	%fd211, %fd210;
	bra.uni 	BB4_38;

BB4_30:
	abs.f32 	%f170, %f25;
	mov.b32 	 %r118, %f25;
	and.b32  	%r119, %r118, -2147483648;
	or.b32  	%r120, %r119, 1056964608;
	mov.b32 	 %f171, %r120;
	add.f32 	%f172, %f25, %f171;
	cvt.rzi.f32.f32	%f173, %f172;
	setp.gt.f32	%p39, %f170, 0f4B000000;
	selp.f32	%f259, %f25, %f173, %p39;
	setp.geu.f32	%p40, %f170, 0f3F000000;
	@%p40 bra 	BB4_32;

	cvt.rzi.f32.f32	%f259, %f25;

BB4_32:
	add.s32 	%r121, %r8, -2;
	cvt.rzi.u32.f32	%r122, %f259;
	rem.u32 	%r123, %r121, %r122;
	cvt.rn.f32.u32	%f174, %r123;
	div.rn.f32 	%f29, %f174, %f25;
	div.u32 	%r124, %r121, %r122;
	cvt.rn.f32.u32	%f175, %r124;
	div.rn.f32 	%f30, %f175, %f25;
	setp.le.f32	%p41, %f30, 0f3F800000;
	@%p41 bra 	BB4_34;

	mov.u64 	%rd42, $str10;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, $str1;
	cvta.global.u64 	%rd45, %rd44;
	mov.u32 	%r125, 132;
	mov.u64 	%rd46, 0;
	mov.u64 	%rd47, 2;
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd45;
	.param .b32 param2;
	st.param.b32	[param2+0], %r125;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd46;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd47;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 26

BB4_34:
	setp.le.f32	%p42, %f29, 0f3F800000;
	@%p42 bra 	BB4_36;

	mov.u64 	%rd48, $str11;
	cvta.global.u64 	%rd49, %rd48;
	mov.u64 	%rd50, $str1;
	cvta.global.u64 	%rd51, %rd50;
	mov.u32 	%r126, 133;
	mov.u64 	%rd52, 0;
	mov.u64 	%rd53, 2;
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd49;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 param2;
	st.param.b32	[param2+0], %r126;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd52;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd53;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 27

BB4_36:
	cvt.f64.f32	%fd210, %f29;
	cvt.f64.f32	%fd211, %f30;

BB4_38:
	ld.param.f64 	%fd207, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd206, [fractalRenderAdvancedDouble_param_3];
	add.f64 	%fd95, %fd8, %fd211;
	neg.f64 	%fd96, %fd95;
	add.f64 	%fd97, %fd7, %fd210;
	fma.rn.f64 	%fd213, %fd5, %fd97, %fd206;
	fma.rn.f64 	%fd212, %fd6, %fd96, %fd207;
	setp.eq.s32	%p43, %r57, 0;
	mov.u32 	%r219, 0;
	mov.u32 	%r220, %r219;
	@%p43 bra 	BB4_46;

BB4_39:
	mul.f64 	%fd98, %fd212, %fd212;
	mul.f64 	%fd99, %fd213, %fd213;
	sub.f64 	%fd100, %fd99, %fd98;
	mul.f64 	%fd101, %fd213, %fd212;
	fma.rn.f64 	%fd102, %fd213, %fd212, %fd101;
	mul.f64 	%fd103, %fd213, %fd100;
	mul.f64 	%fd104, %fd212, %fd102;
	sub.f64 	%fd105, %fd103, %fd104;
	mul.f64 	%fd106, %fd213, %fd102;
	fma.rn.f64 	%fd107, %fd212, %fd100, %fd106;
	fma.rn.f64 	%fd108, %fd213, %fd9, %fd10;
	mul.f64 	%fd109, %fd102, %fd11;
	fma.rn.f64 	%fd110, %fd100, %fd11, %fd108;
	fma.rn.f64 	%fd111, %fd212, %fd9, %fd109;
	fma.rn.f64 	%fd112, %fd105, %fd13, %fd110;
	fma.rn.f64 	%fd113, %fd107, %fd13, %fd111;
	fma.rn.f64 	%fd114, %fd213, %fd12, %fd9;
	mul.f64 	%fd115, %fd102, %fd14;
	fma.rn.f64 	%fd116, %fd100, %fd14, %fd114;
	fma.rn.f64 	%fd117, %fd212, %fd12, %fd115;
	abs.f64 	%fd118, %fd116;
	abs.f64 	%fd119, %fd117;
	add.f64 	%fd120, %fd118, %fd119;
	rcp.rn.f64 	%fd121, %fd120;
	mul.f64 	%fd122, %fd112, %fd121;
	mul.f64 	%fd123, %fd113, %fd121;
	mul.f64 	%fd124, %fd116, %fd121;
	mul.f64 	%fd125, %fd117, %fd121;
	mul.f64 	%fd126, %fd125, %fd125;
	fma.rn.f64 	%fd127, %fd124, %fd124, %fd126;
	rcp.rn.f64 	%fd128, %fd127;
	mul.f64 	%fd129, %fd123, %fd125;
	fma.rn.f64 	%fd130, %fd122, %fd124, %fd129;
	mul.f64 	%fd131, %fd128, %fd130;
	mul.f64 	%fd132, %fd123, %fd124;
	mul.f64 	%fd133, %fd122, %fd125;
	sub.f64 	%fd134, %fd132, %fd133;
	mul.f64 	%fd135, %fd128, %fd134;
	sub.f64 	%fd213, %fd213, %fd131;
	sub.f64 	%fd212, %fd212, %fd135;
	sub.f64 	%fd136, %fd213, %fd15;
	abs.f64 	%fd137, %fd136;
	setp.geu.f64	%p44, %fd137, 0d3F1A36E2EB1C432D;
	@%p44 bra 	BB4_41;

	add.s32 	%r220, %r219, 1;
	sub.f64 	%fd138, %fd212, %fd16;
	abs.f64 	%fd139, %fd138;
	setp.lt.f64	%p45, %fd139, 0d3F1A36E2EB1C432D;
	@%p45 bra 	BB4_46;

BB4_41:
	sub.f64 	%fd140, %fd213, %fd17;
	abs.f64 	%fd141, %fd140;
	setp.geu.f64	%p46, %fd141, 0d3F1A36E2EB1C432D;
	@%p46 bra 	BB4_43;

	add.s32 	%r220, %r219, 1;
	sub.f64 	%fd142, %fd212, %fd18;
	abs.f64 	%fd143, %fd142;
	setp.lt.f64	%p47, %fd143, 0d3F1A36E2EB1C432D;
	@%p47 bra 	BB4_46;

BB4_43:
	sub.f64 	%fd144, %fd213, %fd19;
	abs.f64 	%fd145, %fd144;
	add.s32 	%r219, %r219, 1;
	setp.lt.f64	%p48, %fd145, 0d3F1A36E2EB1C432D;
	@%p48 bra 	BB4_45;
	bra.uni 	BB4_44;

BB4_45:
	setp.lt.u32	%p50, %r219, %r57;
	sub.f64 	%fd146, %fd212, %fd20;
	abs.f64 	%fd147, %fd146;
	setp.geu.f64	%p51, %fd147, 0d3F1A36E2EB1C432D;
	and.pred  	%p52, %p51, %p50;
	mov.u32 	%r220, %r219;
	@%p52 bra 	BB4_39;
	bra.uni 	BB4_46;

BB4_44:
	setp.lt.u32	%p49, %r219, %r57;
	mov.u32 	%r220, %r219;
	@%p49 bra 	BB4_39;

BB4_46:
	cvt.rn.f32.u32	%f176, %r220;
	cvt.rzi.u32.f32	%r14, %f176;
	add.s32 	%r226, %r14, %r226;
	setp.gt.u32	%p53, %r8, 9;
	@%p53 bra 	BB4_48;

	cvt.rn.f32.u32	%f177, %r14;
	mul.wide.u32 	%rd56, %r8, 4;
	add.s64 	%rd57, %rd1, %rd56;
	st.local.f32 	[%rd57], %f177;

BB4_48:
	setp.lt.u32	%p54, %r8, 10;
	and.b32  	%r129, %r58, 1;
	setp.eq.b32	%p55, %r129, 1;
	setp.ne.s32	%p56, %r8, 0;
	and.pred  	%p57, %p54, %p56;
	and.pred  	%p58, %p57, %p55;
	shr.u32 	%r16, %r10, 1;
	setp.eq.s32	%p59, %r8, %r16;
	or.pred  	%p60, %p58, %p59;
	add.s32 	%r216, %r8, 1;
	mov.u32 	%r225, %r10;
	@!%p60 bra 	BB4_62;
	bra.uni 	BB4_49;

BB4_49:
	div.u32 	%r130, %r226, %r216;
	cvt.rn.f32.u32	%f31, %r130;
	setp.eq.s32	%p61, %r8, 0;
	mov.f32 	%f264, 0f00000000;
	@%p61 bra 	BB4_58;

	and.b32  	%r18, %r8, 3;
	setp.eq.s32	%p62, %r18, 0;
	mov.f32 	%f264, 0f00000000;
	mov.u32 	%r224, 0;
	@%p62 bra 	BB4_56;

	setp.eq.s32	%p63, %r18, 1;
	mov.f32 	%f261, 0f00000000;
	mov.u32 	%r222, 0;
	@%p63 bra 	BB4_55;

	setp.eq.s32	%p64, %r18, 2;
	mov.f32 	%f260, 0f00000000;
	mov.u32 	%r221, 0;
	@%p64 bra 	BB4_54;

	ld.local.f32 	%f182, [%rd1];
	sub.f32 	%f183, %f182, %f31;
	fma.rn.f32 	%f260, %f183, %f183, 0f00000000;
	mov.u32 	%r221, 1;

BB4_54:
	mul.wide.u32 	%rd62, %r221, 4;
	add.s64 	%rd63, %rd1, %rd62;
	ld.local.f32 	%f184, [%rd63];
	sub.f32 	%f185, %f184, %f31;
	fma.rn.f32 	%f261, %f185, %f185, %f260;
	add.s32 	%r222, %r221, 1;

BB4_55:
	mul.wide.u32 	%rd66, %r222, 4;
	add.s64 	%rd67, %rd1, %rd66;
	ld.local.f32 	%f186, [%rd67];
	sub.f32 	%f187, %f186, %f31;
	fma.rn.f32 	%f264, %f187, %f187, %f261;
	add.s32 	%r224, %r222, 1;

BB4_56:
	setp.lt.u32	%p65, %r8, 4;
	@%p65 bra 	BB4_58;

BB4_57:
	mul.wide.u32 	%rd69, %r224, 4;
	add.s64 	%rd70, %rd1, %rd69;
	ld.local.f32 	%f188, [%rd70];
	sub.f32 	%f189, %f188, %f31;
	fma.rn.f32 	%f190, %f189, %f189, %f264;
	add.s32 	%r135, %r224, 1;
	mul.wide.u32 	%rd71, %r135, 4;
	add.s64 	%rd72, %rd1, %rd71;
	ld.local.f32 	%f191, [%rd72];
	sub.f32 	%f192, %f191, %f31;
	fma.rn.f32 	%f193, %f192, %f192, %f190;
	add.s32 	%r136, %r224, 2;
	mul.wide.u32 	%rd73, %r136, 4;
	add.s64 	%rd74, %rd1, %rd73;
	ld.local.f32 	%f194, [%rd74];
	sub.f32 	%f195, %f194, %f31;
	fma.rn.f32 	%f196, %f195, %f195, %f193;
	add.s32 	%r137, %r224, 3;
	mul.wide.u32 	%rd75, %r137, 4;
	add.s64 	%rd76, %rd1, %rd75;
	ld.local.f32 	%f197, [%rd76];
	sub.f32 	%f198, %f197, %f31;
	fma.rn.f32 	%f264, %f198, %f198, %f196;
	add.s32 	%r224, %r224, 4;
	setp.lt.u32	%p66, %r224, %r8;
	@%p66 bra 	BB4_57;

BB4_58:
	add.s32 	%r138, %r8, -1;
	cvt.rn.f32.u32	%f199, %r138;
	div.rn.f32 	%f200, %f264, %f199;
	div.rn.f32 	%f41, %f200, %f31;
	setp.ne.s32	%p67, %r8, 1;
	@%p67 bra 	BB4_60;

	// inline asm
	activemask.b32 %r139;
	// inline asm
	ld.local.v2.f32 	{%f201, %f202}, [%rd1];
	sub.f32 	%f205, %f201, %f202;
	abs.f32 	%f206, %f205;
	setp.lt.f32	%p68, %f206, 0f34000000;
	vote.sync.all.pred 	%p69, %p68, %r139;
	mov.u32 	%r225, 2;
	@%p69 bra 	BB4_62;

BB4_60:
	// inline asm
	activemask.b32 %r142;
	// inline asm
	setp.lt.f32	%p70, %f41, 0f3C23D70A;
	vote.sync.all.pred 	%p71, %p70, %r142;
	mov.u32 	%r225, %r216;
	@%p71 bra 	BB4_62;

	// inline asm
	activemask.b32 %r144;
	// inline asm
	setp.le.f32	%p72, %f41, 0f3F800000;
	vote.sync.all.pred 	%p73, %p72, %r144;
	setp.ge.u32	%p74, %r8, %r16;
	and.pred  	%p75, %p73, %p74;
	selp.b32	%r225, %r216, %r10, %p75;

BB4_62:
	setp.lt.u32	%p76, %r216, %r225;
	@%p76 bra 	BB4_29;

BB4_63:
	cvt.rn.f32.u32	%f276, %r225;
	div.u32 	%r146, %r226, %r225;
	cvt.rn.f32.u32	%f266, %r146;

BB4_64:
	mov.u16 	%rs11, 1;
	mul.f32 	%f207, %f257, 0f3F400000;
	add.f32 	%f257, %f207, %f276;
	mul.f32 	%f208, %f276, %f266;
	fma.rn.f32 	%f209, %f274, %f207, %f208;
	div.rn.f32 	%f274, %f209, %f257;

BB4_106:
	ld.param.u64 	%rd122, [fractalRenderAdvancedDouble_param_0];
	mov.u32 	%r207, %tid.y;
	mov.u32 	%r206, %ntid.x;
	mov.u32 	%r205, %tid.x;
	mad.lo.s32 	%r204, %r206, %r207, %r205;
	shl.b32 	%r203, %r206, 2;
	ld.param.u32 	%r202, [fractalRenderAdvancedDouble_param_1];
	div.u32 	%r201, %r204, %r203;
	bfe.u32 	%r200, %r204, 2, 2;
	shl.b32 	%r199, %r201, 2;
	add.s32 	%r198, %r199, %r200;
	mov.u32 	%r197, %ntid.y;
	mov.u32 	%r196, %ctaid.y;
	mad.lo.s32 	%r195, %r196, %r197, %r198;
	and.b32  	%r194, %r204, 15;
	rem.u32 	%r193, %r204, %r203;
	sub.s32 	%r192, %r193, %r194;
	and.b32  	%r191, %r204, 3;
	shr.u32 	%r190, %r192, 2;
	add.s32 	%r189, %r190, %r191;
	mov.u32 	%r188, %ctaid.x;
	mad.lo.s32 	%r187, %r188, %r206, %r189;
	mul.lo.s32 	%r185, %r195, %r202;
	cvt.u64.u32	%rd111, %r185;
	cvta.to.global.u64 	%rd112, %rd122;
	add.s64 	%rd113, %rd112, %rd111;
	mul.wide.u32 	%rd114, %r187, 16;
	add.s64 	%rd115, %rd113, %rd114;
	st.global.f32 	[%rd115], %f274;
	st.global.f32 	[%rd115+4], %f257;
	st.global.f32 	[%rd115+12], %f276;
	st.global.u8 	[%rd115+8], %rs11;
	setp.gt.f32	%p121, %f257, 0f00000000;
	@%p121 bra 	BB4_108;

	mov.u64 	%rd116, $str8;
	cvta.global.u64 	%rd117, %rd116;
	mov.u64 	%rd118, $str1;
	cvta.global.u64 	%rd119, %rd118;
	mov.u32 	%r186, 399;
	mov.u64 	%rd120, 0;
	mov.u64 	%rd121, 2;
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd117;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd119;
	.param .b32 param2;
	st.param.b32	[param2+0], %r186;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd120;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd121;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 31

BB4_108:
	ret;
}

	// .globl	compose
.visible .entry compose(
	.param .u64 compose_param_0,
	.param .u32 compose_param_1,
	.param .u64 compose_param_2,
	.param .u32 compose_param_3,
	.param .u64 compose_param_4,
	.param .u32 compose_param_5,
	.param .u32 compose_param_6,
	.param .u64 compose_param_7,
	.param .u32 compose_param_8,
	.param .f32 compose_param_9
)
{
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<20>;
	.reg .b32 	%r<46>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<16>;


	ld.param.u64 	%rd2, [compose_param_0];
	ld.param.u32 	%r11, [compose_param_1];
	ld.param.u64 	%rd3, [compose_param_4];
	ld.param.u32 	%r13, [compose_param_5];
	ld.param.u32 	%r14, [compose_param_6];
	ld.param.u64 	%rd4, [compose_param_7];
	ld.param.u32 	%r12, [compose_param_8];
	ld.param.f32 	%f6, [compose_param_9];
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r16, %r15, %r17;
	mov.u32 	%r18, %ctaid.y;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r2, %r18, %r19, %r20;
	setp.ge.u32	%p1, %r2, %r14;
	setp.ge.u32	%p2, %r1, %r13;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_11;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.lo.s32 	%r21, %r2, %r11;
	cvt.u64.u32	%rd6, %r21;
	add.s64 	%rd7, %rd5, %rd6;
	mul.wide.u32 	%rd8, %r1, 16;
	add.s64 	%rd9, %rd7, %rd8;
	add.s64 	%rd1, %rd9, 12;
	ld.const.u8 	%rs1, [VISUALIZE_SAMPLE_COUNT];
	setp.eq.s16	%p4, %rs1, 0;
	@%p4 bra 	BB5_5;

	ld.global.f32 	%f7, [%rd1+-8];
	cvt.rzi.u32.f32	%r22, %f7;
	cvt.f64.f32	%fd1, %f6;
	mov.f64 	%fd2, 0d3FF0000000000000;
	max.f64 	%fd3, %fd2, %fd1;
	cvt.rzi.u32.f64	%r3, %fd3;
	min.u32 	%r23, %r22, %r3;
	cvt.rn.f32.u32	%f8, %r23;
	cvt.rn.f32.u32	%f1, %r3;
	div.rn.f32 	%f9, %f8, %f1;
	mul.f32 	%f10, %f9, 0f437F0000;
	cvt.rzi.s32.f32	%r24, %f10;
	and.b32  	%r25, %r24, 255;
	prmt.b32 	%r26, %r25, %r25, 30212;
	prmt.b32 	%r44, %r25, %r26, 28756;
	ld.global.u8 	%rs2, [%rd1+-4];
	setp.eq.s16	%p5, %rs2, 0;
	@%p5 bra 	BB5_4;

	ld.global.f32 	%f11, [%rd1];
	cvt.rzi.u32.f32	%r27, %f11;
	min.u32 	%r28, %r27, %r3;
	cvt.rn.f32.u32	%f12, %r28;
	div.rn.f32 	%f13, %f12, %f1;
	mul.f32 	%f14, %f13, 0f437F0000;
	cvt.rzi.s32.f32	%r29, %f14;
	and.b32  	%r30, %r29, 255;
	prmt.b32 	%r31, %r30, %r30, 30212;
	prmt.b32 	%r44, %r30, %r31, 28756;

BB5_4:
	or.b32  	%r45, %r44, -16777216;
	bra.uni 	BB5_10;

BB5_5:
	ld.global.f32 	%f2, [%rd1+-12];
	abs.f32 	%f15, %f2;
	mov.b32 	 %r32, %f2;
	and.b32  	%r33, %r32, -2147483648;
	or.b32  	%r34, %r33, 1056964608;
	mov.b32 	 %f16, %r34;
	add.f32 	%f17, %f2, %f16;
	cvt.rzi.f32.f32	%f18, %f17;
	setp.gt.f32	%p6, %f15, 0f4B000000;
	selp.f32	%f19, %f2, %f18, %p6;
	setp.geu.f32	%p7, %f15, 0f3F000000;
	@%p7 bra 	BB5_7;

	cvt.rzi.f32.f32	%f19, %f2;

BB5_7:
	ld.const.u32 	%r35, [colorMagnifier];
	cvt.rzi.u32.f32	%r36, %f19;
	mul.lo.s32 	%r37, %r35, %r36;
	rem.u32 	%r38, %r37, %r12;
	sub.s32 	%r39, %r12, %r38;
	add.s32 	%r8, %r39, -1;
	setp.lt.u32	%p8, %r8, %r12;
	@%p8 bra 	BB5_9;

	mov.u64 	%rd10, $str12;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str13;
	cvta.global.u64 	%rd13, %rd12;
	mov.u32 	%r40, 74;
	mov.u64 	%rd14, 0;
	mov.u64 	%rd15, 2;
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r40;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd14;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd15;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 32

BB5_9:
	shl.b32 	%r41, %r8, 2;
	mov.u32 	%r42, 0;
	suld.b.2d.b32.trap {%r45}, [%rd4, {%r41, %r42}];

BB5_10:
	shl.b32 	%r43, %r1, 2;
	sust.b.2d.b32.trap 	[%rd3, {%r43, %r2}], {%r45};

BB5_11:
	ret;
}

	// .globl	fractalRenderUnderSampled
.visible .entry fractalRenderUnderSampled(
	.param .u64 fractalRenderUnderSampled_param_0,
	.param .u32 fractalRenderUnderSampled_param_1,
	.param .u32 fractalRenderUnderSampled_param_2,
	.param .u32 fractalRenderUnderSampled_param_3,
	.param .f32 fractalRenderUnderSampled_param_4,
	.param .f32 fractalRenderUnderSampled_param_5,
	.param .f32 fractalRenderUnderSampled_param_6,
	.param .f32 fractalRenderUnderSampled_param_7,
	.param .u32 fractalRenderUnderSampled_param_8,
	.param .u32 fractalRenderUnderSampled_param_9
)
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<79>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [fractalRenderUnderSampled_param_0];
	ld.param.u32 	%r11, [fractalRenderUnderSampled_param_1];
	ld.param.u32 	%r12, [fractalRenderUnderSampled_param_2];
	ld.param.u32 	%r13, [fractalRenderUnderSampled_param_3];
	ld.param.f32 	%f17, [fractalRenderUnderSampled_param_4];
	ld.param.f32 	%f18, [fractalRenderUnderSampled_param_5];
	ld.param.f32 	%f19, [fractalRenderUnderSampled_param_6];
	ld.param.f32 	%f20, [fractalRenderUnderSampled_param_7];
	ld.param.u32 	%r14, [fractalRenderUnderSampled_param_8];
	ld.param.u32 	%r15, [fractalRenderUnderSampled_param_9];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r19, %r17, %r16, %r18;
	mul.lo.s32 	%r1, %r19, %r15;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %ntid.y;
	mov.u32 	%r22, %tid.y;
	mad.lo.s32 	%r23, %r20, %r21, %r22;
	mul.lo.s32 	%r2, %r23, %r15;
	sub.s32 	%r24, %r13, %r15;
	setp.ge.u32	%p1, %r2, %r24;
	sub.s32 	%r25, %r12, %r15;
	setp.ge.u32	%p2, %r1, %r25;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB6_20;

	sub.f32 	%f22, %f19, %f17;
	cvt.rn.f32.u32	%f23, %r12;
	div.rn.f32 	%f24, %f22, %f23;
	cvt.rn.f32.u32	%f25, %r1;
	fma.rn.f32 	%f77, %f25, %f24, %f17;
	setp.eq.s32	%p4, %r14, 0;
	mov.f32 	%f78, 0f00000000;
	@%p4 bra 	BB6_11;

	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f2, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f3, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f4, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f5, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f6, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f7, %fd12;
	cvt.rn.f32.u32	%f26, %r2;
	sub.f32 	%f27, %f20, %f18;
	cvt.rn.f32.u32	%f28, %r13;
	div.rn.f32 	%f29, %f27, %f28;
	mul.f32 	%f30, %f26, %f29;
	sub.f32 	%f76, %f20, %f30;
	mov.u32 	%r48, 0;

BB6_3:
	mul.f32 	%f31, %f76, %f76;
	mul.f32 	%f32, %f77, %f77;
	sub.f32 	%f33, %f32, %f31;
	mul.f32 	%f34, %f77, %f76;
	fma.rn.f32 	%f35, %f77, %f76, %f34;
	mul.f32 	%f36, %f77, %f33;
	mul.f32 	%f37, %f76, %f35;
	sub.f32 	%f38, %f36, %f37;
	mul.f32 	%f39, %f77, %f35;
	fma.rn.f32 	%f40, %f76, %f33, %f39;
	cvt.f64.f32	%fd13, %f77;
	cvt.f64.f32	%fd14, %f76;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f33;
	cvt.f64.f32	%fd17, %f35;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f38;
	cvt.f64.f32	%fd22, %f40;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f41, %fd23;
	cvt.rn.f32.f64	%f42, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f43, %fd27;
	cvt.rn.f32.f64	%f44, %fd28;
	abs.f32 	%f45, %f43;
	abs.f32 	%f46, %f44;
	add.f32 	%f47, %f45, %f46;
	rcp.rn.f32 	%f48, %f47;
	mul.f32 	%f49, %f41, %f48;
	mul.f32 	%f50, %f42, %f48;
	mul.f32 	%f51, %f48, %f43;
	mul.f32 	%f52, %f48, %f44;
	mul.f32 	%f53, %f52, %f52;
	fma.rn.f32 	%f54, %f51, %f51, %f53;
	rcp.rn.f32 	%f55, %f54;
	mul.f32 	%f56, %f50, %f52;
	fma.rn.f32 	%f57, %f49, %f51, %f56;
	mul.f32 	%f58, %f55, %f57;
	mul.f32 	%f59, %f50, %f51;
	mul.f32 	%f60, %f49, %f52;
	sub.f32 	%f61, %f59, %f60;
	mul.f32 	%f62, %f55, %f61;
	sub.f32 	%f77, %f77, %f58;
	sub.f32 	%f76, %f76, %f62;
	add.s32 	%r48, %r48, 1;
	sub.f32 	%f63, %f77, %f2;
	abs.f32 	%f64, %f63;
	setp.geu.f32	%p5, %f64, 0f38D1B717;
	@%p5 bra 	BB6_5;

	sub.f32 	%f65, %f76, %f3;
	abs.f32 	%f66, %f65;
	setp.lt.f32	%p6, %f66, 0f38D1B717;
	@%p6 bra 	BB6_10;

BB6_5:
	sub.f32 	%f67, %f77, %f4;
	abs.f32 	%f68, %f67;
	setp.geu.f32	%p7, %f68, 0f38D1B717;
	@%p7 bra 	BB6_7;

	sub.f32 	%f69, %f76, %f5;
	abs.f32 	%f70, %f69;
	setp.lt.f32	%p8, %f70, 0f38D1B717;
	@%p8 bra 	BB6_10;

BB6_7:
	sub.f32 	%f71, %f77, %f6;
	abs.f32 	%f72, %f71;
	setp.lt.f32	%p9, %f72, 0f38D1B717;
	@%p9 bra 	BB6_9;
	bra.uni 	BB6_8;

BB6_9:
	setp.lt.u32	%p11, %r48, %r14;
	sub.f32 	%f73, %f76, %f7;
	abs.f32 	%f74, %f73;
	setp.geu.f32	%p12, %f74, 0f38D1B717;
	and.pred  	%p13, %p12, %p11;
	@%p13 bra 	BB6_3;
	bra.uni 	BB6_10;

BB6_8:
	setp.lt.u32	%p10, %r48, %r14;
	@%p10 bra 	BB6_3;

BB6_10:
	cvt.rn.f32.u32	%f78, %r48;

BB6_11:
	setp.eq.s32	%p14, %r15, 0;
	@%p14 bra 	BB6_20;

	cvt.rzi.u32.f32	%r31, %f78;
	mul.lo.s32 	%r37, %r2, %r11;
	cvt.u64.u32	%rd3, %r37;
	cvta.to.global.u64 	%rd4, %rd2;
	add.s64 	%rd5, %rd4, %rd3;
	cvt.rn.f32.u32	%f75, %r15;
	rcp.rn.f32 	%f15, %f75;
	cvt.rn.f32.u32	%f16, %r31;
	mul.wide.u32 	%rd6, %r1, 16;
	add.s64 	%rd1, %rd5, %rd6;
	and.b32  	%r30, %r15, 3;
	mov.u32 	%r49, 1;
	mov.u32 	%r52, 0;
	setp.eq.s32	%p15, %r30, 0;
	@%p15 bra 	BB6_18;

	setp.eq.s32	%p16, %r30, 1;
	mov.u32 	%r50, %r52;
	@%p16 bra 	BB6_17;

	setp.eq.s32	%p17, %r30, 2;
	@%p17 bra 	BB6_16;

	st.global.f32 	[%rd1], %f16;
	st.global.f32 	[%rd1+4], %f15;
	mov.u32 	%r44, 0;
	st.global.u32 	[%rd1+12], %r44;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd1+8], %rs1;
	mov.u32 	%r49, 2;

BB6_16:
	st.global.f32 	[%rd1], %f16;
	st.global.f32 	[%rd1+4], %f15;
	mov.u32 	%r45, 0;
	st.global.u32 	[%rd1+12], %r45;
	mov.u16 	%rs2, 0;
	st.global.u8 	[%rd1+8], %rs2;
	mov.u32 	%r50, %r49;

BB6_17:
	st.global.f32 	[%rd1], %f16;
	st.global.f32 	[%rd1+4], %f15;
	st.global.u32 	[%rd1+12], %r52;
	mov.u16 	%rs3, 0;
	st.global.u8 	[%rd1+8], %rs3;
	add.s32 	%r52, %r50, 1;

BB6_18:
	setp.lt.u32	%p18, %r15, 4;
	@%p18 bra 	BB6_20;

BB6_19:
	st.global.f32 	[%rd1], %f16;
	st.global.f32 	[%rd1+4], %f15;
	mov.u32 	%r47, 0;
	st.global.u32 	[%rd1+12], %r47;
	mov.u16 	%rs4, 0;
	st.global.u8 	[%rd1+8], %rs4;
	add.s32 	%r52, %r52, 4;
	setp.lt.u32	%p19, %r52, %r15;
	@%p19 bra 	BB6_19;

BB6_20:
	ret;
}

	// .globl	debug
.visible .entry debug(

)
{



	ret;
}


