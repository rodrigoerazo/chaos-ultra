//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24330188
// Cuda compilation tools, release 9.2, V9.2.148
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	init
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 8 .b8 roots[48];
.const .align 8 .b8 coefficients[32];
.const .align 4 .u32 colorMagnifier;
.const .align 1 .u8 VISUALIZE_SAMPLE_COUNT;
.global .align 4 .u32 seed;
.global .align 4 .u32 WARP_SIZE_X = 8;
.global .align 4 .u32 WARP_SIZE_Y = 4;
.global .align 4 .u32 USE_ADAPTIVE_SS_FLAG_MASK = 1;
.global .align 4 .u32 USE_FOVEATION_FLAG_MASK = 4;
.global .align 4 .u32 USE_SAMPLE_REUSE_FLAG_MASK = 8;
.global .align 4 .u32 IS_ZOOMING_FLAG_MASK = 16;
.global .align 4 .u32 visualityAmplifyCoeff = 10;
.global .align 4 .f32 screenDistance = 0f42700000;
.global .align 16 .b8 $str[34] = {98, 0, 108, 0, 111, 0, 99, 0, 107, 0, 68, 0, 105, 0, 109, 0, 46, 0, 120, 0, 32, 0, 61, 0, 61, 0, 32, 0, 51, 0, 50, 0, 0, 0};
.global .align 16 .b8 $str1[138] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 82, 0, 101, 0, 110, 0, 100, 0, 101, 0, 114, 0, 101, 0, 114, 0, 71, 0, 101, 0, 110, 0, 101, 0, 114, 0, 105, 0, 99, 0, 46, 0, 99, 0, 117, 0, 0, 0};
.global .align 16 .b8 $str2[40] = {112, 0, 79, 0, 117, 0, 116, 0, 112, 0, 117, 0, 116, 0, 45, 0, 62, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str5[34] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 62, 0, 61, 0, 32, 0, 49, 0, 0, 0};
.global .align 16 .b8 $str6[36] = {114, 0, 101, 0, 115, 0, 117, 0, 108, 0, 116, 0, 46, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str7[68] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 60, 0, 61, 0, 32, 0, 77, 0, 65, 0, 88, 0, 95, 0, 83, 0, 85, 0, 80, 0, 69, 0, 82, 0, 95, 0, 83, 0, 65, 0, 77, 0, 80, 0, 76, 0, 73, 0, 78, 0, 71, 0, 0, 0};
.global .align 16 .b8 $str8[54] = {112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 73, 0, 100, 0, 120, 0, 32, 0, 60, 0, 32, 0, 112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 76, 0, 101, 0, 110, 0, 103, 0, 116, 0, 104, 0, 0, 0};
.global .align 16 .b8 $str9[146] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 115, 0, 47, 0, 110, 0, 101, 0, 119, 0, 116, 0, 111, 0, 110, 0, 95, 0, 105, 0, 116, 0, 101, 0, 114, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 115, 0, 46, 0, 99, 0, 117, 0, 0, 0};

.visible .entry init(

)
{



	ret;
}

	// .globl	fractalRenderMainFloat
.visible .entry fractalRenderMainFloat(
	.param .u64 fractalRenderMainFloat_param_0,
	.param .u32 fractalRenderMainFloat_param_1,
	.param .align 4 .b8 fractalRenderMainFloat_param_2[8],
	.param .align 4 .b8 fractalRenderMainFloat_param_3[16],
	.param .u32 fractalRenderMainFloat_param_4,
	.param .u32 fractalRenderMainFloat_param_5,
	.param .u32 fractalRenderMainFloat_param_6
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<42>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<125>;
	.reg .b32 	%r<106>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<51>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainFloat_param_0];
	ld.param.u32 	%r26, [fractalRenderMainFloat_param_1];
	ld.param.u32 	%r28, [fractalRenderMainFloat_param_2+4];
	ld.param.u32 	%r27, [fractalRenderMainFloat_param_2];
	ld.param.f32 	%f37, [fractalRenderMainFloat_param_3+12];
	ld.param.f32 	%f36, [fractalRenderMainFloat_param_3+8];
	ld.param.f32 	%f35, [fractalRenderMainFloat_param_3+4];
	ld.param.f32 	%f34, [fractalRenderMainFloat_param_3];
	ld.param.u32 	%r29, [fractalRenderMainFloat_param_4];
	ld.param.u32 	%r103, [fractalRenderMainFloat_param_5];
	ld.param.u32 	%r31, [fractalRenderMainFloat_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r32, 71;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB1_2:
	mov.u32 	%r33, %tid.x;
	mov.u32 	%r34, %tid.y;
	mad.lo.s32 	%r35, %r1, %r34, %r33;
	shl.b32 	%r36, %r1, 2;
	and.b32  	%r37, %r35, 15;
	rem.u32 	%r38, %r35, %r36;
	sub.s32 	%r39, %r38, %r37;
	shr.u32 	%r40, %r39, 2;
	and.b32  	%r41, %r35, 3;
	add.s32 	%r42, %r40, %r41;
	div.u32 	%r43, %r35, %r36;
	shl.b32 	%r44, %r43, 2;
	bfe.u32 	%r45, %r35, 2, 2;
	add.s32 	%r46, %r44, %r45;
	mov.u32 	%r47, %ctaid.x;
	mad.lo.s32 	%r4, %r47, %r1, %r42;
	mov.u32 	%r48, %ctaid.y;
	mov.u32 	%r49, %ntid.y;
	mad.lo.s32 	%r5, %r48, %r49, %r46;
	setp.lt.u32	%p2, %r4, %r27;
	setp.lt.u32	%p3, %r5, %r28;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB1_35;
	bra.uni 	BB1_3;

BB1_3:
	setp.lt.u32	%p5, %r103, 65;
	@%p5 bra 	BB1_5;

	mov.u64 	%rd9, $str7;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r50, 119;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r50;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_5:
	setp.eq.s32	%p6, %r103, 0;
	cvt.rn.f32.u32	%f124, %r103;
	mov.u32 	%r52, 0;
	@%p6 bra 	BB1_6;

	cvt.rn.f32.u32	%f4, %r4;
	cvt.rn.f32.u32	%f5, %r5;
	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f6, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f7, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f8, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f9, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f10, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f11, %fd12;
	cvt.rn.f32.u32	%f38, %r27;
	sub.f32 	%f39, %f36, %f34;
	div.rn.f32 	%f12, %f39, %f38;
	cvt.rn.f32.u32	%f40, %r28;
	sub.f32 	%f41, %f37, %f35;
	div.rn.f32 	%f13, %f41, %f40;
	mov.u32 	%r54, 0;
	and.b32  	%r57, %r31, 1;
	mov.u32 	%r94, %r54;
	mov.u32 	%r104, %r54;

BB1_8:
	mov.u32 	%r8, %r103;
	mov.u32 	%r6, %r94;
	cvt.rn.f32.u32	%f42, %r6;
	div.rn.f32 	%f43, %f42, %f124;
	add.f32 	%f44, %f4, %f43;
	add.f32 	%f45, %f5, %f43;
	neg.f32 	%f46, %f45;
	fma.rn.f32 	%f118, %f12, %f44, %f34;
	fma.rn.f32 	%f117, %f13, %f46, %f37;
	setp.eq.s32	%p7, %r29, 0;
	mov.u32 	%r98, %r54;
	@%p7 bra 	BB1_16;

BB1_9:
	mul.f32 	%f47, %f117, %f117;
	mul.f32 	%f48, %f118, %f118;
	sub.f32 	%f49, %f48, %f47;
	mul.f32 	%f50, %f118, %f117;
	fma.rn.f32 	%f51, %f118, %f117, %f50;
	mul.f32 	%f52, %f118, %f49;
	mul.f32 	%f53, %f117, %f51;
	sub.f32 	%f54, %f52, %f53;
	mul.f32 	%f55, %f118, %f51;
	fma.rn.f32 	%f56, %f117, %f49, %f55;
	cvt.f64.f32	%fd13, %f118;
	cvt.f64.f32	%fd14, %f117;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f49;
	cvt.f64.f32	%fd17, %f51;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f54;
	cvt.f64.f32	%fd22, %f56;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f57, %fd23;
	cvt.rn.f32.f64	%f58, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f59, %fd27;
	cvt.rn.f32.f64	%f60, %fd28;
	abs.f32 	%f61, %f59;
	abs.f32 	%f62, %f60;
	add.f32 	%f63, %f61, %f62;
	rcp.rn.f32 	%f64, %f63;
	mul.f32 	%f65, %f57, %f64;
	mul.f32 	%f66, %f58, %f64;
	mul.f32 	%f67, %f64, %f59;
	mul.f32 	%f68, %f64, %f60;
	mul.f32 	%f69, %f68, %f68;
	fma.rn.f32 	%f70, %f67, %f67, %f69;
	rcp.rn.f32 	%f71, %f70;
	mul.f32 	%f72, %f66, %f68;
	fma.rn.f32 	%f73, %f65, %f67, %f72;
	mul.f32 	%f74, %f71, %f73;
	mul.f32 	%f75, %f66, %f67;
	mul.f32 	%f76, %f65, %f68;
	sub.f32 	%f77, %f75, %f76;
	mul.f32 	%f78, %f71, %f77;
	sub.f32 	%f118, %f118, %f74;
	sub.f32 	%f117, %f117, %f78;
	add.s32 	%r98, %r98, 1;
	sub.f32 	%f79, %f118, %f6;
	abs.f32 	%f80, %f79;
	setp.geu.f32	%p8, %f80, 0f38D1B717;
	@%p8 bra 	BB1_11;

	sub.f32 	%f81, %f117, %f7;
	abs.f32 	%f82, %f81;
	setp.lt.f32	%p9, %f82, 0f38D1B717;
	@%p9 bra 	BB1_16;

BB1_11:
	sub.f32 	%f83, %f118, %f8;
	abs.f32 	%f84, %f83;
	setp.geu.f32	%p10, %f84, 0f38D1B717;
	@%p10 bra 	BB1_13;

	sub.f32 	%f85, %f117, %f9;
	abs.f32 	%f86, %f85;
	setp.lt.f32	%p11, %f86, 0f38D1B717;
	@%p11 bra 	BB1_16;

BB1_13:
	sub.f32 	%f87, %f118, %f10;
	abs.f32 	%f88, %f87;
	setp.lt.f32	%p12, %f88, 0f38D1B717;
	@%p12 bra 	BB1_15;
	bra.uni 	BB1_14;

BB1_15:
	setp.lt.u32	%p14, %r98, %r29;
	sub.f32 	%f89, %f117, %f11;
	abs.f32 	%f90, %f89;
	setp.geu.f32	%p15, %f90, 0f38D1B717;
	and.pred  	%p16, %p15, %p14;
	@%p16 bra 	BB1_9;
	bra.uni 	BB1_16;

BB1_14:
	setp.lt.u32	%p13, %r98, %r29;
	@%p13 bra 	BB1_9;

BB1_16:
	cvt.rn.f32.u32	%f91, %r98;
	cvt.rzi.u32.f32	%r12, %f91;
	add.s32 	%r104, %r12, %r104;
	setp.gt.u32	%p17, %r6, 9;
	@%p17 bra 	BB1_18;

	add.u64 	%rd15, %SP, 0;
	cvta.to.local.u64 	%rd16, %rd15;
	mul.wide.u32 	%rd17, %r6, 4;
	add.s64 	%rd18, %rd16, %rd17;
	st.local.u32 	[%rd18], %r12;

BB1_18:
	setp.lt.u32	%p18, %r6, 10;
	setp.eq.b32	%p19, %r57, 1;
	setp.ne.s32	%p20, %r6, 0;
	and.pred  	%p21, %p18, %p20;
	and.pred  	%p22, %p21, %p19;
	shr.u32 	%r58, %r8, 1;
	setp.eq.s32	%p23, %r6, %r58;
	or.pred  	%p24, %p22, %p23;
	add.s32 	%r94, %r6, 1;
	mov.u32 	%r103, %r8;
	@!%p24 bra 	BB1_32;
	bra.uni 	BB1_19;

BB1_19:
	div.u32 	%r59, %r104, %r94;
	cvt.rn.f32.u32	%f21, %r59;
	setp.eq.s32	%p25, %r6, 0;
	mov.f32 	%f123, 0f00000000;
	@%p25 bra 	BB1_28;

	and.b32  	%r61, %r6, 3;
	setp.eq.s32	%p26, %r61, 0;
	mov.f32 	%f123, 0f00000000;
	mov.u32 	%r102, 0;
	@%p26 bra 	BB1_26;

	setp.eq.s32	%p27, %r61, 1;
	mov.f32 	%f120, 0f00000000;
	mov.u32 	%r100, 0;
	@%p27 bra 	BB1_25;

	setp.eq.s32	%p28, %r61, 2;
	mov.f32 	%f119, 0f00000000;
	mov.u32 	%r99, 0;
	@%p28 bra 	BB1_24;

	add.u64 	%rd19, %SP, 0;
	cvta.to.local.u64 	%rd20, %rd19;
	ld.local.u32 	%r67, [%rd20];
	cvt.rn.f32.u32	%f96, %r67;
	sub.f32 	%f97, %f96, %f21;
	fma.rn.f32 	%f119, %f97, %f97, 0f00000000;
	mov.u32 	%r99, 1;

BB1_24:
	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd22, %rd21;
	mul.wide.u32 	%rd23, %r99, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.local.u32 	%r68, [%rd24];
	cvt.rn.f32.u32	%f98, %r68;
	sub.f32 	%f99, %f98, %f21;
	fma.rn.f32 	%f120, %f99, %f99, %f119;
	add.s32 	%r100, %r99, 1;

BB1_25:
	add.u64 	%rd25, %SP, 0;
	cvta.to.local.u64 	%rd26, %rd25;
	mul.wide.u32 	%rd27, %r100, 4;
	add.s64 	%rd28, %rd26, %rd27;
	ld.local.u32 	%r69, [%rd28];
	cvt.rn.f32.u32	%f100, %r69;
	sub.f32 	%f101, %f100, %f21;
	fma.rn.f32 	%f123, %f101, %f101, %f120;
	add.s32 	%r102, %r100, 1;

BB1_26:
	add.u64 	%rd29, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd29;
	setp.lt.u32	%p29, %r6, 4;
	@%p29 bra 	BB1_28;

BB1_27:
	mul.wide.u32 	%rd30, %r102, 4;
	add.s64 	%rd31, %rd1, %rd30;
	ld.local.u32 	%r70, [%rd31];
	cvt.rn.f32.u32	%f102, %r70;
	sub.f32 	%f103, %f102, %f21;
	fma.rn.f32 	%f104, %f103, %f103, %f123;
	add.s32 	%r71, %r102, 1;
	mul.wide.u32 	%rd32, %r71, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.local.u32 	%r72, [%rd33];
	cvt.rn.f32.u32	%f105, %r72;
	sub.f32 	%f106, %f105, %f21;
	fma.rn.f32 	%f107, %f106, %f106, %f104;
	add.s32 	%r73, %r102, 2;
	mul.wide.u32 	%rd34, %r73, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.local.u32 	%r74, [%rd35];
	cvt.rn.f32.u32	%f108, %r74;
	sub.f32 	%f109, %f108, %f21;
	fma.rn.f32 	%f110, %f109, %f109, %f107;
	add.s32 	%r75, %r102, 3;
	mul.wide.u32 	%rd36, %r75, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r76, [%rd37];
	cvt.rn.f32.u32	%f111, %r76;
	sub.f32 	%f112, %f111, %f21;
	fma.rn.f32 	%f123, %f112, %f112, %f110;
	add.s32 	%r102, %r102, 4;
	setp.lt.u32	%p30, %r102, %r6;
	@%p30 bra 	BB1_27;

BB1_28:
	add.s32 	%r77, %r6, -1;
	cvt.rn.f32.u32	%f113, %r77;
	div.rn.f32 	%f114, %f123, %f113;
	div.rn.f32 	%f31, %f114, %f21;
	setp.ne.s32	%p31, %r6, 1;
	@%p31 bra 	BB1_30;

	// inline asm
	activemask.b32 %r78;
	// inline asm
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd39, %rd38;
	ld.local.v2.u32 	{%r80, %r81}, [%rd39];
	setp.eq.s32	%p32, %r80, %r81;
	vote.sync.all.pred 	%p33, %p32, %r78;
	mov.u32 	%r103, 2;
	@%p33 bra 	BB1_32;

BB1_30:
	// inline asm
	activemask.b32 %r85;
	// inline asm
	setp.lt.f32	%p34, %f31, 0f3C23D70A;
	vote.sync.all.pred 	%p35, %p34, %r85;
	mov.u32 	%r103, %r94;
	@%p35 bra 	BB1_32;

	// inline asm
	activemask.b32 %r87;
	// inline asm
	setp.le.f32	%p36, %f31, 0f3F800000;
	vote.sync.all.pred 	%p37, %p36, %r87;
	setp.ge.u32	%p38, %r6, %r58;
	and.pred  	%p39, %p37, %p38;
	selp.b32	%r103, %r94, %r8, %p39;

BB1_32:
	cvt.rn.f32.u32	%f124, %r103;
	setp.lt.u32	%p40, %r94, %r103;
	@%p40 bra 	BB1_8;
	bra.uni 	BB1_33;

BB1_6:
	mov.u32 	%r104, %r52;
	mov.u32 	%r103, %r52;

BB1_33:
	mul.lo.s32 	%r90, %r5, %r26;
	cvt.u64.u32	%rd40, %r90;
	cvta.to.global.u64 	%rd41, %rd2;
	add.s64 	%rd42, %rd41, %rd40;
	div.u32 	%r91, %r104, %r103;
	cvt.rn.f32.u32	%f115, %r91;
	mul.wide.u32 	%rd43, %r4, 16;
	add.s64 	%rd44, %rd42, %rd43;
	st.global.f32 	[%rd44], %f115;
	st.global.f32 	[%rd44+4], %f124;
	st.global.u32 	[%rd44+12], %r52;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd44+8], %rs1;
	setp.gt.f32	%p41, %f124, 0f00000000;
	@%p41 bra 	BB1_35;

	mov.u64 	%rd45, $str2;
	cvta.global.u64 	%rd46, %rd45;
	mov.u64 	%rd47, $str1;
	cvta.global.u64 	%rd48, %rd47;
	mov.u32 	%r93, 206;
	mov.u64 	%rd49, 0;
	mov.u64 	%rd50, 2;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r93;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd49;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd50;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB1_35:
	ret;
}

	// .globl	fractalRenderMainDouble
.visible .entry fractalRenderMainDouble(
	.param .u64 fractalRenderMainDouble_param_0,
	.param .u32 fractalRenderMainDouble_param_1,
	.param .align 4 .b8 fractalRenderMainDouble_param_2[8],
	.param .align 8 .b8 fractalRenderMainDouble_param_3[32],
	.param .u32 fractalRenderMainDouble_param_4,
	.param .u32 fractalRenderMainDouble_param_5,
	.param .u32 fractalRenderMainDouble_param_6
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<42>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<129>;
	.reg .f64 	%fd<142>;
	.reg .b64 	%rd<51>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainDouble_param_0];
	ld.param.u32 	%r28, [fractalRenderMainDouble_param_2+4];
	ld.param.u32 	%r27, [fractalRenderMainDouble_param_2];
	ld.param.f64 	%fd39, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd38, [fractalRenderMainDouble_param_3+16];
	ld.param.f64 	%fd37, [fractalRenderMainDouble_param_3+8];
	ld.param.f64 	%fd36, [fractalRenderMainDouble_param_3];
	ld.param.u32 	%r29, [fractalRenderMainDouble_param_4];
	ld.param.u32 	%r30, [fractalRenderMainDouble_param_5];
	ld.param.u32 	%r31, [fractalRenderMainDouble_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r32, 71;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB2_2:
	mov.u32 	%r33, %tid.x;
	mov.u32 	%r34, %tid.y;
	mad.lo.s32 	%r35, %r1, %r34, %r33;
	shl.b32 	%r36, %r1, 2;
	and.b32  	%r37, %r35, 15;
	rem.u32 	%r38, %r35, %r36;
	sub.s32 	%r39, %r38, %r37;
	shr.u32 	%r40, %r39, 2;
	and.b32  	%r41, %r35, 3;
	add.s32 	%r42, %r40, %r41;
	div.u32 	%r43, %r35, %r36;
	shl.b32 	%r44, %r43, 2;
	bfe.u32 	%r45, %r35, 2, 2;
	add.s32 	%r46, %r44, %r45;
	mov.u32 	%r47, %ctaid.x;
	mad.lo.s32 	%r4, %r47, %r1, %r42;
	mov.u32 	%r48, %ctaid.y;
	mov.u32 	%r49, %ntid.y;
	mad.lo.s32 	%r5, %r48, %r49, %r46;
	setp.lt.u32	%p2, %r4, %r27;
	setp.lt.u32	%p3, %r5, %r28;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB2_34;
	bra.uni 	BB2_3;

BB2_3:
	setp.lt.u32	%p5, %r30, 65;
	@%p5 bra 	BB2_5;

	mov.u64 	%rd9, $str7;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r50, 119;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r50;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB2_5:
	setp.eq.s32	%p6, %r30, 0;
	mov.u32 	%r127, 0;
	mov.u32 	%r126, %r127;
	@%p6 bra 	BB2_32;

	cvt.rn.f64.u32	%fd3, %r4;
	cvt.rn.f64.u32	%fd4, %r5;
	ld.const.f64 	%fd7, [coefficients+16];
	add.f64 	%fd8, %fd7, %fd7;
	ld.const.f64 	%fd9, [coefficients+24];
	mul.f64 	%fd10, %fd9, 0d4008000000000000;
	cvt.rn.f64.u32	%fd40, %r27;
	sub.f64 	%fd41, %fd38, %fd36;
	div.rn.f64 	%fd17, %fd41, %fd40;
	cvt.rn.f64.u32	%fd42, %r28;
	sub.f64 	%fd43, %fd39, %fd37;
	div.rn.f64 	%fd18, %fd43, %fd42;
	mov.u32 	%r117, 0;
	and.b32  	%r57, %r31, 1;
	mov.u32 	%r127, %r117;
	mov.u32 	%r126, %r30;

BB2_7:
	mov.u32 	%r8, %r126;
	mov.u32 	%r6, %r117;
	mov.u32 	%r121, 0;
	ld.param.f64 	%fd126, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd125, [fractalRenderMainDouble_param_3];
	cvt.rn.f64.u32	%fd44, %r8;
	cvt.rn.f64.u32	%fd45, %r6;
	div.rn.f64 	%fd46, %fd45, %fd44;
	add.f64 	%fd47, %fd3, %fd46;
	add.f64 	%fd48, %fd4, %fd46;
	neg.f64 	%fd49, %fd48;
	fma.rn.f64 	%fd136, %fd17, %fd47, %fd125;
	fma.rn.f64 	%fd135, %fd18, %fd49, %fd126;
	setp.eq.s32	%p7, %r29, 0;
	@%p7 bra 	BB2_15;

BB2_8:
	ld.const.f64 	%fd131, [roots];
	ld.const.f64 	%fd130, [coefficients+24];
	ld.const.f64 	%fd129, [coefficients+16];
	ld.const.f64 	%fd128, [coefficients];
	ld.const.f64 	%fd127, [coefficients+8];
	mul.f64 	%fd50, %fd135, %fd135;
	mul.f64 	%fd51, %fd136, %fd136;
	sub.f64 	%fd52, %fd51, %fd50;
	mul.f64 	%fd53, %fd136, %fd135;
	fma.rn.f64 	%fd54, %fd136, %fd135, %fd53;
	mul.f64 	%fd55, %fd136, %fd52;
	mul.f64 	%fd56, %fd135, %fd54;
	sub.f64 	%fd57, %fd55, %fd56;
	mul.f64 	%fd58, %fd136, %fd54;
	fma.rn.f64 	%fd59, %fd135, %fd52, %fd58;
	fma.rn.f64 	%fd60, %fd136, %fd127, %fd128;
	mul.f64 	%fd61, %fd54, %fd129;
	fma.rn.f64 	%fd62, %fd52, %fd129, %fd60;
	fma.rn.f64 	%fd63, %fd135, %fd127, %fd61;
	fma.rn.f64 	%fd64, %fd57, %fd130, %fd62;
	fma.rn.f64 	%fd65, %fd59, %fd130, %fd63;
	fma.rn.f64 	%fd66, %fd136, %fd8, %fd127;
	mul.f64 	%fd67, %fd54, %fd10;
	fma.rn.f64 	%fd68, %fd52, %fd10, %fd66;
	fma.rn.f64 	%fd69, %fd135, %fd8, %fd67;
	abs.f64 	%fd70, %fd68;
	abs.f64 	%fd71, %fd69;
	add.f64 	%fd72, %fd70, %fd71;
	rcp.rn.f64 	%fd73, %fd72;
	mul.f64 	%fd74, %fd64, %fd73;
	mul.f64 	%fd75, %fd65, %fd73;
	mul.f64 	%fd76, %fd68, %fd73;
	mul.f64 	%fd77, %fd69, %fd73;
	mul.f64 	%fd78, %fd77, %fd77;
	fma.rn.f64 	%fd79, %fd76, %fd76, %fd78;
	rcp.rn.f64 	%fd80, %fd79;
	mul.f64 	%fd81, %fd75, %fd77;
	fma.rn.f64 	%fd82, %fd74, %fd76, %fd81;
	mul.f64 	%fd83, %fd80, %fd82;
	mul.f64 	%fd84, %fd75, %fd76;
	mul.f64 	%fd85, %fd74, %fd77;
	sub.f64 	%fd86, %fd84, %fd85;
	mul.f64 	%fd87, %fd80, %fd86;
	sub.f64 	%fd136, %fd136, %fd83;
	sub.f64 	%fd135, %fd135, %fd87;
	add.s32 	%r121, %r121, 1;
	sub.f64 	%fd88, %fd136, %fd131;
	abs.f64 	%fd89, %fd88;
	setp.geu.f64	%p8, %fd89, 0d3F1A36E2EB1C432D;
	@%p8 bra 	BB2_10;

	ld.const.f64 	%fd133, [roots+8];
	sub.f64 	%fd90, %fd135, %fd133;
	abs.f64 	%fd91, %fd90;
	setp.lt.f64	%p9, %fd91, 0d3F1A36E2EB1C432D;
	@%p9 bra 	BB2_15;

BB2_10:
	ld.const.f64 	%fd123, [roots+16];
	sub.f64 	%fd92, %fd136, %fd123;
	abs.f64 	%fd93, %fd92;
	setp.geu.f64	%p10, %fd93, 0d3F1A36E2EB1C432D;
	@%p10 bra 	BB2_12;

	ld.const.f64 	%fd132, [roots+24];
	sub.f64 	%fd94, %fd135, %fd132;
	abs.f64 	%fd95, %fd94;
	setp.lt.f64	%p11, %fd95, 0d3F1A36E2EB1C432D;
	@%p11 bra 	BB2_15;

BB2_12:
	ld.const.f64 	%fd124, [roots+32];
	sub.f64 	%fd96, %fd136, %fd124;
	abs.f64 	%fd97, %fd96;
	setp.lt.f64	%p12, %fd97, 0d3F1A36E2EB1C432D;
	@%p12 bra 	BB2_14;
	bra.uni 	BB2_13;

BB2_14:
	ld.const.f64 	%fd134, [roots+40];
	setp.lt.u32	%p14, %r121, %r29;
	sub.f64 	%fd98, %fd135, %fd134;
	abs.f64 	%fd99, %fd98;
	setp.geu.f64	%p15, %fd99, 0d3F1A36E2EB1C432D;
	and.pred  	%p16, %p15, %p14;
	@%p16 bra 	BB2_8;
	bra.uni 	BB2_15;

BB2_13:
	setp.lt.u32	%p13, %r121, %r29;
	@%p13 bra 	BB2_8;

BB2_15:
	cvt.rn.f32.u32	%f1, %r121;
	cvt.rzi.u32.f32	%r12, %f1;
	add.s32 	%r127, %r12, %r127;
	setp.gt.u32	%p17, %r6, 9;
	@%p17 bra 	BB2_17;

	add.u64 	%rd15, %SP, 0;
	cvta.to.local.u64 	%rd16, %rd15;
	mul.wide.u32 	%rd17, %r6, 4;
	add.s64 	%rd18, %rd16, %rd17;
	st.local.u32 	[%rd18], %r12;

BB2_17:
	setp.lt.u32	%p18, %r6, 10;
	setp.eq.b32	%p19, %r57, 1;
	setp.ne.s32	%p20, %r6, 0;
	and.pred  	%p21, %p18, %p20;
	and.pred  	%p22, %p21, %p19;
	shr.u32 	%r58, %r8, 1;
	setp.eq.s32	%p23, %r6, %r58;
	or.pred  	%p24, %p22, %p23;
	add.s32 	%r117, %r6, 1;
	mov.u32 	%r126, %r8;
	@!%p24 bra 	BB2_31;
	bra.uni 	BB2_18;

BB2_18:
	div.u32 	%r59, %r127, %r117;
	cvt.rn.f64.u32	%fd25, %r59;
	setp.eq.s32	%p25, %r6, 0;
	mov.f64 	%fd141, 0d0000000000000000;
	@%p25 bra 	BB2_27;

	and.b32  	%r61, %r6, 3;
	setp.eq.s32	%p26, %r61, 0;
	mov.f64 	%fd141, 0d0000000000000000;
	mov.u32 	%r125, 0;
	@%p26 bra 	BB2_25;

	setp.eq.s32	%p27, %r61, 1;
	mov.f64 	%fd138, 0d0000000000000000;
	mov.u32 	%r123, 0;
	@%p27 bra 	BB2_24;

	setp.eq.s32	%p28, %r61, 2;
	mov.f64 	%fd137, 0d0000000000000000;
	mov.u32 	%r122, 0;
	@%p28 bra 	BB2_23;

	add.u64 	%rd19, %SP, 0;
	cvta.to.local.u64 	%rd20, %rd19;
	ld.local.u32 	%r67, [%rd20];
	cvt.rn.f64.u32	%fd104, %r67;
	sub.f64 	%fd105, %fd104, %fd25;
	fma.rn.f64 	%fd137, %fd105, %fd105, 0d0000000000000000;
	mov.u32 	%r122, 1;

BB2_23:
	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd22, %rd21;
	mul.wide.u32 	%rd23, %r122, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.local.u32 	%r68, [%rd24];
	cvt.rn.f64.u32	%fd106, %r68;
	sub.f64 	%fd107, %fd106, %fd25;
	fma.rn.f64 	%fd138, %fd107, %fd107, %fd137;
	add.s32 	%r123, %r122, 1;

BB2_24:
	add.u64 	%rd25, %SP, 0;
	cvta.to.local.u64 	%rd26, %rd25;
	mul.wide.u32 	%rd27, %r123, 4;
	add.s64 	%rd28, %rd26, %rd27;
	ld.local.u32 	%r69, [%rd28];
	cvt.rn.f64.u32	%fd108, %r69;
	sub.f64 	%fd109, %fd108, %fd25;
	fma.rn.f64 	%fd141, %fd109, %fd109, %fd138;
	add.s32 	%r125, %r123, 1;

BB2_25:
	add.u64 	%rd29, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd29;
	setp.lt.u32	%p29, %r6, 4;
	@%p29 bra 	BB2_27;

BB2_26:
	mul.wide.u32 	%rd30, %r125, 4;
	add.s64 	%rd31, %rd1, %rd30;
	ld.local.u32 	%r70, [%rd31];
	cvt.rn.f64.u32	%fd110, %r70;
	sub.f64 	%fd111, %fd110, %fd25;
	fma.rn.f64 	%fd112, %fd111, %fd111, %fd141;
	add.s32 	%r71, %r125, 1;
	mul.wide.u32 	%rd32, %r71, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.local.u32 	%r72, [%rd33];
	cvt.rn.f64.u32	%fd113, %r72;
	sub.f64 	%fd114, %fd113, %fd25;
	fma.rn.f64 	%fd115, %fd114, %fd114, %fd112;
	add.s32 	%r73, %r125, 2;
	mul.wide.u32 	%rd34, %r73, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.local.u32 	%r74, [%rd35];
	cvt.rn.f64.u32	%fd116, %r74;
	sub.f64 	%fd117, %fd116, %fd25;
	fma.rn.f64 	%fd118, %fd117, %fd117, %fd115;
	add.s32 	%r75, %r125, 3;
	mul.wide.u32 	%rd36, %r75, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r76, [%rd37];
	cvt.rn.f64.u32	%fd119, %r76;
	sub.f64 	%fd120, %fd119, %fd25;
	fma.rn.f64 	%fd141, %fd120, %fd120, %fd118;
	add.s32 	%r125, %r125, 4;
	setp.lt.u32	%p30, %r125, %r6;
	@%p30 bra 	BB2_26;

BB2_27:
	add.s32 	%r77, %r6, -1;
	cvt.rn.f64.u32	%fd121, %r77;
	div.rn.f64 	%fd122, %fd141, %fd121;
	div.rn.f64 	%fd35, %fd122, %fd25;
	setp.ne.s32	%p31, %r6, 1;
	@%p31 bra 	BB2_29;

	// inline asm
	activemask.b32 %r78;
	// inline asm
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd39, %rd38;
	ld.local.v2.u32 	{%r80, %r81}, [%rd39];
	setp.eq.s32	%p32, %r80, %r81;
	vote.sync.all.pred 	%p33, %p32, %r78;
	mov.u32 	%r126, 2;
	@%p33 bra 	BB2_31;

BB2_29:
	// inline asm
	activemask.b32 %r85;
	// inline asm
	setp.lt.f64	%p34, %fd35, 0d3F847AE140000000;
	vote.sync.all.pred 	%p35, %p34, %r85;
	mov.u32 	%r126, %r117;
	@%p35 bra 	BB2_31;

	// inline asm
	activemask.b32 %r87;
	// inline asm
	setp.le.f64	%p36, %fd35, 0d3FF0000000000000;
	vote.sync.all.pred 	%p37, %p36, %r87;
	setp.ge.u32	%p38, %r6, %r58;
	and.pred  	%p39, %p37, %p38;
	selp.b32	%r126, %r117, %r8, %p39;

BB2_31:
	setp.lt.u32	%p40, %r117, %r126;
	@%p40 bra 	BB2_7;

BB2_32:
	mov.u32 	%r116, %ntid.x;
	mov.u32 	%r115, %tid.x;
	shl.b32 	%r114, %r116, 2;
	mov.u32 	%r113, %tid.y;
	mad.lo.s32 	%r112, %r116, %r113, %r115;
	div.u32 	%r111, %r112, %r114;
	bfe.u32 	%r110, %r112, 2, 2;
	shl.b32 	%r109, %r111, 2;
	add.s32 	%r108, %r109, %r110;
	mov.u32 	%r107, %ntid.y;
	mov.u32 	%r106, %ctaid.y;
	mad.lo.s32 	%r105, %r106, %r107, %r108;
	and.b32  	%r104, %r112, 15;
	rem.u32 	%r103, %r112, %r114;
	sub.s32 	%r102, %r103, %r104;
	and.b32  	%r101, %r112, 3;
	shr.u32 	%r100, %r102, 2;
	add.s32 	%r99, %r100, %r101;
	mov.u32 	%r98, %ctaid.x;
	mad.lo.s32 	%r97, %r98, %r116, %r99;
	mov.u32 	%r95, 0;
	ld.param.u32 	%r94, [fractalRenderMainDouble_param_1];
	mul.lo.s32 	%r90, %r105, %r94;
	cvt.u64.u32	%rd40, %r90;
	cvta.to.global.u64 	%rd41, %rd2;
	add.s64 	%rd42, %rd41, %rd40;
	div.u32 	%r91, %r127, %r126;
	cvt.rn.f32.u32	%f2, %r91;
	mul.wide.u32 	%rd43, %r97, 16;
	add.s64 	%rd44, %rd42, %rd43;
	st.global.f32 	[%rd44], %f2;
	cvt.rn.f32.u32	%f3, %r126;
	st.global.f32 	[%rd44+4], %f3;
	st.global.u32 	[%rd44+12], %r95;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd44+8], %rs1;
	setp.gt.f32	%p41, %f3, 0f00000000;
	@%p41 bra 	BB2_34;

	mov.u64 	%rd45, $str2;
	cvta.global.u64 	%rd46, %rd45;
	mov.u64 	%rd47, $str1;
	cvta.global.u64 	%rd48, %rd47;
	mov.u32 	%r93, 206;
	mov.u64 	%rd49, 0;
	mov.u64 	%rd50, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r93;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd49;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd50;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB2_34:
	ret;
}

	// .globl	fractalRenderAdvancedFloat
.visible .entry fractalRenderAdvancedFloat(
	.param .u64 fractalRenderAdvancedFloat_param_0,
	.param .u32 fractalRenderAdvancedFloat_param_1,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_2[8],
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_3[16],
	.param .u32 fractalRenderAdvancedFloat_param_4,
	.param .u32 fractalRenderAdvancedFloat_param_5,
	.param .u32 fractalRenderAdvancedFloat_param_6,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_7[16],
	.param .u64 fractalRenderAdvancedFloat_param_8,
	.param .u32 fractalRenderAdvancedFloat_param_9,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<63>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<200>;
	.reg .b32 	%r<131>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<69>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderAdvancedFloat_param_0];
	ld.param.u32 	%r28, [fractalRenderAdvancedFloat_param_1];
	ld.param.u32 	%r30, [fractalRenderAdvancedFloat_param_2+4];
	ld.param.u32 	%r29, [fractalRenderAdvancedFloat_param_2];
	ld.param.f32 	%f53, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f52, [fractalRenderAdvancedFloat_param_3+8];
	ld.param.f32 	%f51, [fractalRenderAdvancedFloat_param_3+4];
	ld.param.f32 	%f50, [fractalRenderAdvancedFloat_param_3];
	ld.param.u32 	%r31, [fractalRenderAdvancedFloat_param_4];
	ld.param.u32 	%r128, [fractalRenderAdvancedFloat_param_5];
	ld.param.u32 	%r33, [fractalRenderAdvancedFloat_param_6];
	ld.param.f32 	%f57, [fractalRenderAdvancedFloat_param_7+12];
	ld.param.f32 	%f56, [fractalRenderAdvancedFloat_param_7+8];
	ld.param.f32 	%f55, [fractalRenderAdvancedFloat_param_7+4];
	ld.param.f32 	%f54, [fractalRenderAdvancedFloat_param_7];
	ld.param.u64 	%rd3, [fractalRenderAdvancedFloat_param_8];
	ld.param.u32 	%r34, [fractalRenderAdvancedFloat_param_9];
	ld.param.u32 	%r36, [fractalRenderAdvancedFloat_param_10+4];
	ld.param.u32 	%r35, [fractalRenderAdvancedFloat_param_10];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p2, %r1, 32;
	@%p2 bra 	BB3_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r37, 71;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r37;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB3_2:
	mov.u32 	%r38, %tid.x;
	mov.u32 	%r39, %tid.y;
	mad.lo.s32 	%r40, %r1, %r39, %r38;
	shl.b32 	%r41, %r1, 2;
	and.b32  	%r42, %r40, 15;
	rem.u32 	%r43, %r40, %r41;
	sub.s32 	%r44, %r43, %r42;
	shr.u32 	%r45, %r44, 2;
	and.b32  	%r46, %r40, 3;
	add.s32 	%r47, %r45, %r46;
	div.u32 	%r48, %r40, %r41;
	shl.b32 	%r49, %r48, 2;
	bfe.u32 	%r50, %r40, 2, 2;
	add.s32 	%r51, %r49, %r50;
	mov.u32 	%r52, %ctaid.x;
	mad.lo.s32 	%r4, %r52, %r1, %r47;
	mov.u32 	%r53, %ctaid.y;
	mov.u32 	%r54, %ntid.y;
	mad.lo.s32 	%r5, %r53, %r54, %r51;
	setp.lt.u32	%p3, %r4, %r29;
	setp.lt.u32	%p4, %r5, %r30;
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB3_49;
	bra.uni 	BB3_3;

BB3_3:
	and.b32  	%r55, %r33, 8;
	setp.eq.s32	%p7, %r55, 0;
	mov.pred 	%p62, -1;
	mov.f32 	%f187, 0f00000000;
	@%p7 bra 	BB3_4;

	cvt.rn.f32.u32	%f60, %r4;
	cvt.rn.f32.u32	%f61, %r30;
	cvt.rn.f32.u32	%f62, %r5;
	sub.f32 	%f63, %f61, %f62;
	cvt.rn.f32.u32	%f64, %r29;
	div.rn.f32 	%f65, %f60, %f64;
	div.rn.f32 	%f66, %f63, %f61;
	sub.f32 	%f67, %f52, %f50;
	sub.f32 	%f68, %f53, %f51;
	fma.rn.f32 	%f69, %f67, %f65, %f50;
	fma.rn.f32 	%f70, %f68, %f66, %f51;
	sub.f32 	%f71, %f69, %f54;
	sub.f32 	%f72, %f70, %f55;
	sub.f32 	%f73, %f56, %f54;
	div.rn.f32 	%f74, %f71, %f73;
	sub.f32 	%f75, %f57, %f55;
	div.rn.f32 	%f76, %f72, %f75;
	mul.f32 	%f5, %f64, %f74;
	mul.f32 	%f77, %f61, %f76;
	sub.f32 	%f6, %f61, %f77;
	abs.f32 	%f78, %f5;
	mov.b32 	 %r56, %f5;
	and.b32  	%r57, %r56, -2147483648;
	or.b32  	%r58, %r57, 1056964608;
	mov.b32 	 %f79, %r58;
	add.f32 	%f80, %f5, %f79;
	cvt.rzi.f32.f32	%f81, %f80;
	setp.gt.f32	%p8, %f78, 0f4B000000;
	selp.f32	%f185, %f5, %f81, %p8;
	setp.geu.f32	%p9, %f78, 0f3F000000;
	@%p9 bra 	BB3_7;

	cvt.rzi.f32.f32	%f185, %f5;

BB3_7:
	cvt.rzi.s32.f32	%r6, %f185;
	mov.b32 	 %r59, %f6;
	and.b32  	%r60, %r59, -2147483648;
	or.b32  	%r61, %r60, 1056964608;
	mov.b32 	 %f82, %r61;
	add.f32 	%f83, %f6, %f82;
	cvt.rzi.f32.f32	%f84, %f83;
	abs.f32 	%f85, %f6;
	setp.gt.f32	%p10, %f85, 0f4B000000;
	selp.f32	%f186, %f6, %f84, %p10;
	setp.geu.f32	%p11, %f85, 0f3F000000;
	@%p11 bra 	BB3_9;

	cvt.rzi.f32.f32	%f186, %f6;

BB3_9:
	add.s32 	%r62, %r29, -2;
	setp.lt.u32	%p13, %r6, %r62;
	setp.gt.s32	%p14, %r6, 1;
	and.pred  	%p15, %p14, %p13;
	cvt.rzi.s32.f32	%r7, %f186;
	setp.gt.s32	%p16, %r7, 1;
	and.pred  	%p17, %p15, %p16;
	add.s32 	%r63, %r30, -2;
	setp.lt.u32	%p18, %r7, %r63;
	and.pred  	%p19, %p18, %p17;
	mov.f32 	%f188, %f187;
	@!%p19 bra 	BB3_13;
	bra.uni 	BB3_10;

BB3_10:
	sub.s32 	%r64, %r6, %r35;
	abs.s32 	%r65, %r64;
	setp.gt.s32	%p20, %r65, 19;
	@%p20 bra 	BB3_12;

	sub.s32 	%r66, %r7, %r36;
	abs.s32 	%r67, %r66;
	setp.lt.s32	%p22, %r67, 20;
	mov.f32 	%f188, %f187;
	@%p22 bra 	BB3_13;

BB3_12:
	cvt.rmi.f32.f32	%f91, %f5;
	cvt.rzi.u32.f32	%r68, %f91;
	cvt.rmi.f32.f32	%f92, %f6;
	cvt.rzi.u32.f32	%r69, %f92;
	cvt.rn.f32.u32	%f93, %r68;
	sub.f32 	%f94, %f5, %f93;
	cvt.rn.f32.u32	%f95, %r69;
	sub.f32 	%f96, %f6, %f95;
	mul.lo.s32 	%r70, %r69, %r34;
	cvt.u64.u32	%rd10, %r70;
	cvta.to.global.u64 	%rd11, %rd3;
	add.s64 	%rd12, %rd11, %rd10;
	mul.wide.u32 	%rd13, %r68, 16;
	add.s64 	%rd14, %rd12, %rd13;
	add.s32 	%r71, %r68, 1;
	mul.wide.u32 	%rd15, %r71, 16;
	add.s64 	%rd16, %rd12, %rd15;
	add.s32 	%r72, %r69, 1;
	mul.lo.s32 	%r73, %r72, %r34;
	cvt.u64.u32	%rd17, %r73;
	add.s64 	%rd18, %rd11, %rd17;
	add.s64 	%rd19, %rd18, %rd13;
	add.s64 	%rd20, %rd18, %rd15;
	mov.f32 	%f188, 0f3F800000;
	sub.f32 	%f97, %f188, %f94;
	ld.global.f32 	%f98, [%rd14];
	ld.global.f32 	%f99, [%rd16];
	mul.f32 	%f100, %f94, %f99;
	fma.rn.f32 	%f101, %f98, %f97, %f100;
	sub.f32 	%f102, %f188, %f96;
	ld.global.f32 	%f103, [%rd19];
	ld.global.f32 	%f104, [%rd20];
	mul.f32 	%f105, %f94, %f104;
	fma.rn.f32 	%f106, %f97, %f103, %f105;
	mul.f32 	%f107, %f96, %f106;
	fma.rn.f32 	%f187, %f102, %f101, %f107;
	mov.pred 	%p62, 0;
	bra.uni 	BB3_13;

BB3_4:
	mov.f32 	%f188, %f187;

BB3_13:
	mov.u16 	%rs4, 1;
	@!%p62 bra 	BB3_47;
	bra.uni 	BB3_14;

BB3_14:
	setp.ne.s32	%p24, %r128, 0;
	@%p24 bra 	BB3_16;

	mov.u64 	%rd21, $str5;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r74, 401;
	mov.u64 	%rd25, 0;
	mov.u64 	%rd26, 2;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r74;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB3_16:
	cvt.rn.f32.u32	%f108, %r29;
	sub.f32 	%f109, %f52, %f50;
	div.rn.f32 	%f16, %f109, %f108;
	cvt.rn.f32.u32	%f110, %r30;
	sub.f32 	%f111, %f53, %f51;
	div.rn.f32 	%f17, %f111, %f110;
	setp.lt.u32	%p25, %r128, 65;
	@%p25 bra 	BB3_18;

	mov.u64 	%rd27, $str7;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, $str1;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r75, 119;
	mov.u64 	%rd31, 0;
	mov.u64 	%rd32, 2;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r75;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB3_18:
	setp.eq.s32	%p26, %r128, 0;
	cvt.rn.f32.u32	%f188, %r128;
	mov.u32 	%r129, 0;
	@%p26 bra 	BB3_19;

	cvt.rn.f32.u32	%f19, %r4;
	cvt.rn.f32.u32	%f20, %r5;
	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f21, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f22, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f23, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f24, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f25, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f26, %fd12;
	mov.u32 	%r79, 0;
	mov.u32 	%r119, %r79;
	mov.u32 	%r129, %r79;

BB3_21:
	mov.u32 	%r10, %r128;
	mov.u32 	%r8, %r119;
	cvt.rn.f32.u32	%f112, %r8;
	div.rn.f32 	%f113, %f112, %f188;
	add.f32 	%f114, %f19, %f113;
	add.f32 	%f115, %f20, %f113;
	neg.f32 	%f116, %f115;
	fma.rn.f32 	%f191, %f16, %f114, %f50;
	fma.rn.f32 	%f190, %f17, %f116, %f53;
	setp.eq.s32	%p27, %r31, 0;
	mov.u32 	%r123, %r79;
	@%p27 bra 	BB3_29;

BB3_22:
	mul.f32 	%f117, %f190, %f190;
	mul.f32 	%f118, %f191, %f191;
	sub.f32 	%f119, %f118, %f117;
	mul.f32 	%f120, %f191, %f190;
	fma.rn.f32 	%f121, %f191, %f190, %f120;
	mul.f32 	%f122, %f191, %f119;
	mul.f32 	%f123, %f190, %f121;
	sub.f32 	%f124, %f122, %f123;
	mul.f32 	%f125, %f191, %f121;
	fma.rn.f32 	%f126, %f190, %f119, %f125;
	cvt.f64.f32	%fd13, %f191;
	cvt.f64.f32	%fd14, %f190;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f119;
	cvt.f64.f32	%fd17, %f121;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f124;
	cvt.f64.f32	%fd22, %f126;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f127, %fd23;
	cvt.rn.f32.f64	%f128, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f129, %fd27;
	cvt.rn.f32.f64	%f130, %fd28;
	abs.f32 	%f131, %f129;
	abs.f32 	%f132, %f130;
	add.f32 	%f133, %f131, %f132;
	rcp.rn.f32 	%f134, %f133;
	mul.f32 	%f135, %f127, %f134;
	mul.f32 	%f136, %f128, %f134;
	mul.f32 	%f137, %f134, %f129;
	mul.f32 	%f138, %f134, %f130;
	mul.f32 	%f139, %f138, %f138;
	fma.rn.f32 	%f140, %f137, %f137, %f139;
	rcp.rn.f32 	%f141, %f140;
	mul.f32 	%f142, %f136, %f138;
	fma.rn.f32 	%f143, %f135, %f137, %f142;
	mul.f32 	%f144, %f141, %f143;
	mul.f32 	%f145, %f136, %f137;
	mul.f32 	%f146, %f135, %f138;
	sub.f32 	%f147, %f145, %f146;
	mul.f32 	%f148, %f141, %f147;
	sub.f32 	%f191, %f191, %f144;
	sub.f32 	%f190, %f190, %f148;
	add.s32 	%r123, %r123, 1;
	sub.f32 	%f149, %f191, %f21;
	abs.f32 	%f150, %f149;
	setp.geu.f32	%p28, %f150, 0f38D1B717;
	@%p28 bra 	BB3_24;

	sub.f32 	%f151, %f190, %f22;
	abs.f32 	%f152, %f151;
	setp.lt.f32	%p29, %f152, 0f38D1B717;
	@%p29 bra 	BB3_29;

BB3_24:
	sub.f32 	%f153, %f191, %f23;
	abs.f32 	%f154, %f153;
	setp.geu.f32	%p30, %f154, 0f38D1B717;
	@%p30 bra 	BB3_26;

	sub.f32 	%f155, %f190, %f24;
	abs.f32 	%f156, %f155;
	setp.lt.f32	%p31, %f156, 0f38D1B717;
	@%p31 bra 	BB3_29;

BB3_26:
	sub.f32 	%f157, %f191, %f25;
	abs.f32 	%f158, %f157;
	setp.lt.f32	%p32, %f158, 0f38D1B717;
	@%p32 bra 	BB3_28;
	bra.uni 	BB3_27;

BB3_28:
	setp.lt.u32	%p34, %r123, %r31;
	sub.f32 	%f159, %f190, %f26;
	abs.f32 	%f160, %f159;
	setp.geu.f32	%p35, %f160, 0f38D1B717;
	and.pred  	%p36, %p35, %p34;
	@%p36 bra 	BB3_22;
	bra.uni 	BB3_29;

BB3_27:
	setp.lt.u32	%p33, %r123, %r31;
	@%p33 bra 	BB3_22;

BB3_29:
	cvt.rn.f32.u32	%f161, %r123;
	cvt.rzi.u32.f32	%r14, %f161;
	add.s32 	%r129, %r14, %r129;
	setp.gt.u32	%p37, %r8, 9;
	@%p37 bra 	BB3_31;

	add.u64 	%rd33, %SP, 0;
	cvta.to.local.u64 	%rd34, %rd33;
	mul.wide.u32 	%rd35, %r8, 4;
	add.s64 	%rd36, %rd34, %rd35;
	st.local.u32 	[%rd36], %r14;

BB3_31:
	setp.lt.u32	%p38, %r8, 10;
	and.b32  	%r82, %r33, 1;
	setp.eq.b32	%p39, %r82, 1;
	setp.ne.s32	%p40, %r8, 0;
	and.pred  	%p41, %p38, %p40;
	and.pred  	%p42, %p41, %p39;
	shr.u32 	%r83, %r10, 1;
	setp.eq.s32	%p43, %r8, %r83;
	or.pred  	%p44, %p42, %p43;
	add.s32 	%r119, %r8, 1;
	mov.u32 	%r128, %r10;
	@!%p44 bra 	BB3_45;
	bra.uni 	BB3_32;

BB3_32:
	div.u32 	%r84, %r129, %r119;
	cvt.rn.f32.u32	%f34, %r84;
	setp.eq.s32	%p45, %r8, 0;
	mov.f32 	%f196, 0f00000000;
	@%p45 bra 	BB3_41;

	and.b32  	%r86, %r8, 3;
	setp.eq.s32	%p46, %r86, 0;
	mov.f32 	%f196, 0f00000000;
	mov.u32 	%r127, 0;
	@%p46 bra 	BB3_39;

	setp.eq.s32	%p47, %r86, 1;
	mov.f32 	%f193, 0f00000000;
	mov.u32 	%r125, 0;
	@%p47 bra 	BB3_38;

	setp.eq.s32	%p48, %r86, 2;
	mov.f32 	%f192, 0f00000000;
	mov.u32 	%r124, 0;
	@%p48 bra 	BB3_37;

	add.u64 	%rd37, %SP, 0;
	cvta.to.local.u64 	%rd38, %rd37;
	ld.local.u32 	%r92, [%rd38];
	cvt.rn.f32.u32	%f166, %r92;
	sub.f32 	%f167, %f166, %f34;
	fma.rn.f32 	%f192, %f167, %f167, 0f00000000;
	mov.u32 	%r124, 1;

BB3_37:
	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd39;
	mul.wide.u32 	%rd41, %r124, 4;
	add.s64 	%rd42, %rd40, %rd41;
	ld.local.u32 	%r93, [%rd42];
	cvt.rn.f32.u32	%f168, %r93;
	sub.f32 	%f169, %f168, %f34;
	fma.rn.f32 	%f193, %f169, %f169, %f192;
	add.s32 	%r125, %r124, 1;

BB3_38:
	add.u64 	%rd43, %SP, 0;
	cvta.to.local.u64 	%rd44, %rd43;
	mul.wide.u32 	%rd45, %r125, 4;
	add.s64 	%rd46, %rd44, %rd45;
	ld.local.u32 	%r94, [%rd46];
	cvt.rn.f32.u32	%f170, %r94;
	sub.f32 	%f171, %f170, %f34;
	fma.rn.f32 	%f196, %f171, %f171, %f193;
	add.s32 	%r127, %r125, 1;

BB3_39:
	add.u64 	%rd47, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd47;
	setp.lt.u32	%p49, %r8, 4;
	@%p49 bra 	BB3_41;

BB3_40:
	mul.wide.u32 	%rd48, %r127, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.u32 	%r95, [%rd49];
	cvt.rn.f32.u32	%f172, %r95;
	sub.f32 	%f173, %f172, %f34;
	fma.rn.f32 	%f174, %f173, %f173, %f196;
	add.s32 	%r96, %r127, 1;
	mul.wide.u32 	%rd50, %r96, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.u32 	%r97, [%rd51];
	cvt.rn.f32.u32	%f175, %r97;
	sub.f32 	%f176, %f175, %f34;
	fma.rn.f32 	%f177, %f176, %f176, %f174;
	add.s32 	%r98, %r127, 2;
	mul.wide.u32 	%rd52, %r98, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.u32 	%r99, [%rd53];
	cvt.rn.f32.u32	%f178, %r99;
	sub.f32 	%f179, %f178, %f34;
	fma.rn.f32 	%f180, %f179, %f179, %f177;
	add.s32 	%r100, %r127, 3;
	mul.wide.u32 	%rd54, %r100, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.u32 	%r101, [%rd55];
	cvt.rn.f32.u32	%f181, %r101;
	sub.f32 	%f182, %f181, %f34;
	fma.rn.f32 	%f196, %f182, %f182, %f180;
	add.s32 	%r127, %r127, 4;
	setp.lt.u32	%p50, %r127, %r8;
	@%p50 bra 	BB3_40;

BB3_41:
	add.s32 	%r102, %r8, -1;
	cvt.rn.f32.u32	%f183, %r102;
	div.rn.f32 	%f184, %f196, %f183;
	div.rn.f32 	%f44, %f184, %f34;
	setp.ne.s32	%p51, %r8, 1;
	@%p51 bra 	BB3_43;

	// inline asm
	activemask.b32 %r103;
	// inline asm
	add.u64 	%rd56, %SP, 0;
	cvta.to.local.u64 	%rd57, %rd56;
	ld.local.v2.u32 	{%r105, %r106}, [%rd57];
	setp.eq.s32	%p52, %r105, %r106;
	vote.sync.all.pred 	%p53, %p52, %r103;
	mov.u32 	%r128, 2;
	@%p53 bra 	BB3_45;

BB3_43:
	// inline asm
	activemask.b32 %r110;
	// inline asm
	setp.lt.f32	%p54, %f44, 0f3C23D70A;
	vote.sync.all.pred 	%p55, %p54, %r110;
	mov.u32 	%r128, %r119;
	@%p55 bra 	BB3_45;

	// inline asm
	activemask.b32 %r112;
	// inline asm
	setp.le.f32	%p56, %f44, 0f3F800000;
	vote.sync.all.pred 	%p57, %p56, %r112;
	setp.ge.u32	%p58, %r8, %r83;
	and.pred  	%p59, %p57, %p58;
	selp.b32	%r128, %r119, %r10, %p59;

BB3_45:
	cvt.rn.f32.u32	%f188, %r128;
	setp.lt.u32	%p60, %r119, %r128;
	@%p60 bra 	BB3_21;
	bra.uni 	BB3_46;

BB3_19:
	mov.u32 	%r128, %r129;

BB3_46:
	div.u32 	%r115, %r129, %r128;
	cvt.rn.f32.u32	%f187, %r115;
	mov.u16 	%rs4, 0;

BB3_47:
	mul.lo.s32 	%r116, %r5, %r28;
	cvt.u64.u32	%rd58, %r116;
	cvta.to.global.u64 	%rd59, %rd2;
	add.s64 	%rd60, %rd59, %rd58;
	mul.wide.u32 	%rd61, %r4, 16;
	add.s64 	%rd62, %rd60, %rd61;
	st.global.f32 	[%rd62], %f187;
	st.global.f32 	[%rd62+4], %f188;
	mov.u32 	%r117, 0;
	st.global.u32 	[%rd62+12], %r117;
	st.global.u8 	[%rd62+8], %rs4;
	setp.gt.f32	%p61, %f188, 0f00000000;
	@%p61 bra 	BB3_49;

	mov.u64 	%rd63, $str6;
	cvta.global.u64 	%rd64, %rd63;
	mov.u64 	%rd65, $str1;
	cvta.global.u64 	%rd66, %rd65;
	mov.u32 	%r118, 408;
	mov.u64 	%rd67, 0;
	mov.u64 	%rd68, 2;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd64;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 param2;
	st.param.b32	[param2+0], %r118;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd67;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd68;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB3_49:
	ret;
}

	// .globl	fractalRenderAdvancedDouble
.visible .entry fractalRenderAdvancedDouble(
	.param .u64 fractalRenderAdvancedDouble_param_0,
	.param .u32 fractalRenderAdvancedDouble_param_1,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_2[8],
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_3[32],
	.param .u32 fractalRenderAdvancedDouble_param_4,
	.param .u32 fractalRenderAdvancedDouble_param_5,
	.param .u32 fractalRenderAdvancedDouble_param_6,
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_7[32],
	.param .u64 fractalRenderAdvancedDouble_param_8,
	.param .u32 fractalRenderAdvancedDouble_param_9,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot4[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<63>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<24>;
	.reg .b32 	%r<161>;
	.reg .f64 	%fd<191>;
	.reg .b64 	%rd<70>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r30, [fractalRenderAdvancedDouble_param_2+4];
	ld.param.u32 	%r29, [fractalRenderAdvancedDouble_param_2];
	ld.param.f64 	%fd49, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd48, [fractalRenderAdvancedDouble_param_3+16];
	ld.param.f64 	%fd47, [fractalRenderAdvancedDouble_param_3+8];
	ld.param.f64 	%fd46, [fractalRenderAdvancedDouble_param_3];
	ld.param.u32 	%r31, [fractalRenderAdvancedDouble_param_4];
	ld.param.u32 	%r32, [fractalRenderAdvancedDouble_param_5];
	ld.param.u32 	%r33, [fractalRenderAdvancedDouble_param_6];
	ld.param.f64 	%fd53, [fractalRenderAdvancedDouble_param_7+24];
	ld.param.f64 	%fd52, [fractalRenderAdvancedDouble_param_7+16];
	ld.param.f64 	%fd51, [fractalRenderAdvancedDouble_param_7+8];
	ld.param.f64 	%fd50, [fractalRenderAdvancedDouble_param_7];
	ld.param.u64 	%rd3, [fractalRenderAdvancedDouble_param_8];
	ld.param.u32 	%r34, [fractalRenderAdvancedDouble_param_9];
	ld.param.u32 	%r36, [fractalRenderAdvancedDouble_param_10+4];
	ld.param.u32 	%r35, [fractalRenderAdvancedDouble_param_10];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p2, %r1, 32;
	@%p2 bra 	BB4_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r37, 71;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r37;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB4_2:
	mov.u32 	%r38, %tid.x;
	mov.u32 	%r39, %tid.y;
	mad.lo.s32 	%r40, %r1, %r39, %r38;
	shl.b32 	%r41, %r1, 2;
	and.b32  	%r42, %r40, 15;
	rem.u32 	%r43, %r40, %r41;
	sub.s32 	%r44, %r43, %r42;
	shr.u32 	%r45, %r44, 2;
	and.b32  	%r46, %r40, 3;
	add.s32 	%r47, %r45, %r46;
	div.u32 	%r48, %r40, %r41;
	shl.b32 	%r49, %r48, 2;
	bfe.u32 	%r50, %r40, 2, 2;
	add.s32 	%r51, %r49, %r50;
	mov.u32 	%r52, %ctaid.x;
	mad.lo.s32 	%r4, %r52, %r1, %r47;
	mov.u32 	%r53, %ctaid.y;
	mov.u32 	%r54, %ntid.y;
	mad.lo.s32 	%r5, %r53, %r54, %r51;
	setp.lt.u32	%p3, %r4, %r29;
	setp.lt.u32	%p4, %r5, %r30;
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB4_48;
	bra.uni 	BB4_3;

BB4_3:
	and.b32  	%r55, %r33, 8;
	setp.eq.s32	%p7, %r55, 0;
	mov.pred 	%p62, -1;
	mov.f32 	%f20, 0f00000000;
	@%p7 bra 	BB4_4;

	cvt.rn.f64.u32	%fd54, %r4;
	cvt.rn.f64.u32	%fd55, %r30;
	cvt.rn.f64.u32	%fd56, %r5;
	sub.f64 	%fd57, %fd55, %fd56;
	cvt.rn.f64.u32	%fd58, %r29;
	div.rn.f64 	%fd59, %fd54, %fd58;
	div.rn.f64 	%fd60, %fd57, %fd55;
	sub.f64 	%fd61, %fd48, %fd46;
	sub.f64 	%fd62, %fd49, %fd47;
	fma.rn.f64 	%fd63, %fd61, %fd59, %fd46;
	fma.rn.f64 	%fd64, %fd62, %fd60, %fd47;
	sub.f64 	%fd65, %fd63, %fd50;
	sub.f64 	%fd66, %fd64, %fd51;
	sub.f64 	%fd67, %fd52, %fd50;
	div.rn.f64 	%fd68, %fd65, %fd67;
	sub.f64 	%fd69, %fd53, %fd51;
	div.rn.f64 	%fd70, %fd66, %fd69;
	mul.f64 	%fd5, %fd58, %fd68;
	mul.f64 	%fd71, %fd55, %fd70;
	sub.f64 	%fd6, %fd55, %fd71;
	abs.f64 	%fd7, %fd5;
	setp.ge.f64	%p8, %fd7, 0d4330000000000000;
	mov.f64 	%fd182, %fd5;
	@%p8 bra 	BB4_7;

	add.f64 	%fd72, %fd7, 0d3FE0000000000000;
	cvt.rzi.f64.f64	%fd73, %fd72;
	setp.lt.f64	%p9, %fd7, 0d3FE0000000000000;
	selp.f64	%fd74, 0d0000000000000000, %fd73, %p9;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r56, %temp}, %fd74;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r57}, %fd74;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r58}, %fd5;
	}
	and.b32  	%r59, %r58, -2147483648;
	or.b32  	%r60, %r57, %r59;
	mov.b64 	%fd182, {%r56, %r60};

BB4_7:
	cvt.rzi.s32.f64	%r6, %fd182;
	abs.f64 	%fd10, %fd6;
	setp.ge.f64	%p10, %fd10, 0d4330000000000000;
	mov.f64 	%fd183, %fd6;
	@%p10 bra 	BB4_9;

	add.f64 	%fd75, %fd10, 0d3FE0000000000000;
	cvt.rzi.f64.f64	%fd76, %fd75;
	setp.lt.f64	%p11, %fd10, 0d3FE0000000000000;
	selp.f64	%fd77, 0d0000000000000000, %fd76, %p11;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r61, %temp}, %fd77;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r62}, %fd77;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r63}, %fd6;
	}
	and.b32  	%r64, %r63, -2147483648;
	or.b32  	%r65, %r62, %r64;
	mov.b64 	%fd183, {%r61, %r65};

BB4_9:
	add.s32 	%r66, %r29, -2;
	setp.lt.u32	%p13, %r6, %r66;
	setp.gt.s32	%p14, %r6, 1;
	and.pred  	%p15, %p14, %p13;
	cvt.rzi.s32.f64	%r7, %fd183;
	setp.gt.s32	%p16, %r7, 1;
	and.pred  	%p17, %p15, %p16;
	add.s32 	%r67, %r30, -2;
	setp.lt.u32	%p18, %r7, %r67;
	and.pred  	%p19, %p18, %p17;
	mov.f32 	%f21, %f20;
	@!%p19 bra 	BB4_13;
	bra.uni 	BB4_10;

BB4_10:
	sub.s32 	%r68, %r6, %r35;
	abs.s32 	%r69, %r68;
	setp.gt.s32	%p20, %r69, 19;
	@%p20 bra 	BB4_12;

	sub.s32 	%r70, %r7, %r36;
	abs.s32 	%r71, %r70;
	setp.lt.s32	%p22, %r71, 20;
	mov.f32 	%f21, %f20;
	@%p22 bra 	BB4_13;

BB4_12:
	cvt.rmi.f64.f64	%fd78, %fd5;
	cvt.rzi.u32.f64	%r72, %fd78;
	cvt.rmi.f64.f64	%fd79, %fd6;
	cvt.rzi.u32.f64	%r73, %fd79;
	cvt.rn.f64.u32	%fd80, %r72;
	sub.f64 	%fd81, %fd5, %fd80;
	cvt.rn.f64.u32	%fd82, %r73;
	sub.f64 	%fd83, %fd6, %fd82;
	mul.lo.s32 	%r74, %r73, %r34;
	cvt.u64.u32	%rd10, %r74;
	cvta.to.global.u64 	%rd11, %rd3;
	add.s64 	%rd12, %rd11, %rd10;
	mul.wide.u32 	%rd13, %r72, 16;
	add.s64 	%rd14, %rd12, %rd13;
	add.s32 	%r75, %r72, 1;
	mul.wide.u32 	%rd15, %r75, 16;
	add.s64 	%rd16, %rd12, %rd15;
	add.s32 	%r76, %r73, 1;
	mul.lo.s32 	%r77, %r76, %r34;
	cvt.u64.u32	%rd17, %r77;
	add.s64 	%rd18, %rd11, %rd17;
	add.s64 	%rd19, %rd18, %rd13;
	add.s64 	%rd20, %rd18, %rd15;
	ld.global.f32 	%f15, [%rd14];
	cvt.f64.f32	%fd84, %f15;
	mov.f64 	%fd85, 0d3FF0000000000000;
	sub.f64 	%fd86, %fd85, %fd81;
	ld.global.f32 	%f16, [%rd16];
	cvt.f64.f32	%fd87, %f16;
	mul.f64 	%fd88, %fd81, %fd87;
	fma.rn.f64 	%fd89, %fd86, %fd84, %fd88;
	sub.f64 	%fd90, %fd85, %fd83;
	ld.global.f32 	%f17, [%rd19];
	cvt.f64.f32	%fd91, %f17;
	ld.global.f32 	%f18, [%rd20];
	cvt.f64.f32	%fd92, %f18;
	mul.f64 	%fd93, %fd81, %fd92;
	fma.rn.f64 	%fd94, %fd86, %fd91, %fd93;
	mul.f64 	%fd95, %fd83, %fd94;
	fma.rn.f64 	%fd96, %fd90, %fd89, %fd95;
	cvt.rn.f32.f64	%f20, %fd96;
	mov.pred 	%p62, 0;
	mov.f32 	%f21, 0f3F800000;
	bra.uni 	BB4_13;

BB4_4:
	mov.f32 	%f21, %f20;

BB4_13:
	mov.u16 	%rs4, 1;
	@!%p62 bra 	BB4_46;
	bra.uni 	BB4_14;

BB4_14:
	setp.ne.s32	%p24, %r32, 0;
	@%p24 bra 	BB4_16;

	mov.u64 	%rd21, $str5;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r78, 401;
	mov.u64 	%rd25, 0;
	mov.u64 	%rd26, 2;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r78;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB4_16:
	cvt.rn.f64.u32	%fd97, %r29;
	sub.f64 	%fd98, %fd48, %fd46;
	div.rn.f64 	%fd13, %fd98, %fd97;
	cvt.rn.f64.u32	%fd99, %r30;
	sub.f64 	%fd100, %fd49, %fd47;
	div.rn.f64 	%fd14, %fd100, %fd99;
	setp.lt.u32	%p25, %r32, 65;
	@%p25 bra 	BB4_18;

	mov.u64 	%rd27, $str7;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, $str1;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r79, 119;
	mov.u64 	%rd31, 0;
	mov.u64 	%rd32, 2;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r79;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB4_18:
	setp.eq.s32	%p26, %r32, 0;
	mov.u32 	%r159, 0;
	mov.u32 	%r158, %r159;
	@%p26 bra 	BB4_45;

	cvt.rn.f64.u32	%fd15, %r4;
	cvt.rn.f64.u32	%fd16, %r5;
	ld.const.f64 	%fd17, [coefficients+8];
	ld.const.f64 	%fd18, [coefficients];
	ld.const.f64 	%fd19, [coefficients+16];
	add.f64 	%fd20, %fd19, %fd19;
	ld.const.f64 	%fd21, [coefficients+24];
	mul.f64 	%fd22, %fd21, 0d4008000000000000;
	ld.const.f64 	%fd23, [roots];
	ld.const.f64 	%fd24, [roots+8];
	ld.const.f64 	%fd25, [roots+16];
	ld.const.f64 	%fd26, [roots+24];
	ld.const.f64 	%fd27, [roots+32];
	mov.u32 	%r83, 0;
	ld.const.f64 	%fd28, [roots+40];
	mov.u32 	%r149, %r83;
	mov.u32 	%r159, %r83;
	mov.u32 	%r158, %r32;

BB4_20:
	mov.u32 	%r10, %r158;
	mov.u32 	%r8, %r149;
	ld.param.f64 	%fd181, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd180, [fractalRenderAdvancedDouble_param_3];
	cvt.rn.f64.u32	%fd101, %r10;
	cvt.rn.f64.u32	%fd102, %r8;
	div.rn.f64 	%fd103, %fd102, %fd101;
	add.f64 	%fd104, %fd15, %fd103;
	add.f64 	%fd105, %fd16, %fd103;
	neg.f64 	%fd106, %fd105;
	fma.rn.f64 	%fd185, %fd13, %fd104, %fd180;
	fma.rn.f64 	%fd184, %fd14, %fd106, %fd181;
	setp.eq.s32	%p27, %r31, 0;
	mov.u32 	%r152, %r83;
	mov.u32 	%r153, %r83;
	@%p27 bra 	BB4_28;

BB4_21:
	mul.f64 	%fd107, %fd184, %fd184;
	mul.f64 	%fd108, %fd185, %fd185;
	sub.f64 	%fd109, %fd108, %fd107;
	mul.f64 	%fd110, %fd185, %fd184;
	fma.rn.f64 	%fd111, %fd185, %fd184, %fd110;
	mul.f64 	%fd112, %fd185, %fd109;
	mul.f64 	%fd113, %fd184, %fd111;
	sub.f64 	%fd114, %fd112, %fd113;
	mul.f64 	%fd115, %fd185, %fd111;
	fma.rn.f64 	%fd116, %fd184, %fd109, %fd115;
	fma.rn.f64 	%fd117, %fd185, %fd17, %fd18;
	mul.f64 	%fd118, %fd111, %fd19;
	fma.rn.f64 	%fd119, %fd109, %fd19, %fd117;
	fma.rn.f64 	%fd120, %fd184, %fd17, %fd118;
	fma.rn.f64 	%fd121, %fd114, %fd21, %fd119;
	fma.rn.f64 	%fd122, %fd116, %fd21, %fd120;
	fma.rn.f64 	%fd123, %fd185, %fd20, %fd17;
	mul.f64 	%fd124, %fd111, %fd22;
	fma.rn.f64 	%fd125, %fd109, %fd22, %fd123;
	fma.rn.f64 	%fd126, %fd184, %fd20, %fd124;
	abs.f64 	%fd127, %fd125;
	abs.f64 	%fd128, %fd126;
	add.f64 	%fd129, %fd127, %fd128;
	rcp.rn.f64 	%fd130, %fd129;
	mul.f64 	%fd131, %fd121, %fd130;
	mul.f64 	%fd132, %fd122, %fd130;
	mul.f64 	%fd133, %fd125, %fd130;
	mul.f64 	%fd134, %fd126, %fd130;
	mul.f64 	%fd135, %fd134, %fd134;
	fma.rn.f64 	%fd136, %fd133, %fd133, %fd135;
	rcp.rn.f64 	%fd137, %fd136;
	mul.f64 	%fd138, %fd132, %fd134;
	fma.rn.f64 	%fd139, %fd131, %fd133, %fd138;
	mul.f64 	%fd140, %fd137, %fd139;
	mul.f64 	%fd141, %fd132, %fd133;
	mul.f64 	%fd142, %fd131, %fd134;
	sub.f64 	%fd143, %fd141, %fd142;
	mul.f64 	%fd144, %fd137, %fd143;
	sub.f64 	%fd185, %fd185, %fd140;
	sub.f64 	%fd184, %fd184, %fd144;
	sub.f64 	%fd145, %fd185, %fd23;
	abs.f64 	%fd146, %fd145;
	setp.geu.f64	%p28, %fd146, 0d3F1A36E2EB1C432D;
	@%p28 bra 	BB4_23;

	add.s32 	%r153, %r152, 1;
	sub.f64 	%fd147, %fd184, %fd24;
	abs.f64 	%fd148, %fd147;
	setp.lt.f64	%p29, %fd148, 0d3F1A36E2EB1C432D;
	@%p29 bra 	BB4_28;

BB4_23:
	sub.f64 	%fd149, %fd185, %fd25;
	abs.f64 	%fd150, %fd149;
	setp.geu.f64	%p30, %fd150, 0d3F1A36E2EB1C432D;
	@%p30 bra 	BB4_25;

	add.s32 	%r153, %r152, 1;
	sub.f64 	%fd151, %fd184, %fd26;
	abs.f64 	%fd152, %fd151;
	setp.lt.f64	%p31, %fd152, 0d3F1A36E2EB1C432D;
	@%p31 bra 	BB4_28;

BB4_25:
	sub.f64 	%fd153, %fd185, %fd27;
	abs.f64 	%fd154, %fd153;
	add.s32 	%r152, %r152, 1;
	setp.lt.f64	%p32, %fd154, 0d3F1A36E2EB1C432D;
	@%p32 bra 	BB4_27;
	bra.uni 	BB4_26;

BB4_27:
	setp.lt.u32	%p34, %r152, %r31;
	sub.f64 	%fd155, %fd184, %fd28;
	abs.f64 	%fd156, %fd155;
	setp.geu.f64	%p35, %fd156, 0d3F1A36E2EB1C432D;
	and.pred  	%p36, %p35, %p34;
	mov.u32 	%r153, %r152;
	@%p36 bra 	BB4_21;
	bra.uni 	BB4_28;

BB4_26:
	setp.lt.u32	%p33, %r152, %r31;
	mov.u32 	%r153, %r152;
	@%p33 bra 	BB4_21;

BB4_28:
	cvt.rn.f32.u32	%f19, %r153;
	cvt.rzi.u32.f32	%r14, %f19;
	add.s32 	%r159, %r14, %r159;
	setp.gt.u32	%p37, %r8, 9;
	@%p37 bra 	BB4_30;

	add.u64 	%rd33, %SP, 0;
	cvta.to.local.u64 	%rd34, %rd33;
	mul.wide.u32 	%rd35, %r8, 4;
	add.s64 	%rd36, %rd34, %rd35;
	st.local.u32 	[%rd36], %r14;

BB4_30:
	ld.param.u32 	%r123, [fractalRenderAdvancedDouble_param_6];
	setp.lt.u32	%p38, %r8, 10;
	and.b32  	%r86, %r123, 1;
	setp.eq.b32	%p39, %r86, 1;
	setp.ne.s32	%p40, %r8, 0;
	and.pred  	%p41, %p38, %p40;
	and.pred  	%p42, %p41, %p39;
	shr.u32 	%r87, %r10, 1;
	setp.eq.s32	%p43, %r8, %r87;
	or.pred  	%p44, %p42, %p43;
	add.s32 	%r149, %r8, 1;
	mov.u32 	%r158, %r10;
	@!%p44 bra 	BB4_44;
	bra.uni 	BB4_31;

BB4_31:
	div.u32 	%r88, %r159, %r149;
	cvt.rn.f64.u32	%fd35, %r88;
	setp.eq.s32	%p45, %r8, 0;
	mov.f64 	%fd190, 0d0000000000000000;
	@%p45 bra 	BB4_40;

	and.b32  	%r90, %r8, 3;
	setp.eq.s32	%p46, %r90, 0;
	mov.f64 	%fd190, 0d0000000000000000;
	mov.u32 	%r157, 0;
	@%p46 bra 	BB4_38;

	setp.eq.s32	%p47, %r90, 1;
	mov.f64 	%fd187, 0d0000000000000000;
	mov.u32 	%r155, 0;
	@%p47 bra 	BB4_37;

	setp.eq.s32	%p48, %r90, 2;
	mov.f64 	%fd186, 0d0000000000000000;
	mov.u32 	%r154, 0;
	@%p48 bra 	BB4_36;

	add.u64 	%rd37, %SP, 0;
	cvta.to.local.u64 	%rd38, %rd37;
	ld.local.u32 	%r96, [%rd38];
	cvt.rn.f64.u32	%fd161, %r96;
	sub.f64 	%fd162, %fd161, %fd35;
	fma.rn.f64 	%fd186, %fd162, %fd162, 0d0000000000000000;
	mov.u32 	%r154, 1;

BB4_36:
	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd39;
	mul.wide.u32 	%rd41, %r154, 4;
	add.s64 	%rd42, %rd40, %rd41;
	ld.local.u32 	%r97, [%rd42];
	cvt.rn.f64.u32	%fd163, %r97;
	sub.f64 	%fd164, %fd163, %fd35;
	fma.rn.f64 	%fd187, %fd164, %fd164, %fd186;
	add.s32 	%r155, %r154, 1;

BB4_37:
	add.u64 	%rd43, %SP, 0;
	cvta.to.local.u64 	%rd44, %rd43;
	mul.wide.u32 	%rd45, %r155, 4;
	add.s64 	%rd46, %rd44, %rd45;
	ld.local.u32 	%r98, [%rd46];
	cvt.rn.f64.u32	%fd165, %r98;
	sub.f64 	%fd166, %fd165, %fd35;
	fma.rn.f64 	%fd190, %fd166, %fd166, %fd187;
	add.s32 	%r157, %r155, 1;

BB4_38:
	add.u64 	%rd47, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd47;
	setp.lt.u32	%p49, %r8, 4;
	@%p49 bra 	BB4_40;

BB4_39:
	mul.wide.u32 	%rd48, %r157, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.u32 	%r99, [%rd49];
	cvt.rn.f64.u32	%fd167, %r99;
	sub.f64 	%fd168, %fd167, %fd35;
	fma.rn.f64 	%fd169, %fd168, %fd168, %fd190;
	add.s32 	%r100, %r157, 1;
	mul.wide.u32 	%rd50, %r100, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.u32 	%r101, [%rd51];
	cvt.rn.f64.u32	%fd170, %r101;
	sub.f64 	%fd171, %fd170, %fd35;
	fma.rn.f64 	%fd172, %fd171, %fd171, %fd169;
	add.s32 	%r102, %r157, 2;
	mul.wide.u32 	%rd52, %r102, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.u32 	%r103, [%rd53];
	cvt.rn.f64.u32	%fd173, %r103;
	sub.f64 	%fd174, %fd173, %fd35;
	fma.rn.f64 	%fd175, %fd174, %fd174, %fd172;
	add.s32 	%r104, %r157, 3;
	mul.wide.u32 	%rd54, %r104, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.u32 	%r105, [%rd55];
	cvt.rn.f64.u32	%fd176, %r105;
	sub.f64 	%fd177, %fd176, %fd35;
	fma.rn.f64 	%fd190, %fd177, %fd177, %fd175;
	add.s32 	%r157, %r157, 4;
	setp.lt.u32	%p50, %r157, %r8;
	@%p50 bra 	BB4_39;

BB4_40:
	add.s32 	%r106, %r8, -1;
	cvt.rn.f64.u32	%fd178, %r106;
	div.rn.f64 	%fd179, %fd190, %fd178;
	div.rn.f64 	%fd45, %fd179, %fd35;
	setp.ne.s32	%p51, %r8, 1;
	@%p51 bra 	BB4_42;

	// inline asm
	activemask.b32 %r107;
	// inline asm
	add.u64 	%rd56, %SP, 0;
	cvta.to.local.u64 	%rd57, %rd56;
	ld.local.v2.u32 	{%r109, %r110}, [%rd57];
	setp.eq.s32	%p52, %r109, %r110;
	vote.sync.all.pred 	%p53, %p52, %r107;
	mov.u32 	%r158, 2;
	@%p53 bra 	BB4_44;

BB4_42:
	// inline asm
	activemask.b32 %r114;
	// inline asm
	setp.lt.f64	%p54, %fd45, 0d3F847AE140000000;
	vote.sync.all.pred 	%p55, %p54, %r114;
	mov.u32 	%r158, %r149;
	@%p55 bra 	BB4_44;

	// inline asm
	activemask.b32 %r116;
	// inline asm
	setp.le.f64	%p56, %fd45, 0d3FF0000000000000;
	vote.sync.all.pred 	%p57, %p56, %r116;
	setp.ge.u32	%p58, %r8, %r87;
	and.pred  	%p59, %p57, %p58;
	selp.b32	%r158, %r149, %r10, %p59;

BB4_44:
	setp.lt.u32	%p60, %r149, %r158;
	@%p60 bra 	BB4_20;

BB4_45:
	div.u32 	%r119, %r159, %r158;
	cvt.rn.f32.u32	%f20, %r119;
	cvt.rn.f32.u32	%f21, %r158;
	mov.u16 	%rs4, 0;

BB4_46:
	ld.param.u64 	%rd69, [fractalRenderAdvancedDouble_param_0];
	mov.u32 	%r144, %tid.y;
	mov.u32 	%r143, %ntid.x;
	mov.u32 	%r142, %tid.x;
	mad.lo.s32 	%r141, %r143, %r144, %r142;
	shl.b32 	%r140, %r143, 2;
	ld.param.u32 	%r139, [fractalRenderAdvancedDouble_param_1];
	div.u32 	%r138, %r141, %r140;
	bfe.u32 	%r137, %r141, 2, 2;
	shl.b32 	%r136, %r138, 2;
	add.s32 	%r135, %r136, %r137;
	mov.u32 	%r134, %ntid.y;
	mov.u32 	%r133, %ctaid.y;
	mad.lo.s32 	%r132, %r133, %r134, %r135;
	and.b32  	%r131, %r141, 15;
	rem.u32 	%r130, %r141, %r140;
	sub.s32 	%r129, %r130, %r131;
	and.b32  	%r128, %r141, 3;
	shr.u32 	%r127, %r129, 2;
	add.s32 	%r126, %r127, %r128;
	mov.u32 	%r125, %ctaid.x;
	mad.lo.s32 	%r124, %r125, %r143, %r126;
	mul.lo.s32 	%r120, %r132, %r139;
	cvt.u64.u32	%rd58, %r120;
	cvta.to.global.u64 	%rd59, %rd69;
	add.s64 	%rd60, %rd59, %rd58;
	mul.wide.u32 	%rd61, %r124, 16;
	add.s64 	%rd62, %rd60, %rd61;
	st.global.f32 	[%rd62], %f20;
	st.global.f32 	[%rd62+4], %f21;
	mov.u32 	%r121, 0;
	st.global.u32 	[%rd62+12], %r121;
	st.global.u8 	[%rd62+8], %rs4;
	setp.gt.f32	%p61, %f21, 0f00000000;
	@%p61 bra 	BB4_48;

	mov.u64 	%rd63, $str6;
	cvta.global.u64 	%rd64, %rd63;
	mov.u64 	%rd65, $str1;
	cvta.global.u64 	%rd66, %rd65;
	mov.u32 	%r122, 408;
	mov.u64 	%rd67, 0;
	mov.u64 	%rd68, 2;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd64;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 param2;
	st.param.b32	[param2+0], %r122;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd67;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd68;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 13

BB4_48:
	ret;
}

	// .globl	compose
.visible .entry compose(
	.param .u64 compose_param_0,
	.param .u32 compose_param_1,
	.param .u64 compose_param_2,
	.param .u32 compose_param_3,
	.param .u64 compose_param_4,
	.param .u32 compose_param_5,
	.param .u32 compose_param_6,
	.param .u64 compose_param_7,
	.param .u32 compose_param_8,
	.param .u32 compose_param_9
)
{
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<15>;
	.reg .b32 	%r<39>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [compose_param_0];
	ld.param.u32 	%r7, [compose_param_1];
	ld.param.u64 	%rd3, [compose_param_4];
	ld.param.u32 	%r10, [compose_param_5];
	ld.param.u32 	%r11, [compose_param_6];
	ld.param.u64 	%rd4, [compose_param_7];
	ld.param.u32 	%r8, [compose_param_8];
	ld.param.u32 	%r9, [compose_param_9];
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %tid.x;
	mad.lo.s32 	%r1, %r13, %r12, %r14;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %ntid.y;
	mov.u32 	%r17, %tid.y;
	mad.lo.s32 	%r2, %r15, %r16, %r17;
	setp.ge.u32	%p1, %r2, %r11;
	setp.ge.u32	%p2, %r1, %r10;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_9;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.lo.s32 	%r18, %r2, %r7;
	cvt.u64.u32	%rd6, %r18;
	add.s64 	%rd7, %rd5, %rd6;
	mul.wide.u32 	%rd8, %r1, 16;
	add.s64 	%rd1, %rd7, %rd8;
	ld.const.u8 	%rs1, [VISUALIZE_SAMPLE_COUNT];
	setp.eq.s16	%p4, %rs1, 0;
	@%p4 bra 	BB5_3;

	ld.global.f32 	%f5, [%rd1+4];
	cvt.rzi.u32.f32	%r19, %f5;
	min.u32 	%r20, %r19, %r9;
	cvt.rn.f32.u32	%f6, %r20;
	cvt.rn.f32.u32	%f7, %r9;
	div.rn.f32 	%f8, %f6, %f7;
	mul.f32 	%f9, %f8, 0f437F0000;
	cvt.rzi.s32.f32	%r21, %f9;
	and.b32  	%r22, %r21, 255;
	prmt.b32 	%r23, %r22, %r22, 30212;
	prmt.b32 	%r24, %r22, %r23, 28756;
	or.b32  	%r25, %r24, -16777216;
	ld.global.u8 	%rs2, [%rd1+8];
	setp.eq.s16	%p5, %rs2, 0;
	selp.b32	%r38, %r25, -16777216, %p5;
	bra.uni 	BB5_8;

BB5_3:
	ld.global.f32 	%f1, [%rd1];
	abs.f32 	%f10, %f1;
	mov.b32 	 %r26, %f1;
	and.b32  	%r27, %r26, -2147483648;
	or.b32  	%r28, %r27, 1056964608;
	mov.b32 	 %f11, %r28;
	add.f32 	%f12, %f1, %f11;
	cvt.rzi.f32.f32	%f13, %f12;
	setp.gt.f32	%p6, %f10, 0f4B000000;
	selp.f32	%f14, %f1, %f13, %p6;
	setp.geu.f32	%p7, %f10, 0f3F000000;
	@%p7 bra 	BB5_5;

	cvt.rzi.f32.f32	%f14, %f1;

BB5_5:
	ld.const.u32 	%r29, [colorMagnifier];
	cvt.rzi.u32.f32	%r30, %f14;
	mul.lo.s32 	%r31, %r29, %r30;
	rem.u32 	%r32, %r31, %r8;
	sub.s32 	%r33, %r8, %r32;
	add.s32 	%r4, %r33, -1;
	setp.lt.u32	%p8, %r4, %r8;
	@%p8 bra 	BB5_7;

	mov.u64 	%rd9, $str8;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str9;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r34, 74;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14

BB5_7:
	shl.b32 	%r35, %r4, 2;
	mov.u32 	%r36, 0;
	suld.b.2d.b32.trap {%r38}, [%rd4, {%r35, %r36}];

BB5_8:
	shl.b32 	%r37, %r1, 2;
	sust.b.2d.b32.trap 	[%rd3, {%r37, %r2}], {%r38};

BB5_9:
	ret;
}

	// .globl	fractalRenderUnderSampled
.visible .entry fractalRenderUnderSampled(
	.param .u64 fractalRenderUnderSampled_param_0,
	.param .u32 fractalRenderUnderSampled_param_1,
	.param .u32 fractalRenderUnderSampled_param_2,
	.param .u32 fractalRenderUnderSampled_param_3,
	.param .f32 fractalRenderUnderSampled_param_4,
	.param .f32 fractalRenderUnderSampled_param_5,
	.param .f32 fractalRenderUnderSampled_param_6,
	.param .f32 fractalRenderUnderSampled_param_7,
	.param .u32 fractalRenderUnderSampled_param_8,
	.param .u32 fractalRenderUnderSampled_param_9
)
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<79>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [fractalRenderUnderSampled_param_0];
	ld.param.u32 	%r11, [fractalRenderUnderSampled_param_1];
	ld.param.u32 	%r12, [fractalRenderUnderSampled_param_2];
	ld.param.u32 	%r13, [fractalRenderUnderSampled_param_3];
	ld.param.f32 	%f17, [fractalRenderUnderSampled_param_4];
	ld.param.f32 	%f18, [fractalRenderUnderSampled_param_5];
	ld.param.f32 	%f19, [fractalRenderUnderSampled_param_6];
	ld.param.f32 	%f20, [fractalRenderUnderSampled_param_7];
	ld.param.u32 	%r14, [fractalRenderUnderSampled_param_8];
	ld.param.u32 	%r15, [fractalRenderUnderSampled_param_9];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r19, %r17, %r16, %r18;
	mul.lo.s32 	%r1, %r19, %r15;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %ntid.y;
	mov.u32 	%r22, %tid.y;
	mad.lo.s32 	%r23, %r20, %r21, %r22;
	mul.lo.s32 	%r2, %r23, %r15;
	sub.s32 	%r24, %r13, %r15;
	setp.ge.u32	%p1, %r2, %r24;
	sub.s32 	%r25, %r12, %r15;
	setp.ge.u32	%p2, %r1, %r25;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB6_20;

	sub.f32 	%f22, %f19, %f17;
	cvt.rn.f32.u32	%f23, %r12;
	div.rn.f32 	%f24, %f22, %f23;
	cvt.rn.f32.u32	%f25, %r1;
	fma.rn.f32 	%f77, %f25, %f24, %f17;
	setp.eq.s32	%p4, %r14, 0;
	mov.f32 	%f78, 0f00000000;
	@%p4 bra 	BB6_11;

	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f2, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f3, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f4, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f5, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f6, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f7, %fd12;
	cvt.rn.f32.u32	%f26, %r2;
	sub.f32 	%f27, %f20, %f18;
	cvt.rn.f32.u32	%f28, %r13;
	div.rn.f32 	%f29, %f27, %f28;
	mul.f32 	%f30, %f26, %f29;
	sub.f32 	%f76, %f20, %f30;
	mov.u32 	%r48, 0;

BB6_3:
	mul.f32 	%f31, %f76, %f76;
	mul.f32 	%f32, %f77, %f77;
	sub.f32 	%f33, %f32, %f31;
	mul.f32 	%f34, %f77, %f76;
	fma.rn.f32 	%f35, %f77, %f76, %f34;
	mul.f32 	%f36, %f77, %f33;
	mul.f32 	%f37, %f76, %f35;
	sub.f32 	%f38, %f36, %f37;
	mul.f32 	%f39, %f77, %f35;
	fma.rn.f32 	%f40, %f76, %f33, %f39;
	cvt.f64.f32	%fd13, %f77;
	cvt.f64.f32	%fd14, %f76;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f33;
	cvt.f64.f32	%fd17, %f35;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f38;
	cvt.f64.f32	%fd22, %f40;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f41, %fd23;
	cvt.rn.f32.f64	%f42, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f43, %fd27;
	cvt.rn.f32.f64	%f44, %fd28;
	abs.f32 	%f45, %f43;
	abs.f32 	%f46, %f44;
	add.f32 	%f47, %f45, %f46;
	rcp.rn.f32 	%f48, %f47;
	mul.f32 	%f49, %f41, %f48;
	mul.f32 	%f50, %f42, %f48;
	mul.f32 	%f51, %f48, %f43;
	mul.f32 	%f52, %f48, %f44;
	mul.f32 	%f53, %f52, %f52;
	fma.rn.f32 	%f54, %f51, %f51, %f53;
	rcp.rn.f32 	%f55, %f54;
	mul.f32 	%f56, %f50, %f52;
	fma.rn.f32 	%f57, %f49, %f51, %f56;
	mul.f32 	%f58, %f55, %f57;
	mul.f32 	%f59, %f50, %f51;
	mul.f32 	%f60, %f49, %f52;
	sub.f32 	%f61, %f59, %f60;
	mul.f32 	%f62, %f55, %f61;
	sub.f32 	%f77, %f77, %f58;
	sub.f32 	%f76, %f76, %f62;
	add.s32 	%r48, %r48, 1;
	sub.f32 	%f63, %f77, %f2;
	abs.f32 	%f64, %f63;
	setp.geu.f32	%p5, %f64, 0f38D1B717;
	@%p5 bra 	BB6_5;

	sub.f32 	%f65, %f76, %f3;
	abs.f32 	%f66, %f65;
	setp.lt.f32	%p6, %f66, 0f38D1B717;
	@%p6 bra 	BB6_10;

BB6_5:
	sub.f32 	%f67, %f77, %f4;
	abs.f32 	%f68, %f67;
	setp.geu.f32	%p7, %f68, 0f38D1B717;
	@%p7 bra 	BB6_7;

	sub.f32 	%f69, %f76, %f5;
	abs.f32 	%f70, %f69;
	setp.lt.f32	%p8, %f70, 0f38D1B717;
	@%p8 bra 	BB6_10;

BB6_7:
	sub.f32 	%f71, %f77, %f6;
	abs.f32 	%f72, %f71;
	setp.lt.f32	%p9, %f72, 0f38D1B717;
	@%p9 bra 	BB6_9;
	bra.uni 	BB6_8;

BB6_9:
	setp.lt.u32	%p11, %r48, %r14;
	sub.f32 	%f73, %f76, %f7;
	abs.f32 	%f74, %f73;
	setp.geu.f32	%p12, %f74, 0f38D1B717;
	and.pred  	%p13, %p12, %p11;
	@%p13 bra 	BB6_3;
	bra.uni 	BB6_10;

BB6_8:
	setp.lt.u32	%p10, %r48, %r14;
	@%p10 bra 	BB6_3;

BB6_10:
	cvt.rn.f32.u32	%f78, %r48;

BB6_11:
	setp.eq.s32	%p14, %r15, 0;
	@%p14 bra 	BB6_20;

	cvt.rzi.u32.f32	%r31, %f78;
	mul.lo.s32 	%r37, %r2, %r11;
	cvt.u64.u32	%rd3, %r37;
	cvta.to.global.u64 	%rd4, %rd2;
	add.s64 	%rd5, %rd4, %rd3;
	cvt.rn.f32.u32	%f75, %r15;
	rcp.rn.f32 	%f15, %f75;
	cvt.rn.f32.u32	%f16, %r31;
	mul.wide.u32 	%rd6, %r1, 16;
	add.s64 	%rd1, %rd5, %rd6;
	and.b32  	%r30, %r15, 3;
	mov.u32 	%r49, 1;
	mov.u32 	%r52, 0;
	setp.eq.s32	%p15, %r30, 0;
	@%p15 bra 	BB6_18;

	setp.eq.s32	%p16, %r30, 1;
	mov.u32 	%r50, %r52;
	@%p16 bra 	BB6_17;

	setp.eq.s32	%p17, %r30, 2;
	@%p17 bra 	BB6_16;

	st.global.f32 	[%rd1], %f16;
	st.global.f32 	[%rd1+4], %f15;
	mov.u32 	%r44, 0;
	st.global.u32 	[%rd1+12], %r44;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd1+8], %rs1;
	mov.u32 	%r49, 2;

BB6_16:
	st.global.f32 	[%rd1], %f16;
	st.global.f32 	[%rd1+4], %f15;
	mov.u32 	%r45, 0;
	st.global.u32 	[%rd1+12], %r45;
	mov.u16 	%rs2, 0;
	st.global.u8 	[%rd1+8], %rs2;
	mov.u32 	%r50, %r49;

BB6_17:
	st.global.f32 	[%rd1], %f16;
	st.global.f32 	[%rd1+4], %f15;
	st.global.u32 	[%rd1+12], %r52;
	mov.u16 	%rs3, 0;
	st.global.u8 	[%rd1+8], %rs3;
	add.s32 	%r52, %r50, 1;

BB6_18:
	setp.lt.u32	%p18, %r15, 4;
	@%p18 bra 	BB6_20;

BB6_19:
	st.global.f32 	[%rd1], %f16;
	st.global.f32 	[%rd1+4], %f15;
	mov.u32 	%r47, 0;
	st.global.u32 	[%rd1+12], %r47;
	mov.u16 	%rs4, 0;
	st.global.u8 	[%rd1+8], %rs4;
	add.s32 	%r52, %r52, 4;
	setp.lt.u32	%p19, %r52, %r15;
	@%p19 bra 	BB6_19;

BB6_20:
	ret;
}

	// .globl	debug
.visible .entry debug(

)
{



	ret;
}


