//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24330188
// Cuda compilation tools, release 9.2, V9.2.148
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	init
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 8 .b8 roots[48];
.const .align 8 .b8 coefficients[32];
.const .align 4 .u32 colorMagnifier;
.const .align 1 .u8 VISUALIZE_SAMPLE_COUNT;
.global .align 4 .u32 seed;
.global .align 4 .u32 WARP_SIZE_X = 8;
.global .align 4 .u32 WARP_SIZE_Y = 4;
.global .align 4 .u32 USE_ADAPTIVE_SS_FLAG_MASK = 1;
.global .align 4 .u32 USE_FOVEATION_FLAG_MASK = 4;
.global .align 4 .u32 USE_SAMPLE_REUSE_FLAG_MASK = 8;
.global .align 4 .u32 IS_ZOOMING_FLAG_MASK = 16;
.global .align 4 .u32 ZOOMING_IN_FLAG_MASK = 32;
.global .align 4 .u32 visualityAmplifyCoeff = 10;
.global .align 4 .f32 screenDistance = 0f42700000;
.global .align 16 .b8 $str[34] = {98, 0, 108, 0, 111, 0, 99, 0, 107, 0, 68, 0, 105, 0, 109, 0, 46, 0, 120, 0, 32, 0, 61, 0, 61, 0, 32, 0, 51, 0, 50, 0, 0, 0};
.global .align 16 .b8 $str1[138] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 82, 0, 101, 0, 110, 0, 100, 0, 101, 0, 114, 0, 101, 0, 114, 0, 71, 0, 101, 0, 110, 0, 101, 0, 114, 0, 105, 0, 99, 0, 46, 0, 99, 0, 117, 0, 0, 0};
.global .align 16 .b8 $str2[40] = {112, 0, 79, 0, 117, 0, 116, 0, 112, 0, 117, 0, 116, 0, 45, 0, 62, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str5[34] = {118, 0, 105, 0, 115, 0, 117, 0, 97, 0, 108, 0, 65, 0, 110, 0, 103, 0, 108, 0, 101, 0, 32, 0, 62, 0, 61, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str6[68] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 60, 0, 61, 0, 32, 0, 77, 0, 65, 0, 88, 0, 95, 0, 83, 0, 85, 0, 80, 0, 69, 0, 82, 0, 95, 0, 83, 0, 65, 0, 77, 0, 80, 0, 76, 0, 73, 0, 78, 0, 71, 0, 0, 0};
.global .align 16 .b8 $str7[54] = {112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 73, 0, 100, 0, 120, 0, 32, 0, 60, 0, 32, 0, 112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 76, 0, 101, 0, 110, 0, 103, 0, 116, 0, 104, 0, 0, 0};
.global .align 16 .b8 $str8[146] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 115, 0, 47, 0, 110, 0, 101, 0, 119, 0, 116, 0, 111, 0, 110, 0, 95, 0, 105, 0, 116, 0, 101, 0, 114, 0, 97, 0, 116, 0, 105, 0, 111, 0, 110, 0, 115, 0, 46, 0, 99, 0, 117, 0, 0, 0};

.visible .entry init(

)
{



	ret;
}

	// .globl	fractalRenderMainFloat
.visible .entry fractalRenderMainFloat(
	.param .u64 fractalRenderMainFloat_param_0,
	.param .u32 fractalRenderMainFloat_param_1,
	.param .align 4 .b8 fractalRenderMainFloat_param_2[8],
	.param .align 4 .b8 fractalRenderMainFloat_param_3[16],
	.param .u32 fractalRenderMainFloat_param_4,
	.param .f32 fractalRenderMainFloat_param_5,
	.param .u32 fractalRenderMainFloat_param_6
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<45>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<140>;
	.reg .b32 	%r<109>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<51>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainFloat_param_0];
	ld.param.u32 	%r27, [fractalRenderMainFloat_param_1];
	ld.param.u32 	%r29, [fractalRenderMainFloat_param_2+4];
	ld.param.u32 	%r28, [fractalRenderMainFloat_param_2];
	ld.param.f32 	%f43, [fractalRenderMainFloat_param_3+12];
	ld.param.f32 	%f42, [fractalRenderMainFloat_param_3+8];
	ld.param.f32 	%f41, [fractalRenderMainFloat_param_3+4];
	ld.param.f32 	%f40, [fractalRenderMainFloat_param_3];
	ld.param.u32 	%r30, [fractalRenderMainFloat_param_4];
	ld.param.f32 	%f44, [fractalRenderMainFloat_param_5];
	ld.param.u32 	%r31, [fractalRenderMainFloat_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r32, 59;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB1_2:
	mov.u32 	%r33, %tid.x;
	mov.u32 	%r34, %tid.y;
	mad.lo.s32 	%r35, %r1, %r34, %r33;
	shl.b32 	%r36, %r1, 2;
	and.b32  	%r37, %r35, 15;
	rem.u32 	%r38, %r35, %r36;
	sub.s32 	%r39, %r38, %r37;
	shr.u32 	%r40, %r39, 2;
	and.b32  	%r41, %r35, 3;
	add.s32 	%r42, %r40, %r41;
	div.u32 	%r43, %r35, %r36;
	shl.b32 	%r44, %r43, 2;
	bfe.u32 	%r45, %r35, 2, 2;
	add.s32 	%r46, %r44, %r45;
	mov.u32 	%r47, %ctaid.x;
	mad.lo.s32 	%r4, %r47, %r1, %r42;
	mov.u32 	%r48, %ctaid.y;
	mov.u32 	%r49, %ntid.y;
	mad.lo.s32 	%r5, %r48, %r49, %r46;
	setp.lt.u32	%p2, %r4, %r28;
	setp.lt.u32	%p3, %r5, %r29;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB1_39;
	bra.uni 	BB1_3;

BB1_3:
	setp.lt.f32	%p5, %f44, 0f3F800000;
	mov.f32 	%f137, 0f00000000;
	mov.f32 	%f139, %f137;
	@%p5 bra 	BB1_37;

	abs.f32 	%f47, %f44;
	mov.b32 	 %r50, %f44;
	and.b32  	%r51, %r50, -2147483648;
	or.b32  	%r52, %r51, 1056964608;
	mov.b32 	 %f48, %r52;
	add.f32 	%f49, %f48, %f44;
	cvt.rzi.f32.f32	%f50, %f49;
	setp.gt.f32	%p6, %f47, 0f4B000000;
	selp.f32	%f128, %f44, %f50, %p6;
	setp.geu.f32	%p7, %f47, 0f3F000000;
	@%p7 bra 	BB1_6;

	cvt.rzi.f32.f32	%f128, %f44;

BB1_6:
	cvt.rzi.u32.f32	%r106, %f128;
	setp.lt.u32	%p8, %r106, 65;
	@%p8 bra 	BB1_8;

	mov.u64 	%rd9, $str6;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r53, 113;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r53;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_8:
	setp.eq.s32	%p9, %r106, 0;
	cvt.rn.f32.u32	%f137, %r106;
	mov.u32 	%r107, 0;
	@%p9 bra 	BB1_9;

	cvt.rn.f32.u32	%f7, %r4;
	cvt.rn.f32.u32	%f8, %r5;
	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f9, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f10, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f11, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f12, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f13, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f14, %fd12;
	cvt.rn.f32.u32	%f51, %r28;
	sub.f32 	%f52, %f42, %f40;
	div.rn.f32 	%f15, %f52, %f51;
	cvt.rn.f32.u32	%f53, %r29;
	sub.f32 	%f54, %f43, %f41;
	div.rn.f32 	%f16, %f54, %f53;
	mov.u32 	%r57, 0;
	and.b32  	%r60, %r31, 1;
	mov.u32 	%r97, %r57;
	mov.u32 	%r107, %r57;

BB1_11:
	mov.u32 	%r9, %r106;
	mov.u32 	%r7, %r97;
	cvt.rn.f32.u32	%f55, %r7;
	div.rn.f32 	%f56, %f55, %f137;
	add.f32 	%f57, %f7, %f56;
	add.f32 	%f58, %f8, %f56;
	neg.f32 	%f59, %f58;
	fma.rn.f32 	%f131, %f15, %f57, %f40;
	fma.rn.f32 	%f130, %f16, %f59, %f43;
	setp.eq.s32	%p10, %r30, 0;
	mov.u32 	%r101, %r57;
	@%p10 bra 	BB1_19;

BB1_12:
	mul.f32 	%f60, %f130, %f130;
	mul.f32 	%f61, %f131, %f131;
	sub.f32 	%f62, %f61, %f60;
	mul.f32 	%f63, %f131, %f130;
	fma.rn.f32 	%f64, %f131, %f130, %f63;
	mul.f32 	%f65, %f131, %f62;
	mul.f32 	%f66, %f130, %f64;
	sub.f32 	%f67, %f65, %f66;
	mul.f32 	%f68, %f131, %f64;
	fma.rn.f32 	%f69, %f130, %f62, %f68;
	cvt.f64.f32	%fd13, %f131;
	cvt.f64.f32	%fd14, %f130;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f62;
	cvt.f64.f32	%fd17, %f64;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f67;
	cvt.f64.f32	%fd22, %f69;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f70, %fd23;
	cvt.rn.f32.f64	%f71, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f72, %fd27;
	cvt.rn.f32.f64	%f73, %fd28;
	abs.f32 	%f74, %f72;
	abs.f32 	%f75, %f73;
	add.f32 	%f76, %f74, %f75;
	rcp.rn.f32 	%f77, %f76;
	mul.f32 	%f78, %f70, %f77;
	mul.f32 	%f79, %f71, %f77;
	mul.f32 	%f80, %f77, %f72;
	mul.f32 	%f81, %f77, %f73;
	mul.f32 	%f82, %f81, %f81;
	fma.rn.f32 	%f83, %f80, %f80, %f82;
	rcp.rn.f32 	%f84, %f83;
	mul.f32 	%f85, %f79, %f81;
	fma.rn.f32 	%f86, %f78, %f80, %f85;
	mul.f32 	%f87, %f84, %f86;
	mul.f32 	%f88, %f79, %f80;
	mul.f32 	%f89, %f78, %f81;
	sub.f32 	%f90, %f88, %f89;
	mul.f32 	%f91, %f84, %f90;
	sub.f32 	%f131, %f131, %f87;
	sub.f32 	%f130, %f130, %f91;
	add.s32 	%r101, %r101, 1;
	sub.f32 	%f92, %f131, %f9;
	abs.f32 	%f93, %f92;
	setp.geu.f32	%p11, %f93, 0f38D1B717;
	@%p11 bra 	BB1_14;

	sub.f32 	%f94, %f130, %f10;
	abs.f32 	%f95, %f94;
	setp.lt.f32	%p12, %f95, 0f38D1B717;
	@%p12 bra 	BB1_19;

BB1_14:
	sub.f32 	%f96, %f131, %f11;
	abs.f32 	%f97, %f96;
	setp.geu.f32	%p13, %f97, 0f38D1B717;
	@%p13 bra 	BB1_16;

	sub.f32 	%f98, %f130, %f12;
	abs.f32 	%f99, %f98;
	setp.lt.f32	%p14, %f99, 0f38D1B717;
	@%p14 bra 	BB1_19;

BB1_16:
	sub.f32 	%f100, %f131, %f13;
	abs.f32 	%f101, %f100;
	setp.lt.f32	%p15, %f101, 0f38D1B717;
	@%p15 bra 	BB1_18;
	bra.uni 	BB1_17;

BB1_18:
	setp.lt.u32	%p17, %r101, %r30;
	sub.f32 	%f102, %f130, %f14;
	abs.f32 	%f103, %f102;
	setp.geu.f32	%p18, %f103, 0f38D1B717;
	and.pred  	%p19, %p18, %p17;
	@%p19 bra 	BB1_12;
	bra.uni 	BB1_19;

BB1_17:
	setp.lt.u32	%p16, %r101, %r30;
	@%p16 bra 	BB1_12;

BB1_19:
	cvt.rn.f32.u32	%f104, %r101;
	cvt.rzi.u32.f32	%r13, %f104;
	add.s32 	%r107, %r13, %r107;
	setp.gt.u32	%p20, %r7, 9;
	@%p20 bra 	BB1_21;

	add.u64 	%rd15, %SP, 0;
	cvta.to.local.u64 	%rd16, %rd15;
	mul.wide.u32 	%rd17, %r7, 4;
	add.s64 	%rd18, %rd16, %rd17;
	st.local.u32 	[%rd18], %r13;

BB1_21:
	setp.lt.u32	%p21, %r7, 10;
	setp.eq.b32	%p22, %r60, 1;
	setp.ne.s32	%p23, %r7, 0;
	and.pred  	%p24, %p21, %p23;
	and.pred  	%p25, %p24, %p22;
	shr.u32 	%r61, %r9, 1;
	setp.eq.s32	%p26, %r7, %r61;
	or.pred  	%p27, %p25, %p26;
	add.s32 	%r97, %r7, 1;
	mov.u32 	%r106, %r9;
	@!%p27 bra 	BB1_35;
	bra.uni 	BB1_22;

BB1_22:
	div.u32 	%r62, %r107, %r97;
	cvt.rn.f32.u32	%f24, %r62;
	setp.eq.s32	%p28, %r7, 0;
	mov.f32 	%f136, 0f00000000;
	@%p28 bra 	BB1_31;

	and.b32  	%r64, %r7, 3;
	setp.eq.s32	%p29, %r64, 0;
	mov.f32 	%f136, 0f00000000;
	mov.u32 	%r105, 0;
	@%p29 bra 	BB1_29;

	setp.eq.s32	%p30, %r64, 1;
	mov.f32 	%f133, 0f00000000;
	mov.u32 	%r103, 0;
	@%p30 bra 	BB1_28;

	setp.eq.s32	%p31, %r64, 2;
	mov.f32 	%f132, 0f00000000;
	mov.u32 	%r102, 0;
	@%p31 bra 	BB1_27;

	add.u64 	%rd19, %SP, 0;
	cvta.to.local.u64 	%rd20, %rd19;
	ld.local.u32 	%r70, [%rd20];
	cvt.rn.f32.u32	%f109, %r70;
	sub.f32 	%f110, %f109, %f24;
	fma.rn.f32 	%f132, %f110, %f110, 0f00000000;
	mov.u32 	%r102, 1;

BB1_27:
	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd22, %rd21;
	mul.wide.u32 	%rd23, %r102, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.local.u32 	%r71, [%rd24];
	cvt.rn.f32.u32	%f111, %r71;
	sub.f32 	%f112, %f111, %f24;
	fma.rn.f32 	%f133, %f112, %f112, %f132;
	add.s32 	%r103, %r102, 1;

BB1_28:
	add.u64 	%rd25, %SP, 0;
	cvta.to.local.u64 	%rd26, %rd25;
	mul.wide.u32 	%rd27, %r103, 4;
	add.s64 	%rd28, %rd26, %rd27;
	ld.local.u32 	%r72, [%rd28];
	cvt.rn.f32.u32	%f113, %r72;
	sub.f32 	%f114, %f113, %f24;
	fma.rn.f32 	%f136, %f114, %f114, %f133;
	add.s32 	%r105, %r103, 1;

BB1_29:
	add.u64 	%rd29, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd29;
	setp.lt.u32	%p32, %r7, 4;
	@%p32 bra 	BB1_31;

BB1_30:
	mul.wide.u32 	%rd30, %r105, 4;
	add.s64 	%rd31, %rd1, %rd30;
	ld.local.u32 	%r73, [%rd31];
	cvt.rn.f32.u32	%f115, %r73;
	sub.f32 	%f116, %f115, %f24;
	fma.rn.f32 	%f117, %f116, %f116, %f136;
	add.s32 	%r74, %r105, 1;
	mul.wide.u32 	%rd32, %r74, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.local.u32 	%r75, [%rd33];
	cvt.rn.f32.u32	%f118, %r75;
	sub.f32 	%f119, %f118, %f24;
	fma.rn.f32 	%f120, %f119, %f119, %f117;
	add.s32 	%r76, %r105, 2;
	mul.wide.u32 	%rd34, %r76, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.local.u32 	%r77, [%rd35];
	cvt.rn.f32.u32	%f121, %r77;
	sub.f32 	%f122, %f121, %f24;
	fma.rn.f32 	%f123, %f122, %f122, %f120;
	add.s32 	%r78, %r105, 3;
	mul.wide.u32 	%rd36, %r78, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r79, [%rd37];
	cvt.rn.f32.u32	%f124, %r79;
	sub.f32 	%f125, %f124, %f24;
	fma.rn.f32 	%f136, %f125, %f125, %f123;
	add.s32 	%r105, %r105, 4;
	setp.lt.u32	%p33, %r105, %r7;
	@%p33 bra 	BB1_30;

BB1_31:
	add.s32 	%r80, %r7, -1;
	cvt.rn.f32.u32	%f126, %r80;
	div.rn.f32 	%f127, %f136, %f126;
	div.rn.f32 	%f34, %f127, %f24;
	setp.ne.s32	%p34, %r7, 1;
	@%p34 bra 	BB1_33;

	// inline asm
	activemask.b32 %r81;
	// inline asm
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd39, %rd38;
	ld.local.v2.u32 	{%r83, %r84}, [%rd39];
	setp.eq.s32	%p35, %r83, %r84;
	vote.sync.all.pred 	%p36, %p35, %r81;
	mov.u32 	%r106, 2;
	@%p36 bra 	BB1_35;

BB1_33:
	// inline asm
	activemask.b32 %r88;
	// inline asm
	setp.lt.f32	%p37, %f34, 0f3C23D70A;
	vote.sync.all.pred 	%p38, %p37, %r88;
	mov.u32 	%r106, %r97;
	@%p38 bra 	BB1_35;

	// inline asm
	activemask.b32 %r90;
	// inline asm
	setp.le.f32	%p39, %f34, 0f3F800000;
	vote.sync.all.pred 	%p40, %p39, %r90;
	setp.ge.u32	%p41, %r7, %r61;
	and.pred  	%p42, %p40, %p41;
	selp.b32	%r106, %r97, %r9, %p42;

BB1_35:
	cvt.rn.f32.u32	%f137, %r106;
	setp.lt.u32	%p43, %r97, %r106;
	@%p43 bra 	BB1_11;
	bra.uni 	BB1_36;

BB1_9:
	mov.u32 	%r106, %r107;

BB1_36:
	div.u32 	%r93, %r107, %r106;
	cvt.rn.f32.u32	%f139, %r93;

BB1_37:
	mul.lo.s32 	%r94, %r5, %r27;
	cvt.u64.u32	%rd40, %r94;
	cvta.to.global.u64 	%rd41, %rd2;
	add.s64 	%rd42, %rd41, %rd40;
	mul.wide.u32 	%rd43, %r4, 16;
	add.s64 	%rd44, %rd42, %rd43;
	st.global.f32 	[%rd44], %f139;
	st.global.f32 	[%rd44+4], %f137;
	mov.u32 	%r95, 0;
	st.global.u32 	[%rd44+12], %r95;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd44+8], %rs1;
	setp.gt.f32	%p44, %f137, 0f00000000;
	@%p44 bra 	BB1_39;

	mov.u64 	%rd45, $str2;
	cvta.global.u64 	%rd46, %rd45;
	mov.u64 	%rd47, $str1;
	cvta.global.u64 	%rd48, %rd47;
	mov.u32 	%r96, 202;
	mov.u64 	%rd49, 0;
	mov.u64 	%rd50, 2;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r96;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd49;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd50;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB1_39:
	ret;
}

	// .globl	fractalRenderMainDouble
.visible .entry fractalRenderMainDouble(
	.param .u64 fractalRenderMainDouble_param_0,
	.param .u32 fractalRenderMainDouble_param_1,
	.param .align 4 .b8 fractalRenderMainDouble_param_2[8],
	.param .align 8 .b8 fractalRenderMainDouble_param_3[32],
	.param .u32 fractalRenderMainDouble_param_4,
	.param .f32 fractalRenderMainDouble_param_5,
	.param .u32 fractalRenderMainDouble_param_6
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<45>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<19>;
	.reg .b32 	%r<134>;
	.reg .f64 	%fd<132>;
	.reg .b64 	%rd<52>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r29, [fractalRenderMainDouble_param_2+4];
	ld.param.u32 	%r28, [fractalRenderMainDouble_param_2];
	ld.param.f64 	%fd39, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd38, [fractalRenderMainDouble_param_3+16];
	ld.param.f64 	%fd37, [fractalRenderMainDouble_param_3+8];
	ld.param.f64 	%fd36, [fractalRenderMainDouble_param_3];
	ld.param.u32 	%r30, [fractalRenderMainDouble_param_4];
	ld.param.f32 	%f8, [fractalRenderMainDouble_param_5];
	ld.param.u32 	%r31, [fractalRenderMainDouble_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r32, 59;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB2_2:
	mov.u32 	%r33, %tid.x;
	mov.u32 	%r34, %tid.y;
	mad.lo.s32 	%r35, %r1, %r34, %r33;
	shl.b32 	%r36, %r1, 2;
	and.b32  	%r37, %r35, 15;
	rem.u32 	%r38, %r35, %r36;
	sub.s32 	%r39, %r38, %r37;
	shr.u32 	%r40, %r39, 2;
	and.b32  	%r41, %r35, 3;
	add.s32 	%r42, %r40, %r41;
	div.u32 	%r43, %r35, %r36;
	shl.b32 	%r44, %r43, 2;
	bfe.u32 	%r45, %r35, 2, 2;
	add.s32 	%r46, %r44, %r45;
	mov.u32 	%r47, %ctaid.x;
	mad.lo.s32 	%r4, %r47, %r1, %r42;
	mov.u32 	%r48, %ctaid.y;
	mov.u32 	%r49, %ntid.y;
	mad.lo.s32 	%r5, %r48, %r49, %r46;
	setp.lt.u32	%p2, %r4, %r28;
	setp.lt.u32	%p3, %r5, %r29;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB2_38;
	bra.uni 	BB2_3;

BB2_3:
	setp.lt.f32	%p5, %f8, 0f3F800000;
	mov.f32 	%f17, 0f00000000;
	mov.f32 	%f18, %f17;
	@%p5 bra 	BB2_36;

	abs.f32 	%f11, %f8;
	mov.b32 	 %r50, %f8;
	and.b32  	%r51, %r50, -2147483648;
	or.b32  	%r52, %r51, 1056964608;
	mov.b32 	 %f12, %r52;
	add.f32 	%f13, %f12, %f8;
	cvt.rzi.f32.f32	%f14, %f13;
	setp.gt.f32	%p6, %f11, 0f4B000000;
	selp.f32	%f16, %f8, %f14, %p6;
	setp.geu.f32	%p7, %f11, 0f3F000000;
	@%p7 bra 	BB2_6;

	cvt.rzi.f32.f32	%f16, %f8;

BB2_6:
	cvt.rzi.u32.f32	%r6, %f16;
	setp.lt.u32	%p8, %r6, 65;
	@%p8 bra 	BB2_8;

	mov.u64 	%rd9, $str6;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r53, 113;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r53;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB2_8:
	setp.eq.s32	%p9, %r6, 0;
	mov.u32 	%r132, 0;
	mov.u32 	%r131, %r132;
	@%p9 bra 	BB2_35;

	cvt.rn.f64.u32	%fd3, %r4;
	cvt.rn.f64.u32	%fd4, %r5;
	ld.const.f64 	%fd5, [coefficients+8];
	ld.const.f64 	%fd6, [coefficients];
	ld.const.f64 	%fd7, [coefficients+16];
	add.f64 	%fd8, %fd7, %fd7;
	ld.const.f64 	%fd9, [coefficients+24];
	mul.f64 	%fd10, %fd9, 0d4008000000000000;
	ld.const.f64 	%fd11, [roots];
	ld.const.f64 	%fd12, [roots+8];
	ld.const.f64 	%fd13, [roots+16];
	ld.const.f64 	%fd14, [roots+24];
	ld.const.f64 	%fd15, [roots+32];
	ld.const.f64 	%fd16, [roots+40];
	cvt.rn.f64.u32	%fd40, %r28;
	sub.f64 	%fd41, %fd38, %fd36;
	div.rn.f64 	%fd17, %fd41, %fd40;
	cvt.rn.f64.u32	%fd42, %r29;
	sub.f64 	%fd43, %fd39, %fd37;
	div.rn.f64 	%fd18, %fd43, %fd42;
	mov.u32 	%r57, 0;
	and.b32  	%r60, %r31, 1;
	mov.u32 	%r122, %r57;
	mov.u32 	%r132, %r57;
	mov.u32 	%r131, %r6;

BB2_10:
	mov.u32 	%r9, %r131;
	mov.u32 	%r7, %r122;
	ld.param.f64 	%fd124, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd123, [fractalRenderMainDouble_param_3];
	cvt.rn.f64.u32	%fd44, %r9;
	cvt.rn.f64.u32	%fd45, %r7;
	div.rn.f64 	%fd46, %fd45, %fd44;
	add.f64 	%fd47, %fd3, %fd46;
	add.f64 	%fd48, %fd4, %fd46;
	neg.f64 	%fd49, %fd48;
	fma.rn.f64 	%fd126, %fd17, %fd47, %fd123;
	fma.rn.f64 	%fd125, %fd18, %fd49, %fd124;
	setp.eq.s32	%p10, %r30, 0;
	mov.u32 	%r125, %r57;
	mov.u32 	%r126, %r57;
	@%p10 bra 	BB2_18;

BB2_11:
	mul.f64 	%fd50, %fd125, %fd125;
	mul.f64 	%fd51, %fd126, %fd126;
	sub.f64 	%fd52, %fd51, %fd50;
	mul.f64 	%fd53, %fd126, %fd125;
	fma.rn.f64 	%fd54, %fd126, %fd125, %fd53;
	mul.f64 	%fd55, %fd126, %fd52;
	mul.f64 	%fd56, %fd125, %fd54;
	sub.f64 	%fd57, %fd55, %fd56;
	mul.f64 	%fd58, %fd126, %fd54;
	fma.rn.f64 	%fd59, %fd125, %fd52, %fd58;
	fma.rn.f64 	%fd60, %fd126, %fd5, %fd6;
	mul.f64 	%fd61, %fd54, %fd7;
	fma.rn.f64 	%fd62, %fd52, %fd7, %fd60;
	fma.rn.f64 	%fd63, %fd125, %fd5, %fd61;
	fma.rn.f64 	%fd64, %fd57, %fd9, %fd62;
	fma.rn.f64 	%fd65, %fd59, %fd9, %fd63;
	fma.rn.f64 	%fd66, %fd126, %fd8, %fd5;
	mul.f64 	%fd67, %fd54, %fd10;
	fma.rn.f64 	%fd68, %fd52, %fd10, %fd66;
	fma.rn.f64 	%fd69, %fd125, %fd8, %fd67;
	abs.f64 	%fd70, %fd68;
	abs.f64 	%fd71, %fd69;
	add.f64 	%fd72, %fd70, %fd71;
	rcp.rn.f64 	%fd73, %fd72;
	mul.f64 	%fd74, %fd64, %fd73;
	mul.f64 	%fd75, %fd65, %fd73;
	mul.f64 	%fd76, %fd68, %fd73;
	mul.f64 	%fd77, %fd69, %fd73;
	mul.f64 	%fd78, %fd77, %fd77;
	fma.rn.f64 	%fd79, %fd76, %fd76, %fd78;
	rcp.rn.f64 	%fd80, %fd79;
	mul.f64 	%fd81, %fd75, %fd77;
	fma.rn.f64 	%fd82, %fd74, %fd76, %fd81;
	mul.f64 	%fd83, %fd80, %fd82;
	mul.f64 	%fd84, %fd75, %fd76;
	mul.f64 	%fd85, %fd74, %fd77;
	sub.f64 	%fd86, %fd84, %fd85;
	mul.f64 	%fd87, %fd80, %fd86;
	sub.f64 	%fd126, %fd126, %fd83;
	sub.f64 	%fd125, %fd125, %fd87;
	sub.f64 	%fd88, %fd126, %fd11;
	abs.f64 	%fd89, %fd88;
	setp.geu.f64	%p11, %fd89, 0d3F1A36E2EB1C432D;
	@%p11 bra 	BB2_13;

	add.s32 	%r126, %r125, 1;
	sub.f64 	%fd90, %fd125, %fd12;
	abs.f64 	%fd91, %fd90;
	setp.lt.f64	%p12, %fd91, 0d3F1A36E2EB1C432D;
	@%p12 bra 	BB2_18;

BB2_13:
	sub.f64 	%fd92, %fd126, %fd13;
	abs.f64 	%fd93, %fd92;
	setp.geu.f64	%p13, %fd93, 0d3F1A36E2EB1C432D;
	@%p13 bra 	BB2_15;

	add.s32 	%r126, %r125, 1;
	sub.f64 	%fd94, %fd125, %fd14;
	abs.f64 	%fd95, %fd94;
	setp.lt.f64	%p14, %fd95, 0d3F1A36E2EB1C432D;
	@%p14 bra 	BB2_18;

BB2_15:
	sub.f64 	%fd96, %fd126, %fd15;
	abs.f64 	%fd97, %fd96;
	add.s32 	%r125, %r125, 1;
	setp.lt.f64	%p15, %fd97, 0d3F1A36E2EB1C432D;
	@%p15 bra 	BB2_17;
	bra.uni 	BB2_16;

BB2_17:
	setp.lt.u32	%p17, %r125, %r30;
	sub.f64 	%fd98, %fd125, %fd16;
	abs.f64 	%fd99, %fd98;
	setp.geu.f64	%p18, %fd99, 0d3F1A36E2EB1C432D;
	and.pred  	%p19, %p18, %p17;
	mov.u32 	%r126, %r125;
	@%p19 bra 	BB2_11;
	bra.uni 	BB2_18;

BB2_16:
	setp.lt.u32	%p16, %r125, %r30;
	mov.u32 	%r126, %r125;
	@%p16 bra 	BB2_11;

BB2_18:
	cvt.rn.f32.u32	%f15, %r126;
	cvt.rzi.u32.f32	%r13, %f15;
	add.s32 	%r132, %r13, %r132;
	setp.gt.u32	%p20, %r7, 9;
	@%p20 bra 	BB2_20;

	add.u64 	%rd15, %SP, 0;
	cvta.to.local.u64 	%rd16, %rd15;
	mul.wide.u32 	%rd17, %r7, 4;
	add.s64 	%rd18, %rd16, %rd17;
	st.local.u32 	[%rd18], %r13;

BB2_20:
	setp.lt.u32	%p21, %r7, 10;
	setp.eq.b32	%p22, %r60, 1;
	setp.ne.s32	%p23, %r7, 0;
	and.pred  	%p24, %p21, %p23;
	and.pred  	%p25, %p24, %p22;
	shr.u32 	%r61, %r9, 1;
	setp.eq.s32	%p26, %r7, %r61;
	or.pred  	%p27, %p25, %p26;
	add.s32 	%r122, %r7, 1;
	mov.u32 	%r131, %r9;
	@!%p27 bra 	BB2_34;
	bra.uni 	BB2_21;

BB2_21:
	div.u32 	%r62, %r132, %r122;
	cvt.rn.f64.u32	%fd25, %r62;
	setp.eq.s32	%p28, %r7, 0;
	mov.f64 	%fd131, 0d0000000000000000;
	@%p28 bra 	BB2_30;

	and.b32  	%r64, %r7, 3;
	setp.eq.s32	%p29, %r64, 0;
	mov.f64 	%fd131, 0d0000000000000000;
	mov.u32 	%r130, 0;
	@%p29 bra 	BB2_28;

	setp.eq.s32	%p30, %r64, 1;
	mov.f64 	%fd128, 0d0000000000000000;
	mov.u32 	%r128, 0;
	@%p30 bra 	BB2_27;

	setp.eq.s32	%p31, %r64, 2;
	mov.f64 	%fd127, 0d0000000000000000;
	mov.u32 	%r127, 0;
	@%p31 bra 	BB2_26;

	add.u64 	%rd19, %SP, 0;
	cvta.to.local.u64 	%rd20, %rd19;
	ld.local.u32 	%r70, [%rd20];
	cvt.rn.f64.u32	%fd104, %r70;
	sub.f64 	%fd105, %fd104, %fd25;
	fma.rn.f64 	%fd127, %fd105, %fd105, 0d0000000000000000;
	mov.u32 	%r127, 1;

BB2_26:
	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd22, %rd21;
	mul.wide.u32 	%rd23, %r127, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.local.u32 	%r71, [%rd24];
	cvt.rn.f64.u32	%fd106, %r71;
	sub.f64 	%fd107, %fd106, %fd25;
	fma.rn.f64 	%fd128, %fd107, %fd107, %fd127;
	add.s32 	%r128, %r127, 1;

BB2_27:
	add.u64 	%rd25, %SP, 0;
	cvta.to.local.u64 	%rd26, %rd25;
	mul.wide.u32 	%rd27, %r128, 4;
	add.s64 	%rd28, %rd26, %rd27;
	ld.local.u32 	%r72, [%rd28];
	cvt.rn.f64.u32	%fd108, %r72;
	sub.f64 	%fd109, %fd108, %fd25;
	fma.rn.f64 	%fd131, %fd109, %fd109, %fd128;
	add.s32 	%r130, %r128, 1;

BB2_28:
	add.u64 	%rd29, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd29;
	setp.lt.u32	%p32, %r7, 4;
	@%p32 bra 	BB2_30;

BB2_29:
	mul.wide.u32 	%rd30, %r130, 4;
	add.s64 	%rd31, %rd1, %rd30;
	ld.local.u32 	%r73, [%rd31];
	cvt.rn.f64.u32	%fd110, %r73;
	sub.f64 	%fd111, %fd110, %fd25;
	fma.rn.f64 	%fd112, %fd111, %fd111, %fd131;
	add.s32 	%r74, %r130, 1;
	mul.wide.u32 	%rd32, %r74, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.local.u32 	%r75, [%rd33];
	cvt.rn.f64.u32	%fd113, %r75;
	sub.f64 	%fd114, %fd113, %fd25;
	fma.rn.f64 	%fd115, %fd114, %fd114, %fd112;
	add.s32 	%r76, %r130, 2;
	mul.wide.u32 	%rd34, %r76, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.local.u32 	%r77, [%rd35];
	cvt.rn.f64.u32	%fd116, %r77;
	sub.f64 	%fd117, %fd116, %fd25;
	fma.rn.f64 	%fd118, %fd117, %fd117, %fd115;
	add.s32 	%r78, %r130, 3;
	mul.wide.u32 	%rd36, %r78, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r79, [%rd37];
	cvt.rn.f64.u32	%fd119, %r79;
	sub.f64 	%fd120, %fd119, %fd25;
	fma.rn.f64 	%fd131, %fd120, %fd120, %fd118;
	add.s32 	%r130, %r130, 4;
	setp.lt.u32	%p33, %r130, %r7;
	@%p33 bra 	BB2_29;

BB2_30:
	add.s32 	%r80, %r7, -1;
	cvt.rn.f64.u32	%fd121, %r80;
	div.rn.f64 	%fd122, %fd131, %fd121;
	div.rn.f64 	%fd35, %fd122, %fd25;
	setp.ne.s32	%p34, %r7, 1;
	@%p34 bra 	BB2_32;

	// inline asm
	activemask.b32 %r81;
	// inline asm
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd39, %rd38;
	ld.local.v2.u32 	{%r83, %r84}, [%rd39];
	setp.eq.s32	%p35, %r83, %r84;
	vote.sync.all.pred 	%p36, %p35, %r81;
	mov.u32 	%r131, 2;
	@%p36 bra 	BB2_34;

BB2_32:
	// inline asm
	activemask.b32 %r88;
	// inline asm
	setp.lt.f64	%p37, %fd35, 0d3F847AE140000000;
	vote.sync.all.pred 	%p38, %p37, %r88;
	mov.u32 	%r131, %r122;
	@%p38 bra 	BB2_34;

	// inline asm
	activemask.b32 %r90;
	// inline asm
	setp.le.f64	%p39, %fd35, 0d3FF0000000000000;
	vote.sync.all.pred 	%p40, %p39, %r90;
	setp.ge.u32	%p41, %r7, %r61;
	and.pred  	%p42, %p40, %p41;
	selp.b32	%r131, %r122, %r9, %p42;

BB2_34:
	setp.lt.u32	%p43, %r122, %r131;
	@%p43 bra 	BB2_10;

BB2_35:
	cvt.rn.f32.u32	%f17, %r131;
	div.u32 	%r93, %r132, %r131;
	cvt.rn.f32.u32	%f18, %r93;

BB2_36:
	ld.param.u64 	%rd51, [fractalRenderMainDouble_param_0];
	mov.u32 	%r117, %tid.y;
	mov.u32 	%r116, %ntid.x;
	mov.u32 	%r115, %tid.x;
	mad.lo.s32 	%r114, %r116, %r117, %r115;
	shl.b32 	%r113, %r116, 2;
	ld.param.u32 	%r112, [fractalRenderMainDouble_param_1];
	div.u32 	%r111, %r114, %r113;
	bfe.u32 	%r110, %r114, 2, 2;
	shl.b32 	%r109, %r111, 2;
	add.s32 	%r108, %r109, %r110;
	mov.u32 	%r107, %ntid.y;
	mov.u32 	%r106, %ctaid.y;
	mad.lo.s32 	%r105, %r106, %r107, %r108;
	and.b32  	%r104, %r114, 15;
	rem.u32 	%r103, %r114, %r113;
	sub.s32 	%r102, %r103, %r104;
	and.b32  	%r101, %r114, 3;
	shr.u32 	%r100, %r102, 2;
	add.s32 	%r99, %r100, %r101;
	mov.u32 	%r98, %ctaid.x;
	mad.lo.s32 	%r97, %r98, %r116, %r99;
	mul.lo.s32 	%r94, %r105, %r112;
	cvt.u64.u32	%rd40, %r94;
	cvta.to.global.u64 	%rd41, %rd51;
	add.s64 	%rd42, %rd41, %rd40;
	mul.wide.u32 	%rd43, %r97, 16;
	add.s64 	%rd44, %rd42, %rd43;
	st.global.f32 	[%rd44], %f18;
	st.global.f32 	[%rd44+4], %f17;
	mov.u32 	%r95, 0;
	st.global.u32 	[%rd44+12], %r95;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd44+8], %rs1;
	setp.gt.f32	%p44, %f17, 0f00000000;
	@%p44 bra 	BB2_38;

	mov.u64 	%rd45, $str2;
	cvta.global.u64 	%rd46, %rd45;
	mov.u64 	%rd47, $str1;
	cvta.global.u64 	%rd48, %rd47;
	mov.u32 	%r96, 202;
	mov.u64 	%rd49, 0;
	mov.u64 	%rd50, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r96;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd49;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd50;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB2_38:
	ret;
}

	// .globl	fractalRenderAdvancedFloat
.visible .entry fractalRenderAdvancedFloat(
	.param .u64 fractalRenderAdvancedFloat_param_0,
	.param .u32 fractalRenderAdvancedFloat_param_1,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_2[8],
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_3[16],
	.param .u32 fractalRenderAdvancedFloat_param_4,
	.param .f32 fractalRenderAdvancedFloat_param_5,
	.param .u32 fractalRenderAdvancedFloat_param_6,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_7[16],
	.param .u64 fractalRenderAdvancedFloat_param_8,
	.param .u32 fractalRenderAdvancedFloat_param_9,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<74>;
	.reg .b16 	%rs<9>;
	.reg .f32 	%f<262>;
	.reg .b32 	%r<139>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<63>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderAdvancedFloat_param_0];
	ld.param.u32 	%r28, [fractalRenderAdvancedFloat_param_1];
	ld.param.u32 	%r30, [fractalRenderAdvancedFloat_param_2+4];
	ld.param.u32 	%r29, [fractalRenderAdvancedFloat_param_2];
	ld.param.f32 	%f65, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f64, [fractalRenderAdvancedFloat_param_3+8];
	ld.param.f32 	%f63, [fractalRenderAdvancedFloat_param_3+4];
	ld.param.f32 	%f62, [fractalRenderAdvancedFloat_param_3];
	ld.param.u32 	%r31, [fractalRenderAdvancedFloat_param_4];
	ld.param.f32 	%f245, [fractalRenderAdvancedFloat_param_5];
	ld.param.u32 	%r32, [fractalRenderAdvancedFloat_param_6];
	ld.param.f32 	%f70, [fractalRenderAdvancedFloat_param_7+12];
	ld.param.f32 	%f69, [fractalRenderAdvancedFloat_param_7+8];
	ld.param.f32 	%f68, [fractalRenderAdvancedFloat_param_7+4];
	ld.param.f32 	%f67, [fractalRenderAdvancedFloat_param_7];
	ld.param.u64 	%rd3, [fractalRenderAdvancedFloat_param_8];
	ld.param.u32 	%r33, [fractalRenderAdvancedFloat_param_9];
	ld.param.u32 	%r35, [fractalRenderAdvancedFloat_param_10+4];
	ld.param.u32 	%r34, [fractalRenderAdvancedFloat_param_10];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p2, %r1, 32;
	@%p2 bra 	BB3_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r36, 59;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r36;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB3_2:
	mov.u32 	%r37, %tid.x;
	mov.u32 	%r38, %tid.y;
	mad.lo.s32 	%r39, %r1, %r38, %r37;
	shl.b32 	%r40, %r1, 2;
	and.b32  	%r41, %r39, 15;
	rem.u32 	%r42, %r39, %r40;
	sub.s32 	%r43, %r42, %r41;
	shr.u32 	%r44, %r43, 2;
	and.b32  	%r45, %r39, 3;
	add.s32 	%r46, %r44, %r45;
	div.u32 	%r47, %r39, %r40;
	shl.b32 	%r48, %r47, 2;
	bfe.u32 	%r49, %r39, 2, 2;
	add.s32 	%r50, %r48, %r49;
	mov.u32 	%r51, %ctaid.x;
	mad.lo.s32 	%r4, %r51, %r1, %r46;
	mov.u32 	%r52, %ctaid.y;
	mov.u32 	%r53, %ntid.y;
	mad.lo.s32 	%r5, %r52, %r53, %r50;
	setp.lt.u32	%p3, %r4, %r29;
	setp.gt.u32	%p4, %r30, %r5;
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB3_53;
	bra.uni 	BB3_3;

BB3_3:
	and.b32  	%r54, %r32, 20;
	setp.eq.s32	%p6, %r54, 20;
	setp.ge.f32	%p7, %f245, 0f3F800000;
	and.pred  	%p8, %p6, %p7;
	mov.u16 	%rs7, 0;
	@!%p8 bra 	BB3_9;
	bra.uni 	BB3_4;

BB3_4:
	and.b32  	%r55, %r4, -8;
	cvt.rn.f32.u32	%f71, %r55;
	and.b32  	%r56, %r5, -4;
	cvt.rn.f32.u32	%f72, %r56;
	cvt.rn.f32.u32	%f73, %r34;
	sub.f32 	%f74, %f73, %f71;
	cvt.rn.f32.u32	%f75, %r35;
	sub.f32 	%f76, %f75, %f72;
	mul.f32 	%f77, %f76, %f76;
	fma.rn.f32 	%f78, %f74, %f74, %f77;
	sqrt.rn.f32 	%f79, %f78;
	mul.f32 	%f80, %f79, 0f3CD94079;
	ld.global.f32 	%f81, [screenDistance];
	div.rn.f32 	%f1, %f80, %f81;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p9, %f2, 0f3F800000;
	mov.f32 	%f244, %f2;
	@%p9 bra 	BB3_6;

	rcp.rn.f32 	%f244, %f2;

BB3_6:
	mul.rn.f32 	%f82, %f244, %f244;
	mov.f32 	%f83, 0fC0B59883;
	mov.f32 	%f84, 0fBF52C7EA;
	fma.rn.f32 	%f85, %f82, %f84, %f83;
	mov.f32 	%f86, 0fC0D21907;
	fma.rn.f32 	%f87, %f85, %f82, %f86;
	mul.f32 	%f88, %f82, %f87;
	mul.f32 	%f89, %f244, %f88;
	add.f32 	%f90, %f82, 0f41355DC0;
	mov.f32 	%f91, 0f41E6BD60;
	fma.rn.f32 	%f92, %f90, %f82, %f91;
	mov.f32 	%f93, 0f419D92C8;
	fma.rn.f32 	%f94, %f92, %f82, %f93;
	rcp.rn.f32 	%f95, %f94;
	fma.rn.f32 	%f96, %f89, %f95, %f244;
	mov.f32 	%f97, 0f3FC90FDB;
	sub.f32 	%f98, %f97, %f96;
	setp.gt.f32	%p10, %f2, 0f3F800000;
	selp.f32	%f99, %f98, %f96, %p10;
	mov.b32 	 %r57, %f99;
	mov.b32 	 %r58, %f1;
	and.b32  	%r59, %r58, -2147483648;
	or.b32  	%r60, %r57, %r59;
	mov.b32 	 %f100, %r60;
	setp.gtu.f32	%p11, %f2, 0f7F800000;
	selp.f32	%f101, %f99, %f100, %p11;
	mul.f32 	%f102, %f101, 0f43340000;
	div.rn.f32 	%f5, %f102, 0f40490FDB;
	setp.ge.f32	%p12, %f5, 0f00000000;
	@%p12 bra 	BB3_8;

	mov.u64 	%rd10, $str5;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str1;
	cvta.global.u64 	%rd13, %rd12;
	mov.u32 	%r61, 245;
	mov.u64 	%rd14, 0;
	mov.u64 	%rd15, 2;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r61;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd14;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd15;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB3_8:
	fma.rn.f32 	%f103, %f5, 0fBC964FDA, 0f3F8CEADD;
	setp.gtu.f32	%p13, %f5, 0f40B00000;
	setp.le.f32	%p14, %f5, 0f40B00000;
	selp.u16	%rs7, 1, 0, %p14;
	selp.f32	%f104, %f103, 0f3F800000, %p13;
	mul.f32 	%f245, %f104, %f245;

BB3_9:
	and.b32  	%r62, %r32, 8;
	setp.eq.s32	%p16, %r62, 0;
	mov.pred 	%p73, -1;
	mov.f32 	%f248, 0f00000000;
	@%p16 bra 	BB3_10;

	sub.s32 	%r63, %r30, %r5;
	cvt.rn.f32.u32	%f107, %r63;
	cvt.rn.f32.u32	%f108, %r29;
	cvt.rn.f32.u32	%f109, %r4;
	div.rn.f32 	%f110, %f109, %f108;
	cvt.rn.f32.u32	%f111, %r30;
	div.rn.f32 	%f112, %f107, %f111;
	sub.f32 	%f113, %f64, %f62;
	sub.f32 	%f114, %f65, %f63;
	fma.rn.f32 	%f115, %f113, %f110, %f62;
	fma.rn.f32 	%f116, %f114, %f112, %f63;
	sub.f32 	%f117, %f115, %f67;
	sub.f32 	%f118, %f116, %f68;
	sub.f32 	%f119, %f69, %f67;
	div.rn.f32 	%f120, %f117, %f119;
	sub.f32 	%f121, %f70, %f68;
	div.rn.f32 	%f122, %f118, %f121;
	mul.f32 	%f12, %f108, %f120;
	mul.f32 	%f123, %f111, %f122;
	sub.f32 	%f13, %f111, %f123;
	abs.f32 	%f124, %f12;
	mov.b32 	 %r64, %f12;
	and.b32  	%r65, %r64, -2147483648;
	or.b32  	%r66, %r65, 1056964608;
	mov.b32 	 %f125, %r66;
	add.f32 	%f126, %f12, %f125;
	cvt.rzi.f32.f32	%f127, %f126;
	setp.gt.f32	%p17, %f124, 0f4B000000;
	selp.f32	%f246, %f12, %f127, %p17;
	setp.geu.f32	%p18, %f124, 0f3F000000;
	@%p18 bra 	BB3_13;

	cvt.rzi.f32.f32	%f246, %f12;

BB3_13:
	cvt.rzi.s32.f32	%r6, %f246;
	mov.b32 	 %r67, %f13;
	and.b32  	%r68, %r67, -2147483648;
	or.b32  	%r69, %r68, 1056964608;
	mov.b32 	 %f128, %r69;
	add.f32 	%f129, %f13, %f128;
	cvt.rzi.f32.f32	%f130, %f129;
	abs.f32 	%f131, %f13;
	setp.gt.f32	%p19, %f131, 0f4B000000;
	selp.f32	%f247, %f13, %f130, %p19;
	setp.geu.f32	%p20, %f131, 0f3F000000;
	@%p20 bra 	BB3_15;

	cvt.rzi.f32.f32	%f247, %f13;

BB3_15:
	add.s32 	%r70, %r29, -2;
	setp.lt.u32	%p22, %r6, %r70;
	setp.gt.s32	%p23, %r6, 1;
	and.pred  	%p24, %p23, %p22;
	cvt.rzi.s32.f32	%r71, %f247;
	setp.gt.s32	%p25, %r71, 1;
	and.pred  	%p26, %p24, %p25;
	add.s32 	%r72, %r30, -2;
	setp.lt.u32	%p27, %r71, %r72;
	and.pred  	%p28, %p27, %p26;
	mov.f32 	%f249, %f248;
	@!%p28 bra 	BB3_18;
	bra.uni 	BB3_16;

BB3_16:
	shr.u32 	%r73, %r32, 5;
	and.b32  	%r74, %r73, 1;
	setp.eq.b32	%p30, %r74, 1;
	setp.ne.s16	%p31, %rs7, 0;
	and.pred  	%p32, %p31, %p30;
	mov.f32 	%f249, %f248;
	@%p32 bra 	BB3_18;

	cvt.rmi.f32.f32	%f136, %f12;
	cvt.rzi.u32.f32	%r75, %f136;
	cvt.rmi.f32.f32	%f137, %f13;
	cvt.rzi.u32.f32	%r76, %f137;
	cvt.rn.f32.u32	%f138, %r75;
	sub.f32 	%f139, %f12, %f138;
	cvt.rn.f32.u32	%f140, %r76;
	sub.f32 	%f141, %f13, %f140;
	mul.lo.s32 	%r77, %r76, %r33;
	cvt.u64.u32	%rd16, %r77;
	cvta.to.global.u64 	%rd17, %rd3;
	add.s64 	%rd18, %rd17, %rd16;
	mul.wide.u32 	%rd19, %r75, 16;
	add.s64 	%rd20, %rd18, %rd19;
	add.s32 	%r78, %r75, 1;
	mul.wide.u32 	%rd21, %r78, 16;
	add.s64 	%rd22, %rd18, %rd21;
	add.s32 	%r79, %r76, 1;
	mul.lo.s32 	%r80, %r79, %r33;
	cvt.u64.u32	%rd23, %r80;
	add.s64 	%rd24, %rd17, %rd23;
	add.s64 	%rd25, %rd24, %rd19;
	add.s64 	%rd26, %rd24, %rd21;
	mov.f32 	%f142, 0f3F800000;
	sub.f32 	%f143, %f142, %f139;
	ld.global.f32 	%f144, [%rd20];
	ld.global.f32 	%f145, [%rd22];
	mul.f32 	%f146, %f139, %f145;
	fma.rn.f32 	%f147, %f144, %f143, %f146;
	sub.f32 	%f148, %f142, %f141;
	ld.global.f32 	%f149, [%rd25];
	ld.global.f32 	%f150, [%rd26];
	mul.f32 	%f151, %f139, %f150;
	fma.rn.f32 	%f152, %f143, %f149, %f151;
	mul.f32 	%f153, %f141, %f152;
	fma.rn.f32 	%f248, %f148, %f147, %f153;
	ld.global.f32 	%f154, [%rd20+4];
	ld.global.f32 	%f155, [%rd22+4];
	mul.f32 	%f156, %f139, %f155;
	fma.rn.f32 	%f157, %f143, %f154, %f156;
	ld.global.f32 	%f158, [%rd25+4];
	ld.global.f32 	%f159, [%rd26+4];
	mul.f32 	%f160, %f139, %f159;
	fma.rn.f32 	%f161, %f143, %f158, %f160;
	mul.f32 	%f162, %f141, %f161;
	fma.rn.f32 	%f249, %f148, %f157, %f162;
	mov.pred 	%p73, 0;
	bra.uni 	BB3_18;

BB3_10:
	mov.f32 	%f249, %f248;

BB3_18:
	mov.u16 	%rs8, 1;
	@!%p73 bra 	BB3_52;
	bra.uni 	BB3_19;

BB3_19:
	setp.lt.f32	%p34, %f245, 0f3F800000;
	selp.f32	%f24, 0f3F800000, %f245, %p34;
	abs.f32 	%f163, %f24;
	mov.b32 	 %r81, %f24;
	and.b32  	%r82, %r81, -2147483648;
	or.b32  	%r83, %r82, 1056964608;
	mov.b32 	 %f164, %r83;
	add.f32 	%f165, %f24, %f164;
	cvt.rzi.f32.f32	%f166, %f165;
	setp.gt.f32	%p35, %f163, 0f4B000000;
	selp.f32	%f250, %f24, %f166, %p35;
	setp.geu.f32	%p36, %f163, 0f3F000000;
	@%p36 bra 	BB3_21;

	cvt.rzi.f32.f32	%f250, %f24;

BB3_21:
	cvt.rn.f32.u32	%f167, %r29;
	sub.f32 	%f168, %f64, %f62;
	div.rn.f32 	%f28, %f168, %f167;
	cvt.rn.f32.u32	%f169, %r30;
	sub.f32 	%f170, %f65, %f63;
	div.rn.f32 	%f29, %f170, %f169;
	cvt.rzi.u32.f32	%r136, %f250;
	setp.lt.u32	%p37, %r136, 65;
	@%p37 bra 	BB3_23;

	mov.u64 	%rd27, $str6;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, $str1;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r84, 113;
	mov.u64 	%rd31, 0;
	mov.u64 	%rd32, 2;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r84;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB3_23:
	setp.eq.s32	%p38, %r136, 0;
	cvt.rn.f32.u32	%f249, %r136;
	mov.u32 	%r137, 0;
	@%p38 bra 	BB3_24;

	cvt.rn.f32.u32	%f31, %r4;
	cvt.rn.f32.u32	%f32, %r5;
	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f33, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f34, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f35, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f36, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f37, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f38, %fd12;
	mov.u32 	%r88, 0;
	mov.u32 	%r127, %r88;
	mov.u32 	%r137, %r88;

BB3_26:
	mov.u32 	%r10, %r136;
	mov.u32 	%r8, %r127;
	cvt.rn.f32.u32	%f171, %r8;
	div.rn.f32 	%f172, %f171, %f249;
	add.f32 	%f173, %f31, %f172;
	add.f32 	%f174, %f32, %f172;
	neg.f32 	%f175, %f174;
	fma.rn.f32 	%f253, %f28, %f173, %f62;
	fma.rn.f32 	%f252, %f29, %f175, %f65;
	setp.eq.s32	%p39, %r31, 0;
	mov.u32 	%r131, %r88;
	@%p39 bra 	BB3_34;

BB3_27:
	mul.f32 	%f176, %f252, %f252;
	mul.f32 	%f177, %f253, %f253;
	sub.f32 	%f178, %f177, %f176;
	mul.f32 	%f179, %f253, %f252;
	fma.rn.f32 	%f180, %f253, %f252, %f179;
	mul.f32 	%f181, %f253, %f178;
	mul.f32 	%f182, %f252, %f180;
	sub.f32 	%f183, %f181, %f182;
	mul.f32 	%f184, %f253, %f180;
	fma.rn.f32 	%f185, %f252, %f178, %f184;
	cvt.f64.f32	%fd13, %f253;
	cvt.f64.f32	%fd14, %f252;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f178;
	cvt.f64.f32	%fd17, %f180;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f183;
	cvt.f64.f32	%fd22, %f185;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f186, %fd23;
	cvt.rn.f32.f64	%f187, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f188, %fd27;
	cvt.rn.f32.f64	%f189, %fd28;
	abs.f32 	%f190, %f188;
	abs.f32 	%f191, %f189;
	add.f32 	%f192, %f190, %f191;
	rcp.rn.f32 	%f193, %f192;
	mul.f32 	%f194, %f186, %f193;
	mul.f32 	%f195, %f187, %f193;
	mul.f32 	%f196, %f193, %f188;
	mul.f32 	%f197, %f193, %f189;
	mul.f32 	%f198, %f197, %f197;
	fma.rn.f32 	%f199, %f196, %f196, %f198;
	rcp.rn.f32 	%f200, %f199;
	mul.f32 	%f201, %f195, %f197;
	fma.rn.f32 	%f202, %f194, %f196, %f201;
	mul.f32 	%f203, %f200, %f202;
	mul.f32 	%f204, %f195, %f196;
	mul.f32 	%f205, %f194, %f197;
	sub.f32 	%f206, %f204, %f205;
	mul.f32 	%f207, %f200, %f206;
	sub.f32 	%f253, %f253, %f203;
	sub.f32 	%f252, %f252, %f207;
	add.s32 	%r131, %r131, 1;
	sub.f32 	%f208, %f253, %f33;
	abs.f32 	%f209, %f208;
	setp.geu.f32	%p40, %f209, 0f38D1B717;
	@%p40 bra 	BB3_29;

	sub.f32 	%f210, %f252, %f34;
	abs.f32 	%f211, %f210;
	setp.lt.f32	%p41, %f211, 0f38D1B717;
	@%p41 bra 	BB3_34;

BB3_29:
	sub.f32 	%f212, %f253, %f35;
	abs.f32 	%f213, %f212;
	setp.geu.f32	%p42, %f213, 0f38D1B717;
	@%p42 bra 	BB3_31;

	sub.f32 	%f214, %f252, %f36;
	abs.f32 	%f215, %f214;
	setp.lt.f32	%p43, %f215, 0f38D1B717;
	@%p43 bra 	BB3_34;

BB3_31:
	sub.f32 	%f216, %f253, %f37;
	abs.f32 	%f217, %f216;
	setp.lt.f32	%p44, %f217, 0f38D1B717;
	@%p44 bra 	BB3_33;
	bra.uni 	BB3_32;

BB3_33:
	setp.lt.u32	%p46, %r131, %r31;
	sub.f32 	%f218, %f252, %f38;
	abs.f32 	%f219, %f218;
	setp.geu.f32	%p47, %f219, 0f38D1B717;
	and.pred  	%p48, %p47, %p46;
	@%p48 bra 	BB3_27;
	bra.uni 	BB3_34;

BB3_32:
	setp.lt.u32	%p45, %r131, %r31;
	@%p45 bra 	BB3_27;

BB3_34:
	cvt.rn.f32.u32	%f220, %r131;
	cvt.rzi.u32.f32	%r14, %f220;
	add.s32 	%r137, %r14, %r137;
	setp.gt.u32	%p49, %r8, 9;
	@%p49 bra 	BB3_36;

	add.u64 	%rd33, %SP, 0;
	cvta.to.local.u64 	%rd34, %rd33;
	mul.wide.u32 	%rd35, %r8, 4;
	add.s64 	%rd36, %rd34, %rd35;
	st.local.u32 	[%rd36], %r14;

BB3_36:
	setp.lt.u32	%p50, %r8, 10;
	and.b32  	%r91, %r32, 1;
	setp.eq.b32	%p51, %r91, 1;
	setp.ne.s32	%p52, %r8, 0;
	and.pred  	%p53, %p50, %p52;
	and.pred  	%p54, %p53, %p51;
	shr.u32 	%r92, %r10, 1;
	setp.eq.s32	%p55, %r8, %r92;
	or.pred  	%p56, %p54, %p55;
	add.s32 	%r127, %r8, 1;
	mov.u32 	%r136, %r10;
	@!%p56 bra 	BB3_50;
	bra.uni 	BB3_37;

BB3_37:
	div.u32 	%r93, %r137, %r127;
	cvt.rn.f32.u32	%f46, %r93;
	setp.eq.s32	%p57, %r8, 0;
	mov.f32 	%f258, 0f00000000;
	@%p57 bra 	BB3_46;

	and.b32  	%r95, %r8, 3;
	setp.eq.s32	%p58, %r95, 0;
	mov.f32 	%f258, 0f00000000;
	mov.u32 	%r135, 0;
	@%p58 bra 	BB3_44;

	setp.eq.s32	%p59, %r95, 1;
	mov.f32 	%f255, 0f00000000;
	mov.u32 	%r133, 0;
	@%p59 bra 	BB3_43;

	setp.eq.s32	%p60, %r95, 2;
	mov.f32 	%f254, 0f00000000;
	mov.u32 	%r132, 0;
	@%p60 bra 	BB3_42;

	add.u64 	%rd37, %SP, 0;
	cvta.to.local.u64 	%rd38, %rd37;
	ld.local.u32 	%r101, [%rd38];
	cvt.rn.f32.u32	%f225, %r101;
	sub.f32 	%f226, %f225, %f46;
	fma.rn.f32 	%f254, %f226, %f226, 0f00000000;
	mov.u32 	%r132, 1;

BB3_42:
	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd39;
	mul.wide.u32 	%rd41, %r132, 4;
	add.s64 	%rd42, %rd40, %rd41;
	ld.local.u32 	%r102, [%rd42];
	cvt.rn.f32.u32	%f227, %r102;
	sub.f32 	%f228, %f227, %f46;
	fma.rn.f32 	%f255, %f228, %f228, %f254;
	add.s32 	%r133, %r132, 1;

BB3_43:
	add.u64 	%rd43, %SP, 0;
	cvta.to.local.u64 	%rd44, %rd43;
	mul.wide.u32 	%rd45, %r133, 4;
	add.s64 	%rd46, %rd44, %rd45;
	ld.local.u32 	%r103, [%rd46];
	cvt.rn.f32.u32	%f229, %r103;
	sub.f32 	%f230, %f229, %f46;
	fma.rn.f32 	%f258, %f230, %f230, %f255;
	add.s32 	%r135, %r133, 1;

BB3_44:
	add.u64 	%rd47, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd47;
	setp.lt.u32	%p61, %r8, 4;
	@%p61 bra 	BB3_46;

BB3_45:
	mul.wide.u32 	%rd48, %r135, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.u32 	%r104, [%rd49];
	cvt.rn.f32.u32	%f231, %r104;
	sub.f32 	%f232, %f231, %f46;
	fma.rn.f32 	%f233, %f232, %f232, %f258;
	add.s32 	%r105, %r135, 1;
	mul.wide.u32 	%rd50, %r105, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.u32 	%r106, [%rd51];
	cvt.rn.f32.u32	%f234, %r106;
	sub.f32 	%f235, %f234, %f46;
	fma.rn.f32 	%f236, %f235, %f235, %f233;
	add.s32 	%r107, %r135, 2;
	mul.wide.u32 	%rd52, %r107, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.u32 	%r108, [%rd53];
	cvt.rn.f32.u32	%f237, %r108;
	sub.f32 	%f238, %f237, %f46;
	fma.rn.f32 	%f239, %f238, %f238, %f236;
	add.s32 	%r109, %r135, 3;
	mul.wide.u32 	%rd54, %r109, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.u32 	%r110, [%rd55];
	cvt.rn.f32.u32	%f240, %r110;
	sub.f32 	%f241, %f240, %f46;
	fma.rn.f32 	%f258, %f241, %f241, %f239;
	add.s32 	%r135, %r135, 4;
	setp.lt.u32	%p62, %r135, %r8;
	@%p62 bra 	BB3_45;

BB3_46:
	add.s32 	%r111, %r8, -1;
	cvt.rn.f32.u32	%f242, %r111;
	div.rn.f32 	%f243, %f258, %f242;
	div.rn.f32 	%f56, %f243, %f46;
	setp.ne.s32	%p63, %r8, 1;
	@%p63 bra 	BB3_48;

	// inline asm
	activemask.b32 %r112;
	// inline asm
	add.u64 	%rd56, %SP, 0;
	cvta.to.local.u64 	%rd57, %rd56;
	ld.local.v2.u32 	{%r114, %r115}, [%rd57];
	setp.eq.s32	%p64, %r114, %r115;
	vote.sync.all.pred 	%p65, %p64, %r112;
	mov.u32 	%r136, 2;
	@%p65 bra 	BB3_50;

BB3_48:
	// inline asm
	activemask.b32 %r119;
	// inline asm
	setp.lt.f32	%p66, %f56, 0f3C23D70A;
	vote.sync.all.pred 	%p67, %p66, %r119;
	mov.u32 	%r136, %r127;
	@%p67 bra 	BB3_50;

	// inline asm
	activemask.b32 %r121;
	// inline asm
	setp.le.f32	%p68, %f56, 0f3F800000;
	vote.sync.all.pred 	%p69, %p68, %r121;
	setp.ge.u32	%p70, %r8, %r92;
	and.pred  	%p71, %p69, %p70;
	selp.b32	%r136, %r127, %r10, %p71;

BB3_50:
	cvt.rn.f32.u32	%f249, %r136;
	setp.lt.u32	%p72, %r127, %r136;
	@%p72 bra 	BB3_26;
	bra.uni 	BB3_51;

BB3_24:
	mov.u32 	%r136, %r137;

BB3_51:
	div.u32 	%r124, %r137, %r136;
	cvt.rn.f32.u32	%f248, %r124;
	mov.u16 	%rs8, 0;

BB3_52:
	mul.lo.s32 	%r125, %r5, %r28;
	cvt.u64.u32	%rd58, %r125;
	cvta.to.global.u64 	%rd59, %rd2;
	add.s64 	%rd60, %rd59, %rd58;
	mul.wide.u32 	%rd61, %r4, 16;
	add.s64 	%rd62, %rd60, %rd61;
	st.global.f32 	[%rd62], %f248;
	st.global.f32 	[%rd62+4], %f249;
	mov.u32 	%r126, 0;
	st.global.u32 	[%rd62+12], %r126;
	st.global.u8 	[%rd62+8], %rs8;

BB3_53:
	ret;
}

	// .globl	fractalRenderAdvancedDouble
.visible .entry fractalRenderAdvancedDouble(
	.param .u64 fractalRenderAdvancedDouble_param_0,
	.param .u32 fractalRenderAdvancedDouble_param_1,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_2[8],
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_3[32],
	.param .u32 fractalRenderAdvancedDouble_param_4,
	.param .f32 fractalRenderAdvancedDouble_param_5,
	.param .u32 fractalRenderAdvancedDouble_param_6,
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_7[32],
	.param .u64 fractalRenderAdvancedDouble_param_8,
	.param .u32 fractalRenderAdvancedDouble_param_9,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot4[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<74>;
	.reg .b16 	%rs<9>;
	.reg .f32 	%f<123>;
	.reg .b32 	%r<165>;
	.reg .f64 	%fd<154>;
	.reg .b64 	%rd<64>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u32 	%r30, [fractalRenderAdvancedDouble_param_2+4];
	ld.param.u32 	%r29, [fractalRenderAdvancedDouble_param_2];
	ld.param.f64 	%fd41, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd40, [fractalRenderAdvancedDouble_param_3+16];
	ld.param.f64 	%fd39, [fractalRenderAdvancedDouble_param_3+8];
	ld.param.f64 	%fd38, [fractalRenderAdvancedDouble_param_3];
	ld.param.u32 	%r31, [fractalRenderAdvancedDouble_param_4];
	ld.param.f32 	%f115, [fractalRenderAdvancedDouble_param_5];
	ld.param.u32 	%r32, [fractalRenderAdvancedDouble_param_6];
	ld.param.f64 	%fd45, [fractalRenderAdvancedDouble_param_7+24];
	ld.param.f64 	%fd44, [fractalRenderAdvancedDouble_param_7+16];
	ld.param.f64 	%fd43, [fractalRenderAdvancedDouble_param_7+8];
	ld.param.f64 	%fd42, [fractalRenderAdvancedDouble_param_7];
	ld.param.u64 	%rd3, [fractalRenderAdvancedDouble_param_8];
	ld.param.u32 	%r33, [fractalRenderAdvancedDouble_param_9];
	ld.param.u32 	%r35, [fractalRenderAdvancedDouble_param_10+4];
	ld.param.u32 	%r34, [fractalRenderAdvancedDouble_param_10];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p2, %r1, 32;
	@%p2 bra 	BB4_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r36, 59;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r36;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB4_2:
	mov.u32 	%r37, %tid.x;
	mov.u32 	%r38, %tid.y;
	mad.lo.s32 	%r39, %r1, %r38, %r37;
	shl.b32 	%r40, %r1, 2;
	and.b32  	%r41, %r39, 15;
	rem.u32 	%r42, %r39, %r40;
	sub.s32 	%r43, %r42, %r41;
	shr.u32 	%r44, %r43, 2;
	and.b32  	%r45, %r39, 3;
	add.s32 	%r46, %r44, %r45;
	div.u32 	%r47, %r39, %r40;
	shl.b32 	%r48, %r47, 2;
	bfe.u32 	%r49, %r39, 2, 2;
	add.s32 	%r50, %r48, %r49;
	mov.u32 	%r51, %ctaid.x;
	mad.lo.s32 	%r4, %r51, %r1, %r46;
	mov.u32 	%r52, %ctaid.y;
	mov.u32 	%r53, %ntid.y;
	mad.lo.s32 	%r5, %r52, %r53, %r50;
	setp.lt.u32	%p3, %r4, %r29;
	setp.gt.u32	%p4, %r30, %r5;
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB4_52;
	bra.uni 	BB4_3;

BB4_3:
	and.b32  	%r54, %r32, 20;
	setp.eq.s32	%p6, %r54, 20;
	setp.ge.f32	%p7, %f115, 0f3F800000;
	and.pred  	%p8, %p6, %p7;
	mov.u16 	%rs7, 0;
	@!%p8 bra 	BB4_9;
	bra.uni 	BB4_4;

BB4_4:
	and.b32  	%r55, %r4, -8;
	cvt.rn.f32.u32	%f29, %r55;
	and.b32  	%r56, %r5, -4;
	cvt.rn.f32.u32	%f30, %r56;
	cvt.rn.f32.u32	%f31, %r34;
	sub.f32 	%f32, %f31, %f29;
	cvt.rn.f32.u32	%f33, %r35;
	sub.f32 	%f34, %f33, %f30;
	mul.f32 	%f35, %f34, %f34;
	fma.rn.f32 	%f36, %f32, %f32, %f35;
	sqrt.rn.f32 	%f37, %f36;
	mul.f32 	%f38, %f37, 0f3CD94079;
	ld.global.f32 	%f39, [screenDistance];
	div.rn.f32 	%f1, %f38, %f39;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p9, %f2, 0f3F800000;
	mov.f32 	%f114, %f2;
	@%p9 bra 	BB4_6;

	rcp.rn.f32 	%f114, %f2;

BB4_6:
	mul.rn.f32 	%f40, %f114, %f114;
	mov.f32 	%f41, 0fC0B59883;
	mov.f32 	%f42, 0fBF52C7EA;
	fma.rn.f32 	%f43, %f40, %f42, %f41;
	mov.f32 	%f44, 0fC0D21907;
	fma.rn.f32 	%f45, %f43, %f40, %f44;
	mul.f32 	%f46, %f40, %f45;
	mul.f32 	%f47, %f114, %f46;
	add.f32 	%f48, %f40, 0f41355DC0;
	mov.f32 	%f49, 0f41E6BD60;
	fma.rn.f32 	%f50, %f48, %f40, %f49;
	mov.f32 	%f51, 0f419D92C8;
	fma.rn.f32 	%f52, %f50, %f40, %f51;
	rcp.rn.f32 	%f53, %f52;
	fma.rn.f32 	%f54, %f47, %f53, %f114;
	mov.f32 	%f55, 0f3FC90FDB;
	sub.f32 	%f56, %f55, %f54;
	setp.gt.f32	%p10, %f2, 0f3F800000;
	selp.f32	%f57, %f56, %f54, %p10;
	mov.b32 	 %r57, %f57;
	mov.b32 	 %r58, %f1;
	and.b32  	%r59, %r58, -2147483648;
	or.b32  	%r60, %r57, %r59;
	mov.b32 	 %f58, %r60;
	setp.gtu.f32	%p11, %f2, 0f7F800000;
	selp.f32	%f59, %f57, %f58, %p11;
	mul.f32 	%f60, %f59, 0f43340000;
	div.rn.f32 	%f5, %f60, 0f40490FDB;
	setp.ge.f32	%p12, %f5, 0f00000000;
	@%p12 bra 	BB4_8;

	mov.u64 	%rd10, $str5;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str1;
	cvta.global.u64 	%rd13, %rd12;
	mov.u32 	%r61, 245;
	mov.u64 	%rd14, 0;
	mov.u64 	%rd15, 2;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r61;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd14;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd15;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB4_8:
	fma.rn.f32 	%f61, %f5, 0fBC964FDA, 0f3F8CEADD;
	setp.gtu.f32	%p13, %f5, 0f40B00000;
	setp.le.f32	%p14, %f5, 0f40B00000;
	selp.u16	%rs7, 1, 0, %p14;
	selp.f32	%f62, %f61, 0f3F800000, %p13;
	mul.f32 	%f115, %f62, %f115;

BB4_9:
	and.b32  	%r62, %r32, 8;
	setp.eq.s32	%p16, %r62, 0;
	mov.pred 	%p73, -1;
	mov.f32 	%f118, 0f00000000;
	@%p16 bra 	BB4_10;

	sub.s32 	%r63, %r30, %r5;
	cvt.rn.f64.u32	%fd46, %r63;
	cvt.rn.f64.u32	%fd47, %r29;
	cvt.rn.f64.u32	%fd48, %r4;
	div.rn.f64 	%fd49, %fd48, %fd47;
	cvt.rn.f64.u32	%fd50, %r30;
	div.rn.f64 	%fd51, %fd46, %fd50;
	sub.f64 	%fd52, %fd40, %fd38;
	sub.f64 	%fd53, %fd41, %fd39;
	fma.rn.f64 	%fd54, %fd52, %fd49, %fd38;
	fma.rn.f64 	%fd55, %fd53, %fd51, %fd39;
	sub.f64 	%fd56, %fd54, %fd42;
	sub.f64 	%fd57, %fd55, %fd43;
	sub.f64 	%fd58, %fd44, %fd42;
	div.rn.f64 	%fd59, %fd56, %fd58;
	sub.f64 	%fd60, %fd45, %fd43;
	div.rn.f64 	%fd61, %fd57, %fd60;
	cvt.rn.f32.f64	%f65, %fd59;
	cvt.rn.f32.f64	%f66, %fd61;
	cvt.rn.f32.u32	%f67, %r29;
	mul.f32 	%f8, %f67, %f65;
	cvt.rn.f32.u32	%f68, %r30;
	mul.f32 	%f69, %f68, %f66;
	sub.f32 	%f9, %f68, %f69;
	abs.f32 	%f70, %f8;
	mov.b32 	 %r64, %f8;
	and.b32  	%r65, %r64, -2147483648;
	or.b32  	%r66, %r65, 1056964608;
	mov.b32 	 %f71, %r66;
	add.f32 	%f72, %f8, %f71;
	cvt.rzi.f32.f32	%f73, %f72;
	setp.gt.f32	%p17, %f70, 0f4B000000;
	selp.f32	%f116, %f8, %f73, %p17;
	setp.geu.f32	%p18, %f70, 0f3F000000;
	@%p18 bra 	BB4_13;

	cvt.rzi.f32.f32	%f116, %f8;

BB4_13:
	cvt.rzi.s32.f32	%r6, %f116;
	mov.b32 	 %r67, %f9;
	and.b32  	%r68, %r67, -2147483648;
	or.b32  	%r69, %r68, 1056964608;
	mov.b32 	 %f74, %r69;
	add.f32 	%f75, %f9, %f74;
	cvt.rzi.f32.f32	%f76, %f75;
	abs.f32 	%f77, %f9;
	setp.gt.f32	%p19, %f77, 0f4B000000;
	selp.f32	%f117, %f9, %f76, %p19;
	setp.geu.f32	%p20, %f77, 0f3F000000;
	@%p20 bra 	BB4_15;

	cvt.rzi.f32.f32	%f117, %f9;

BB4_15:
	add.s32 	%r70, %r29, -2;
	setp.lt.u32	%p22, %r6, %r70;
	setp.gt.s32	%p23, %r6, 1;
	and.pred  	%p24, %p23, %p22;
	cvt.rzi.s32.f32	%r71, %f117;
	setp.gt.s32	%p25, %r71, 1;
	and.pred  	%p26, %p24, %p25;
	add.s32 	%r72, %r30, -2;
	setp.lt.u32	%p27, %r71, %r72;
	and.pred  	%p28, %p27, %p26;
	mov.f32 	%f119, %f118;
	@!%p28 bra 	BB4_18;
	bra.uni 	BB4_16;

BB4_16:
	shr.u32 	%r73, %r32, 5;
	and.b32  	%r74, %r73, 1;
	setp.eq.b32	%p30, %r74, 1;
	setp.ne.s16	%p31, %rs7, 0;
	and.pred  	%p32, %p31, %p30;
	mov.f32 	%f119, %f118;
	@%p32 bra 	BB4_18;

	cvt.rmi.f32.f32	%f82, %f8;
	cvt.rzi.u32.f32	%r75, %f82;
	cvt.rmi.f32.f32	%f83, %f9;
	cvt.rzi.u32.f32	%r76, %f83;
	cvt.rn.f32.u32	%f84, %r75;
	sub.f32 	%f85, %f8, %f84;
	cvt.rn.f32.u32	%f86, %r76;
	sub.f32 	%f87, %f9, %f86;
	mul.lo.s32 	%r77, %r76, %r33;
	cvt.u64.u32	%rd16, %r77;
	cvta.to.global.u64 	%rd17, %rd3;
	add.s64 	%rd18, %rd17, %rd16;
	mul.wide.u32 	%rd19, %r75, 16;
	add.s64 	%rd20, %rd18, %rd19;
	add.s32 	%r78, %r75, 1;
	mul.wide.u32 	%rd21, %r78, 16;
	add.s64 	%rd22, %rd18, %rd21;
	add.s32 	%r79, %r76, 1;
	mul.lo.s32 	%r80, %r79, %r33;
	cvt.u64.u32	%rd23, %r80;
	add.s64 	%rd24, %rd17, %rd23;
	add.s64 	%rd25, %rd24, %rd19;
	add.s64 	%rd26, %rd24, %rd21;
	mov.f32 	%f88, 0f3F800000;
	sub.f32 	%f89, %f88, %f85;
	ld.global.f32 	%f90, [%rd20];
	ld.global.f32 	%f91, [%rd22];
	mul.f32 	%f92, %f85, %f91;
	fma.rn.f32 	%f93, %f90, %f89, %f92;
	sub.f32 	%f94, %f88, %f87;
	ld.global.f32 	%f95, [%rd25];
	ld.global.f32 	%f96, [%rd26];
	mul.f32 	%f97, %f85, %f96;
	fma.rn.f32 	%f98, %f89, %f95, %f97;
	mul.f32 	%f99, %f87, %f98;
	fma.rn.f32 	%f118, %f94, %f93, %f99;
	ld.global.f32 	%f100, [%rd20+4];
	ld.global.f32 	%f101, [%rd22+4];
	mul.f32 	%f102, %f85, %f101;
	fma.rn.f32 	%f103, %f89, %f100, %f102;
	ld.global.f32 	%f104, [%rd25+4];
	ld.global.f32 	%f105, [%rd26+4];
	mul.f32 	%f106, %f85, %f105;
	fma.rn.f32 	%f107, %f89, %f104, %f106;
	mul.f32 	%f108, %f87, %f107;
	fma.rn.f32 	%f119, %f94, %f103, %f108;
	mov.pred 	%p73, 0;
	bra.uni 	BB4_18;

BB4_10:
	mov.f32 	%f119, %f118;

BB4_18:
	mov.u16 	%rs8, 1;
	@!%p73 bra 	BB4_51;
	bra.uni 	BB4_19;

BB4_19:
	setp.lt.f32	%p34, %f115, 0f3F800000;
	selp.f32	%f20, 0f3F800000, %f115, %p34;
	abs.f32 	%f109, %f20;
	mov.b32 	 %r81, %f20;
	and.b32  	%r82, %r81, -2147483648;
	or.b32  	%r83, %r82, 1056964608;
	mov.b32 	 %f110, %r83;
	add.f32 	%f111, %f20, %f110;
	cvt.rzi.f32.f32	%f112, %f111;
	setp.gt.f32	%p35, %f109, 0f4B000000;
	selp.f32	%f120, %f20, %f112, %p35;
	setp.geu.f32	%p36, %f109, 0f3F000000;
	@%p36 bra 	BB4_21;

	cvt.rzi.f32.f32	%f120, %f20;

BB4_21:
	cvt.rn.f64.u32	%fd62, %r29;
	sub.f64 	%fd63, %fd40, %fd38;
	div.rn.f64 	%fd5, %fd63, %fd62;
	cvt.rn.f64.u32	%fd64, %r30;
	sub.f64 	%fd65, %fd41, %fd39;
	div.rn.f64 	%fd6, %fd65, %fd64;
	cvt.rzi.u32.f32	%r7, %f120;
	setp.lt.u32	%p37, %r7, 65;
	@%p37 bra 	BB4_23;

	mov.u64 	%rd27, $str6;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, $str1;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r84, 113;
	mov.u64 	%rd31, 0;
	mov.u64 	%rd32, 2;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r84;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB4_23:
	setp.eq.s32	%p38, %r7, 0;
	mov.u32 	%r163, 0;
	mov.u32 	%r162, %r163;
	@%p38 bra 	BB4_50;

	cvt.rn.f64.u32	%fd7, %r4;
	cvt.rn.f64.u32	%fd8, %r5;
	ld.const.f64 	%fd9, [coefficients+8];
	ld.const.f64 	%fd10, [coefficients];
	ld.const.f64 	%fd11, [coefficients+16];
	add.f64 	%fd12, %fd11, %fd11;
	ld.const.f64 	%fd13, [coefficients+24];
	mul.f64 	%fd14, %fd13, 0d4008000000000000;
	ld.const.f64 	%fd15, [roots];
	ld.const.f64 	%fd16, [roots+8];
	ld.const.f64 	%fd17, [roots+16];
	ld.const.f64 	%fd18, [roots+24];
	ld.const.f64 	%fd19, [roots+32];
	mov.u32 	%r88, 0;
	ld.const.f64 	%fd20, [roots+40];
	mov.u32 	%r153, %r88;
	mov.u32 	%r163, %r88;
	mov.u32 	%r162, %r7;

BB4_25:
	mov.u32 	%r10, %r162;
	mov.u32 	%r8, %r153;
	ld.param.f64 	%fd146, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd145, [fractalRenderAdvancedDouble_param_3];
	cvt.rn.f64.u32	%fd66, %r10;
	cvt.rn.f64.u32	%fd67, %r8;
	div.rn.f64 	%fd68, %fd67, %fd66;
	add.f64 	%fd69, %fd7, %fd68;
	add.f64 	%fd70, %fd8, %fd68;
	neg.f64 	%fd71, %fd70;
	fma.rn.f64 	%fd148, %fd5, %fd69, %fd145;
	fma.rn.f64 	%fd147, %fd6, %fd71, %fd146;
	setp.eq.s32	%p39, %r31, 0;
	mov.u32 	%r156, %r88;
	mov.u32 	%r157, %r88;
	@%p39 bra 	BB4_33;

BB4_26:
	mul.f64 	%fd72, %fd147, %fd147;
	mul.f64 	%fd73, %fd148, %fd148;
	sub.f64 	%fd74, %fd73, %fd72;
	mul.f64 	%fd75, %fd148, %fd147;
	fma.rn.f64 	%fd76, %fd148, %fd147, %fd75;
	mul.f64 	%fd77, %fd148, %fd74;
	mul.f64 	%fd78, %fd147, %fd76;
	sub.f64 	%fd79, %fd77, %fd78;
	mul.f64 	%fd80, %fd148, %fd76;
	fma.rn.f64 	%fd81, %fd147, %fd74, %fd80;
	fma.rn.f64 	%fd82, %fd148, %fd9, %fd10;
	mul.f64 	%fd83, %fd76, %fd11;
	fma.rn.f64 	%fd84, %fd74, %fd11, %fd82;
	fma.rn.f64 	%fd85, %fd147, %fd9, %fd83;
	fma.rn.f64 	%fd86, %fd79, %fd13, %fd84;
	fma.rn.f64 	%fd87, %fd81, %fd13, %fd85;
	fma.rn.f64 	%fd88, %fd148, %fd12, %fd9;
	mul.f64 	%fd89, %fd76, %fd14;
	fma.rn.f64 	%fd90, %fd74, %fd14, %fd88;
	fma.rn.f64 	%fd91, %fd147, %fd12, %fd89;
	abs.f64 	%fd92, %fd90;
	abs.f64 	%fd93, %fd91;
	add.f64 	%fd94, %fd92, %fd93;
	rcp.rn.f64 	%fd95, %fd94;
	mul.f64 	%fd96, %fd86, %fd95;
	mul.f64 	%fd97, %fd87, %fd95;
	mul.f64 	%fd98, %fd90, %fd95;
	mul.f64 	%fd99, %fd91, %fd95;
	mul.f64 	%fd100, %fd99, %fd99;
	fma.rn.f64 	%fd101, %fd98, %fd98, %fd100;
	rcp.rn.f64 	%fd102, %fd101;
	mul.f64 	%fd103, %fd97, %fd99;
	fma.rn.f64 	%fd104, %fd96, %fd98, %fd103;
	mul.f64 	%fd105, %fd102, %fd104;
	mul.f64 	%fd106, %fd97, %fd98;
	mul.f64 	%fd107, %fd96, %fd99;
	sub.f64 	%fd108, %fd106, %fd107;
	mul.f64 	%fd109, %fd102, %fd108;
	sub.f64 	%fd148, %fd148, %fd105;
	sub.f64 	%fd147, %fd147, %fd109;
	sub.f64 	%fd110, %fd148, %fd15;
	abs.f64 	%fd111, %fd110;
	setp.geu.f64	%p40, %fd111, 0d3F1A36E2EB1C432D;
	@%p40 bra 	BB4_28;

	add.s32 	%r157, %r156, 1;
	sub.f64 	%fd112, %fd147, %fd16;
	abs.f64 	%fd113, %fd112;
	setp.lt.f64	%p41, %fd113, 0d3F1A36E2EB1C432D;
	@%p41 bra 	BB4_33;

BB4_28:
	sub.f64 	%fd114, %fd148, %fd17;
	abs.f64 	%fd115, %fd114;
	setp.geu.f64	%p42, %fd115, 0d3F1A36E2EB1C432D;
	@%p42 bra 	BB4_30;

	add.s32 	%r157, %r156, 1;
	sub.f64 	%fd116, %fd147, %fd18;
	abs.f64 	%fd117, %fd116;
	setp.lt.f64	%p43, %fd117, 0d3F1A36E2EB1C432D;
	@%p43 bra 	BB4_33;

BB4_30:
	sub.f64 	%fd118, %fd148, %fd19;
	abs.f64 	%fd119, %fd118;
	add.s32 	%r156, %r156, 1;
	setp.lt.f64	%p44, %fd119, 0d3F1A36E2EB1C432D;
	@%p44 bra 	BB4_32;
	bra.uni 	BB4_31;

BB4_32:
	setp.lt.u32	%p46, %r156, %r31;
	sub.f64 	%fd120, %fd147, %fd20;
	abs.f64 	%fd121, %fd120;
	setp.geu.f64	%p47, %fd121, 0d3F1A36E2EB1C432D;
	and.pred  	%p48, %p47, %p46;
	mov.u32 	%r157, %r156;
	@%p48 bra 	BB4_26;
	bra.uni 	BB4_33;

BB4_31:
	setp.lt.u32	%p45, %r156, %r31;
	mov.u32 	%r157, %r156;
	@%p45 bra 	BB4_26;

BB4_33:
	cvt.rn.f32.u32	%f113, %r157;
	cvt.rzi.u32.f32	%r14, %f113;
	add.s32 	%r163, %r14, %r163;
	setp.gt.u32	%p49, %r8, 9;
	@%p49 bra 	BB4_35;

	add.u64 	%rd33, %SP, 0;
	cvta.to.local.u64 	%rd34, %rd33;
	mul.wide.u32 	%rd35, %r8, 4;
	add.s64 	%rd36, %rd34, %rd35;
	st.local.u32 	[%rd36], %r14;

BB4_35:
	ld.param.u32 	%r127, [fractalRenderAdvancedDouble_param_6];
	setp.lt.u32	%p50, %r8, 10;
	and.b32  	%r91, %r127, 1;
	setp.eq.b32	%p51, %r91, 1;
	setp.ne.s32	%p52, %r8, 0;
	and.pred  	%p53, %p50, %p52;
	and.pred  	%p54, %p53, %p51;
	shr.u32 	%r92, %r10, 1;
	setp.eq.s32	%p55, %r8, %r92;
	or.pred  	%p56, %p54, %p55;
	add.s32 	%r153, %r8, 1;
	mov.u32 	%r162, %r10;
	@!%p56 bra 	BB4_49;
	bra.uni 	BB4_36;

BB4_36:
	div.u32 	%r93, %r163, %r153;
	cvt.rn.f64.u32	%fd27, %r93;
	setp.eq.s32	%p57, %r8, 0;
	mov.f64 	%fd153, 0d0000000000000000;
	@%p57 bra 	BB4_45;

	and.b32  	%r95, %r8, 3;
	setp.eq.s32	%p58, %r95, 0;
	mov.f64 	%fd153, 0d0000000000000000;
	mov.u32 	%r161, 0;
	@%p58 bra 	BB4_43;

	setp.eq.s32	%p59, %r95, 1;
	mov.f64 	%fd150, 0d0000000000000000;
	mov.u32 	%r159, 0;
	@%p59 bra 	BB4_42;

	setp.eq.s32	%p60, %r95, 2;
	mov.f64 	%fd149, 0d0000000000000000;
	mov.u32 	%r158, 0;
	@%p60 bra 	BB4_41;

	add.u64 	%rd37, %SP, 0;
	cvta.to.local.u64 	%rd38, %rd37;
	ld.local.u32 	%r101, [%rd38];
	cvt.rn.f64.u32	%fd126, %r101;
	sub.f64 	%fd127, %fd126, %fd27;
	fma.rn.f64 	%fd149, %fd127, %fd127, 0d0000000000000000;
	mov.u32 	%r158, 1;

BB4_41:
	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd39;
	mul.wide.u32 	%rd41, %r158, 4;
	add.s64 	%rd42, %rd40, %rd41;
	ld.local.u32 	%r102, [%rd42];
	cvt.rn.f64.u32	%fd128, %r102;
	sub.f64 	%fd129, %fd128, %fd27;
	fma.rn.f64 	%fd150, %fd129, %fd129, %fd149;
	add.s32 	%r159, %r158, 1;

BB4_42:
	add.u64 	%rd43, %SP, 0;
	cvta.to.local.u64 	%rd44, %rd43;
	mul.wide.u32 	%rd45, %r159, 4;
	add.s64 	%rd46, %rd44, %rd45;
	ld.local.u32 	%r103, [%rd46];
	cvt.rn.f64.u32	%fd130, %r103;
	sub.f64 	%fd131, %fd130, %fd27;
	fma.rn.f64 	%fd153, %fd131, %fd131, %fd150;
	add.s32 	%r161, %r159, 1;

BB4_43:
	add.u64 	%rd47, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd47;
	setp.lt.u32	%p61, %r8, 4;
	@%p61 bra 	BB4_45;

BB4_44:
	mul.wide.u32 	%rd48, %r161, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.u32 	%r104, [%rd49];
	cvt.rn.f64.u32	%fd132, %r104;
	sub.f64 	%fd133, %fd132, %fd27;
	fma.rn.f64 	%fd134, %fd133, %fd133, %fd153;
	add.s32 	%r105, %r161, 1;
	mul.wide.u32 	%rd50, %r105, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.u32 	%r106, [%rd51];
	cvt.rn.f64.u32	%fd135, %r106;
	sub.f64 	%fd136, %fd135, %fd27;
	fma.rn.f64 	%fd137, %fd136, %fd136, %fd134;
	add.s32 	%r107, %r161, 2;
	mul.wide.u32 	%rd52, %r107, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.u32 	%r108, [%rd53];
	cvt.rn.f64.u32	%fd138, %r108;
	sub.f64 	%fd139, %fd138, %fd27;
	fma.rn.f64 	%fd140, %fd139, %fd139, %fd137;
	add.s32 	%r109, %r161, 3;
	mul.wide.u32 	%rd54, %r109, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.u32 	%r110, [%rd55];
	cvt.rn.f64.u32	%fd141, %r110;
	sub.f64 	%fd142, %fd141, %fd27;
	fma.rn.f64 	%fd153, %fd142, %fd142, %fd140;
	add.s32 	%r161, %r161, 4;
	setp.lt.u32	%p62, %r161, %r8;
	@%p62 bra 	BB4_44;

BB4_45:
	add.s32 	%r111, %r8, -1;
	cvt.rn.f64.u32	%fd143, %r111;
	div.rn.f64 	%fd144, %fd153, %fd143;
	div.rn.f64 	%fd37, %fd144, %fd27;
	setp.ne.s32	%p63, %r8, 1;
	@%p63 bra 	BB4_47;

	// inline asm
	activemask.b32 %r112;
	// inline asm
	add.u64 	%rd56, %SP, 0;
	cvta.to.local.u64 	%rd57, %rd56;
	ld.local.v2.u32 	{%r114, %r115}, [%rd57];
	setp.eq.s32	%p64, %r114, %r115;
	vote.sync.all.pred 	%p65, %p64, %r112;
	mov.u32 	%r162, 2;
	@%p65 bra 	BB4_49;

BB4_47:
	// inline asm
	activemask.b32 %r119;
	// inline asm
	setp.lt.f64	%p66, %fd37, 0d3F847AE140000000;
	vote.sync.all.pred 	%p67, %p66, %r119;
	mov.u32 	%r162, %r153;
	@%p67 bra 	BB4_49;

	// inline asm
	activemask.b32 %r121;
	// inline asm
	setp.le.f64	%p68, %fd37, 0d3FF0000000000000;
	vote.sync.all.pred 	%p69, %p68, %r121;
	setp.ge.u32	%p70, %r8, %r92;
	and.pred  	%p71, %p69, %p70;
	selp.b32	%r162, %r153, %r10, %p71;

BB4_49:
	setp.lt.u32	%p72, %r153, %r162;
	@%p72 bra 	BB4_25;

BB4_50:
	cvt.rn.f32.u32	%f119, %r162;
	div.u32 	%r124, %r163, %r162;
	cvt.rn.f32.u32	%f118, %r124;
	mov.u16 	%rs8, 0;

BB4_51:
	ld.param.u64 	%rd63, [fractalRenderAdvancedDouble_param_0];
	mov.u32 	%r148, %tid.y;
	mov.u32 	%r147, %ntid.x;
	mov.u32 	%r146, %tid.x;
	mad.lo.s32 	%r145, %r147, %r148, %r146;
	shl.b32 	%r144, %r147, 2;
	ld.param.u32 	%r143, [fractalRenderAdvancedDouble_param_1];
	div.u32 	%r142, %r145, %r144;
	bfe.u32 	%r141, %r145, 2, 2;
	shl.b32 	%r140, %r142, 2;
	add.s32 	%r139, %r140, %r141;
	mov.u32 	%r138, %ntid.y;
	mov.u32 	%r137, %ctaid.y;
	mad.lo.s32 	%r136, %r137, %r138, %r139;
	and.b32  	%r135, %r145, 15;
	rem.u32 	%r134, %r145, %r144;
	sub.s32 	%r133, %r134, %r135;
	and.b32  	%r132, %r145, 3;
	shr.u32 	%r131, %r133, 2;
	add.s32 	%r130, %r131, %r132;
	mov.u32 	%r129, %ctaid.x;
	mad.lo.s32 	%r128, %r129, %r147, %r130;
	mul.lo.s32 	%r125, %r136, %r143;
	cvt.u64.u32	%rd58, %r125;
	cvta.to.global.u64 	%rd59, %rd63;
	add.s64 	%rd60, %rd59, %rd58;
	mul.wide.u32 	%rd61, %r128, 16;
	add.s64 	%rd62, %rd60, %rd61;
	st.global.f32 	[%rd62], %f118;
	st.global.f32 	[%rd62+4], %f119;
	mov.u32 	%r126, 0;
	st.global.u32 	[%rd62+12], %r126;
	st.global.u8 	[%rd62+8], %rs8;

BB4_52:
	ret;
}

	// .globl	compose
.visible .entry compose(
	.param .u64 compose_param_0,
	.param .u32 compose_param_1,
	.param .u64 compose_param_2,
	.param .u32 compose_param_3,
	.param .u64 compose_param_4,
	.param .u32 compose_param_5,
	.param .u32 compose_param_6,
	.param .u64 compose_param_7,
	.param .u32 compose_param_8,
	.param .f32 compose_param_9
)
{
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<16>;
	.reg .b32 	%r<39>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [compose_param_0];
	ld.param.u32 	%r7, [compose_param_1];
	ld.param.u64 	%rd3, [compose_param_4];
	ld.param.u32 	%r9, [compose_param_5];
	ld.param.u32 	%r10, [compose_param_6];
	ld.param.u64 	%rd4, [compose_param_7];
	ld.param.u32 	%r8, [compose_param_8];
	ld.param.f32 	%f5, [compose_param_9];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r12, %r11, %r13;
	mov.u32 	%r14, %ctaid.y;
	mov.u32 	%r15, %ntid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r14, %r15, %r16;
	setp.ge.u32	%p1, %r2, %r10;
	setp.ge.u32	%p2, %r1, %r9;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_9;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.lo.s32 	%r17, %r2, %r7;
	cvt.u64.u32	%rd6, %r17;
	add.s64 	%rd7, %rd5, %rd6;
	mul.wide.u32 	%rd8, %r1, 16;
	add.s64 	%rd1, %rd7, %rd8;
	ld.const.u8 	%rs1, [VISUALIZE_SAMPLE_COUNT];
	setp.eq.s16	%p4, %rs1, 0;
	@%p4 bra 	BB5_3;

	ld.global.f32 	%f6, [%rd1+4];
	cvt.rzi.u32.f32	%r18, %f6;
	cvt.rzi.u32.f32	%r19, %f5;
	min.u32 	%r20, %r18, %r19;
	cvt.rn.f32.u32	%f7, %r20;
	cvt.rn.f32.u32	%f8, %r19;
	div.rn.f32 	%f9, %f7, %f8;
	mul.f32 	%f10, %f9, 0f437F0000;
	cvt.rzi.s32.f32	%r21, %f10;
	and.b32  	%r22, %r21, 255;
	prmt.b32 	%r23, %r22, %r22, 30212;
	prmt.b32 	%r24, %r22, %r23, 28756;
	or.b32  	%r25, %r24, -16777216;
	ld.global.u8 	%rs2, [%rd1+8];
	setp.eq.s16	%p5, %rs2, 0;
	selp.b32	%r38, %r25, -16777216, %p5;
	bra.uni 	BB5_8;

BB5_3:
	ld.global.f32 	%f1, [%rd1];
	abs.f32 	%f11, %f1;
	mov.b32 	 %r26, %f1;
	and.b32  	%r27, %r26, -2147483648;
	or.b32  	%r28, %r27, 1056964608;
	mov.b32 	 %f12, %r28;
	add.f32 	%f13, %f1, %f12;
	cvt.rzi.f32.f32	%f14, %f13;
	setp.gt.f32	%p6, %f11, 0f4B000000;
	selp.f32	%f15, %f1, %f14, %p6;
	setp.geu.f32	%p7, %f11, 0f3F000000;
	@%p7 bra 	BB5_5;

	cvt.rzi.f32.f32	%f15, %f1;

BB5_5:
	ld.const.u32 	%r29, [colorMagnifier];
	cvt.rzi.u32.f32	%r30, %f15;
	mul.lo.s32 	%r31, %r29, %r30;
	rem.u32 	%r32, %r31, %r8;
	sub.s32 	%r33, %r8, %r32;
	add.s32 	%r4, %r33, -1;
	setp.lt.u32	%p8, %r4, %r8;
	@%p8 bra 	BB5_7;

	mov.u64 	%rd9, $str7;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str8;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r34, 74;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB5_7:
	shl.b32 	%r35, %r4, 2;
	mov.u32 	%r36, 0;
	suld.b.2d.b32.trap {%r38}, [%rd4, {%r35, %r36}];

BB5_8:
	shl.b32 	%r37, %r1, 2;
	sust.b.2d.b32.trap 	[%rd3, {%r37, %r2}], {%r38};

BB5_9:
	ret;
}

	// .globl	fractalRenderUnderSampled
.visible .entry fractalRenderUnderSampled(
	.param .u64 fractalRenderUnderSampled_param_0,
	.param .u32 fractalRenderUnderSampled_param_1,
	.param .u32 fractalRenderUnderSampled_param_2,
	.param .u32 fractalRenderUnderSampled_param_3,
	.param .f32 fractalRenderUnderSampled_param_4,
	.param .f32 fractalRenderUnderSampled_param_5,
	.param .f32 fractalRenderUnderSampled_param_6,
	.param .f32 fractalRenderUnderSampled_param_7,
	.param .u32 fractalRenderUnderSampled_param_8,
	.param .u32 fractalRenderUnderSampled_param_9
)
{
	.reg .pred 	%p<20>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<79>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<29>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [fractalRenderUnderSampled_param_0];
	ld.param.u32 	%r11, [fractalRenderUnderSampled_param_1];
	ld.param.u32 	%r12, [fractalRenderUnderSampled_param_2];
	ld.param.u32 	%r13, [fractalRenderUnderSampled_param_3];
	ld.param.f32 	%f17, [fractalRenderUnderSampled_param_4];
	ld.param.f32 	%f18, [fractalRenderUnderSampled_param_5];
	ld.param.f32 	%f19, [fractalRenderUnderSampled_param_6];
	ld.param.f32 	%f20, [fractalRenderUnderSampled_param_7];
	ld.param.u32 	%r14, [fractalRenderUnderSampled_param_8];
	ld.param.u32 	%r15, [fractalRenderUnderSampled_param_9];
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %ctaid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r19, %r17, %r16, %r18;
	mul.lo.s32 	%r1, %r19, %r15;
	mov.u32 	%r20, %ctaid.y;
	mov.u32 	%r21, %ntid.y;
	mov.u32 	%r22, %tid.y;
	mad.lo.s32 	%r23, %r20, %r21, %r22;
	mul.lo.s32 	%r2, %r23, %r15;
	sub.s32 	%r24, %r13, %r15;
	setp.ge.u32	%p1, %r2, %r24;
	sub.s32 	%r25, %r12, %r15;
	setp.ge.u32	%p2, %r1, %r25;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB6_20;

	sub.f32 	%f22, %f19, %f17;
	cvt.rn.f32.u32	%f23, %r12;
	div.rn.f32 	%f24, %f22, %f23;
	cvt.rn.f32.u32	%f25, %r1;
	fma.rn.f32 	%f77, %f25, %f24, %f17;
	setp.eq.s32	%p4, %r14, 0;
	mov.f32 	%f78, 0f00000000;
	@%p4 bra 	BB6_11;

	ld.const.f64 	%fd1, [coefficients+8];
	ld.const.f64 	%fd2, [coefficients];
	ld.const.f64 	%fd3, [coefficients+16];
	add.f64 	%fd4, %fd3, %fd3;
	ld.const.f64 	%fd5, [coefficients+24];
	mul.f64 	%fd6, %fd5, 0d4008000000000000;
	ld.const.f64 	%fd7, [roots];
	cvt.rn.f32.f64	%f2, %fd7;
	ld.const.f64 	%fd8, [roots+8];
	cvt.rn.f32.f64	%f3, %fd8;
	ld.const.f64 	%fd9, [roots+16];
	cvt.rn.f32.f64	%f4, %fd9;
	ld.const.f64 	%fd10, [roots+24];
	cvt.rn.f32.f64	%f5, %fd10;
	ld.const.f64 	%fd11, [roots+32];
	cvt.rn.f32.f64	%f6, %fd11;
	ld.const.f64 	%fd12, [roots+40];
	cvt.rn.f32.f64	%f7, %fd12;
	cvt.rn.f32.u32	%f26, %r2;
	sub.f32 	%f27, %f20, %f18;
	cvt.rn.f32.u32	%f28, %r13;
	div.rn.f32 	%f29, %f27, %f28;
	mul.f32 	%f30, %f26, %f29;
	sub.f32 	%f76, %f20, %f30;
	mov.u32 	%r48, 0;

BB6_3:
	mul.f32 	%f31, %f76, %f76;
	mul.f32 	%f32, %f77, %f77;
	sub.f32 	%f33, %f32, %f31;
	mul.f32 	%f34, %f77, %f76;
	fma.rn.f32 	%f35, %f77, %f76, %f34;
	mul.f32 	%f36, %f77, %f33;
	mul.f32 	%f37, %f76, %f35;
	sub.f32 	%f38, %f36, %f37;
	mul.f32 	%f39, %f77, %f35;
	fma.rn.f32 	%f40, %f76, %f33, %f39;
	cvt.f64.f32	%fd13, %f77;
	cvt.f64.f32	%fd14, %f76;
	fma.rn.f64 	%fd15, %fd13, %fd1, %fd2;
	cvt.f64.f32	%fd16, %f33;
	cvt.f64.f32	%fd17, %f35;
	mul.f64 	%fd18, %fd17, %fd3;
	fma.rn.f64 	%fd19, %fd16, %fd3, %fd15;
	fma.rn.f64 	%fd20, %fd14, %fd1, %fd18;
	cvt.f64.f32	%fd21, %f38;
	cvt.f64.f32	%fd22, %f40;
	fma.rn.f64 	%fd23, %fd21, %fd5, %fd19;
	fma.rn.f64 	%fd24, %fd22, %fd5, %fd20;
	cvt.rn.f32.f64	%f41, %fd23;
	cvt.rn.f32.f64	%f42, %fd24;
	fma.rn.f64 	%fd25, %fd13, %fd4, %fd1;
	mul.f64 	%fd26, %fd17, %fd6;
	fma.rn.f64 	%fd27, %fd16, %fd6, %fd25;
	fma.rn.f64 	%fd28, %fd14, %fd4, %fd26;
	cvt.rn.f32.f64	%f43, %fd27;
	cvt.rn.f32.f64	%f44, %fd28;
	abs.f32 	%f45, %f43;
	abs.f32 	%f46, %f44;
	add.f32 	%f47, %f45, %f46;
	rcp.rn.f32 	%f48, %f47;
	mul.f32 	%f49, %f41, %f48;
	mul.f32 	%f50, %f42, %f48;
	mul.f32 	%f51, %f48, %f43;
	mul.f32 	%f52, %f48, %f44;
	mul.f32 	%f53, %f52, %f52;
	fma.rn.f32 	%f54, %f51, %f51, %f53;
	rcp.rn.f32 	%f55, %f54;
	mul.f32 	%f56, %f50, %f52;
	fma.rn.f32 	%f57, %f49, %f51, %f56;
	mul.f32 	%f58, %f55, %f57;
	mul.f32 	%f59, %f50, %f51;
	mul.f32 	%f60, %f49, %f52;
	sub.f32 	%f61, %f59, %f60;
	mul.f32 	%f62, %f55, %f61;
	sub.f32 	%f77, %f77, %f58;
	sub.f32 	%f76, %f76, %f62;
	add.s32 	%r48, %r48, 1;
	sub.f32 	%f63, %f77, %f2;
	abs.f32 	%f64, %f63;
	setp.geu.f32	%p5, %f64, 0f38D1B717;
	@%p5 bra 	BB6_5;

	sub.f32 	%f65, %f76, %f3;
	abs.f32 	%f66, %f65;
	setp.lt.f32	%p6, %f66, 0f38D1B717;
	@%p6 bra 	BB6_10;

BB6_5:
	sub.f32 	%f67, %f77, %f4;
	abs.f32 	%f68, %f67;
	setp.geu.f32	%p7, %f68, 0f38D1B717;
	@%p7 bra 	BB6_7;

	sub.f32 	%f69, %f76, %f5;
	abs.f32 	%f70, %f69;
	setp.lt.f32	%p8, %f70, 0f38D1B717;
	@%p8 bra 	BB6_10;

BB6_7:
	sub.f32 	%f71, %f77, %f6;
	abs.f32 	%f72, %f71;
	setp.lt.f32	%p9, %f72, 0f38D1B717;
	@%p9 bra 	BB6_9;
	bra.uni 	BB6_8;

BB6_9:
	setp.lt.u32	%p11, %r48, %r14;
	sub.f32 	%f73, %f76, %f7;
	abs.f32 	%f74, %f73;
	setp.geu.f32	%p12, %f74, 0f38D1B717;
	and.pred  	%p13, %p12, %p11;
	@%p13 bra 	BB6_3;
	bra.uni 	BB6_10;

BB6_8:
	setp.lt.u32	%p10, %r48, %r14;
	@%p10 bra 	BB6_3;

BB6_10:
	cvt.rn.f32.u32	%f78, %r48;

BB6_11:
	setp.eq.s32	%p14, %r15, 0;
	@%p14 bra 	BB6_20;

	cvt.rzi.u32.f32	%r31, %f78;
	mul.lo.s32 	%r37, %r2, %r11;
	cvt.u64.u32	%rd3, %r37;
	cvta.to.global.u64 	%rd4, %rd2;
	add.s64 	%rd5, %rd4, %rd3;
	cvt.rn.f32.u32	%f75, %r15;
	rcp.rn.f32 	%f15, %f75;
	cvt.rn.f32.u32	%f16, %r31;
	mul.wide.u32 	%rd6, %r1, 16;
	add.s64 	%rd1, %rd5, %rd6;
	and.b32  	%r30, %r15, 3;
	mov.u32 	%r49, 1;
	mov.u32 	%r52, 0;
	setp.eq.s32	%p15, %r30, 0;
	@%p15 bra 	BB6_18;

	setp.eq.s32	%p16, %r30, 1;
	mov.u32 	%r50, %r52;
	@%p16 bra 	BB6_17;

	setp.eq.s32	%p17, %r30, 2;
	@%p17 bra 	BB6_16;

	st.global.f32 	[%rd1], %f16;
	st.global.f32 	[%rd1+4], %f15;
	mov.u32 	%r44, 0;
	st.global.u32 	[%rd1+12], %r44;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd1+8], %rs1;
	mov.u32 	%r49, 2;

BB6_16:
	st.global.f32 	[%rd1], %f16;
	st.global.f32 	[%rd1+4], %f15;
	mov.u32 	%r45, 0;
	st.global.u32 	[%rd1+12], %r45;
	mov.u16 	%rs2, 0;
	st.global.u8 	[%rd1+8], %rs2;
	mov.u32 	%r50, %r49;

BB6_17:
	st.global.f32 	[%rd1], %f16;
	st.global.f32 	[%rd1+4], %f15;
	st.global.u32 	[%rd1+12], %r52;
	mov.u16 	%rs3, 0;
	st.global.u8 	[%rd1+8], %rs3;
	add.s32 	%r52, %r50, 1;

BB6_18:
	setp.lt.u32	%p18, %r15, 4;
	@%p18 bra 	BB6_20;

BB6_19:
	st.global.f32 	[%rd1], %f16;
	st.global.f32 	[%rd1+4], %f15;
	mov.u32 	%r47, 0;
	st.global.u32 	[%rd1+12], %r47;
	mov.u16 	%rs4, 0;
	st.global.u8 	[%rd1+8], %rs4;
	add.s32 	%r52, %r52, 4;
	setp.lt.u32	%p19, %r52, %r15;
	@%p19 bra 	BB6_19;

BB6_20:
	ret;
}

	// .globl	debug
.visible .entry debug(

)
{



	ret;
}


