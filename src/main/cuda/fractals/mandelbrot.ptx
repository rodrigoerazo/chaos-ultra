//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24330188
// Cuda compilation tools, release 9.2, V9.2.148
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	init
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 1 .u8 VISUALIZE_SAMPLE_COUNT;
.global .align 4 .u32 seed;
.global .align 4 .u32 WARP_SIZE_X = 8;
.global .align 4 .u32 WARP_SIZE_Y = 4;
.global .align 4 .u32 USE_ADAPTIVE_SS_FLAG_MASK = 1;
.global .align 4 .u32 USE_FOVEATION_FLAG_MASK = 4;
.global .align 4 .u32 USE_SAMPLE_REUSE_FLAG_MASK = 8;
.global .align 4 .u32 IS_ZOOMING_FLAG_MASK = 16;
.global .align 4 .u32 ZOOMING_IN_FLAG_MASK = 32;
.global .align 4 .u32 visualityAmplifyCoeff = 10;
.global .align 4 .f32 screenDistance = 0f42700000;
.global .align 16 .b8 $str[23] = {104, 101, 108, 108, 111, 32, 102, 114, 111, 109, 32, 109, 97, 110, 100, 101, 108, 98, 114, 111, 116, 10, 0};
.global .align 16 .b8 $str1[34] = {98, 0, 108, 0, 111, 0, 99, 0, 107, 0, 68, 0, 105, 0, 109, 0, 46, 0, 120, 0, 32, 0, 61, 0, 61, 0, 32, 0, 51, 0, 50, 0, 0, 0};
.global .align 16 .b8 $str2[138] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 82, 0, 101, 0, 110, 0, 100, 0, 101, 0, 114, 0, 101, 0, 114, 0, 71, 0, 101, 0, 110, 0, 101, 0, 114, 0, 105, 0, 99, 0, 46, 0, 99, 0, 117, 0, 0, 0};
.global .align 16 .b8 $str3[40] = {112, 0, 79, 0, 117, 0, 116, 0, 112, 0, 117, 0, 116, 0, 45, 0, 62, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str6[34] = {118, 0, 105, 0, 115, 0, 117, 0, 97, 0, 108, 0, 65, 0, 110, 0, 103, 0, 108, 0, 101, 0, 32, 0, 62, 0, 61, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str7[68] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 60, 0, 61, 0, 32, 0, 77, 0, 65, 0, 88, 0, 95, 0, 83, 0, 85, 0, 80, 0, 69, 0, 82, 0, 95, 0, 83, 0, 65, 0, 77, 0, 80, 0, 76, 0, 73, 0, 78, 0, 71, 0, 0, 0};
.global .align 16 .b8 $str8[54] = {112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 73, 0, 100, 0, 120, 0, 32, 0, 60, 0, 32, 0, 112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 76, 0, 101, 0, 110, 0, 103, 0, 116, 0, 104, 0, 0, 0};
.global .align 16 .b8 $str9[132] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 115, 0, 47, 0, 109, 0, 97, 0, 110, 0, 100, 0, 101, 0, 108, 0, 98, 0, 114, 0, 111, 0, 116, 0, 46, 0, 99, 0, 117, 0, 0, 0};

.visible .entry init(

)
{



	ret;
}

	// .globl	fractalRenderMainFloat
.visible .entry fractalRenderMainFloat(
	.param .u64 fractalRenderMainFloat_param_0,
	.param .u32 fractalRenderMainFloat_param_1,
	.param .align 4 .b8 fractalRenderMainFloat_param_2[8],
	.param .align 4 .b8 fractalRenderMainFloat_param_3[16],
	.param .u32 fractalRenderMainFloat_param_4,
	.param .f32 fractalRenderMainFloat_param_5,
	.param .u32 fractalRenderMainFloat_param_6
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<38>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<97>;
	.reg .b32 	%r<106>;
	.reg .b64 	%rd<48>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [fractalRenderMainFloat_param_0];
	ld.param.u32 	%r29, [fractalRenderMainFloat_param_1];
	ld.param.u32 	%r31, [fractalRenderMainFloat_param_2+4];
	ld.param.u32 	%r30, [fractalRenderMainFloat_param_2];
	ld.param.f32 	%f39, [fractalRenderMainFloat_param_3+12];
	ld.param.f32 	%f38, [fractalRenderMainFloat_param_3+8];
	ld.param.f32 	%f37, [fractalRenderMainFloat_param_3+4];
	ld.param.f32 	%f36, [fractalRenderMainFloat_param_3];
	ld.param.u32 	%r32, [fractalRenderMainFloat_param_4];
	ld.param.f32 	%f40, [fractalRenderMainFloat_param_5];
	ld.param.u32 	%r33, [fractalRenderMainFloat_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str2;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r34, 59;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB1_2:
	mov.u32 	%r35, %tid.x;
	mov.u32 	%r36, %tid.y;
	mad.lo.s32 	%r37, %r1, %r36, %r35;
	shl.b32 	%r38, %r1, 2;
	and.b32  	%r39, %r37, 15;
	rem.u32 	%r40, %r37, %r38;
	sub.s32 	%r41, %r40, %r39;
	shr.u32 	%r42, %r41, 2;
	and.b32  	%r43, %r37, 3;
	add.s32 	%r44, %r42, %r43;
	div.u32 	%r45, %r37, %r38;
	shl.b32 	%r46, %r45, 2;
	bfe.u32 	%r47, %r37, 2, 2;
	add.s32 	%r48, %r46, %r47;
	mov.u32 	%r49, %ctaid.x;
	mad.lo.s32 	%r4, %r49, %r1, %r44;
	mov.u32 	%r50, %ctaid.y;
	mov.u32 	%r51, %ntid.y;
	mad.lo.s32 	%r5, %r50, %r51, %r48;
	setp.lt.u32	%p2, %r4, %r30;
	setp.lt.u32	%p3, %r5, %r31;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB1_34;
	bra.uni 	BB1_3;

BB1_3:
	setp.lt.f32	%p5, %f40, 0f3F800000;
	mov.f32 	%f94, 0f00000000;
	mov.f32 	%f96, %f94;
	@%p5 bra 	BB1_32;

	abs.f32 	%f43, %f40;
	mov.b32 	 %r52, %f40;
	and.b32  	%r53, %r52, -2147483648;
	or.b32  	%r54, %r53, 1056964608;
	mov.b32 	 %f44, %r54;
	add.f32 	%f45, %f44, %f40;
	cvt.rzi.f32.f32	%f46, %f45;
	setp.gt.f32	%p6, %f43, 0f4B000000;
	selp.f32	%f85, %f40, %f46, %p6;
	setp.geu.f32	%p7, %f43, 0f3F000000;
	@%p7 bra 	BB1_6;

	cvt.rzi.f32.f32	%f85, %f40;

BB1_6:
	cvt.rzi.u32.f32	%r103, %f85;
	setp.lt.u32	%p8, %r103, 65;
	@%p8 bra 	BB1_8;

	mov.u64 	%rd10, $str7;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str2;
	cvta.global.u64 	%rd13, %rd12;
	mov.u32 	%r55, 113;
	mov.u64 	%rd14, 0;
	mov.u64 	%rd15, 2;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r55;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd14;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd15;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_8:
	setp.eq.s32	%p9, %r103, 0;
	cvt.rn.f32.u32	%f94, %r103;
	mov.u32 	%r104, 0;
	@%p9 bra 	BB1_9;

	cvt.rn.f32.u32	%f7, %r4;
	cvt.rn.f32.u32	%f8, %r5;
	cvt.rn.f32.u32	%f47, %r30;
	sub.f32 	%f48, %f38, %f36;
	div.rn.f32 	%f9, %f48, %f47;
	cvt.rn.f32.u32	%f49, %r31;
	sub.f32 	%f50, %f39, %f37;
	div.rn.f32 	%f10, %f50, %f49;
	mov.u32 	%r59, 0;
	and.b32  	%r62, %r33, 1;
	mov.u32 	%r94, %r59;
	mov.u32 	%r104, %r59;

BB1_11:
	mov.u32 	%r9, %r103;
	mov.u32 	%r7, %r94;
	cvt.rn.f32.u32	%f53, %r7;
	div.rn.f32 	%f54, %f53, %f94;
	add.f32 	%f55, %f7, %f54;
	add.f32 	%f56, %f8, %f54;
	neg.f32 	%f57, %f56;
	fma.rn.f32 	%f12, %f9, %f55, %f36;
	fma.rn.f32 	%f13, %f10, %f57, %f39;
	setp.eq.s32	%p10, %r32, 0;
	mov.f32 	%f87, 0f00000000;
	mov.u32 	%r98, %r59;
	mov.f32 	%f88, %f87;
	@%p10 bra 	BB1_14;

BB1_12:
	mul.f32 	%f16, %f87, %f87;
	mul.f32 	%f17, %f88, %f88;
	add.f32 	%f58, %f17, %f16;
	setp.geu.f32	%p11, %f58, 0f40800000;
	@%p11 bra 	BB1_14;

	sub.f32 	%f59, %f17, %f16;
	add.f32 	%f18, %f12, %f59;
	add.f32 	%f60, %f88, %f88;
	fma.rn.f32 	%f87, %f60, %f87, %f13;
	add.s32 	%r98, %r98, 1;
	setp.lt.u32	%p12, %r98, %r32;
	mov.f32 	%f88, %f18;
	@%p12 bra 	BB1_12;

BB1_14:
	cvt.rn.f32.u32	%f61, %r98;
	cvt.rzi.u32.f32	%r13, %f61;
	add.s32 	%r104, %r13, %r104;
	setp.gt.u32	%p13, %r7, 9;
	@%p13 bra 	BB1_16;

	add.u64 	%rd16, %SP, 0;
	cvta.to.local.u64 	%rd17, %rd16;
	mul.wide.u32 	%rd18, %r7, 4;
	add.s64 	%rd19, %rd17, %rd18;
	st.local.u32 	[%rd19], %r13;

BB1_16:
	setp.lt.u32	%p14, %r7, 10;
	setp.eq.b32	%p15, %r62, 1;
	setp.ne.s32	%p16, %r7, 0;
	and.pred  	%p17, %p14, %p16;
	and.pred  	%p18, %p17, %p15;
	shr.u32 	%r15, %r9, 1;
	setp.eq.s32	%p19, %r7, %r15;
	or.pred  	%p20, %p18, %p19;
	add.s32 	%r94, %r7, 1;
	mov.u32 	%r103, %r9;
	@!%p20 bra 	BB1_30;
	bra.uni 	BB1_17;

BB1_17:
	div.u32 	%r63, %r104, %r94;
	cvt.rn.f32.u32	%f20, %r63;
	add.u64 	%rd20, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd20;
	setp.eq.s32	%p21, %r7, 0;
	mov.f32 	%f93, 0f00000000;
	@%p21 bra 	BB1_26;

	and.b32  	%r17, %r7, 3;
	setp.eq.s32	%p22, %r17, 0;
	mov.f32 	%f93, 0f00000000;
	mov.u32 	%r102, 0;
	@%p22 bra 	BB1_24;

	setp.eq.s32	%p23, %r17, 1;
	mov.f32 	%f90, 0f00000000;
	mov.u32 	%r100, 0;
	@%p23 bra 	BB1_23;

	setp.eq.s32	%p24, %r17, 2;
	mov.f32 	%f89, 0f00000000;
	mov.u32 	%r99, 0;
	@%p24 bra 	BB1_22;

	ld.local.u32 	%r68, [%rd1];
	cvt.rn.f32.u32	%f66, %r68;
	sub.f32 	%f67, %f66, %f20;
	fma.rn.f32 	%f89, %f67, %f67, 0f00000000;
	mov.u32 	%r99, 1;

BB1_22:
	mul.wide.u32 	%rd23, %r99, 4;
	add.s64 	%rd24, %rd1, %rd23;
	ld.local.u32 	%r69, [%rd24];
	cvt.rn.f32.u32	%f68, %r69;
	sub.f32 	%f69, %f68, %f20;
	fma.rn.f32 	%f90, %f69, %f69, %f89;
	add.s32 	%r100, %r99, 1;

BB1_23:
	mul.wide.u32 	%rd27, %r100, 4;
	add.s64 	%rd28, %rd1, %rd27;
	ld.local.u32 	%r70, [%rd28];
	cvt.rn.f32.u32	%f70, %r70;
	sub.f32 	%f71, %f70, %f20;
	fma.rn.f32 	%f93, %f71, %f71, %f90;
	add.s32 	%r102, %r100, 1;

BB1_24:
	setp.lt.u32	%p25, %r7, 4;
	@%p25 bra 	BB1_26;

BB1_25:
	mul.wide.u32 	%rd29, %r102, 4;
	add.s64 	%rd30, %rd1, %rd29;
	ld.local.u32 	%r71, [%rd30];
	cvt.rn.f32.u32	%f72, %r71;
	sub.f32 	%f73, %f72, %f20;
	fma.rn.f32 	%f74, %f73, %f73, %f93;
	add.s32 	%r72, %r102, 1;
	mul.wide.u32 	%rd31, %r72, 4;
	add.s64 	%rd32, %rd1, %rd31;
	ld.local.u32 	%r73, [%rd32];
	cvt.rn.f32.u32	%f75, %r73;
	sub.f32 	%f76, %f75, %f20;
	fma.rn.f32 	%f77, %f76, %f76, %f74;
	add.s32 	%r74, %r102, 2;
	mul.wide.u32 	%rd33, %r74, 4;
	add.s64 	%rd34, %rd1, %rd33;
	ld.local.u32 	%r75, [%rd34];
	cvt.rn.f32.u32	%f78, %r75;
	sub.f32 	%f79, %f78, %f20;
	fma.rn.f32 	%f80, %f79, %f79, %f77;
	add.s32 	%r76, %r102, 3;
	mul.wide.u32 	%rd35, %r76, 4;
	add.s64 	%rd36, %rd1, %rd35;
	ld.local.u32 	%r77, [%rd36];
	cvt.rn.f32.u32	%f81, %r77;
	sub.f32 	%f82, %f81, %f20;
	fma.rn.f32 	%f93, %f82, %f82, %f80;
	add.s32 	%r102, %r102, 4;
	setp.lt.u32	%p26, %r102, %r7;
	@%p26 bra 	BB1_25;

BB1_26:
	add.s32 	%r78, %r7, -1;
	cvt.rn.f32.u32	%f83, %r78;
	div.rn.f32 	%f84, %f93, %f83;
	div.rn.f32 	%f30, %f84, %f20;
	setp.ne.s32	%p27, %r7, 1;
	@%p27 bra 	BB1_28;

	// inline asm
	activemask.b32 %r79;
	// inline asm
	ld.local.v2.u32 	{%r81, %r82}, [%rd1];
	setp.eq.s32	%p28, %r81, %r82;
	vote.sync.all.pred 	%p29, %p28, %r79;
	mov.u32 	%r103, 2;
	@%p29 bra 	BB1_30;

BB1_28:
	// inline asm
	activemask.b32 %r86;
	// inline asm
	setp.lt.f32	%p30, %f30, 0f3C23D70A;
	vote.sync.all.pred 	%p31, %p30, %r86;
	mov.u32 	%r103, %r94;
	@%p31 bra 	BB1_30;

	// inline asm
	activemask.b32 %r88;
	// inline asm
	setp.le.f32	%p32, %f30, 0f3F800000;
	vote.sync.all.pred 	%p33, %p32, %r88;
	setp.ge.u32	%p34, %r7, %r15;
	and.pred  	%p35, %p33, %p34;
	selp.b32	%r103, %r94, %r9, %p35;

BB1_30:
	cvt.rn.f32.u32	%f94, %r103;
	setp.lt.u32	%p36, %r94, %r103;
	@%p36 bra 	BB1_11;
	bra.uni 	BB1_31;

BB1_9:
	mov.u32 	%r103, %r104;

BB1_31:
	div.u32 	%r90, %r104, %r103;
	cvt.rn.f32.u32	%f96, %r90;

BB1_32:
	mul.lo.s32 	%r91, %r5, %r29;
	cvt.u64.u32	%rd37, %r91;
	cvta.to.global.u64 	%rd38, %rd3;
	add.s64 	%rd39, %rd38, %rd37;
	mul.wide.u32 	%rd40, %r4, 16;
	add.s64 	%rd41, %rd39, %rd40;
	st.global.f32 	[%rd41], %f96;
	st.global.f32 	[%rd41+4], %f94;
	mov.u32 	%r92, 0;
	st.global.u32 	[%rd41+12], %r92;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd41+8], %rs1;
	setp.gt.f32	%p37, %f94, 0f00000000;
	@%p37 bra 	BB1_34;

	mov.u64 	%rd42, $str3;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, $str2;
	cvta.global.u64 	%rd45, %rd44;
	mov.u32 	%r93, 202;
	mov.u64 	%rd46, 0;
	mov.u64 	%rd47, 2;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd45;
	.param .b32 param2;
	st.param.b32	[param2+0], %r93;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd46;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd47;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB1_34:
	ret;
}

	// .globl	fractalRenderMainDouble
.visible .entry fractalRenderMainDouble(
	.param .u64 fractalRenderMainDouble_param_0,
	.param .u32 fractalRenderMainDouble_param_1,
	.param .align 4 .b8 fractalRenderMainDouble_param_2[8],
	.param .align 8 .b8 fractalRenderMainDouble_param_3[32],
	.param .u32 fractalRenderMainDouble_param_4,
	.param .f32 fractalRenderMainDouble_param_5,
	.param .u32 fractalRenderMainDouble_param_6
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<38>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<19>;
	.reg .b32 	%r<106>;
	.reg .f64 	%fd<75>;
	.reg .b64 	%rd<48>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [fractalRenderMainDouble_param_0];
	ld.param.u32 	%r29, [fractalRenderMainDouble_param_1];
	ld.param.u32 	%r31, [fractalRenderMainDouble_param_2+4];
	ld.param.u32 	%r30, [fractalRenderMainDouble_param_2];
	ld.param.f64 	%fd29, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd28, [fractalRenderMainDouble_param_3+16];
	ld.param.f64 	%fd27, [fractalRenderMainDouble_param_3+8];
	ld.param.f64 	%fd26, [fractalRenderMainDouble_param_3];
	ld.param.u32 	%r32, [fractalRenderMainDouble_param_4];
	ld.param.f32 	%f8, [fractalRenderMainDouble_param_5];
	ld.param.u32 	%r33, [fractalRenderMainDouble_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str2;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r34, 59;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB2_2:
	mov.u32 	%r35, %tid.x;
	mov.u32 	%r36, %tid.y;
	mad.lo.s32 	%r37, %r1, %r36, %r35;
	shl.b32 	%r38, %r1, 2;
	and.b32  	%r39, %r37, 15;
	rem.u32 	%r40, %r37, %r38;
	sub.s32 	%r41, %r40, %r39;
	shr.u32 	%r42, %r41, 2;
	and.b32  	%r43, %r37, 3;
	add.s32 	%r44, %r42, %r43;
	div.u32 	%r45, %r37, %r38;
	shl.b32 	%r46, %r45, 2;
	bfe.u32 	%r47, %r37, 2, 2;
	add.s32 	%r48, %r46, %r47;
	mov.u32 	%r49, %ctaid.x;
	mad.lo.s32 	%r4, %r49, %r1, %r44;
	mov.u32 	%r50, %ctaid.y;
	mov.u32 	%r51, %ntid.y;
	mad.lo.s32 	%r5, %r50, %r51, %r48;
	setp.lt.u32	%p2, %r4, %r30;
	setp.lt.u32	%p3, %r5, %r31;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB2_33;
	bra.uni 	BB2_3;

BB2_3:
	setp.lt.f32	%p5, %f8, 0f3F800000;
	mov.f32 	%f17, 0f00000000;
	mov.f32 	%f18, %f17;
	@%p5 bra 	BB2_31;

	abs.f32 	%f11, %f8;
	mov.b32 	 %r52, %f8;
	and.b32  	%r53, %r52, -2147483648;
	or.b32  	%r54, %r53, 1056964608;
	mov.b32 	 %f12, %r54;
	add.f32 	%f13, %f12, %f8;
	cvt.rzi.f32.f32	%f14, %f13;
	setp.gt.f32	%p6, %f11, 0f4B000000;
	selp.f32	%f16, %f8, %f14, %p6;
	setp.geu.f32	%p7, %f11, 0f3F000000;
	@%p7 bra 	BB2_6;

	cvt.rzi.f32.f32	%f16, %f8;

BB2_6:
	cvt.rzi.u32.f32	%r6, %f16;
	setp.lt.u32	%p8, %r6, 65;
	@%p8 bra 	BB2_8;

	mov.u64 	%rd10, $str7;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str2;
	cvta.global.u64 	%rd13, %rd12;
	mov.u32 	%r55, 113;
	mov.u64 	%rd14, 0;
	mov.u64 	%rd15, 2;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r55;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd14;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd15;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB2_8:
	setp.eq.s32	%p9, %r6, 0;
	mov.u32 	%r104, 0;
	mov.u32 	%r103, %r104;
	@%p9 bra 	BB2_30;

	cvt.rn.f64.u32	%fd3, %r4;
	cvt.rn.f64.u32	%fd4, %r5;
	cvt.rn.f64.u32	%fd30, %r30;
	sub.f64 	%fd31, %fd28, %fd26;
	div.rn.f64 	%fd5, %fd31, %fd30;
	cvt.rn.f64.u32	%fd32, %r31;
	sub.f64 	%fd33, %fd29, %fd27;
	div.rn.f64 	%fd6, %fd33, %fd32;
	mov.u32 	%r59, 0;
	and.b32  	%r62, %r33, 1;
	mov.u32 	%r94, %r59;
	mov.u32 	%r104, %r59;
	mov.u32 	%r103, %r6;

BB2_10:
	mov.u32 	%r9, %r103;
	mov.u32 	%r7, %r94;
	cvt.rn.f64.u32	%fd36, %r9;
	cvt.rn.f64.u32	%fd37, %r7;
	div.rn.f64 	%fd38, %fd37, %fd36;
	add.f64 	%fd39, %fd3, %fd38;
	add.f64 	%fd40, %fd4, %fd38;
	neg.f64 	%fd41, %fd40;
	fma.rn.f64 	%fd7, %fd5, %fd39, %fd26;
	fma.rn.f64 	%fd8, %fd6, %fd41, %fd29;
	setp.eq.s32	%p10, %r32, 0;
	mov.f64 	%fd68, 0d0000000000000000;
	mov.u32 	%r98, %r59;
	mov.f64 	%fd69, %fd68;
	@%p10 bra 	BB2_13;

BB2_11:
	mul.f64 	%fd11, %fd68, %fd68;
	mul.f64 	%fd12, %fd69, %fd69;
	add.f64 	%fd42, %fd12, %fd11;
	setp.geu.f64	%p11, %fd42, 0d4010000000000000;
	@%p11 bra 	BB2_13;

	sub.f64 	%fd43, %fd12, %fd11;
	add.f64 	%fd13, %fd7, %fd43;
	add.f64 	%fd44, %fd69, %fd69;
	fma.rn.f64 	%fd68, %fd44, %fd68, %fd8;
	add.s32 	%r98, %r98, 1;
	setp.lt.u32	%p12, %r98, %r32;
	mov.f64 	%fd69, %fd13;
	@%p12 bra 	BB2_11;

BB2_13:
	cvt.rn.f32.u32	%f15, %r98;
	cvt.rzi.u32.f32	%r13, %f15;
	add.s32 	%r104, %r13, %r104;
	setp.gt.u32	%p13, %r7, 9;
	@%p13 bra 	BB2_15;

	add.u64 	%rd16, %SP, 0;
	cvta.to.local.u64 	%rd17, %rd16;
	mul.wide.u32 	%rd18, %r7, 4;
	add.s64 	%rd19, %rd17, %rd18;
	st.local.u32 	[%rd19], %r13;

BB2_15:
	setp.lt.u32	%p14, %r7, 10;
	setp.eq.b32	%p15, %r62, 1;
	setp.ne.s32	%p16, %r7, 0;
	and.pred  	%p17, %p14, %p16;
	and.pred  	%p18, %p17, %p15;
	shr.u32 	%r15, %r9, 1;
	setp.eq.s32	%p19, %r7, %r15;
	or.pred  	%p20, %p18, %p19;
	add.s32 	%r94, %r7, 1;
	mov.u32 	%r103, %r9;
	@!%p20 bra 	BB2_29;
	bra.uni 	BB2_16;

BB2_16:
	div.u32 	%r63, %r104, %r94;
	cvt.rn.f64.u32	%fd15, %r63;
	add.u64 	%rd20, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd20;
	setp.eq.s32	%p21, %r7, 0;
	mov.f64 	%fd74, 0d0000000000000000;
	@%p21 bra 	BB2_25;

	and.b32  	%r17, %r7, 3;
	setp.eq.s32	%p22, %r17, 0;
	mov.f64 	%fd74, 0d0000000000000000;
	mov.u32 	%r102, 0;
	@%p22 bra 	BB2_23;

	setp.eq.s32	%p23, %r17, 1;
	mov.f64 	%fd71, 0d0000000000000000;
	mov.u32 	%r100, 0;
	@%p23 bra 	BB2_22;

	setp.eq.s32	%p24, %r17, 2;
	mov.f64 	%fd70, 0d0000000000000000;
	mov.u32 	%r99, 0;
	@%p24 bra 	BB2_21;

	ld.local.u32 	%r68, [%rd1];
	cvt.rn.f64.u32	%fd49, %r68;
	sub.f64 	%fd50, %fd49, %fd15;
	fma.rn.f64 	%fd70, %fd50, %fd50, 0d0000000000000000;
	mov.u32 	%r99, 1;

BB2_21:
	mul.wide.u32 	%rd23, %r99, 4;
	add.s64 	%rd24, %rd1, %rd23;
	ld.local.u32 	%r69, [%rd24];
	cvt.rn.f64.u32	%fd51, %r69;
	sub.f64 	%fd52, %fd51, %fd15;
	fma.rn.f64 	%fd71, %fd52, %fd52, %fd70;
	add.s32 	%r100, %r99, 1;

BB2_22:
	mul.wide.u32 	%rd27, %r100, 4;
	add.s64 	%rd28, %rd1, %rd27;
	ld.local.u32 	%r70, [%rd28];
	cvt.rn.f64.u32	%fd53, %r70;
	sub.f64 	%fd54, %fd53, %fd15;
	fma.rn.f64 	%fd74, %fd54, %fd54, %fd71;
	add.s32 	%r102, %r100, 1;

BB2_23:
	setp.lt.u32	%p25, %r7, 4;
	@%p25 bra 	BB2_25;

BB2_24:
	mul.wide.u32 	%rd29, %r102, 4;
	add.s64 	%rd30, %rd1, %rd29;
	ld.local.u32 	%r71, [%rd30];
	cvt.rn.f64.u32	%fd55, %r71;
	sub.f64 	%fd56, %fd55, %fd15;
	fma.rn.f64 	%fd57, %fd56, %fd56, %fd74;
	add.s32 	%r72, %r102, 1;
	mul.wide.u32 	%rd31, %r72, 4;
	add.s64 	%rd32, %rd1, %rd31;
	ld.local.u32 	%r73, [%rd32];
	cvt.rn.f64.u32	%fd58, %r73;
	sub.f64 	%fd59, %fd58, %fd15;
	fma.rn.f64 	%fd60, %fd59, %fd59, %fd57;
	add.s32 	%r74, %r102, 2;
	mul.wide.u32 	%rd33, %r74, 4;
	add.s64 	%rd34, %rd1, %rd33;
	ld.local.u32 	%r75, [%rd34];
	cvt.rn.f64.u32	%fd61, %r75;
	sub.f64 	%fd62, %fd61, %fd15;
	fma.rn.f64 	%fd63, %fd62, %fd62, %fd60;
	add.s32 	%r76, %r102, 3;
	mul.wide.u32 	%rd35, %r76, 4;
	add.s64 	%rd36, %rd1, %rd35;
	ld.local.u32 	%r77, [%rd36];
	cvt.rn.f64.u32	%fd64, %r77;
	sub.f64 	%fd65, %fd64, %fd15;
	fma.rn.f64 	%fd74, %fd65, %fd65, %fd63;
	add.s32 	%r102, %r102, 4;
	setp.lt.u32	%p26, %r102, %r7;
	@%p26 bra 	BB2_24;

BB2_25:
	add.s32 	%r78, %r7, -1;
	cvt.rn.f64.u32	%fd66, %r78;
	div.rn.f64 	%fd67, %fd74, %fd66;
	div.rn.f64 	%fd25, %fd67, %fd15;
	setp.ne.s32	%p27, %r7, 1;
	@%p27 bra 	BB2_27;

	// inline asm
	activemask.b32 %r79;
	// inline asm
	ld.local.v2.u32 	{%r81, %r82}, [%rd1];
	setp.eq.s32	%p28, %r81, %r82;
	vote.sync.all.pred 	%p29, %p28, %r79;
	mov.u32 	%r103, 2;
	@%p29 bra 	BB2_29;

BB2_27:
	// inline asm
	activemask.b32 %r86;
	// inline asm
	setp.lt.f64	%p30, %fd25, 0d3F847AE140000000;
	vote.sync.all.pred 	%p31, %p30, %r86;
	mov.u32 	%r103, %r94;
	@%p31 bra 	BB2_29;

	// inline asm
	activemask.b32 %r88;
	// inline asm
	setp.le.f64	%p32, %fd25, 0d3FF0000000000000;
	vote.sync.all.pred 	%p33, %p32, %r88;
	setp.ge.u32	%p34, %r7, %r15;
	and.pred  	%p35, %p33, %p34;
	selp.b32	%r103, %r94, %r9, %p35;

BB2_29:
	setp.lt.u32	%p36, %r94, %r103;
	@%p36 bra 	BB2_10;

BB2_30:
	cvt.rn.f32.u32	%f17, %r103;
	div.u32 	%r90, %r104, %r103;
	cvt.rn.f32.u32	%f18, %r90;

BB2_31:
	mul.lo.s32 	%r91, %r5, %r29;
	cvt.u64.u32	%rd37, %r91;
	cvta.to.global.u64 	%rd38, %rd3;
	add.s64 	%rd39, %rd38, %rd37;
	mul.wide.u32 	%rd40, %r4, 16;
	add.s64 	%rd41, %rd39, %rd40;
	st.global.f32 	[%rd41], %f18;
	st.global.f32 	[%rd41+4], %f17;
	mov.u32 	%r92, 0;
	st.global.u32 	[%rd41+12], %r92;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd41+8], %rs1;
	setp.gt.f32	%p37, %f17, 0f00000000;
	@%p37 bra 	BB2_33;

	mov.u64 	%rd42, $str3;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, $str2;
	cvta.global.u64 	%rd45, %rd44;
	mov.u32 	%r93, 202;
	mov.u64 	%rd46, 0;
	mov.u64 	%rd47, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd45;
	.param .b32 param2;
	st.param.b32	[param2+0], %r93;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd46;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd47;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB2_33:
	ret;
}

	// .globl	fractalRenderAdvancedFloat
.visible .entry fractalRenderAdvancedFloat(
	.param .u64 fractalRenderAdvancedFloat_param_0,
	.param .u32 fractalRenderAdvancedFloat_param_1,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_2[8],
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_3[16],
	.param .u32 fractalRenderAdvancedFloat_param_4,
	.param .f32 fractalRenderAdvancedFloat_param_5,
	.param .u32 fractalRenderAdvancedFloat_param_6,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_7[16],
	.param .u64 fractalRenderAdvancedFloat_param_8,
	.param .u32 fractalRenderAdvancedFloat_param_9,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<99>;
	.reg .b16 	%rs<10>;
	.reg .f32 	%f<311>;
	.reg .b32 	%r<211>;
	.reg .b64 	%rd<95>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [fractalRenderAdvancedFloat_param_0];
	ld.param.u32 	%r52, [fractalRenderAdvancedFloat_param_1];
	ld.param.u32 	%r54, [fractalRenderAdvancedFloat_param_2+4];
	ld.param.u32 	%r53, [fractalRenderAdvancedFloat_param_2];
	ld.param.f32 	%f96, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f95, [fractalRenderAdvancedFloat_param_3+8];
	ld.param.f32 	%f94, [fractalRenderAdvancedFloat_param_3+4];
	ld.param.f32 	%f93, [fractalRenderAdvancedFloat_param_3];
	ld.param.u32 	%r55, [fractalRenderAdvancedFloat_param_4];
	ld.param.f32 	%f7, [fractalRenderAdvancedFloat_param_5];
	ld.param.u32 	%r56, [fractalRenderAdvancedFloat_param_6];
	ld.param.f32 	%f101, [fractalRenderAdvancedFloat_param_7+12];
	ld.param.f32 	%f100, [fractalRenderAdvancedFloat_param_7+8];
	ld.param.f32 	%f99, [fractalRenderAdvancedFloat_param_7+4];
	ld.param.f32 	%f98, [fractalRenderAdvancedFloat_param_7];
	ld.param.u64 	%rd4, [fractalRenderAdvancedFloat_param_8];
	ld.param.u32 	%r57, [fractalRenderAdvancedFloat_param_9];
	ld.param.u32 	%r59, [fractalRenderAdvancedFloat_param_10+4];
	ld.param.u32 	%r58, [fractalRenderAdvancedFloat_param_10];
	mov.u32 	%r60, %ntid.x;
	setp.eq.s32	%p2, %r60, 32;
	@%p2 bra 	BB3_2;

	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, $str2;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r61, 59;
	mov.u64 	%rd9, 0;
	mov.u64 	%rd10, 2;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 param2;
	st.param.b32	[param2+0], %r61;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB3_2:
	mov.u32 	%r62, %tid.y;
	mov.u32 	%r64, %tid.x;
	mad.lo.s32 	%r65, %r60, %r62, %r64;
	and.b32  	%r66, %r65, 15;
	shl.b32 	%r67, %r60, 2;
	rem.u32 	%r68, %r65, %r67;
	sub.s32 	%r69, %r68, %r66;
	shr.u32 	%r70, %r69, 2;
	and.b32  	%r71, %r65, 3;
	add.s32 	%r72, %r70, %r71;
	div.u32 	%r73, %r65, %r67;
	shl.b32 	%r74, %r73, 2;
	bfe.u32 	%r75, %r65, 2, 2;
	add.s32 	%r76, %r74, %r75;
	mov.u32 	%r77, %ctaid.x;
	mad.lo.s32 	%r3, %r77, %r60, %r72;
	mov.u32 	%r78, %ctaid.y;
	mov.u32 	%r79, %ntid.y;
	mad.lo.s32 	%r4, %r78, %r79, %r76;
	setp.lt.u32	%p3, %r3, %r53;
	setp.gt.u32	%p4, %r54, %r4;
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB3_78;
	bra.uni 	BB3_3;

BB3_3:
	and.b32  	%r80, %r56, 20;
	setp.eq.s32	%p6, %r80, 20;
	setp.ge.f32	%p7, %f7, 0f3F800000;
	and.pred  	%p8, %p6, %p7;
	mov.u16 	%rs8, 0;
	@!%p8 bra 	BB3_9;
	bra.uni 	BB3_4;

BB3_4:
	and.b32  	%r81, %r3, -8;
	cvt.rn.f32.u32	%f102, %r81;
	and.b32  	%r82, %r4, -4;
	cvt.rn.f32.u32	%f103, %r82;
	cvt.rn.f32.u32	%f104, %r58;
	sub.f32 	%f105, %f104, %f102;
	cvt.rn.f32.u32	%f106, %r59;
	sub.f32 	%f107, %f106, %f103;
	mul.f32 	%f108, %f107, %f107;
	fma.rn.f32 	%f109, %f105, %f105, %f108;
	sqrt.rn.f32 	%f110, %f109;
	mul.f32 	%f111, %f110, 0f3CD94079;
	ld.global.f32 	%f112, [screenDistance];
	div.rn.f32 	%f1, %f111, %f112;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p9, %f2, 0f3F800000;
	mov.f32 	%f281, %f2;
	@%p9 bra 	BB3_6;

	rcp.rn.f32 	%f281, %f2;

BB3_6:
	mul.rn.f32 	%f113, %f281, %f281;
	mov.f32 	%f114, 0fC0B59883;
	mov.f32 	%f115, 0fBF52C7EA;
	fma.rn.f32 	%f116, %f113, %f115, %f114;
	mov.f32 	%f117, 0fC0D21907;
	fma.rn.f32 	%f118, %f116, %f113, %f117;
	mul.f32 	%f119, %f113, %f118;
	mul.f32 	%f120, %f281, %f119;
	add.f32 	%f121, %f113, 0f41355DC0;
	mov.f32 	%f122, 0f41E6BD60;
	fma.rn.f32 	%f123, %f121, %f113, %f122;
	mov.f32 	%f124, 0f419D92C8;
	fma.rn.f32 	%f125, %f123, %f113, %f124;
	rcp.rn.f32 	%f126, %f125;
	fma.rn.f32 	%f127, %f120, %f126, %f281;
	mov.f32 	%f128, 0f3FC90FDB;
	sub.f32 	%f129, %f128, %f127;
	setp.gt.f32	%p10, %f2, 0f3F800000;
	selp.f32	%f130, %f129, %f127, %p10;
	mov.b32 	 %r83, %f130;
	mov.b32 	 %r84, %f1;
	and.b32  	%r85, %r84, -2147483648;
	or.b32  	%r86, %r83, %r85;
	mov.b32 	 %f131, %r86;
	setp.gtu.f32	%p11, %f2, 0f7F800000;
	selp.f32	%f132, %f130, %f131, %p11;
	mul.f32 	%f133, %f132, 0f43340000;
	div.rn.f32 	%f5, %f133, 0f40490FDB;
	setp.ge.f32	%p12, %f5, 0f00000000;
	@%p12 bra 	BB3_8;

	mov.u64 	%rd11, $str6;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str2;
	cvta.global.u64 	%rd14, %rd13;
	mov.u32 	%r87, 245;
	mov.u64 	%rd15, 0;
	mov.u64 	%rd16, 2;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r87;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB3_8:
	fma.rn.f32 	%f134, %f5, 0fBC964FDA, 0f3F8CEADD;
	setp.gtu.f32	%p13, %f5, 0f40B00000;
	setp.le.f32	%p14, %f5, 0f40B00000;
	selp.u16	%rs8, 1, 0, %p14;
	selp.f32	%f135, %f134, 0f3F800000, %p13;
	mul.f32 	%f7, %f135, %f7;

BB3_9:
	and.b32  	%r88, %r56, 8;
	setp.eq.s32	%p16, %r88, 0;
	mov.pred 	%p98, -1;
	mov.f32 	%f309, 0f00000000;
	@%p16 bra 	BB3_10;

	sub.s32 	%r89, %r54, %r4;
	cvt.rn.f32.u32	%f138, %r89;
	cvt.rn.f32.u32	%f139, %r53;
	cvt.rn.f32.u32	%f140, %r3;
	div.rn.f32 	%f141, %f140, %f139;
	cvt.rn.f32.u32	%f142, %r54;
	div.rn.f32 	%f143, %f138, %f142;
	sub.f32 	%f144, %f95, %f93;
	sub.f32 	%f145, %f96, %f94;
	fma.rn.f32 	%f146, %f144, %f141, %f93;
	fma.rn.f32 	%f147, %f145, %f143, %f94;
	sub.f32 	%f148, %f146, %f98;
	sub.f32 	%f149, %f147, %f99;
	sub.f32 	%f150, %f100, %f98;
	div.rn.f32 	%f151, %f148, %f150;
	sub.f32 	%f152, %f101, %f99;
	div.rn.f32 	%f153, %f149, %f152;
	mul.f32 	%f12, %f139, %f151;
	mul.f32 	%f154, %f142, %f153;
	sub.f32 	%f13, %f142, %f154;
	abs.f32 	%f155, %f12;
	mov.b32 	 %r90, %f12;
	and.b32  	%r91, %r90, -2147483648;
	or.b32  	%r92, %r91, 1056964608;
	mov.b32 	 %f156, %r92;
	add.f32 	%f157, %f12, %f156;
	cvt.rzi.f32.f32	%f158, %f157;
	setp.gt.f32	%p17, %f155, 0f4B000000;
	selp.f32	%f283, %f12, %f158, %p17;
	setp.geu.f32	%p18, %f155, 0f3F000000;
	@%p18 bra 	BB3_13;

	cvt.rzi.f32.f32	%f283, %f12;

BB3_13:
	cvt.rzi.s32.f32	%r5, %f283;
	mov.b32 	 %r93, %f13;
	and.b32  	%r94, %r93, -2147483648;
	or.b32  	%r95, %r94, 1056964608;
	mov.b32 	 %f159, %r95;
	add.f32 	%f160, %f13, %f159;
	cvt.rzi.f32.f32	%f161, %f160;
	abs.f32 	%f162, %f13;
	setp.gt.f32	%p19, %f162, 0f4B000000;
	selp.f32	%f284, %f13, %f161, %p19;
	setp.geu.f32	%p20, %f162, 0f3F000000;
	@%p20 bra 	BB3_15;

	cvt.rzi.f32.f32	%f284, %f13;

BB3_15:
	add.s32 	%r96, %r53, -2;
	setp.lt.u32	%p22, %r5, %r96;
	setp.gt.s32	%p23, %r5, 1;
	and.pred  	%p24, %p23, %p22;
	cvt.rzi.s32.f32	%r97, %f284;
	setp.gt.s32	%p25, %r97, 1;
	and.pred  	%p26, %p24, %p25;
	add.s32 	%r98, %r54, -2;
	setp.lt.u32	%p27, %r97, %r98;
	and.pred  	%p28, %p27, %p26;
	mov.f32 	%f308, %f309;
	@!%p28 bra 	BB3_17;
	bra.uni 	BB3_16;

BB3_16:
	cvt.rmi.f32.f32	%f165, %f12;
	cvt.rzi.u32.f32	%r99, %f165;
	cvt.rmi.f32.f32	%f166, %f13;
	cvt.rzi.u32.f32	%r100, %f166;
	cvt.rn.f32.u32	%f167, %r99;
	sub.f32 	%f168, %f12, %f167;
	cvt.rn.f32.u32	%f169, %r100;
	sub.f32 	%f170, %f13, %f169;
	mul.lo.s32 	%r101, %r100, %r57;
	cvt.u64.u32	%rd17, %r101;
	cvta.to.global.u64 	%rd18, %rd4;
	add.s64 	%rd19, %rd18, %rd17;
	mul.wide.u32 	%rd20, %r99, 16;
	add.s64 	%rd21, %rd19, %rd20;
	add.s32 	%r102, %r99, 1;
	mul.wide.u32 	%rd22, %r102, 16;
	add.s64 	%rd23, %rd19, %rd22;
	add.s32 	%r103, %r100, 1;
	mul.lo.s32 	%r104, %r103, %r57;
	cvt.u64.u32	%rd24, %r104;
	add.s64 	%rd25, %rd18, %rd24;
	add.s64 	%rd26, %rd25, %rd20;
	add.s64 	%rd27, %rd25, %rd22;
	mov.f32 	%f171, 0f3F800000;
	sub.f32 	%f172, %f171, %f168;
	ld.global.f32 	%f173, [%rd21];
	ld.global.f32 	%f174, [%rd23];
	mul.f32 	%f175, %f168, %f174;
	fma.rn.f32 	%f176, %f173, %f172, %f175;
	sub.f32 	%f177, %f171, %f170;
	ld.global.f32 	%f178, [%rd26];
	ld.global.f32 	%f179, [%rd27];
	mul.f32 	%f180, %f168, %f179;
	fma.rn.f32 	%f181, %f172, %f178, %f180;
	mul.f32 	%f182, %f170, %f181;
	fma.rn.f32 	%f309, %f177, %f176, %f182;
	ld.global.f32 	%f183, [%rd21+4];
	ld.global.f32 	%f184, [%rd23+4];
	mul.f32 	%f185, %f168, %f184;
	fma.rn.f32 	%f186, %f172, %f183, %f185;
	ld.global.f32 	%f187, [%rd26+4];
	ld.global.f32 	%f188, [%rd27+4];
	mul.f32 	%f189, %f168, %f188;
	fma.rn.f32 	%f190, %f172, %f187, %f189;
	mul.f32 	%f191, %f170, %f190;
	fma.rn.f32 	%f308, %f177, %f186, %f191;
	mov.pred 	%p98, 0;
	bra.uni 	BB3_17;

BB3_10:
	mov.f32 	%f308, %f309;

BB3_17:
	@%p98 bra 	BB3_49;
	bra.uni 	BB3_18;

BB3_49:
	setp.lt.f32	%p66, %f7, 0f3F800000;
	selp.f32	%f59, 0f3F800000, %f7, %p66;
	abs.f32 	%f239, %f59;
	mov.b32 	 %r146, %f59;
	and.b32  	%r147, %r146, -2147483648;
	or.b32  	%r148, %r147, 1056964608;
	mov.b32 	 %f240, %r148;
	add.f32 	%f241, %f59, %f240;
	cvt.rzi.f32.f32	%f242, %f241;
	setp.gt.f32	%p67, %f239, 0f4B000000;
	selp.f32	%f299, %f59, %f242, %p67;
	setp.geu.f32	%p68, %f239, 0f3F000000;
	@%p68 bra 	BB3_51;

	cvt.rzi.f32.f32	%f299, %f59;

BB3_51:
	cvt.rn.f32.u32	%f243, %r53;
	sub.f32 	%f244, %f95, %f93;
	div.rn.f32 	%f63, %f244, %f243;
	cvt.rn.f32.u32	%f245, %r54;
	sub.f32 	%f246, %f96, %f94;
	div.rn.f32 	%f64, %f246, %f245;
	cvt.rzi.u32.f32	%r208, %f299;
	setp.lt.u32	%p69, %r208, 65;
	@%p69 bra 	BB3_53;

	mov.u64 	%rd59, $str7;
	cvta.global.u64 	%rd60, %rd59;
	mov.u64 	%rd61, $str2;
	cvta.global.u64 	%rd62, %rd61;
	mov.u32 	%r149, 113;
	mov.u64 	%rd63, 0;
	mov.u64 	%rd64, 2;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd62;
	.param .b32 param2;
	st.param.b32	[param2+0], %r149;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd63;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd64;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB3_53:
	setp.eq.s32	%p70, %r208, 0;
	cvt.rn.f32.u32	%f308, %r208;
	mov.u32 	%r209, 0;
	@%p70 bra 	BB3_54;

	cvt.rn.f32.u32	%f66, %r3;
	cvt.rn.f32.u32	%f67, %r4;
	mov.u32 	%r153, 0;
	mov.u32 	%r199, %r153;
	mov.u32 	%r209, %r153;

BB3_56:
	mov.u32 	%r32, %r208;
	mov.u32 	%r30, %r199;
	cvt.rn.f32.u32	%f249, %r30;
	div.rn.f32 	%f250, %f249, %f308;
	add.f32 	%f251, %f66, %f250;
	add.f32 	%f252, %f67, %f250;
	neg.f32 	%f253, %f252;
	fma.rn.f32 	%f69, %f63, %f251, %f93;
	fma.rn.f32 	%f70, %f64, %f253, %f96;
	setp.eq.s32	%p71, %r55, 0;
	mov.f32 	%f301, 0f00000000;
	mov.u32 	%r203, %r153;
	mov.f32 	%f302, %f301;
	@%p71 bra 	BB3_59;

BB3_57:
	mul.f32 	%f73, %f301, %f301;
	mul.f32 	%f74, %f302, %f302;
	add.f32 	%f254, %f74, %f73;
	setp.geu.f32	%p72, %f254, 0f40800000;
	@%p72 bra 	BB3_59;

	sub.f32 	%f255, %f74, %f73;
	add.f32 	%f75, %f69, %f255;
	add.f32 	%f256, %f302, %f302;
	fma.rn.f32 	%f301, %f256, %f301, %f70;
	add.s32 	%r203, %r203, 1;
	setp.lt.u32	%p73, %r203, %r55;
	mov.f32 	%f302, %f75;
	@%p73 bra 	BB3_57;

BB3_59:
	cvt.rn.f32.u32	%f257, %r203;
	cvt.rzi.u32.f32	%r36, %f257;
	add.s32 	%r209, %r36, %r209;
	setp.gt.u32	%p74, %r30, 9;
	@%p74 bra 	BB3_61;

	add.u64 	%rd65, %SP, 0;
	cvta.to.local.u64 	%rd66, %rd65;
	mul.wide.u32 	%rd67, %r30, 4;
	add.s64 	%rd68, %rd66, %rd67;
	st.local.u32 	[%rd68], %r36;

BB3_61:
	setp.lt.u32	%p75, %r30, 10;
	and.b32  	%r156, %r56, 1;
	setp.eq.b32	%p76, %r156, 1;
	setp.ne.s32	%p77, %r30, 0;
	and.pred  	%p78, %p75, %p77;
	and.pred  	%p79, %p78, %p76;
	shr.u32 	%r38, %r32, 1;
	setp.eq.s32	%p80, %r30, %r38;
	or.pred  	%p81, %p79, %p80;
	add.s32 	%r199, %r30, 1;
	mov.u32 	%r208, %r32;
	@!%p81 bra 	BB3_75;
	bra.uni 	BB3_62;

BB3_62:
	div.u32 	%r157, %r209, %r199;
	cvt.rn.f32.u32	%f77, %r157;
	setp.eq.s32	%p82, %r30, 0;
	mov.f32 	%f307, 0f00000000;
	@%p82 bra 	BB3_71;

	and.b32  	%r40, %r30, 3;
	setp.eq.s32	%p83, %r40, 0;
	mov.f32 	%f307, 0f00000000;
	mov.u32 	%r207, 0;
	@%p83 bra 	BB3_69;

	setp.eq.s32	%p84, %r40, 1;
	mov.f32 	%f304, 0f00000000;
	mov.u32 	%r205, 0;
	@%p84 bra 	BB3_68;

	setp.eq.s32	%p85, %r40, 2;
	mov.f32 	%f303, 0f00000000;
	mov.u32 	%r204, 0;
	@%p85 bra 	BB3_67;

	add.u64 	%rd69, %SP, 0;
	cvta.to.local.u64 	%rd70, %rd69;
	ld.local.u32 	%r162, [%rd70];
	cvt.rn.f32.u32	%f262, %r162;
	sub.f32 	%f263, %f262, %f77;
	fma.rn.f32 	%f303, %f263, %f263, 0f00000000;
	mov.u32 	%r204, 1;

BB3_67:
	add.u64 	%rd71, %SP, 0;
	cvta.to.local.u64 	%rd72, %rd71;
	mul.wide.u32 	%rd73, %r204, 4;
	add.s64 	%rd74, %rd72, %rd73;
	ld.local.u32 	%r163, [%rd74];
	cvt.rn.f32.u32	%f264, %r163;
	sub.f32 	%f265, %f264, %f77;
	fma.rn.f32 	%f304, %f265, %f265, %f303;
	add.s32 	%r205, %r204, 1;

BB3_68:
	add.u64 	%rd75, %SP, 0;
	cvta.to.local.u64 	%rd76, %rd75;
	mul.wide.u32 	%rd77, %r205, 4;
	add.s64 	%rd78, %rd76, %rd77;
	ld.local.u32 	%r164, [%rd78];
	cvt.rn.f32.u32	%f266, %r164;
	sub.f32 	%f267, %f266, %f77;
	fma.rn.f32 	%f307, %f267, %f267, %f304;
	add.s32 	%r207, %r205, 1;

BB3_69:
	add.u64 	%rd79, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd79;
	setp.lt.u32	%p86, %r30, 4;
	@%p86 bra 	BB3_71;

BB3_70:
	mul.wide.u32 	%rd80, %r207, 4;
	add.s64 	%rd81, %rd2, %rd80;
	ld.local.u32 	%r165, [%rd81];
	cvt.rn.f32.u32	%f268, %r165;
	sub.f32 	%f269, %f268, %f77;
	fma.rn.f32 	%f270, %f269, %f269, %f307;
	add.s32 	%r166, %r207, 1;
	mul.wide.u32 	%rd82, %r166, 4;
	add.s64 	%rd83, %rd2, %rd82;
	ld.local.u32 	%r167, [%rd83];
	cvt.rn.f32.u32	%f271, %r167;
	sub.f32 	%f272, %f271, %f77;
	fma.rn.f32 	%f273, %f272, %f272, %f270;
	add.s32 	%r168, %r207, 2;
	mul.wide.u32 	%rd84, %r168, 4;
	add.s64 	%rd85, %rd2, %rd84;
	ld.local.u32 	%r169, [%rd85];
	cvt.rn.f32.u32	%f274, %r169;
	sub.f32 	%f275, %f274, %f77;
	fma.rn.f32 	%f276, %f275, %f275, %f273;
	add.s32 	%r170, %r207, 3;
	mul.wide.u32 	%rd86, %r170, 4;
	add.s64 	%rd87, %rd2, %rd86;
	ld.local.u32 	%r171, [%rd87];
	cvt.rn.f32.u32	%f277, %r171;
	sub.f32 	%f278, %f277, %f77;
	fma.rn.f32 	%f307, %f278, %f278, %f276;
	add.s32 	%r207, %r207, 4;
	setp.lt.u32	%p87, %r207, %r30;
	@%p87 bra 	BB3_70;

BB3_71:
	add.s32 	%r172, %r30, -1;
	cvt.rn.f32.u32	%f279, %r172;
	div.rn.f32 	%f280, %f307, %f279;
	div.rn.f32 	%f87, %f280, %f77;
	setp.ne.s32	%p88, %r30, 1;
	@%p88 bra 	BB3_73;

	// inline asm
	activemask.b32 %r173;
	// inline asm
	add.u64 	%rd88, %SP, 0;
	cvta.to.local.u64 	%rd89, %rd88;
	ld.local.v2.u32 	{%r175, %r176}, [%rd89];
	setp.eq.s32	%p89, %r175, %r176;
	vote.sync.all.pred 	%p90, %p89, %r173;
	mov.u32 	%r208, 2;
	@%p90 bra 	BB3_75;

BB3_73:
	// inline asm
	activemask.b32 %r180;
	// inline asm
	setp.lt.f32	%p91, %f87, 0f3C23D70A;
	vote.sync.all.pred 	%p92, %p91, %r180;
	mov.u32 	%r208, %r199;
	@%p92 bra 	BB3_75;

	// inline asm
	activemask.b32 %r182;
	// inline asm
	setp.le.f32	%p93, %f87, 0f3F800000;
	vote.sync.all.pred 	%p94, %p93, %r182;
	setp.ge.u32	%p95, %r30, %r38;
	and.pred  	%p96, %p94, %p95;
	selp.b32	%r208, %r199, %r32, %p96;

BB3_75:
	cvt.rn.f32.u32	%f308, %r208;
	setp.lt.u32	%p97, %r199, %r208;
	@%p97 bra 	BB3_56;
	bra.uni 	BB3_76;

BB3_18:
	shr.u32 	%r105, %r56, 5;
	and.b32  	%r106, %r105, 1;
	setp.eq.b32	%p30, %r106, 1;
	not.pred 	%p31, %p30;
	setp.eq.s16	%p32, %rs8, 0;
	mov.u16 	%rs9, 1;
	or.pred  	%p33, %p32, %p31;
	@%p33 bra 	BB3_77;

	setp.lt.f32	%p34, %f7, 0f3F800000;
	mov.f32 	%f296, 0f00000000;
	mov.f32 	%f298, %f296;
	@%p34 bra 	BB3_48;

	abs.f32 	%f194, %f7;
	mov.b32 	 %r107, %f7;
	and.b32  	%r108, %r107, -2147483648;
	or.b32  	%r109, %r108, 1056964608;
	mov.b32 	 %f195, %r109;
	add.f32 	%f196, %f7, %f195;
	cvt.rzi.f32.f32	%f197, %f196;
	setp.gt.f32	%p35, %f194, 0f4B000000;
	selp.f32	%f287, %f7, %f197, %p35;
	setp.geu.f32	%p36, %f194, 0f3F000000;
	@%p36 bra 	BB3_22;

	cvt.rzi.f32.f32	%f287, %f7;

BB3_22:
	cvt.rn.f32.u32	%f198, %r53;
	sub.f32 	%f199, %f95, %f93;
	div.rn.f32 	%f27, %f199, %f198;
	cvt.rn.f32.u32	%f200, %r54;
	sub.f32 	%f201, %f96, %f94;
	div.rn.f32 	%f28, %f201, %f200;
	cvt.rzi.u32.f32	%r196, %f287;
	setp.lt.u32	%p37, %r196, 65;
	@%p37 bra 	BB3_24;

	mov.u64 	%rd28, $str7;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, $str2;
	cvta.global.u64 	%rd31, %rd30;
	mov.u32 	%r110, 113;
	mov.u64 	%rd32, 0;
	mov.u64 	%rd33, 2;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd31;
	.param .b32 param2;
	st.param.b32	[param2+0], %r110;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd32;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd33;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB3_24:
	setp.eq.s32	%p38, %r196, 0;
	cvt.rn.f32.u32	%f296, %r196;
	mov.u32 	%r197, 0;
	@%p38 bra 	BB3_25;

	cvt.rn.f32.u32	%f30, %r3;
	cvt.rn.f32.u32	%f31, %r4;
	mov.u32 	%r114, 0;
	mov.u32 	%r187, %r114;
	mov.u32 	%r197, %r114;

BB3_27:
	mov.u32 	%r9, %r196;
	mov.u32 	%r7, %r187;
	cvt.rn.f32.u32	%f204, %r7;
	div.rn.f32 	%f205, %f204, %f296;
	add.f32 	%f206, %f30, %f205;
	add.f32 	%f207, %f31, %f205;
	neg.f32 	%f208, %f207;
	fma.rn.f32 	%f33, %f27, %f206, %f93;
	fma.rn.f32 	%f34, %f28, %f208, %f96;
	setp.eq.s32	%p39, %r55, 0;
	mov.f32 	%f289, 0f00000000;
	mov.u32 	%r191, %r114;
	mov.f32 	%f290, %f289;
	@%p39 bra 	BB3_30;

BB3_28:
	mul.f32 	%f37, %f289, %f289;
	mul.f32 	%f38, %f290, %f290;
	add.f32 	%f209, %f38, %f37;
	setp.geu.f32	%p40, %f209, 0f40800000;
	@%p40 bra 	BB3_30;

	sub.f32 	%f210, %f38, %f37;
	add.f32 	%f39, %f33, %f210;
	add.f32 	%f211, %f290, %f290;
	fma.rn.f32 	%f289, %f211, %f289, %f34;
	add.s32 	%r191, %r191, 1;
	setp.lt.u32	%p41, %r191, %r55;
	mov.f32 	%f290, %f39;
	@%p41 bra 	BB3_28;

BB3_30:
	cvt.rn.f32.u32	%f212, %r191;
	cvt.rzi.u32.f32	%r13, %f212;
	add.s32 	%r197, %r13, %r197;
	setp.gt.u32	%p42, %r7, 9;
	@%p42 bra 	BB3_32;

	add.u64 	%rd34, %SP, 0;
	cvta.to.local.u64 	%rd35, %rd34;
	mul.wide.u32 	%rd36, %r7, 4;
	add.s64 	%rd37, %rd35, %rd36;
	st.local.u32 	[%rd37], %r13;

BB3_32:
	setp.lt.u32	%p43, %r7, 10;
	and.b32  	%r117, %r56, 1;
	setp.eq.b32	%p44, %r117, 1;
	setp.ne.s32	%p45, %r7, 0;
	and.pred  	%p46, %p43, %p45;
	and.pred  	%p47, %p46, %p44;
	shr.u32 	%r15, %r9, 1;
	setp.eq.s32	%p48, %r7, %r15;
	or.pred  	%p49, %p47, %p48;
	add.s32 	%r187, %r7, 1;
	mov.u32 	%r196, %r9;
	@!%p49 bra 	BB3_46;
	bra.uni 	BB3_33;

BB3_33:
	div.u32 	%r118, %r197, %r187;
	cvt.rn.f32.u32	%f41, %r118;
	setp.eq.s32	%p50, %r7, 0;
	mov.f32 	%f295, 0f00000000;
	@%p50 bra 	BB3_42;

	and.b32  	%r17, %r7, 3;
	setp.eq.s32	%p51, %r17, 0;
	mov.f32 	%f295, 0f00000000;
	mov.u32 	%r195, 0;
	@%p51 bra 	BB3_40;

	setp.eq.s32	%p52, %r17, 1;
	mov.f32 	%f292, 0f00000000;
	mov.u32 	%r193, 0;
	@%p52 bra 	BB3_39;

	setp.eq.s32	%p53, %r17, 2;
	mov.f32 	%f291, 0f00000000;
	mov.u32 	%r192, 0;
	@%p53 bra 	BB3_38;

	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd39, %rd38;
	ld.local.u32 	%r123, [%rd39];
	cvt.rn.f32.u32	%f217, %r123;
	sub.f32 	%f218, %f217, %f41;
	fma.rn.f32 	%f291, %f218, %f218, 0f00000000;
	mov.u32 	%r192, 1;

BB3_38:
	add.u64 	%rd40, %SP, 0;
	cvta.to.local.u64 	%rd41, %rd40;
	mul.wide.u32 	%rd42, %r192, 4;
	add.s64 	%rd43, %rd41, %rd42;
	ld.local.u32 	%r124, [%rd43];
	cvt.rn.f32.u32	%f219, %r124;
	sub.f32 	%f220, %f219, %f41;
	fma.rn.f32 	%f292, %f220, %f220, %f291;
	add.s32 	%r193, %r192, 1;

BB3_39:
	add.u64 	%rd44, %SP, 0;
	cvta.to.local.u64 	%rd45, %rd44;
	mul.wide.u32 	%rd46, %r193, 4;
	add.s64 	%rd47, %rd45, %rd46;
	ld.local.u32 	%r125, [%rd47];
	cvt.rn.f32.u32	%f221, %r125;
	sub.f32 	%f222, %f221, %f41;
	fma.rn.f32 	%f295, %f222, %f222, %f292;
	add.s32 	%r195, %r193, 1;

BB3_40:
	add.u64 	%rd48, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd48;
	setp.lt.u32	%p54, %r7, 4;
	@%p54 bra 	BB3_42;

BB3_41:
	mul.wide.u32 	%rd49, %r195, 4;
	add.s64 	%rd50, %rd1, %rd49;
	ld.local.u32 	%r126, [%rd50];
	cvt.rn.f32.u32	%f223, %r126;
	sub.f32 	%f224, %f223, %f41;
	fma.rn.f32 	%f225, %f224, %f224, %f295;
	add.s32 	%r127, %r195, 1;
	mul.wide.u32 	%rd51, %r127, 4;
	add.s64 	%rd52, %rd1, %rd51;
	ld.local.u32 	%r128, [%rd52];
	cvt.rn.f32.u32	%f226, %r128;
	sub.f32 	%f227, %f226, %f41;
	fma.rn.f32 	%f228, %f227, %f227, %f225;
	add.s32 	%r129, %r195, 2;
	mul.wide.u32 	%rd53, %r129, 4;
	add.s64 	%rd54, %rd1, %rd53;
	ld.local.u32 	%r130, [%rd54];
	cvt.rn.f32.u32	%f229, %r130;
	sub.f32 	%f230, %f229, %f41;
	fma.rn.f32 	%f231, %f230, %f230, %f228;
	add.s32 	%r131, %r195, 3;
	mul.wide.u32 	%rd55, %r131, 4;
	add.s64 	%rd56, %rd1, %rd55;
	ld.local.u32 	%r132, [%rd56];
	cvt.rn.f32.u32	%f232, %r132;
	sub.f32 	%f233, %f232, %f41;
	fma.rn.f32 	%f295, %f233, %f233, %f231;
	add.s32 	%r195, %r195, 4;
	setp.lt.u32	%p55, %r195, %r7;
	@%p55 bra 	BB3_41;

BB3_42:
	add.s32 	%r133, %r7, -1;
	cvt.rn.f32.u32	%f234, %r133;
	div.rn.f32 	%f235, %f295, %f234;
	div.rn.f32 	%f51, %f235, %f41;
	setp.ne.s32	%p56, %r7, 1;
	@%p56 bra 	BB3_44;

	// inline asm
	activemask.b32 %r134;
	// inline asm
	add.u64 	%rd57, %SP, 0;
	cvta.to.local.u64 	%rd58, %rd57;
	ld.local.v2.u32 	{%r136, %r137}, [%rd58];
	setp.eq.s32	%p57, %r136, %r137;
	vote.sync.all.pred 	%p58, %p57, %r134;
	mov.u32 	%r196, 2;
	@%p58 bra 	BB3_46;

BB3_44:
	// inline asm
	activemask.b32 %r141;
	// inline asm
	setp.lt.f32	%p59, %f51, 0f3C23D70A;
	vote.sync.all.pred 	%p60, %p59, %r141;
	mov.u32 	%r196, %r187;
	@%p60 bra 	BB3_46;

	// inline asm
	activemask.b32 %r143;
	// inline asm
	setp.le.f32	%p61, %f51, 0f3F800000;
	vote.sync.all.pred 	%p62, %p61, %r143;
	setp.ge.u32	%p63, %r7, %r15;
	and.pred  	%p64, %p62, %p63;
	selp.b32	%r196, %r187, %r9, %p64;

BB3_46:
	cvt.rn.f32.u32	%f296, %r196;
	setp.lt.u32	%p65, %r187, %r196;
	@%p65 bra 	BB3_27;
	bra.uni 	BB3_47;

BB3_54:
	mov.u32 	%r208, %r209;

BB3_76:
	div.u32 	%r184, %r209, %r208;
	cvt.rn.f32.u32	%f309, %r184;
	mov.u16 	%rs9, 0;
	bra.uni 	BB3_77;

BB3_25:
	mov.u32 	%r196, %r197;

BB3_47:
	div.u32 	%r145, %r197, %r196;
	cvt.rn.f32.u32	%f298, %r145;

BB3_48:
	mul.f32 	%f236, %f308, 0f3F400000;
	add.f32 	%f308, %f236, %f296;
	mul.f32 	%f237, %f296, %f298;
	fma.rn.f32 	%f238, %f309, %f236, %f237;
	div.rn.f32 	%f309, %f238, %f308;

BB3_77:
	mul.lo.s32 	%r185, %r4, %r52;
	cvt.u64.u32	%rd90, %r185;
	cvta.to.global.u64 	%rd91, %rd3;
	add.s64 	%rd92, %rd91, %rd90;
	mul.wide.u32 	%rd93, %r3, 16;
	add.s64 	%rd94, %rd92, %rd93;
	st.global.f32 	[%rd94], %f309;
	st.global.f32 	[%rd94+4], %f308;
	mov.u32 	%r186, 0;
	st.global.u32 	[%rd94+12], %r186;
	st.global.u8 	[%rd94+8], %rs9;

BB3_78:
	ret;
}

	// .globl	fractalRenderAdvancedDouble
.visible .entry fractalRenderAdvancedDouble(
	.param .u64 fractalRenderAdvancedDouble_param_0,
	.param .u32 fractalRenderAdvancedDouble_param_1,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_2[8],
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_3[32],
	.param .u32 fractalRenderAdvancedDouble_param_4,
	.param .f32 fractalRenderAdvancedDouble_param_5,
	.param .u32 fractalRenderAdvancedDouble_param_6,
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_7[32],
	.param .u64 fractalRenderAdvancedDouble_param_8,
	.param .u32 fractalRenderAdvancedDouble_param_9,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot4[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<99>;
	.reg .b16 	%rs<10>;
	.reg .f32 	%f<143>;
	.reg .b32 	%r<210>;
	.reg .f64 	%fd<165>;
	.reg .b64 	%rd<93>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd4, [fractalRenderAdvancedDouble_param_0];
	ld.param.u32 	%r54, [fractalRenderAdvancedDouble_param_1];
	ld.param.u32 	%r56, [fractalRenderAdvancedDouble_param_2+4];
	ld.param.u32 	%r55, [fractalRenderAdvancedDouble_param_2];
	ld.param.f64 	%fd54, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd53, [fractalRenderAdvancedDouble_param_3+16];
	ld.param.f64 	%fd52, [fractalRenderAdvancedDouble_param_3+8];
	ld.param.f64 	%fd51, [fractalRenderAdvancedDouble_param_3];
	ld.param.u32 	%r57, [fractalRenderAdvancedDouble_param_4];
	ld.param.f32 	%f7, [fractalRenderAdvancedDouble_param_5];
	ld.param.u32 	%r58, [fractalRenderAdvancedDouble_param_6];
	ld.param.f64 	%fd58, [fractalRenderAdvancedDouble_param_7+24];
	ld.param.f64 	%fd57, [fractalRenderAdvancedDouble_param_7+16];
	ld.param.f64 	%fd56, [fractalRenderAdvancedDouble_param_7+8];
	ld.param.f64 	%fd55, [fractalRenderAdvancedDouble_param_7];
	ld.param.u64 	%rd5, [fractalRenderAdvancedDouble_param_8];
	ld.param.u32 	%r59, [fractalRenderAdvancedDouble_param_9];
	ld.param.u32 	%r61, [fractalRenderAdvancedDouble_param_10+4];
	ld.param.u32 	%r60, [fractalRenderAdvancedDouble_param_10];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p2, %r1, 32;
	@%p2 bra 	BB4_2;

	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, $str2;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r62, 59;
	mov.u64 	%rd10, 0;
	mov.u64 	%rd11, 2;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b32 param2;
	st.param.b32	[param2+0], %r62;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd10;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd11;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB4_2:
	mov.u32 	%r63, %tid.x;
	mov.u32 	%r64, %tid.y;
	mad.lo.s32 	%r65, %r1, %r64, %r63;
	shl.b32 	%r66, %r1, 2;
	and.b32  	%r67, %r65, 15;
	rem.u32 	%r68, %r65, %r66;
	sub.s32 	%r69, %r68, %r67;
	shr.u32 	%r70, %r69, 2;
	and.b32  	%r71, %r65, 3;
	add.s32 	%r72, %r70, %r71;
	div.u32 	%r73, %r65, %r66;
	shl.b32 	%r74, %r73, 2;
	bfe.u32 	%r75, %r65, 2, 2;
	add.s32 	%r76, %r74, %r75;
	mov.u32 	%r77, %ctaid.x;
	mad.lo.s32 	%r4, %r77, %r1, %r72;
	mov.u32 	%r78, %ctaid.y;
	mov.u32 	%r79, %ntid.y;
	mad.lo.s32 	%r5, %r78, %r79, %r76;
	setp.lt.u32	%p3, %r4, %r55;
	setp.gt.u32	%p4, %r56, %r5;
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB4_76;
	bra.uni 	BB4_3;

BB4_3:
	and.b32  	%r80, %r58, 20;
	setp.eq.s32	%p6, %r80, 20;
	setp.ge.f32	%p7, %f7, 0f3F800000;
	and.pred  	%p8, %p6, %p7;
	mov.u16 	%rs8, 0;
	@!%p8 bra 	BB4_9;
	bra.uni 	BB4_4;

BB4_4:
	and.b32  	%r81, %r4, -8;
	cvt.rn.f32.u32	%f38, %r81;
	and.b32  	%r82, %r5, -4;
	cvt.rn.f32.u32	%f39, %r82;
	cvt.rn.f32.u32	%f40, %r60;
	sub.f32 	%f41, %f40, %f38;
	cvt.rn.f32.u32	%f42, %r61;
	sub.f32 	%f43, %f42, %f39;
	mul.f32 	%f44, %f43, %f43;
	fma.rn.f32 	%f45, %f41, %f41, %f44;
	sqrt.rn.f32 	%f46, %f45;
	mul.f32 	%f47, %f46, 0f3CD94079;
	ld.global.f32 	%f48, [screenDistance];
	div.rn.f32 	%f1, %f47, %f48;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p9, %f2, 0f3F800000;
	mov.f32 	%f131, %f2;
	@%p9 bra 	BB4_6;

	rcp.rn.f32 	%f131, %f2;

BB4_6:
	mul.rn.f32 	%f49, %f131, %f131;
	mov.f32 	%f50, 0fC0B59883;
	mov.f32 	%f51, 0fBF52C7EA;
	fma.rn.f32 	%f52, %f49, %f51, %f50;
	mov.f32 	%f53, 0fC0D21907;
	fma.rn.f32 	%f54, %f52, %f49, %f53;
	mul.f32 	%f55, %f49, %f54;
	mul.f32 	%f56, %f131, %f55;
	add.f32 	%f57, %f49, 0f41355DC0;
	mov.f32 	%f58, 0f41E6BD60;
	fma.rn.f32 	%f59, %f57, %f49, %f58;
	mov.f32 	%f60, 0f419D92C8;
	fma.rn.f32 	%f61, %f59, %f49, %f60;
	rcp.rn.f32 	%f62, %f61;
	fma.rn.f32 	%f63, %f56, %f62, %f131;
	mov.f32 	%f64, 0f3FC90FDB;
	sub.f32 	%f65, %f64, %f63;
	setp.gt.f32	%p10, %f2, 0f3F800000;
	selp.f32	%f66, %f65, %f63, %p10;
	mov.b32 	 %r83, %f66;
	mov.b32 	 %r84, %f1;
	and.b32  	%r85, %r84, -2147483648;
	or.b32  	%r86, %r83, %r85;
	mov.b32 	 %f67, %r86;
	setp.gtu.f32	%p11, %f2, 0f7F800000;
	selp.f32	%f68, %f66, %f67, %p11;
	mul.f32 	%f69, %f68, 0f43340000;
	div.rn.f32 	%f5, %f69, 0f40490FDB;
	setp.ge.f32	%p12, %f5, 0f00000000;
	@%p12 bra 	BB4_8;

	mov.u64 	%rd12, $str6;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, $str2;
	cvta.global.u64 	%rd15, %rd14;
	mov.u32 	%r87, 245;
	mov.u64 	%rd16, 0;
	mov.u64 	%rd17, 2;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 param2;
	st.param.b32	[param2+0], %r87;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB4_8:
	fma.rn.f32 	%f70, %f5, 0fBC964FDA, 0f3F8CEADD;
	setp.gtu.f32	%p13, %f5, 0f40B00000;
	setp.le.f32	%p14, %f5, 0f40B00000;
	selp.u16	%rs8, 1, 0, %p14;
	selp.f32	%f71, %f70, 0f3F800000, %p13;
	mul.f32 	%f7, %f71, %f7;

BB4_9:
	and.b32  	%r88, %r58, 8;
	setp.eq.s32	%p16, %r88, 0;
	mov.pred 	%p98, -1;
	mov.f32 	%f141, 0f00000000;
	@%p16 bra 	BB4_10;

	sub.s32 	%r89, %r56, %r5;
	cvt.rn.f64.u32	%fd59, %r89;
	cvt.rn.f64.u32	%fd60, %r55;
	cvt.rn.f64.u32	%fd61, %r4;
	div.rn.f64 	%fd62, %fd61, %fd60;
	cvt.rn.f64.u32	%fd63, %r56;
	div.rn.f64 	%fd64, %fd59, %fd63;
	sub.f64 	%fd65, %fd53, %fd51;
	sub.f64 	%fd66, %fd54, %fd52;
	fma.rn.f64 	%fd67, %fd65, %fd62, %fd51;
	fma.rn.f64 	%fd68, %fd66, %fd64, %fd52;
	sub.f64 	%fd69, %fd67, %fd55;
	sub.f64 	%fd70, %fd68, %fd56;
	sub.f64 	%fd71, %fd57, %fd55;
	div.rn.f64 	%fd72, %fd69, %fd71;
	sub.f64 	%fd73, %fd58, %fd56;
	div.rn.f64 	%fd74, %fd70, %fd73;
	cvt.rn.f32.f64	%f74, %fd72;
	cvt.rn.f32.f64	%f75, %fd74;
	cvt.rn.f32.u32	%f76, %r55;
	mul.f32 	%f8, %f76, %f74;
	cvt.rn.f32.u32	%f77, %r56;
	mul.f32 	%f78, %f77, %f75;
	sub.f32 	%f9, %f77, %f78;
	abs.f32 	%f79, %f8;
	mov.b32 	 %r90, %f8;
	and.b32  	%r91, %r90, -2147483648;
	or.b32  	%r92, %r91, 1056964608;
	mov.b32 	 %f80, %r92;
	add.f32 	%f81, %f8, %f80;
	cvt.rzi.f32.f32	%f82, %f81;
	setp.gt.f32	%p17, %f79, 0f4B000000;
	selp.f32	%f133, %f8, %f82, %p17;
	setp.geu.f32	%p18, %f79, 0f3F000000;
	@%p18 bra 	BB4_13;

	cvt.rzi.f32.f32	%f133, %f8;

BB4_13:
	cvt.rzi.s32.f32	%r6, %f133;
	mov.b32 	 %r93, %f9;
	and.b32  	%r94, %r93, -2147483648;
	or.b32  	%r95, %r94, 1056964608;
	mov.b32 	 %f83, %r95;
	add.f32 	%f84, %f9, %f83;
	cvt.rzi.f32.f32	%f85, %f84;
	abs.f32 	%f86, %f9;
	setp.gt.f32	%p19, %f86, 0f4B000000;
	selp.f32	%f134, %f9, %f85, %p19;
	setp.geu.f32	%p20, %f86, 0f3F000000;
	@%p20 bra 	BB4_15;

	cvt.rzi.f32.f32	%f134, %f9;

BB4_15:
	add.s32 	%r96, %r55, -2;
	setp.lt.u32	%p22, %r6, %r96;
	setp.gt.s32	%p23, %r6, 1;
	and.pred  	%p24, %p23, %p22;
	cvt.rzi.s32.f32	%r97, %f134;
	setp.gt.s32	%p25, %r97, 1;
	and.pred  	%p26, %p24, %p25;
	add.s32 	%r98, %r56, -2;
	setp.lt.u32	%p27, %r97, %r98;
	and.pred  	%p28, %p27, %p26;
	mov.f32 	%f136, %f141;
	@!%p28 bra 	BB4_17;
	bra.uni 	BB4_16;

BB4_16:
	cvt.rmi.f32.f32	%f89, %f8;
	cvt.rzi.u32.f32	%r99, %f89;
	cvt.rmi.f32.f32	%f90, %f9;
	cvt.rzi.u32.f32	%r100, %f90;
	cvt.rn.f32.u32	%f91, %r99;
	sub.f32 	%f92, %f8, %f91;
	cvt.rn.f32.u32	%f93, %r100;
	sub.f32 	%f94, %f9, %f93;
	mul.lo.s32 	%r101, %r100, %r59;
	cvt.u64.u32	%rd18, %r101;
	cvta.to.global.u64 	%rd19, %rd5;
	add.s64 	%rd20, %rd19, %rd18;
	mul.wide.u32 	%rd21, %r99, 16;
	add.s64 	%rd22, %rd20, %rd21;
	add.s32 	%r102, %r99, 1;
	mul.wide.u32 	%rd23, %r102, 16;
	add.s64 	%rd24, %rd20, %rd23;
	add.s32 	%r103, %r100, 1;
	mul.lo.s32 	%r104, %r103, %r59;
	cvt.u64.u32	%rd25, %r104;
	add.s64 	%rd26, %rd19, %rd25;
	add.s64 	%rd27, %rd26, %rd21;
	add.s64 	%rd28, %rd26, %rd23;
	mov.f32 	%f95, 0f3F800000;
	sub.f32 	%f96, %f95, %f92;
	ld.global.f32 	%f97, [%rd22];
	ld.global.f32 	%f98, [%rd24];
	mul.f32 	%f99, %f92, %f98;
	fma.rn.f32 	%f100, %f97, %f96, %f99;
	sub.f32 	%f101, %f95, %f94;
	ld.global.f32 	%f102, [%rd27];
	ld.global.f32 	%f103, [%rd28];
	mul.f32 	%f104, %f92, %f103;
	fma.rn.f32 	%f105, %f96, %f102, %f104;
	mul.f32 	%f106, %f94, %f105;
	fma.rn.f32 	%f141, %f101, %f100, %f106;
	ld.global.f32 	%f107, [%rd22+4];
	ld.global.f32 	%f108, [%rd24+4];
	mul.f32 	%f109, %f92, %f108;
	fma.rn.f32 	%f110, %f96, %f107, %f109;
	ld.global.f32 	%f111, [%rd27+4];
	ld.global.f32 	%f112, [%rd28+4];
	mul.f32 	%f113, %f92, %f112;
	fma.rn.f32 	%f114, %f96, %f111, %f113;
	mul.f32 	%f115, %f94, %f114;
	fma.rn.f32 	%f136, %f101, %f110, %f115;
	mov.pred 	%p98, 0;
	bra.uni 	BB4_17;

BB4_10:
	mov.f32 	%f136, %f141;

BB4_17:
	add.u64 	%rd29, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd29;
	@%p98 bra 	BB4_48;
	bra.uni 	BB4_18;

BB4_48:
	setp.lt.f32	%p66, %f7, 0f3F800000;
	selp.f32	%f29, 0f3F800000, %f7, %p66;
	abs.f32 	%f126, %f29;
	mov.b32 	 %r146, %f29;
	and.b32  	%r147, %r146, -2147483648;
	or.b32  	%r148, %r147, 1056964608;
	mov.b32 	 %f127, %r148;
	add.f32 	%f128, %f29, %f127;
	cvt.rzi.f32.f32	%f129, %f128;
	setp.gt.f32	%p67, %f126, 0f4B000000;
	selp.f32	%f140, %f29, %f129, %p67;
	setp.geu.f32	%p68, %f126, 0f3F000000;
	@%p68 bra 	BB4_50;

	cvt.rzi.f32.f32	%f140, %f29;

BB4_50:
	cvt.rn.f64.u32	%fd113, %r55;
	sub.f64 	%fd114, %fd53, %fd51;
	div.rn.f64 	%fd28, %fd114, %fd113;
	cvt.rn.f64.u32	%fd115, %r56;
	sub.f64 	%fd116, %fd54, %fd52;
	div.rn.f64 	%fd29, %fd116, %fd115;
	cvt.rzi.u32.f32	%r30, %f140;
	setp.lt.u32	%p69, %r30, 65;
	@%p69 bra 	BB4_52;

	mov.u64 	%rd61, $str7;
	cvta.global.u64 	%rd62, %rd61;
	mov.u64 	%rd63, $str2;
	cvta.global.u64 	%rd64, %rd63;
	mov.u32 	%r149, 113;
	mov.u64 	%rd65, 0;
	mov.u64 	%rd66, 2;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd62;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd64;
	.param .b32 param2;
	st.param.b32	[param2+0], %r149;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd65;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd66;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 13

BB4_52:
	setp.eq.s32	%p70, %r30, 0;
	mov.u32 	%r208, 0;
	mov.u32 	%r207, %r208;
	@%p70 bra 	BB4_74;

	cvt.rn.f64.u32	%fd30, %r4;
	cvt.rn.f64.u32	%fd31, %r5;
	and.b32  	%r31, %r58, 1;
	mov.u32 	%r153, 0;
	mov.u32 	%r198, %r153;
	mov.u32 	%r208, %r153;
	mov.u32 	%r207, %r30;

BB4_54:
	mov.u32 	%r34, %r207;
	mov.u32 	%r32, %r198;
	cvt.rn.f64.u32	%fd119, %r34;
	cvt.rn.f64.u32	%fd120, %r32;
	div.rn.f64 	%fd121, %fd120, %fd119;
	add.f64 	%fd122, %fd30, %fd121;
	add.f64 	%fd123, %fd31, %fd121;
	neg.f64 	%fd124, %fd123;
	fma.rn.f64 	%fd32, %fd28, %fd122, %fd51;
	fma.rn.f64 	%fd33, %fd29, %fd124, %fd54;
	setp.eq.s32	%p71, %r57, 0;
	mov.f64 	%fd158, 0d0000000000000000;
	mov.u32 	%r202, %r153;
	mov.f64 	%fd159, %fd158;
	@%p71 bra 	BB4_57;

BB4_55:
	mul.f64 	%fd36, %fd158, %fd158;
	mul.f64 	%fd37, %fd159, %fd159;
	add.f64 	%fd125, %fd37, %fd36;
	setp.geu.f64	%p72, %fd125, 0d4010000000000000;
	@%p72 bra 	BB4_57;

	sub.f64 	%fd126, %fd37, %fd36;
	add.f64 	%fd38, %fd32, %fd126;
	add.f64 	%fd127, %fd159, %fd159;
	fma.rn.f64 	%fd158, %fd127, %fd158, %fd33;
	add.s32 	%r202, %r202, 1;
	setp.lt.u32	%p73, %r202, %r57;
	mov.f64 	%fd159, %fd38;
	@%p73 bra 	BB4_55;

BB4_57:
	cvt.rn.f32.u32	%f130, %r202;
	cvt.rzi.u32.f32	%r38, %f130;
	add.s32 	%r208, %r38, %r208;
	setp.gt.u32	%p74, %r32, 9;
	@%p74 bra 	BB4_59;

	mul.wide.u32 	%rd69, %r32, 4;
	add.s64 	%rd70, %rd1, %rd69;
	st.local.u32 	[%rd70], %r38;

BB4_59:
	setp.lt.u32	%p75, %r32, 10;
	setp.ne.s32	%p76, %r32, 0;
	and.pred  	%p77, %p75, %p76;
	setp.ne.s32	%p78, %r31, 0;
	and.pred  	%p79, %p77, %p78;
	shr.u32 	%r40, %r34, 1;
	setp.eq.s32	%p80, %r32, %r40;
	or.pred  	%p81, %p79, %p80;
	add.s32 	%r198, %r32, 1;
	mov.u32 	%r207, %r34;
	@!%p81 bra 	BB4_73;
	bra.uni 	BB4_60;

BB4_60:
	div.u32 	%r156, %r208, %r198;
	cvt.rn.f64.u32	%fd40, %r156;
	setp.eq.s32	%p82, %r32, 0;
	mov.f64 	%fd164, 0d0000000000000000;
	@%p82 bra 	BB4_69;

	and.b32  	%r42, %r32, 3;
	setp.eq.s32	%p83, %r42, 0;
	mov.f64 	%fd164, 0d0000000000000000;
	mov.u32 	%r206, 0;
	@%p83 bra 	BB4_67;

	setp.eq.s32	%p84, %r42, 1;
	mov.f64 	%fd161, 0d0000000000000000;
	mov.u32 	%r204, 0;
	@%p84 bra 	BB4_66;

	setp.eq.s32	%p85, %r42, 2;
	mov.f64 	%fd160, 0d0000000000000000;
	mov.u32 	%r203, 0;
	@%p85 bra 	BB4_65;

	ld.local.u32 	%r161, [%rd1];
	cvt.rn.f64.u32	%fd132, %r161;
	sub.f64 	%fd133, %fd132, %fd40;
	fma.rn.f64 	%fd160, %fd133, %fd133, 0d0000000000000000;
	mov.u32 	%r203, 1;

BB4_65:
	mul.wide.u32 	%rd73, %r203, 4;
	add.s64 	%rd74, %rd1, %rd73;
	ld.local.u32 	%r162, [%rd74];
	cvt.rn.f64.u32	%fd134, %r162;
	sub.f64 	%fd135, %fd134, %fd40;
	fma.rn.f64 	%fd161, %fd135, %fd135, %fd160;
	add.s32 	%r204, %r203, 1;

BB4_66:
	mul.wide.u32 	%rd77, %r204, 4;
	add.s64 	%rd78, %rd1, %rd77;
	ld.local.u32 	%r163, [%rd78];
	cvt.rn.f64.u32	%fd136, %r163;
	sub.f64 	%fd137, %fd136, %fd40;
	fma.rn.f64 	%fd164, %fd137, %fd137, %fd161;
	add.s32 	%r206, %r204, 1;

BB4_67:
	setp.lt.u32	%p86, %r32, 4;
	@%p86 bra 	BB4_69;

BB4_68:
	mul.wide.u32 	%rd80, %r206, 4;
	add.s64 	%rd81, %rd1, %rd80;
	ld.local.u32 	%r164, [%rd81];
	cvt.rn.f64.u32	%fd138, %r164;
	sub.f64 	%fd139, %fd138, %fd40;
	fma.rn.f64 	%fd140, %fd139, %fd139, %fd164;
	add.s32 	%r165, %r206, 1;
	mul.wide.u32 	%rd82, %r165, 4;
	add.s64 	%rd83, %rd1, %rd82;
	ld.local.u32 	%r166, [%rd83];
	cvt.rn.f64.u32	%fd141, %r166;
	sub.f64 	%fd142, %fd141, %fd40;
	fma.rn.f64 	%fd143, %fd142, %fd142, %fd140;
	add.s32 	%r167, %r206, 2;
	mul.wide.u32 	%rd84, %r167, 4;
	add.s64 	%rd85, %rd1, %rd84;
	ld.local.u32 	%r168, [%rd85];
	cvt.rn.f64.u32	%fd144, %r168;
	sub.f64 	%fd145, %fd144, %fd40;
	fma.rn.f64 	%fd146, %fd145, %fd145, %fd143;
	add.s32 	%r169, %r206, 3;
	mul.wide.u32 	%rd86, %r169, 4;
	add.s64 	%rd87, %rd1, %rd86;
	ld.local.u32 	%r170, [%rd87];
	cvt.rn.f64.u32	%fd147, %r170;
	sub.f64 	%fd148, %fd147, %fd40;
	fma.rn.f64 	%fd164, %fd148, %fd148, %fd146;
	add.s32 	%r206, %r206, 4;
	setp.lt.u32	%p87, %r206, %r32;
	@%p87 bra 	BB4_68;

BB4_69:
	add.s32 	%r171, %r32, -1;
	cvt.rn.f64.u32	%fd149, %r171;
	div.rn.f64 	%fd150, %fd164, %fd149;
	div.rn.f64 	%fd50, %fd150, %fd40;
	setp.ne.s32	%p88, %r32, 1;
	@%p88 bra 	BB4_71;

	// inline asm
	activemask.b32 %r172;
	// inline asm
	ld.local.v2.u32 	{%r174, %r175}, [%rd1];
	setp.eq.s32	%p89, %r174, %r175;
	vote.sync.all.pred 	%p90, %p89, %r172;
	mov.u32 	%r207, 2;
	@%p90 bra 	BB4_73;

BB4_71:
	// inline asm
	activemask.b32 %r179;
	// inline asm
	setp.lt.f64	%p91, %fd50, 0d3F847AE140000000;
	vote.sync.all.pred 	%p92, %p91, %r179;
	mov.u32 	%r207, %r198;
	@%p92 bra 	BB4_73;

	// inline asm
	activemask.b32 %r181;
	// inline asm
	setp.le.f64	%p93, %fd50, 0d3FF0000000000000;
	vote.sync.all.pred 	%p94, %p93, %r181;
	setp.ge.u32	%p95, %r32, %r40;
	and.pred  	%p96, %p94, %p95;
	selp.b32	%r207, %r198, %r34, %p96;

BB4_73:
	setp.lt.u32	%p97, %r198, %r207;
	@%p97 bra 	BB4_54;

BB4_74:
	cvt.rn.f32.u32	%f136, %r207;
	div.u32 	%r183, %r208, %r207;
	cvt.rn.f32.u32	%f141, %r183;
	mov.u16 	%rs9, 0;
	bra.uni 	BB4_75;

BB4_18:
	shr.u32 	%r105, %r58, 5;
	and.b32  	%r106, %r105, 1;
	setp.eq.b32	%p30, %r106, 1;
	not.pred 	%p31, %p30;
	setp.eq.s16	%p32, %rs8, 0;
	mov.u16 	%rs9, 1;
	or.pred  	%p33, %p32, %p31;
	@%p33 bra 	BB4_75;

	setp.lt.f32	%p34, %f7, 0f3F800000;
	mov.f32 	%f138, 0f00000000;
	mov.f32 	%f139, %f138;
	@%p34 bra 	BB4_47;

	abs.f32 	%f118, %f7;
	mov.b32 	 %r107, %f7;
	and.b32  	%r108, %r107, -2147483648;
	or.b32  	%r109, %r108, 1056964608;
	mov.b32 	 %f119, %r109;
	add.f32 	%f120, %f7, %f119;
	cvt.rzi.f32.f32	%f121, %f120;
	setp.gt.f32	%p35, %f118, 0f4B000000;
	selp.f32	%f137, %f7, %f121, %p35;
	setp.geu.f32	%p36, %f118, 0f3F000000;
	@%p36 bra 	BB4_22;

	cvt.rzi.f32.f32	%f137, %f7;

BB4_22:
	cvt.rn.f64.u32	%fd75, %r55;
	sub.f64 	%fd76, %fd53, %fd51;
	div.rn.f64 	%fd5, %fd76, %fd75;
	cvt.rn.f64.u32	%fd77, %r56;
	sub.f64 	%fd78, %fd54, %fd52;
	div.rn.f64 	%fd6, %fd78, %fd77;
	cvt.rzi.u32.f32	%r7, %f137;
	setp.lt.u32	%p37, %r7, 65;
	@%p37 bra 	BB4_24;

	mov.u64 	%rd30, $str7;
	cvta.global.u64 	%rd31, %rd30;
	mov.u64 	%rd32, $str2;
	cvta.global.u64 	%rd33, %rd32;
	mov.u32 	%r110, 113;
	mov.u64 	%rd34, 0;
	mov.u64 	%rd35, 2;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd31;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd33;
	.param .b32 param2;
	st.param.b32	[param2+0], %r110;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd34;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd35;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB4_24:
	setp.eq.s32	%p38, %r7, 0;
	mov.u32 	%r196, 0;
	mov.u32 	%r195, %r196;
	@%p38 bra 	BB4_46;

	cvt.rn.f64.u32	%fd7, %r4;
	cvt.rn.f64.u32	%fd8, %r5;
	mov.u32 	%r114, 0;
	mov.u32 	%r186, %r114;
	mov.u32 	%r196, %r114;
	mov.u32 	%r195, %r7;

BB4_26:
	mov.u32 	%r10, %r195;
	mov.u32 	%r8, %r186;
	cvt.rn.f64.u32	%fd81, %r10;
	cvt.rn.f64.u32	%fd82, %r8;
	div.rn.f64 	%fd83, %fd82, %fd81;
	add.f64 	%fd84, %fd7, %fd83;
	add.f64 	%fd85, %fd8, %fd83;
	neg.f64 	%fd86, %fd85;
	fma.rn.f64 	%fd9, %fd5, %fd84, %fd51;
	fma.rn.f64 	%fd10, %fd6, %fd86, %fd54;
	setp.eq.s32	%p39, %r57, 0;
	mov.f64 	%fd151, 0d0000000000000000;
	mov.u32 	%r190, %r114;
	mov.f64 	%fd152, %fd151;
	@%p39 bra 	BB4_29;

BB4_27:
	mul.f64 	%fd13, %fd151, %fd151;
	mul.f64 	%fd14, %fd152, %fd152;
	add.f64 	%fd87, %fd14, %fd13;
	setp.geu.f64	%p40, %fd87, 0d4010000000000000;
	@%p40 bra 	BB4_29;

	sub.f64 	%fd88, %fd14, %fd13;
	add.f64 	%fd15, %fd9, %fd88;
	add.f64 	%fd89, %fd152, %fd152;
	fma.rn.f64 	%fd151, %fd89, %fd151, %fd10;
	add.s32 	%r190, %r190, 1;
	setp.lt.u32	%p41, %r190, %r57;
	mov.f64 	%fd152, %fd15;
	@%p41 bra 	BB4_27;

BB4_29:
	cvt.rn.f32.u32	%f122, %r190;
	cvt.rzi.u32.f32	%r14, %f122;
	add.s32 	%r196, %r14, %r196;
	setp.gt.u32	%p42, %r8, 9;
	@%p42 bra 	BB4_31;

	mul.wide.u32 	%rd38, %r8, 4;
	add.s64 	%rd39, %rd1, %rd38;
	st.local.u32 	[%rd39], %r14;

BB4_31:
	setp.lt.u32	%p43, %r8, 10;
	and.b32  	%r117, %r58, 1;
	setp.eq.b32	%p44, %r117, 1;
	setp.ne.s32	%p45, %r8, 0;
	and.pred  	%p46, %p43, %p45;
	and.pred  	%p47, %p46, %p44;
	shr.u32 	%r16, %r10, 1;
	setp.eq.s32	%p48, %r8, %r16;
	or.pred  	%p49, %p47, %p48;
	add.s32 	%r186, %r8, 1;
	mov.u32 	%r195, %r10;
	@!%p49 bra 	BB4_45;
	bra.uni 	BB4_32;

BB4_32:
	div.u32 	%r118, %r196, %r186;
	cvt.rn.f64.u32	%fd17, %r118;
	setp.eq.s32	%p50, %r8, 0;
	mov.f64 	%fd157, 0d0000000000000000;
	@%p50 bra 	BB4_41;

	and.b32  	%r18, %r8, 3;
	setp.eq.s32	%p51, %r18, 0;
	mov.f64 	%fd157, 0d0000000000000000;
	mov.u32 	%r194, 0;
	@%p51 bra 	BB4_39;

	setp.eq.s32	%p52, %r18, 1;
	mov.f64 	%fd154, 0d0000000000000000;
	mov.u32 	%r192, 0;
	@%p52 bra 	BB4_38;

	setp.eq.s32	%p53, %r18, 2;
	mov.f64 	%fd153, 0d0000000000000000;
	mov.u32 	%r191, 0;
	@%p53 bra 	BB4_37;

	ld.local.u32 	%r123, [%rd1];
	cvt.rn.f64.u32	%fd94, %r123;
	sub.f64 	%fd95, %fd94, %fd17;
	fma.rn.f64 	%fd153, %fd95, %fd95, 0d0000000000000000;
	mov.u32 	%r191, 1;

BB4_37:
	mul.wide.u32 	%rd44, %r191, 4;
	add.s64 	%rd45, %rd1, %rd44;
	ld.local.u32 	%r124, [%rd45];
	cvt.rn.f64.u32	%fd96, %r124;
	sub.f64 	%fd97, %fd96, %fd17;
	fma.rn.f64 	%fd154, %fd97, %fd97, %fd153;
	add.s32 	%r192, %r191, 1;

BB4_38:
	mul.wide.u32 	%rd48, %r192, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.u32 	%r125, [%rd49];
	cvt.rn.f64.u32	%fd98, %r125;
	sub.f64 	%fd99, %fd98, %fd17;
	fma.rn.f64 	%fd157, %fd99, %fd99, %fd154;
	add.s32 	%r194, %r192, 1;

BB4_39:
	setp.lt.u32	%p54, %r8, 4;
	@%p54 bra 	BB4_41;

BB4_40:
	mul.wide.u32 	%rd51, %r194, 4;
	add.s64 	%rd52, %rd1, %rd51;
	ld.local.u32 	%r126, [%rd52];
	cvt.rn.f64.u32	%fd100, %r126;
	sub.f64 	%fd101, %fd100, %fd17;
	fma.rn.f64 	%fd102, %fd101, %fd101, %fd157;
	add.s32 	%r127, %r194, 1;
	mul.wide.u32 	%rd53, %r127, 4;
	add.s64 	%rd54, %rd1, %rd53;
	ld.local.u32 	%r128, [%rd54];
	cvt.rn.f64.u32	%fd103, %r128;
	sub.f64 	%fd104, %fd103, %fd17;
	fma.rn.f64 	%fd105, %fd104, %fd104, %fd102;
	add.s32 	%r129, %r194, 2;
	mul.wide.u32 	%rd55, %r129, 4;
	add.s64 	%rd56, %rd1, %rd55;
	ld.local.u32 	%r130, [%rd56];
	cvt.rn.f64.u32	%fd106, %r130;
	sub.f64 	%fd107, %fd106, %fd17;
	fma.rn.f64 	%fd108, %fd107, %fd107, %fd105;
	add.s32 	%r131, %r194, 3;
	mul.wide.u32 	%rd57, %r131, 4;
	add.s64 	%rd58, %rd1, %rd57;
	ld.local.u32 	%r132, [%rd58];
	cvt.rn.f64.u32	%fd109, %r132;
	sub.f64 	%fd110, %fd109, %fd17;
	fma.rn.f64 	%fd157, %fd110, %fd110, %fd108;
	add.s32 	%r194, %r194, 4;
	setp.lt.u32	%p55, %r194, %r8;
	@%p55 bra 	BB4_40;

BB4_41:
	add.s32 	%r133, %r8, -1;
	cvt.rn.f64.u32	%fd111, %r133;
	div.rn.f64 	%fd112, %fd157, %fd111;
	div.rn.f64 	%fd27, %fd112, %fd17;
	setp.ne.s32	%p56, %r8, 1;
	@%p56 bra 	BB4_43;

	// inline asm
	activemask.b32 %r134;
	// inline asm
	ld.local.v2.u32 	{%r136, %r137}, [%rd1];
	setp.eq.s32	%p57, %r136, %r137;
	vote.sync.all.pred 	%p58, %p57, %r134;
	mov.u32 	%r195, 2;
	@%p58 bra 	BB4_45;

BB4_43:
	// inline asm
	activemask.b32 %r141;
	// inline asm
	setp.lt.f64	%p59, %fd27, 0d3F847AE140000000;
	vote.sync.all.pred 	%p60, %p59, %r141;
	mov.u32 	%r195, %r186;
	@%p60 bra 	BB4_45;

	// inline asm
	activemask.b32 %r143;
	// inline asm
	setp.le.f64	%p61, %fd27, 0d3FF0000000000000;
	vote.sync.all.pred 	%p62, %p61, %r143;
	setp.ge.u32	%p63, %r8, %r16;
	and.pred  	%p64, %p62, %p63;
	selp.b32	%r195, %r186, %r10, %p64;

BB4_45:
	setp.lt.u32	%p65, %r186, %r195;
	@%p65 bra 	BB4_26;

BB4_46:
	cvt.rn.f32.u32	%f138, %r195;
	div.u32 	%r145, %r196, %r195;
	cvt.rn.f32.u32	%f139, %r145;

BB4_47:
	mul.f32 	%f123, %f136, 0f3F400000;
	add.f32 	%f136, %f123, %f138;
	mul.f32 	%f124, %f138, %f139;
	fma.rn.f32 	%f125, %f141, %f123, %f124;
	div.rn.f32 	%f141, %f125, %f136;

BB4_75:
	mul.lo.s32 	%r184, %r5, %r54;
	cvt.u64.u32	%rd88, %r184;
	cvta.to.global.u64 	%rd89, %rd4;
	add.s64 	%rd90, %rd89, %rd88;
	mul.wide.u32 	%rd91, %r4, 16;
	add.s64 	%rd92, %rd90, %rd91;
	st.global.f32 	[%rd92], %f141;
	st.global.f32 	[%rd92+4], %f136;
	mov.u32 	%r185, 0;
	st.global.u32 	[%rd92+12], %r185;
	st.global.u8 	[%rd92+8], %rs9;

BB4_76:
	ret;
}

	// .globl	compose
.visible .entry compose(
	.param .u64 compose_param_0,
	.param .u32 compose_param_1,
	.param .u64 compose_param_2,
	.param .u32 compose_param_3,
	.param .u64 compose_param_4,
	.param .u32 compose_param_5,
	.param .u32 compose_param_6,
	.param .u64 compose_param_7,
	.param .u32 compose_param_8,
	.param .f32 compose_param_9
)
{
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<16>;
	.reg .b32 	%r<37>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [compose_param_0];
	ld.param.u32 	%r7, [compose_param_1];
	ld.param.u64 	%rd3, [compose_param_4];
	ld.param.u32 	%r9, [compose_param_5];
	ld.param.u32 	%r10, [compose_param_6];
	ld.param.u64 	%rd4, [compose_param_7];
	ld.param.u32 	%r8, [compose_param_8];
	ld.param.f32 	%f5, [compose_param_9];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r12, %r11, %r13;
	mov.u32 	%r14, %ctaid.y;
	mov.u32 	%r15, %ntid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r14, %r15, %r16;
	setp.ge.u32	%p1, %r2, %r10;
	setp.ge.u32	%p2, %r1, %r9;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_9;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.lo.s32 	%r17, %r2, %r7;
	cvt.u64.u32	%rd6, %r17;
	add.s64 	%rd7, %rd5, %rd6;
	mul.wide.u32 	%rd8, %r1, 16;
	add.s64 	%rd1, %rd7, %rd8;
	ld.const.u8 	%rs1, [VISUALIZE_SAMPLE_COUNT];
	setp.eq.s16	%p4, %rs1, 0;
	@%p4 bra 	BB5_3;

	ld.global.f32 	%f6, [%rd1+4];
	cvt.rzi.u32.f32	%r18, %f6;
	cvt.rzi.u32.f32	%r19, %f5;
	min.u32 	%r20, %r18, %r19;
	cvt.rn.f32.u32	%f7, %r20;
	cvt.rn.f32.u32	%f8, %r19;
	div.rn.f32 	%f9, %f7, %f8;
	mul.f32 	%f10, %f9, 0f437F0000;
	cvt.rzi.s32.f32	%r21, %f10;
	and.b32  	%r22, %r21, 255;
	prmt.b32 	%r23, %r22, %r22, 30212;
	prmt.b32 	%r24, %r22, %r23, 28756;
	or.b32  	%r25, %r24, -16777216;
	ld.global.u8 	%rs2, [%rd1+8];
	setp.eq.s16	%p5, %rs2, 0;
	selp.b32	%r36, %r25, -16777216, %p5;
	bra.uni 	BB5_8;

BB5_3:
	ld.global.f32 	%f1, [%rd1];
	abs.f32 	%f11, %f1;
	mov.b32 	 %r26, %f1;
	and.b32  	%r27, %r26, -2147483648;
	or.b32  	%r28, %r27, 1056964608;
	mov.b32 	 %f12, %r28;
	add.f32 	%f13, %f1, %f12;
	cvt.rzi.f32.f32	%f14, %f13;
	setp.gt.f32	%p6, %f11, 0f4B000000;
	selp.f32	%f15, %f1, %f14, %p6;
	setp.geu.f32	%p7, %f11, 0f3F000000;
	@%p7 bra 	BB5_5;

	cvt.rzi.f32.f32	%f15, %f1;

BB5_5:
	cvt.rzi.u32.f32	%r29, %f15;
	rem.u32 	%r30, %r29, %r8;
	sub.s32 	%r31, %r8, %r30;
	add.s32 	%r4, %r31, -1;
	setp.lt.u32	%p8, %r4, %r8;
	@%p8 bra 	BB5_7;

	mov.u64 	%rd9, $str8;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str9;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r32, 29;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14

BB5_7:
	shl.b32 	%r33, %r4, 2;
	mov.u32 	%r34, 0;
	suld.b.2d.b32.trap {%r36}, [%rd4, {%r33, %r34}];

BB5_8:
	shl.b32 	%r35, %r1, 2;
	sust.b.2d.b32.trap 	[%rd3, {%r35, %r2}], {%r36};

BB5_9:
	ret;
}

	// .globl	fractalRenderUnderSampled
.visible .entry fractalRenderUnderSampled(
	.param .u64 fractalRenderUnderSampled_param_0,
	.param .u32 fractalRenderUnderSampled_param_1,
	.param .u32 fractalRenderUnderSampled_param_2,
	.param .u32 fractalRenderUnderSampled_param_3,
	.param .f32 fractalRenderUnderSampled_param_4,
	.param .f32 fractalRenderUnderSampled_param_5,
	.param .f32 fractalRenderUnderSampled_param_6,
	.param .f32 fractalRenderUnderSampled_param_7,
	.param .u32 fractalRenderUnderSampled_param_8,
	.param .u32 fractalRenderUnderSampled_param_9
)
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<51>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [fractalRenderUnderSampled_param_0];
	ld.param.u32 	%r12, [fractalRenderUnderSampled_param_1];
	ld.param.u32 	%r13, [fractalRenderUnderSampled_param_2];
	ld.param.u32 	%r14, [fractalRenderUnderSampled_param_3];
	ld.param.f32 	%f11, [fractalRenderUnderSampled_param_4];
	ld.param.f32 	%f12, [fractalRenderUnderSampled_param_5];
	ld.param.f32 	%f13, [fractalRenderUnderSampled_param_6];
	ld.param.f32 	%f14, [fractalRenderUnderSampled_param_7];
	ld.param.u32 	%r15, [fractalRenderUnderSampled_param_8];
	ld.param.u32 	%r16, [fractalRenderUnderSampled_param_9];
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r20, %r18, %r17, %r19;
	mul.lo.s32 	%r1, %r20, %r16;
	mov.u32 	%r21, %ctaid.y;
	mov.u32 	%r22, %ntid.y;
	mov.u32 	%r23, %tid.y;
	mad.lo.s32 	%r24, %r21, %r22, %r23;
	mul.lo.s32 	%r2, %r24, %r16;
	sub.s32 	%r25, %r14, %r16;
	setp.ge.u32	%p1, %r2, %r25;
	sub.s32 	%r26, %r13, %r16;
	setp.ge.u32	%p2, %r1, %r26;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB6_14;

	sub.f32 	%f17, %f13, %f11;
	cvt.rn.f32.u32	%f18, %r13;
	div.rn.f32 	%f19, %f17, %f18;
	cvt.rn.f32.u32	%f20, %r14;
	sub.f32 	%f21, %f14, %f12;
	div.rn.f32 	%f22, %f21, %f20;
	cvt.rn.f32.u32	%f23, %r1;
	fma.rn.f32 	%f1, %f23, %f19, %f11;
	cvt.rn.f32.u32	%f24, %r2;
	mul.f32 	%f25, %f24, %f22;
	sub.f32 	%f2, %f14, %f25;
	setp.eq.s32	%p4, %r15, 0;
	mov.f32 	%f31, 0f00000000;
	mov.u32 	%r46, 0;
	@%p4 bra 	BB6_5;

	mov.f32 	%f32, %f31;

BB6_3:
	mul.f32 	%f5, %f31, %f31;
	mul.f32 	%f6, %f32, %f32;
	add.f32 	%f26, %f6, %f5;
	setp.geu.f32	%p5, %f26, 0f40800000;
	@%p5 bra 	BB6_5;

	sub.f32 	%f27, %f6, %f5;
	add.f32 	%f7, %f1, %f27;
	add.f32 	%f28, %f32, %f32;
	fma.rn.f32 	%f31, %f28, %f31, %f2;
	add.s32 	%r46, %r46, 1;
	setp.lt.u32	%p6, %r46, %r15;
	mov.f32 	%f32, %f7;
	@%p6 bra 	BB6_3;

BB6_5:
	setp.eq.s32	%p7, %r16, 0;
	@%p7 bra 	BB6_14;

	cvt.rn.f32.u32	%f29, %r46;
	cvt.rzi.u32.f32	%r33, %f29;
	mul.lo.s32 	%r34, %r2, %r12;
	cvt.u64.u32	%rd3, %r34;
	cvta.to.global.u64 	%rd4, %rd2;
	add.s64 	%rd5, %rd4, %rd3;
	cvt.rn.f32.u32	%f30, %r16;
	rcp.rn.f32 	%f9, %f30;
	cvt.rn.f32.u32	%f10, %r33;
	mul.wide.u32 	%rd6, %r1, 16;
	add.s64 	%rd1, %rd5, %rd6;
	and.b32  	%r32, %r16, 3;
	mov.u32 	%r47, 1;
	mov.u32 	%r50, 0;
	setp.eq.s32	%p8, %r32, 0;
	@%p8 bra 	BB6_12;

	setp.eq.s32	%p9, %r32, 1;
	mov.u32 	%r48, %r50;
	@%p9 bra 	BB6_11;

	setp.eq.s32	%p10, %r32, 2;
	@%p10 bra 	BB6_10;

	st.global.f32 	[%rd1], %f10;
	st.global.f32 	[%rd1+4], %f9;
	mov.u32 	%r41, 0;
	st.global.u32 	[%rd1+12], %r41;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd1+8], %rs1;
	mov.u32 	%r47, 2;

BB6_10:
	st.global.f32 	[%rd1], %f10;
	st.global.f32 	[%rd1+4], %f9;
	mov.u32 	%r42, 0;
	st.global.u32 	[%rd1+12], %r42;
	mov.u16 	%rs2, 0;
	st.global.u8 	[%rd1+8], %rs2;
	mov.u32 	%r48, %r47;

BB6_11:
	st.global.f32 	[%rd1], %f10;
	st.global.f32 	[%rd1+4], %f9;
	st.global.u32 	[%rd1+12], %r50;
	mov.u16 	%rs3, 0;
	st.global.u8 	[%rd1+8], %rs3;
	add.s32 	%r50, %r48, 1;

BB6_12:
	setp.lt.u32	%p11, %r16, 4;
	@%p11 bra 	BB6_14;

BB6_13:
	st.global.f32 	[%rd1], %f10;
	st.global.f32 	[%rd1+4], %f9;
	mov.u32 	%r44, 0;
	st.global.u32 	[%rd1+12], %r44;
	mov.u16 	%rs4, 0;
	st.global.u8 	[%rd1+8], %rs4;
	add.s32 	%r50, %r50, 4;
	setp.lt.u32	%p12, %r50, %r16;
	@%p12 bra 	BB6_13;

BB6_14:
	ret;
}

	// .globl	debug
.visible .entry debug(

)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<4>;


	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mul.lo.s32 	%r3, %r2, %r1;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ntid.y;
	mul.lo.s32 	%r6, %r4, %r5;
	mov.u32 	%r7, %tid.x;
	neg.s32 	%r8, %r7;
	setp.eq.s32	%p1, %r3, %r8;
	mov.u32 	%r9, %tid.y;
	neg.s32 	%r10, %r9;
	setp.eq.s32	%p2, %r6, %r10;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB7_2;
	bra.uni 	BB7_1;

BB7_1:
	mov.u64 	%rd1, $str;
	cvta.global.u64 	%rd2, %rd1;
	mov.u64 	%rd3, 0;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 15

BB7_2:
	ret;
}


