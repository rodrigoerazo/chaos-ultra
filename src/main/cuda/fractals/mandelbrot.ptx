//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24330188
// Cuda compilation tools, release 9.2, V9.2.148
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	init
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 1 .u8 VISUALIZE_SAMPLE_COUNT;
.global .align 4 .u32 seed;
.global .align 4 .u32 WARP_SIZE_X = 8;
.global .align 4 .u32 WARP_SIZE_Y = 4;
.global .align 4 .u32 USE_ADAPTIVE_SS_FLAG_MASK = 1;
.global .align 4 .u32 USE_FOVEATION_FLAG_MASK = 4;
.global .align 4 .u32 USE_SAMPLE_REUSE_FLAG_MASK = 8;
.global .align 4 .u32 IS_ZOOMING_FLAG_MASK = 16;
.global .align 4 .u32 ZOOMING_IN_FLAG_MASK = 32;
.global .align 4 .u32 visualityAmplifyCoeff = 10;
.global .align 4 .f32 screenDistance = 0f42700000;
.global .align 4 .f32 pixelRealWidthInCm = 0f3CD94079;
.global .align 16 .b8 $str[23] = {104, 101, 108, 108, 111, 32, 102, 114, 111, 109, 32, 109, 97, 110, 100, 101, 108, 98, 114, 111, 116, 10, 0};
.global .align 16 .b8 $str1[34] = {98, 0, 108, 0, 111, 0, 99, 0, 107, 0, 68, 0, 105, 0, 109, 0, 46, 0, 120, 0, 32, 0, 61, 0, 61, 0, 32, 0, 51, 0, 50, 0, 0, 0};
.global .align 16 .b8 $str2[138] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 82, 0, 101, 0, 110, 0, 100, 0, 101, 0, 114, 0, 101, 0, 114, 0, 71, 0, 101, 0, 110, 0, 101, 0, 114, 0, 105, 0, 99, 0, 46, 0, 99, 0, 117, 0, 0, 0};
.global .align 16 .b8 $str3[44] = {109, 0, 97, 0, 120, 0, 83, 0, 117, 0, 112, 0, 101, 0, 114, 0, 83, 0, 97, 0, 109, 0, 112, 0, 108, 0, 105, 0, 110, 0, 103, 0, 32, 0, 62, 0, 61, 0, 32, 0, 49, 0, 0, 0};
.global .align 16 .b8 $str4[40] = {112, 0, 79, 0, 117, 0, 116, 0, 112, 0, 117, 0, 116, 0, 45, 0, 62, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str7[42] = {109, 0, 97, 0, 120, 0, 83, 0, 117, 0, 112, 0, 101, 0, 114, 0, 83, 0, 97, 0, 109, 0, 112, 0, 108, 0, 105, 0, 110, 0, 103, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str8[34] = {118, 0, 105, 0, 115, 0, 117, 0, 97, 0, 108, 0, 65, 0, 110, 0, 103, 0, 108, 0, 101, 0, 32, 0, 62, 0, 61, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str9[31] = {102, 111, 99, 117, 115, 58, 32, 115, 97, 109, 112, 108, 101, 115, 58, 37, 102, 44, 32, 114, 101, 117, 115, 105, 110, 103, 58, 37, 105, 10, 0};
.global .align 16 .b8 $str10[36] = {114, 0, 101, 0, 115, 0, 117, 0, 108, 0, 116, 0, 46, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str11[68] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 60, 0, 61, 0, 32, 0, 77, 0, 65, 0, 88, 0, 95, 0, 83, 0, 85, 0, 80, 0, 69, 0, 82, 0, 95, 0, 83, 0, 65, 0, 77, 0, 80, 0, 76, 0, 73, 0, 78, 0, 71, 0, 0, 0};
.global .align 16 .b8 $str12[54] = {112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 73, 0, 100, 0, 120, 0, 32, 0, 60, 0, 32, 0, 112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 76, 0, 101, 0, 110, 0, 103, 0, 116, 0, 104, 0, 0, 0};
.global .align 16 .b8 $str13[132] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 115, 0, 47, 0, 109, 0, 97, 0, 110, 0, 100, 0, 101, 0, 108, 0, 98, 0, 114, 0, 111, 0, 116, 0, 46, 0, 99, 0, 117, 0, 0, 0};

.visible .entry init(

)
{



	ret;
}

	// .globl	fractalRenderMainFloat
.visible .entry fractalRenderMainFloat(
	.param .u64 fractalRenderMainFloat_param_0,
	.param .u32 fractalRenderMainFloat_param_1,
	.param .align 4 .b8 fractalRenderMainFloat_param_2[8],
	.param .align 4 .b8 fractalRenderMainFloat_param_3[16],
	.param .u32 fractalRenderMainFloat_param_4,
	.param .f32 fractalRenderMainFloat_param_5,
	.param .u32 fractalRenderMainFloat_param_6
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<39>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<97>;
	.reg .b32 	%r<109>;
	.reg .b64 	%rd<54>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [fractalRenderMainFloat_param_0];
	ld.param.u32 	%r29, [fractalRenderMainFloat_param_1];
	ld.param.u32 	%r31, [fractalRenderMainFloat_param_2+4];
	ld.param.u32 	%r30, [fractalRenderMainFloat_param_2];
	ld.param.f32 	%f39, [fractalRenderMainFloat_param_3+12];
	ld.param.f32 	%f38, [fractalRenderMainFloat_param_3+8];
	ld.param.f32 	%f37, [fractalRenderMainFloat_param_3+4];
	ld.param.f32 	%f36, [fractalRenderMainFloat_param_3];
	ld.param.u32 	%r32, [fractalRenderMainFloat_param_4];
	ld.param.f32 	%f40, [fractalRenderMainFloat_param_5];
	ld.param.u32 	%r33, [fractalRenderMainFloat_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str2;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r34, 59;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB1_2:
	mov.u32 	%r35, %tid.x;
	mov.u32 	%r36, %tid.y;
	mad.lo.s32 	%r37, %r1, %r36, %r35;
	shl.b32 	%r38, %r1, 2;
	and.b32  	%r39, %r37, 15;
	rem.u32 	%r40, %r37, %r38;
	sub.s32 	%r41, %r40, %r39;
	shr.u32 	%r42, %r41, 2;
	and.b32  	%r43, %r37, 3;
	add.s32 	%r44, %r42, %r43;
	div.u32 	%r45, %r37, %r38;
	shl.b32 	%r46, %r45, 2;
	bfe.u32 	%r47, %r37, 2, 2;
	add.s32 	%r48, %r46, %r47;
	mov.u32 	%r49, %ctaid.x;
	mad.lo.s32 	%r4, %r49, %r1, %r44;
	mov.u32 	%r50, %ctaid.y;
	mov.u32 	%r51, %ntid.y;
	mad.lo.s32 	%r5, %r50, %r51, %r48;
	setp.lt.u32	%p2, %r4, %r30;
	setp.lt.u32	%p3, %r5, %r31;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB1_36;
	bra.uni 	BB1_3;

BB1_3:
	setp.ge.f32	%p5, %f40, 0f3F800000;
	@%p5 bra 	BB1_5;

	mov.u64 	%rd10, $str3;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str2;
	cvta.global.u64 	%rd13, %rd12;
	mov.u32 	%r52, 196;
	mov.u64 	%rd14, 0;
	mov.u64 	%rd15, 2;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r52;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd14;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd15;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_5:
	setp.lt.f32	%p6, %f40, 0f3F800000;
	mov.f32 	%f94, 0f00000000;
	mov.f32 	%f96, %f94;
	@%p6 bra 	BB1_34;

	abs.f32 	%f43, %f40;
	mov.b32 	 %r53, %f40;
	and.b32  	%r54, %r53, -2147483648;
	or.b32  	%r55, %r54, 1056964608;
	mov.b32 	 %f44, %r55;
	add.f32 	%f45, %f44, %f40;
	cvt.rzi.f32.f32	%f46, %f45;
	setp.gt.f32	%p7, %f43, 0f4B000000;
	selp.f32	%f85, %f40, %f46, %p7;
	setp.geu.f32	%p8, %f43, 0f3F000000;
	@%p8 bra 	BB1_8;

	cvt.rzi.f32.f32	%f85, %f40;

BB1_8:
	cvt.rzi.u32.f32	%r56, %f85;
	mov.u32 	%r57, 64;
	min.u32 	%r106, %r57, %r56;
	setp.lt.u32	%p9, %r106, 65;
	@%p9 bra 	BB1_10;

	mov.u64 	%rd16, $str11;
	cvta.global.u64 	%rd17, %rd16;
	mov.u64 	%rd18, $str2;
	cvta.global.u64 	%rd19, %rd18;
	mov.u32 	%r58, 113;
	mov.u64 	%rd20, 0;
	mov.u64 	%rd21, 2;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd19;
	.param .b32 param2;
	st.param.b32	[param2+0], %r58;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd20;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd21;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB1_10:
	setp.eq.s32	%p10, %r106, 0;
	cvt.rn.f32.u32	%f94, %r106;
	mov.u32 	%r107, 0;
	@%p10 bra 	BB1_11;

	cvt.rn.f32.u32	%f7, %r4;
	cvt.rn.f32.u32	%f8, %r5;
	cvt.rn.f32.u32	%f47, %r30;
	sub.f32 	%f48, %f38, %f36;
	div.rn.f32 	%f9, %f48, %f47;
	cvt.rn.f32.u32	%f49, %r31;
	sub.f32 	%f50, %f39, %f37;
	div.rn.f32 	%f10, %f50, %f49;
	mov.u32 	%r62, 0;
	and.b32  	%r65, %r33, 1;
	mov.u32 	%r97, %r62;
	mov.u32 	%r107, %r62;

BB1_13:
	mov.u32 	%r9, %r106;
	mov.u32 	%r7, %r97;
	cvt.rn.f32.u32	%f53, %r7;
	div.rn.f32 	%f54, %f53, %f94;
	add.f32 	%f55, %f7, %f54;
	add.f32 	%f56, %f8, %f54;
	neg.f32 	%f57, %f56;
	fma.rn.f32 	%f12, %f9, %f55, %f36;
	fma.rn.f32 	%f13, %f10, %f57, %f39;
	setp.eq.s32	%p11, %r32, 0;
	mov.f32 	%f87, 0f00000000;
	mov.u32 	%r101, %r62;
	mov.f32 	%f88, %f87;
	@%p11 bra 	BB1_16;

BB1_14:
	mul.f32 	%f16, %f87, %f87;
	mul.f32 	%f17, %f88, %f88;
	add.f32 	%f58, %f17, %f16;
	setp.geu.f32	%p12, %f58, 0f40800000;
	@%p12 bra 	BB1_16;

	sub.f32 	%f59, %f17, %f16;
	add.f32 	%f18, %f12, %f59;
	add.f32 	%f60, %f88, %f88;
	fma.rn.f32 	%f87, %f60, %f87, %f13;
	add.s32 	%r101, %r101, 1;
	setp.lt.u32	%p13, %r101, %r32;
	mov.f32 	%f88, %f18;
	@%p13 bra 	BB1_14;

BB1_16:
	cvt.rn.f32.u32	%f61, %r101;
	cvt.rzi.u32.f32	%r13, %f61;
	add.s32 	%r107, %r13, %r107;
	setp.gt.u32	%p14, %r7, 9;
	@%p14 bra 	BB1_18;

	add.u64 	%rd22, %SP, 0;
	cvta.to.local.u64 	%rd23, %rd22;
	mul.wide.u32 	%rd24, %r7, 4;
	add.s64 	%rd25, %rd23, %rd24;
	st.local.u32 	[%rd25], %r13;

BB1_18:
	setp.lt.u32	%p15, %r7, 10;
	setp.eq.b32	%p16, %r65, 1;
	setp.ne.s32	%p17, %r7, 0;
	and.pred  	%p18, %p15, %p17;
	and.pred  	%p19, %p18, %p16;
	shr.u32 	%r15, %r9, 1;
	setp.eq.s32	%p20, %r7, %r15;
	or.pred  	%p21, %p19, %p20;
	add.s32 	%r97, %r7, 1;
	mov.u32 	%r106, %r9;
	@!%p21 bra 	BB1_32;
	bra.uni 	BB1_19;

BB1_19:
	div.u32 	%r66, %r107, %r97;
	cvt.rn.f32.u32	%f20, %r66;
	add.u64 	%rd26, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd26;
	setp.eq.s32	%p22, %r7, 0;
	mov.f32 	%f93, 0f00000000;
	@%p22 bra 	BB1_28;

	and.b32  	%r17, %r7, 3;
	setp.eq.s32	%p23, %r17, 0;
	mov.f32 	%f93, 0f00000000;
	mov.u32 	%r105, 0;
	@%p23 bra 	BB1_26;

	setp.eq.s32	%p24, %r17, 1;
	mov.f32 	%f90, 0f00000000;
	mov.u32 	%r103, 0;
	@%p24 bra 	BB1_25;

	setp.eq.s32	%p25, %r17, 2;
	mov.f32 	%f89, 0f00000000;
	mov.u32 	%r102, 0;
	@%p25 bra 	BB1_24;

	ld.local.u32 	%r71, [%rd1];
	cvt.rn.f32.u32	%f66, %r71;
	sub.f32 	%f67, %f66, %f20;
	fma.rn.f32 	%f89, %f67, %f67, 0f00000000;
	mov.u32 	%r102, 1;

BB1_24:
	mul.wide.u32 	%rd29, %r102, 4;
	add.s64 	%rd30, %rd1, %rd29;
	ld.local.u32 	%r72, [%rd30];
	cvt.rn.f32.u32	%f68, %r72;
	sub.f32 	%f69, %f68, %f20;
	fma.rn.f32 	%f90, %f69, %f69, %f89;
	add.s32 	%r103, %r102, 1;

BB1_25:
	mul.wide.u32 	%rd33, %r103, 4;
	add.s64 	%rd34, %rd1, %rd33;
	ld.local.u32 	%r73, [%rd34];
	cvt.rn.f32.u32	%f70, %r73;
	sub.f32 	%f71, %f70, %f20;
	fma.rn.f32 	%f93, %f71, %f71, %f90;
	add.s32 	%r105, %r103, 1;

BB1_26:
	setp.lt.u32	%p26, %r7, 4;
	@%p26 bra 	BB1_28;

BB1_27:
	mul.wide.u32 	%rd35, %r105, 4;
	add.s64 	%rd36, %rd1, %rd35;
	ld.local.u32 	%r74, [%rd36];
	cvt.rn.f32.u32	%f72, %r74;
	sub.f32 	%f73, %f72, %f20;
	fma.rn.f32 	%f74, %f73, %f73, %f93;
	add.s32 	%r75, %r105, 1;
	mul.wide.u32 	%rd37, %r75, 4;
	add.s64 	%rd38, %rd1, %rd37;
	ld.local.u32 	%r76, [%rd38];
	cvt.rn.f32.u32	%f75, %r76;
	sub.f32 	%f76, %f75, %f20;
	fma.rn.f32 	%f77, %f76, %f76, %f74;
	add.s32 	%r77, %r105, 2;
	mul.wide.u32 	%rd39, %r77, 4;
	add.s64 	%rd40, %rd1, %rd39;
	ld.local.u32 	%r78, [%rd40];
	cvt.rn.f32.u32	%f78, %r78;
	sub.f32 	%f79, %f78, %f20;
	fma.rn.f32 	%f80, %f79, %f79, %f77;
	add.s32 	%r79, %r105, 3;
	mul.wide.u32 	%rd41, %r79, 4;
	add.s64 	%rd42, %rd1, %rd41;
	ld.local.u32 	%r80, [%rd42];
	cvt.rn.f32.u32	%f81, %r80;
	sub.f32 	%f82, %f81, %f20;
	fma.rn.f32 	%f93, %f82, %f82, %f80;
	add.s32 	%r105, %r105, 4;
	setp.lt.u32	%p27, %r105, %r7;
	@%p27 bra 	BB1_27;

BB1_28:
	add.s32 	%r81, %r7, -1;
	cvt.rn.f32.u32	%f83, %r81;
	div.rn.f32 	%f84, %f93, %f83;
	div.rn.f32 	%f30, %f84, %f20;
	setp.ne.s32	%p28, %r7, 1;
	@%p28 bra 	BB1_30;

	// inline asm
	activemask.b32 %r82;
	// inline asm
	ld.local.v2.u32 	{%r84, %r85}, [%rd1];
	setp.eq.s32	%p29, %r84, %r85;
	vote.sync.all.pred 	%p30, %p29, %r82;
	mov.u32 	%r106, 2;
	@%p30 bra 	BB1_32;

BB1_30:
	// inline asm
	activemask.b32 %r89;
	// inline asm
	setp.lt.f32	%p31, %f30, 0f3C23D70A;
	vote.sync.all.pred 	%p32, %p31, %r89;
	mov.u32 	%r106, %r97;
	@%p32 bra 	BB1_32;

	// inline asm
	activemask.b32 %r91;
	// inline asm
	setp.le.f32	%p33, %f30, 0f3F800000;
	vote.sync.all.pred 	%p34, %p33, %r91;
	setp.ge.u32	%p35, %r7, %r15;
	and.pred  	%p36, %p34, %p35;
	selp.b32	%r106, %r97, %r9, %p36;

BB1_32:
	cvt.rn.f32.u32	%f94, %r106;
	setp.lt.u32	%p37, %r97, %r106;
	@%p37 bra 	BB1_13;
	bra.uni 	BB1_33;

BB1_11:
	mov.u32 	%r106, %r107;

BB1_33:
	div.u32 	%r93, %r107, %r106;
	cvt.rn.f32.u32	%f96, %r93;

BB1_34:
	mul.lo.s32 	%r94, %r5, %r29;
	cvt.u64.u32	%rd43, %r94;
	cvta.to.global.u64 	%rd44, %rd3;
	add.s64 	%rd45, %rd44, %rd43;
	mul.wide.u32 	%rd46, %r4, 16;
	add.s64 	%rd47, %rd45, %rd46;
	st.global.f32 	[%rd47], %f96;
	st.global.f32 	[%rd47+4], %f94;
	mov.u32 	%r95, 0;
	st.global.u32 	[%rd47+12], %r95;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd47+8], %rs1;
	setp.gt.f32	%p38, %f94, 0f00000000;
	@%p38 bra 	BB1_36;

	mov.u64 	%rd48, $str4;
	cvta.global.u64 	%rd49, %rd48;
	mov.u64 	%rd50, $str2;
	cvta.global.u64 	%rd51, %rd50;
	mov.u32 	%r96, 203;
	mov.u64 	%rd52, 0;
	mov.u64 	%rd53, 2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd49;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 param2;
	st.param.b32	[param2+0], %r96;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd52;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd53;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB1_36:
	ret;
}

	// .globl	fractalRenderMainDouble
.visible .entry fractalRenderMainDouble(
	.param .u64 fractalRenderMainDouble_param_0,
	.param .u32 fractalRenderMainDouble_param_1,
	.param .align 4 .b8 fractalRenderMainDouble_param_2[8],
	.param .align 8 .b8 fractalRenderMainDouble_param_3[32],
	.param .u32 fractalRenderMainDouble_param_4,
	.param .f32 fractalRenderMainDouble_param_5,
	.param .u32 fractalRenderMainDouble_param_6
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<39>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<19>;
	.reg .b32 	%r<109>;
	.reg .f64 	%fd<75>;
	.reg .b64 	%rd<54>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [fractalRenderMainDouble_param_0];
	ld.param.u32 	%r29, [fractalRenderMainDouble_param_1];
	ld.param.u32 	%r31, [fractalRenderMainDouble_param_2+4];
	ld.param.u32 	%r30, [fractalRenderMainDouble_param_2];
	ld.param.f64 	%fd29, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd28, [fractalRenderMainDouble_param_3+16];
	ld.param.f64 	%fd27, [fractalRenderMainDouble_param_3+8];
	ld.param.f64 	%fd26, [fractalRenderMainDouble_param_3];
	ld.param.u32 	%r32, [fractalRenderMainDouble_param_4];
	ld.param.f32 	%f8, [fractalRenderMainDouble_param_5];
	ld.param.u32 	%r33, [fractalRenderMainDouble_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str2;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r34, 59;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB2_2:
	mov.u32 	%r35, %tid.x;
	mov.u32 	%r36, %tid.y;
	mad.lo.s32 	%r37, %r1, %r36, %r35;
	shl.b32 	%r38, %r1, 2;
	and.b32  	%r39, %r37, 15;
	rem.u32 	%r40, %r37, %r38;
	sub.s32 	%r41, %r40, %r39;
	shr.u32 	%r42, %r41, 2;
	and.b32  	%r43, %r37, 3;
	add.s32 	%r44, %r42, %r43;
	div.u32 	%r45, %r37, %r38;
	shl.b32 	%r46, %r45, 2;
	bfe.u32 	%r47, %r37, 2, 2;
	add.s32 	%r48, %r46, %r47;
	mov.u32 	%r49, %ctaid.x;
	mad.lo.s32 	%r4, %r49, %r1, %r44;
	mov.u32 	%r50, %ctaid.y;
	mov.u32 	%r51, %ntid.y;
	mad.lo.s32 	%r5, %r50, %r51, %r48;
	setp.lt.u32	%p2, %r4, %r30;
	setp.lt.u32	%p3, %r5, %r31;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB2_35;
	bra.uni 	BB2_3;

BB2_3:
	setp.ge.f32	%p5, %f8, 0f3F800000;
	@%p5 bra 	BB2_5;

	mov.u64 	%rd10, $str3;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str2;
	cvta.global.u64 	%rd13, %rd12;
	mov.u32 	%r52, 196;
	mov.u64 	%rd14, 0;
	mov.u64 	%rd15, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r52;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd14;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd15;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB2_5:
	setp.lt.f32	%p6, %f8, 0f3F800000;
	mov.f32 	%f17, 0f00000000;
	mov.f32 	%f18, %f17;
	@%p6 bra 	BB2_33;

	abs.f32 	%f11, %f8;
	mov.b32 	 %r53, %f8;
	and.b32  	%r54, %r53, -2147483648;
	or.b32  	%r55, %r54, 1056964608;
	mov.b32 	 %f12, %r55;
	add.f32 	%f13, %f12, %f8;
	cvt.rzi.f32.f32	%f14, %f13;
	setp.gt.f32	%p7, %f11, 0f4B000000;
	selp.f32	%f16, %f8, %f14, %p7;
	setp.geu.f32	%p8, %f11, 0f3F000000;
	@%p8 bra 	BB2_8;

	cvt.rzi.f32.f32	%f16, %f8;

BB2_8:
	cvt.rzi.u32.f32	%r56, %f16;
	mov.u32 	%r57, 64;
	min.u32 	%r6, %r57, %r56;
	setp.lt.u32	%p9, %r6, 65;
	@%p9 bra 	BB2_10;

	mov.u64 	%rd16, $str11;
	cvta.global.u64 	%rd17, %rd16;
	mov.u64 	%rd18, $str2;
	cvta.global.u64 	%rd19, %rd18;
	mov.u32 	%r58, 113;
	mov.u64 	%rd20, 0;
	mov.u64 	%rd21, 2;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd19;
	.param .b32 param2;
	st.param.b32	[param2+0], %r58;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd20;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd21;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB2_10:
	setp.eq.s32	%p10, %r6, 0;
	mov.u32 	%r107, 0;
	mov.u32 	%r106, %r107;
	@%p10 bra 	BB2_32;

	cvt.rn.f64.u32	%fd3, %r4;
	cvt.rn.f64.u32	%fd4, %r5;
	cvt.rn.f64.u32	%fd30, %r30;
	sub.f64 	%fd31, %fd28, %fd26;
	div.rn.f64 	%fd5, %fd31, %fd30;
	cvt.rn.f64.u32	%fd32, %r31;
	sub.f64 	%fd33, %fd29, %fd27;
	div.rn.f64 	%fd6, %fd33, %fd32;
	mov.u32 	%r62, 0;
	and.b32  	%r65, %r33, 1;
	mov.u32 	%r97, %r62;
	mov.u32 	%r107, %r62;
	mov.u32 	%r106, %r6;

BB2_12:
	mov.u32 	%r9, %r106;
	mov.u32 	%r7, %r97;
	cvt.rn.f64.u32	%fd36, %r9;
	cvt.rn.f64.u32	%fd37, %r7;
	div.rn.f64 	%fd38, %fd37, %fd36;
	add.f64 	%fd39, %fd3, %fd38;
	add.f64 	%fd40, %fd4, %fd38;
	neg.f64 	%fd41, %fd40;
	fma.rn.f64 	%fd7, %fd5, %fd39, %fd26;
	fma.rn.f64 	%fd8, %fd6, %fd41, %fd29;
	setp.eq.s32	%p11, %r32, 0;
	mov.f64 	%fd68, 0d0000000000000000;
	mov.u32 	%r101, %r62;
	mov.f64 	%fd69, %fd68;
	@%p11 bra 	BB2_15;

BB2_13:
	mul.f64 	%fd11, %fd68, %fd68;
	mul.f64 	%fd12, %fd69, %fd69;
	add.f64 	%fd42, %fd12, %fd11;
	setp.geu.f64	%p12, %fd42, 0d4010000000000000;
	@%p12 bra 	BB2_15;

	sub.f64 	%fd43, %fd12, %fd11;
	add.f64 	%fd13, %fd7, %fd43;
	add.f64 	%fd44, %fd69, %fd69;
	fma.rn.f64 	%fd68, %fd44, %fd68, %fd8;
	add.s32 	%r101, %r101, 1;
	setp.lt.u32	%p13, %r101, %r32;
	mov.f64 	%fd69, %fd13;
	@%p13 bra 	BB2_13;

BB2_15:
	cvt.rn.f32.u32	%f15, %r101;
	cvt.rzi.u32.f32	%r13, %f15;
	add.s32 	%r107, %r13, %r107;
	setp.gt.u32	%p14, %r7, 9;
	@%p14 bra 	BB2_17;

	add.u64 	%rd22, %SP, 0;
	cvta.to.local.u64 	%rd23, %rd22;
	mul.wide.u32 	%rd24, %r7, 4;
	add.s64 	%rd25, %rd23, %rd24;
	st.local.u32 	[%rd25], %r13;

BB2_17:
	setp.lt.u32	%p15, %r7, 10;
	setp.eq.b32	%p16, %r65, 1;
	setp.ne.s32	%p17, %r7, 0;
	and.pred  	%p18, %p15, %p17;
	and.pred  	%p19, %p18, %p16;
	shr.u32 	%r15, %r9, 1;
	setp.eq.s32	%p20, %r7, %r15;
	or.pred  	%p21, %p19, %p20;
	add.s32 	%r97, %r7, 1;
	mov.u32 	%r106, %r9;
	@!%p21 bra 	BB2_31;
	bra.uni 	BB2_18;

BB2_18:
	div.u32 	%r66, %r107, %r97;
	cvt.rn.f64.u32	%fd15, %r66;
	add.u64 	%rd26, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd26;
	setp.eq.s32	%p22, %r7, 0;
	mov.f64 	%fd74, 0d0000000000000000;
	@%p22 bra 	BB2_27;

	and.b32  	%r17, %r7, 3;
	setp.eq.s32	%p23, %r17, 0;
	mov.f64 	%fd74, 0d0000000000000000;
	mov.u32 	%r105, 0;
	@%p23 bra 	BB2_25;

	setp.eq.s32	%p24, %r17, 1;
	mov.f64 	%fd71, 0d0000000000000000;
	mov.u32 	%r103, 0;
	@%p24 bra 	BB2_24;

	setp.eq.s32	%p25, %r17, 2;
	mov.f64 	%fd70, 0d0000000000000000;
	mov.u32 	%r102, 0;
	@%p25 bra 	BB2_23;

	ld.local.u32 	%r71, [%rd1];
	cvt.rn.f64.u32	%fd49, %r71;
	sub.f64 	%fd50, %fd49, %fd15;
	fma.rn.f64 	%fd70, %fd50, %fd50, 0d0000000000000000;
	mov.u32 	%r102, 1;

BB2_23:
	mul.wide.u32 	%rd29, %r102, 4;
	add.s64 	%rd30, %rd1, %rd29;
	ld.local.u32 	%r72, [%rd30];
	cvt.rn.f64.u32	%fd51, %r72;
	sub.f64 	%fd52, %fd51, %fd15;
	fma.rn.f64 	%fd71, %fd52, %fd52, %fd70;
	add.s32 	%r103, %r102, 1;

BB2_24:
	mul.wide.u32 	%rd33, %r103, 4;
	add.s64 	%rd34, %rd1, %rd33;
	ld.local.u32 	%r73, [%rd34];
	cvt.rn.f64.u32	%fd53, %r73;
	sub.f64 	%fd54, %fd53, %fd15;
	fma.rn.f64 	%fd74, %fd54, %fd54, %fd71;
	add.s32 	%r105, %r103, 1;

BB2_25:
	setp.lt.u32	%p26, %r7, 4;
	@%p26 bra 	BB2_27;

BB2_26:
	mul.wide.u32 	%rd35, %r105, 4;
	add.s64 	%rd36, %rd1, %rd35;
	ld.local.u32 	%r74, [%rd36];
	cvt.rn.f64.u32	%fd55, %r74;
	sub.f64 	%fd56, %fd55, %fd15;
	fma.rn.f64 	%fd57, %fd56, %fd56, %fd74;
	add.s32 	%r75, %r105, 1;
	mul.wide.u32 	%rd37, %r75, 4;
	add.s64 	%rd38, %rd1, %rd37;
	ld.local.u32 	%r76, [%rd38];
	cvt.rn.f64.u32	%fd58, %r76;
	sub.f64 	%fd59, %fd58, %fd15;
	fma.rn.f64 	%fd60, %fd59, %fd59, %fd57;
	add.s32 	%r77, %r105, 2;
	mul.wide.u32 	%rd39, %r77, 4;
	add.s64 	%rd40, %rd1, %rd39;
	ld.local.u32 	%r78, [%rd40];
	cvt.rn.f64.u32	%fd61, %r78;
	sub.f64 	%fd62, %fd61, %fd15;
	fma.rn.f64 	%fd63, %fd62, %fd62, %fd60;
	add.s32 	%r79, %r105, 3;
	mul.wide.u32 	%rd41, %r79, 4;
	add.s64 	%rd42, %rd1, %rd41;
	ld.local.u32 	%r80, [%rd42];
	cvt.rn.f64.u32	%fd64, %r80;
	sub.f64 	%fd65, %fd64, %fd15;
	fma.rn.f64 	%fd74, %fd65, %fd65, %fd63;
	add.s32 	%r105, %r105, 4;
	setp.lt.u32	%p27, %r105, %r7;
	@%p27 bra 	BB2_26;

BB2_27:
	add.s32 	%r81, %r7, -1;
	cvt.rn.f64.u32	%fd66, %r81;
	div.rn.f64 	%fd67, %fd74, %fd66;
	div.rn.f64 	%fd25, %fd67, %fd15;
	setp.ne.s32	%p28, %r7, 1;
	@%p28 bra 	BB2_29;

	// inline asm
	activemask.b32 %r82;
	// inline asm
	ld.local.v2.u32 	{%r84, %r85}, [%rd1];
	setp.eq.s32	%p29, %r84, %r85;
	vote.sync.all.pred 	%p30, %p29, %r82;
	mov.u32 	%r106, 2;
	@%p30 bra 	BB2_31;

BB2_29:
	// inline asm
	activemask.b32 %r89;
	// inline asm
	setp.lt.f64	%p31, %fd25, 0d3F847AE140000000;
	vote.sync.all.pred 	%p32, %p31, %r89;
	mov.u32 	%r106, %r97;
	@%p32 bra 	BB2_31;

	// inline asm
	activemask.b32 %r91;
	// inline asm
	setp.le.f64	%p33, %fd25, 0d3FF0000000000000;
	vote.sync.all.pred 	%p34, %p33, %r91;
	setp.ge.u32	%p35, %r7, %r15;
	and.pred  	%p36, %p34, %p35;
	selp.b32	%r106, %r97, %r9, %p36;

BB2_31:
	setp.lt.u32	%p37, %r97, %r106;
	@%p37 bra 	BB2_12;

BB2_32:
	cvt.rn.f32.u32	%f17, %r106;
	div.u32 	%r93, %r107, %r106;
	cvt.rn.f32.u32	%f18, %r93;

BB2_33:
	mul.lo.s32 	%r94, %r5, %r29;
	cvt.u64.u32	%rd43, %r94;
	cvta.to.global.u64 	%rd44, %rd3;
	add.s64 	%rd45, %rd44, %rd43;
	mul.wide.u32 	%rd46, %r4, 16;
	add.s64 	%rd47, %rd45, %rd46;
	st.global.f32 	[%rd47], %f18;
	st.global.f32 	[%rd47+4], %f17;
	mov.u32 	%r95, 0;
	st.global.u32 	[%rd47+12], %r95;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd47+8], %rs1;
	setp.gt.f32	%p38, %f17, 0f00000000;
	@%p38 bra 	BB2_35;

	mov.u64 	%rd48, $str4;
	cvta.global.u64 	%rd49, %rd48;
	mov.u64 	%rd50, $str2;
	cvta.global.u64 	%rd51, %rd50;
	mov.u32 	%r96, 203;
	mov.u64 	%rd52, 0;
	mov.u64 	%rd53, 2;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd49;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 param2;
	st.param.b32	[param2+0], %r96;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd52;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd53;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB2_35:
	ret;
}

	// .globl	fractalRenderAdvancedFloat
.visible .entry fractalRenderAdvancedFloat(
	.param .u64 fractalRenderAdvancedFloat_param_0,
	.param .u32 fractalRenderAdvancedFloat_param_1,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_2[8],
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_3[16],
	.param .u32 fractalRenderAdvancedFloat_param_4,
	.param .f32 fractalRenderAdvancedFloat_param_5,
	.param .u32 fractalRenderAdvancedFloat_param_6,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_7[16],
	.param .u64 fractalRenderAdvancedFloat_param_8,
	.param .u32 fractalRenderAdvancedFloat_param_9,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot3[56];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<99>;
	.reg .b16 	%rs<16>;
	.reg .f32 	%f<324>;
	.reg .b32 	%r<219>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<109>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd4, [fractalRenderAdvancedFloat_param_0];
	ld.param.u32 	%r56, [fractalRenderAdvancedFloat_param_1];
	ld.param.u32 	%r58, [fractalRenderAdvancedFloat_param_2+4];
	ld.param.u32 	%r57, [fractalRenderAdvancedFloat_param_2];
	ld.param.f32 	%f99, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f98, [fractalRenderAdvancedFloat_param_3+8];
	ld.param.f32 	%f97, [fractalRenderAdvancedFloat_param_3+4];
	ld.param.f32 	%f96, [fractalRenderAdvancedFloat_param_3];
	ld.param.u32 	%r59, [fractalRenderAdvancedFloat_param_4];
	ld.param.f32 	%f293, [fractalRenderAdvancedFloat_param_5];
	ld.param.u32 	%r60, [fractalRenderAdvancedFloat_param_6];
	ld.param.f32 	%f104, [fractalRenderAdvancedFloat_param_7+12];
	ld.param.f32 	%f103, [fractalRenderAdvancedFloat_param_7+8];
	ld.param.f32 	%f102, [fractalRenderAdvancedFloat_param_7+4];
	ld.param.f32 	%f101, [fractalRenderAdvancedFloat_param_7];
	ld.param.u64 	%rd5, [fractalRenderAdvancedFloat_param_8];
	ld.param.u32 	%r61, [fractalRenderAdvancedFloat_param_9];
	ld.param.u32 	%r63, [fractalRenderAdvancedFloat_param_10+4];
	ld.param.u32 	%r62, [fractalRenderAdvancedFloat_param_10];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB3_2;

	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, $str2;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r64, 59;
	mov.u64 	%rd10, 0;
	mov.u64 	%rd11, 2;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b32 param2;
	st.param.b32	[param2+0], %r64;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd10;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd11;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB3_2:
	mov.u32 	%r65, %tid.x;
	mov.u32 	%r66, %tid.y;
	mad.lo.s32 	%r67, %r1, %r66, %r65;
	shl.b32 	%r68, %r1, 2;
	and.b32  	%r69, %r67, 15;
	rem.u32 	%r70, %r67, %r68;
	sub.s32 	%r71, %r70, %r69;
	shr.u32 	%r72, %r71, 2;
	and.b32  	%r73, %r67, 3;
	add.s32 	%r74, %r72, %r73;
	div.u32 	%r75, %r67, %r68;
	shl.b32 	%r76, %r75, 2;
	bfe.u32 	%r77, %r67, 2, 2;
	add.s32 	%r78, %r76, %r77;
	mov.u32 	%r79, %ctaid.x;
	mad.lo.s32 	%r4, %r79, %r1, %r74;
	mov.u32 	%r80, %ctaid.y;
	mov.u32 	%r81, %ntid.y;
	mad.lo.s32 	%r5, %r80, %r81, %r78;
	setp.lt.u32	%p2, %r4, %r57;
	setp.gt.u32	%p3, %r58, %r5;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB3_86;
	bra.uni 	BB3_3;

BB3_3:
	and.b32  	%r82, %r60, 52;
	mov.u16 	%rs14, 0;
	setp.ne.s32	%p5, %r82, 52;
	@%p5 bra 	BB3_4;

	setp.gt.f32	%p6, %f293, 0f00000000;
	@%p6 bra 	BB3_7;

	mov.u64 	%rd12, $str7;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, $str2;
	cvta.global.u64 	%rd15, %rd14;
	mov.u32 	%r83, 237;
	mov.u64 	%rd16, 0;
	mov.u64 	%rd17, 2;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 param2;
	st.param.b32	[param2+0], %r83;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB3_7:
	and.b32  	%r84, %r4, -8;
	cvt.rn.f32.u32	%f105, %r84;
	and.b32  	%r85, %r5, -4;
	cvt.rn.f32.u32	%f106, %r85;
	cvt.rn.f32.u32	%f107, %r62;
	sub.f32 	%f108, %f107, %f105;
	cvt.rn.f32.u32	%f109, %r63;
	sub.f32 	%f110, %f109, %f106;
	mul.f32 	%f111, %f110, %f110;
	fma.rn.f32 	%f112, %f108, %f108, %f111;
	sqrt.rn.f32 	%f113, %f112;
	ld.global.f32 	%f114, [pixelRealWidthInCm];
	mul.f32 	%f115, %f113, %f114;
	ld.global.f32 	%f116, [screenDistance];
	div.rn.f32 	%f1, %f115, %f116;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p7, %f2, 0f3F800000;
	mov.f32 	%f292, %f2;
	@%p7 bra 	BB3_9;

	rcp.rn.f32 	%f292, %f2;

BB3_9:
	mul.rn.f32 	%f117, %f292, %f292;
	mov.f32 	%f118, 0fC0B59883;
	mov.f32 	%f119, 0fBF52C7EA;
	fma.rn.f32 	%f120, %f117, %f119, %f118;
	mov.f32 	%f121, 0fC0D21907;
	fma.rn.f32 	%f122, %f120, %f117, %f121;
	mul.f32 	%f123, %f117, %f122;
	mul.f32 	%f124, %f292, %f123;
	add.f32 	%f125, %f117, 0f41355DC0;
	mov.f32 	%f126, 0f41E6BD60;
	fma.rn.f32 	%f127, %f125, %f117, %f126;
	mov.f32 	%f128, 0f419D92C8;
	fma.rn.f32 	%f129, %f127, %f117, %f128;
	rcp.rn.f32 	%f130, %f129;
	fma.rn.f32 	%f131, %f124, %f130, %f292;
	mov.f32 	%f132, 0f3FC90FDB;
	sub.f32 	%f133, %f132, %f131;
	setp.gt.f32	%p8, %f2, 0f3F800000;
	selp.f32	%f134, %f133, %f131, %p8;
	mov.b32 	 %r86, %f134;
	mov.b32 	 %r87, %f1;
	and.b32  	%r88, %r87, -2147483648;
	or.b32  	%r89, %r86, %r88;
	mov.b32 	 %f135, %r89;
	setp.gtu.f32	%p9, %f2, 0f7F800000;
	selp.f32	%f136, %f134, %f135, %p9;
	mul.f32 	%f137, %f136, 0f43340000;
	div.rn.f32 	%f5, %f137, 0f40490FDB;
	setp.ge.f32	%p10, %f5, 0f00000000;
	@%p10 bra 	BB3_11;

	mov.u64 	%rd18, $str8;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str2;
	cvta.global.u64 	%rd21, %rd20;
	mov.u32 	%r90, 247;
	mov.u64 	%rd22, 0;
	mov.u64 	%rd23, 2;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r90;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd22;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd23;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB3_11:
	setp.lt.f32	%p11, %f293, 0f3F800000;
	mul.f32 	%f138, %f293, 0f40B00000;
	selp.f32	%f139, %f138, 0f40B00000, %p11;
	add.f32 	%f140, %f139, 0fC2700000;
	rcp.rn.f32 	%f141, %f140;
	mov.f32 	%f142, 0fC2700000;
	div.rn.f32 	%f143, %f142, %f140;
	fma.rn.f32 	%f144, %f5, %f141, %f143;
	mul.f32 	%f293, %f144, %f293;
	setp.gtu.f32	%p12, %f5, %f139;
	@%p12 bra 	BB3_12;
	bra.uni 	BB3_13;

BB3_12:
	mov.u16 	%rs13, %rs14;
	bra.uni 	BB3_14;

BB3_4:
	mov.u16 	%rs13, %rs14;
	bra.uni 	BB3_14;

BB3_13:
	cvt.f64.f32	%fd1, %f293;
	mov.f64 	%fd2, 0d3FF0000000000000;
	max.f64 	%fd3, %fd2, %fd1;
	cvt.rn.f32.f64	%f293, %fd3;
	mov.u16 	%rs13, 1;

BB3_14:
	and.b32  	%r91, %r60, 8;
	setp.eq.s32	%p13, %r91, 0;
	mov.f32 	%f320, 0f00000000;
	@%p13 bra 	BB3_15;

	sub.s32 	%r92, %r58, %r5;
	cvt.rn.f32.u32	%f147, %r92;
	cvt.rn.f32.u32	%f148, %r57;
	cvt.rn.f32.u32	%f149, %r4;
	div.rn.f32 	%f150, %f149, %f148;
	cvt.rn.f32.u32	%f151, %r58;
	div.rn.f32 	%f152, %f147, %f151;
	sub.f32 	%f153, %f98, %f96;
	sub.f32 	%f154, %f99, %f97;
	fma.rn.f32 	%f155, %f153, %f150, %f96;
	fma.rn.f32 	%f156, %f154, %f152, %f97;
	sub.f32 	%f157, %f155, %f101;
	sub.f32 	%f158, %f156, %f102;
	sub.f32 	%f159, %f103, %f101;
	div.rn.f32 	%f160, %f157, %f159;
	sub.f32 	%f161, %f104, %f102;
	div.rn.f32 	%f162, %f158, %f161;
	mul.f32 	%f13, %f148, %f160;
	mul.f32 	%f163, %f151, %f162;
	sub.f32 	%f14, %f151, %f163;
	abs.f32 	%f164, %f13;
	mov.b32 	 %r93, %f13;
	and.b32  	%r94, %r93, -2147483648;
	or.b32  	%r95, %r94, 1056964608;
	mov.b32 	 %f165, %r95;
	add.f32 	%f166, %f13, %f165;
	cvt.rzi.f32.f32	%f167, %f166;
	setp.gt.f32	%p14, %f164, 0f4B000000;
	selp.f32	%f294, %f13, %f167, %p14;
	setp.geu.f32	%p15, %f164, 0f3F000000;
	@%p15 bra 	BB3_18;

	cvt.rzi.f32.f32	%f294, %f13;

BB3_18:
	cvt.rzi.s32.f32	%r8, %f294;
	mov.b32 	 %r96, %f14;
	and.b32  	%r97, %r96, -2147483648;
	or.b32  	%r98, %r97, 1056964608;
	mov.b32 	 %f168, %r98;
	add.f32 	%f169, %f14, %f168;
	cvt.rzi.f32.f32	%f170, %f169;
	abs.f32 	%f171, %f14;
	setp.gt.f32	%p16, %f171, 0f4B000000;
	selp.f32	%f295, %f14, %f170, %p16;
	setp.geu.f32	%p17, %f171, 0f3F000000;
	@%p17 bra 	BB3_20;

	cvt.rzi.f32.f32	%f295, %f14;

BB3_20:
	add.s32 	%r99, %r57, -2;
	setp.lt.u32	%p18, %r8, %r99;
	setp.gt.s32	%p19, %r8, 1;
	and.pred  	%p20, %p19, %p18;
	cvt.rzi.s32.f32	%r100, %f295;
	setp.gt.s32	%p21, %r100, 1;
	and.pred  	%p22, %p20, %p21;
	add.s32 	%r101, %r58, -2;
	setp.lt.u32	%p23, %r100, %r101;
	and.pred  	%p24, %p23, %p22;
	mov.f32 	%f319, %f320;
	@!%p24 bra 	BB3_22;
	bra.uni 	BB3_21;

BB3_21:
	cvt.rmi.f32.f32	%f174, %f13;
	cvt.rzi.u32.f32	%r102, %f174;
	cvt.rmi.f32.f32	%f175, %f14;
	cvt.rzi.u32.f32	%r103, %f175;
	cvt.rn.f32.u32	%f176, %r102;
	sub.f32 	%f177, %f13, %f176;
	cvt.rn.f32.u32	%f178, %r103;
	sub.f32 	%f179, %f14, %f178;
	mul.lo.s32 	%r104, %r103, %r61;
	cvt.u64.u32	%rd24, %r104;
	cvta.to.global.u64 	%rd25, %rd5;
	add.s64 	%rd26, %rd25, %rd24;
	mul.wide.u32 	%rd27, %r102, 16;
	add.s64 	%rd28, %rd26, %rd27;
	add.s32 	%r105, %r102, 1;
	mul.wide.u32 	%rd29, %r105, 16;
	add.s64 	%rd30, %rd26, %rd29;
	add.s32 	%r106, %r103, 1;
	mul.lo.s32 	%r107, %r106, %r61;
	cvt.u64.u32	%rd31, %r107;
	add.s64 	%rd32, %rd25, %rd31;
	add.s64 	%rd33, %rd32, %rd27;
	add.s64 	%rd34, %rd32, %rd29;
	mov.f32 	%f180, 0f3F800000;
	sub.f32 	%f181, %f180, %f177;
	ld.global.f32 	%f182, [%rd28];
	ld.global.f32 	%f183, [%rd30];
	mul.f32 	%f184, %f177, %f183;
	fma.rn.f32 	%f185, %f182, %f181, %f184;
	sub.f32 	%f186, %f180, %f179;
	ld.global.f32 	%f187, [%rd33];
	ld.global.f32 	%f188, [%rd34];
	mul.f32 	%f189, %f177, %f188;
	fma.rn.f32 	%f190, %f181, %f187, %f189;
	mul.f32 	%f191, %f179, %f190;
	fma.rn.f32 	%f320, %f186, %f185, %f191;
	ld.global.f32 	%f192, [%rd28+4];
	ld.global.f32 	%f193, [%rd30+4];
	mul.f32 	%f194, %f177, %f193;
	fma.rn.f32 	%f195, %f181, %f192, %f194;
	ld.global.f32 	%f196, [%rd33+4];
	ld.global.f32 	%f197, [%rd34+4];
	mul.f32 	%f198, %f177, %f197;
	fma.rn.f32 	%f199, %f181, %f196, %f198;
	mul.f32 	%f200, %f179, %f199;
	fma.rn.f32 	%f319, %f186, %f195, %f200;
	cvt.f64.f32	%fd4, %f319;
	setp.geu.f64	%p25, %fd4, 0d3FB999999999999A;
	selp.u16	%rs14, 1, 0, %p25;
	bra.uni 	BB3_22;

BB3_15:
	mov.f32 	%f319, %f320;

BB3_22:
	add.u64 	%rd35, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd35;
	setp.eq.s16	%p26, %rs14, 0;
	@%p26 bra 	BB3_54;

	shr.u32 	%r108, %r60, 5;
	and.b32  	%r109, %r108, 1;
	setp.eq.b32	%p27, %r109, 1;
	not.pred 	%p28, %p27;
	setp.eq.s16	%p29, %rs13, 0;
	mov.f32 	%f307, 0f00000000;
	mov.u16 	%rs15, 1;
	or.pred  	%p30, %p29, %p28;
	@%p30 bra 	BB3_82;

	setp.lt.f32	%p31, %f293, 0f3F800000;
	mov.f32 	%f307, 0f00000000;
	mov.f32 	%f309, %f307;
	@%p31 bra 	BB3_53;

	abs.f32 	%f204, %f293;
	mov.b32 	 %r110, %f293;
	and.b32  	%r111, %r110, -2147483648;
	or.b32  	%r112, %r111, 1056964608;
	mov.b32 	 %f205, %r112;
	add.f32 	%f206, %f293, %f205;
	cvt.rzi.f32.f32	%f207, %f206;
	setp.gt.f32	%p32, %f204, 0f4B000000;
	selp.f32	%f298, %f293, %f207, %p32;
	setp.geu.f32	%p33, %f204, 0f3F000000;
	@%p33 bra 	BB3_27;

	cvt.rzi.f32.f32	%f298, %f293;

BB3_27:
	cvt.rzi.u32.f32	%r113, %f298;
	mov.u32 	%r114, 64;
	min.u32 	%r204, %r114, %r113;
	cvt.rn.f32.u32	%f208, %r57;
	sub.f32 	%f209, %f98, %f96;
	div.rn.f32 	%f28, %f209, %f208;
	cvt.rn.f32.u32	%f210, %r58;
	sub.f32 	%f211, %f99, %f97;
	div.rn.f32 	%f29, %f211, %f210;
	setp.lt.u32	%p34, %r204, 65;
	@%p34 bra 	BB3_29;

	mov.u64 	%rd36, $str11;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, $str2;
	cvta.global.u64 	%rd39, %rd38;
	mov.u32 	%r115, 113;
	mov.u64 	%rd40, 0;
	mov.u64 	%rd41, 2;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd37;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b32 param2;
	st.param.b32	[param2+0], %r115;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd40;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd41;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB3_29:
	setp.eq.s32	%p35, %r204, 0;
	cvt.rn.f32.u32	%f307, %r204;
	mov.u32 	%r205, 0;
	@%p35 bra 	BB3_30;

	cvt.rn.f32.u32	%f31, %r4;
	cvt.rn.f32.u32	%f32, %r5;
	mov.u32 	%r119, 0;
	mov.u32 	%r195, %r119;
	mov.u32 	%r205, %r119;

BB3_32:
	mov.u32 	%r12, %r204;
	mov.u32 	%r10, %r195;
	cvt.rn.f32.u32	%f214, %r10;
	div.rn.f32 	%f215, %f214, %f307;
	add.f32 	%f216, %f31, %f215;
	add.f32 	%f217, %f32, %f215;
	neg.f32 	%f218, %f217;
	fma.rn.f32 	%f34, %f28, %f216, %f96;
	fma.rn.f32 	%f35, %f29, %f218, %f99;
	setp.eq.s32	%p36, %r59, 0;
	mov.f32 	%f300, 0f00000000;
	mov.u32 	%r199, %r119;
	mov.f32 	%f301, %f300;
	@%p36 bra 	BB3_35;

BB3_33:
	mul.f32 	%f38, %f300, %f300;
	mul.f32 	%f39, %f301, %f301;
	add.f32 	%f219, %f39, %f38;
	setp.geu.f32	%p37, %f219, 0f40800000;
	@%p37 bra 	BB3_35;

	sub.f32 	%f220, %f39, %f38;
	add.f32 	%f40, %f34, %f220;
	add.f32 	%f221, %f301, %f301;
	fma.rn.f32 	%f300, %f221, %f300, %f35;
	add.s32 	%r199, %r199, 1;
	setp.lt.u32	%p38, %r199, %r59;
	mov.f32 	%f301, %f40;
	@%p38 bra 	BB3_33;

BB3_35:
	cvt.rn.f32.u32	%f222, %r199;
	cvt.rzi.u32.f32	%r16, %f222;
	add.s32 	%r205, %r16, %r205;
	setp.gt.u32	%p39, %r10, 9;
	@%p39 bra 	BB3_37;

	mul.wide.u32 	%rd44, %r10, 4;
	add.s64 	%rd45, %rd1, %rd44;
	st.local.u32 	[%rd45], %r16;

BB3_37:
	setp.lt.u32	%p40, %r10, 10;
	and.b32  	%r122, %r60, 1;
	setp.eq.b32	%p41, %r122, 1;
	setp.ne.s32	%p42, %r10, 0;
	and.pred  	%p43, %p40, %p42;
	and.pred  	%p44, %p43, %p41;
	shr.u32 	%r18, %r12, 1;
	setp.eq.s32	%p45, %r10, %r18;
	or.pred  	%p46, %p44, %p45;
	add.s32 	%r195, %r10, 1;
	mov.u32 	%r204, %r12;
	@!%p46 bra 	BB3_51;
	bra.uni 	BB3_38;

BB3_38:
	div.u32 	%r123, %r205, %r195;
	cvt.rn.f32.u32	%f42, %r123;
	setp.eq.s32	%p47, %r10, 0;
	mov.f32 	%f306, 0f00000000;
	@%p47 bra 	BB3_47;

	and.b32  	%r20, %r10, 3;
	setp.eq.s32	%p48, %r20, 0;
	mov.f32 	%f306, 0f00000000;
	mov.u32 	%r203, 0;
	@%p48 bra 	BB3_45;

	setp.eq.s32	%p49, %r20, 1;
	mov.f32 	%f303, 0f00000000;
	mov.u32 	%r201, 0;
	@%p49 bra 	BB3_44;

	setp.eq.s32	%p50, %r20, 2;
	mov.f32 	%f302, 0f00000000;
	mov.u32 	%r200, 0;
	@%p50 bra 	BB3_43;

	ld.local.u32 	%r128, [%rd1];
	cvt.rn.f32.u32	%f227, %r128;
	sub.f32 	%f228, %f227, %f42;
	fma.rn.f32 	%f302, %f228, %f228, 0f00000000;
	mov.u32 	%r200, 1;

BB3_43:
	mul.wide.u32 	%rd50, %r200, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.u32 	%r129, [%rd51];
	cvt.rn.f32.u32	%f229, %r129;
	sub.f32 	%f230, %f229, %f42;
	fma.rn.f32 	%f303, %f230, %f230, %f302;
	add.s32 	%r201, %r200, 1;

BB3_44:
	mul.wide.u32 	%rd54, %r201, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.u32 	%r130, [%rd55];
	cvt.rn.f32.u32	%f231, %r130;
	sub.f32 	%f232, %f231, %f42;
	fma.rn.f32 	%f306, %f232, %f232, %f303;
	add.s32 	%r203, %r201, 1;

BB3_45:
	setp.lt.u32	%p51, %r10, 4;
	@%p51 bra 	BB3_47;

BB3_46:
	mul.wide.u32 	%rd57, %r203, 4;
	add.s64 	%rd58, %rd1, %rd57;
	ld.local.u32 	%r131, [%rd58];
	cvt.rn.f32.u32	%f233, %r131;
	sub.f32 	%f234, %f233, %f42;
	fma.rn.f32 	%f235, %f234, %f234, %f306;
	add.s32 	%r132, %r203, 1;
	mul.wide.u32 	%rd59, %r132, 4;
	add.s64 	%rd60, %rd1, %rd59;
	ld.local.u32 	%r133, [%rd60];
	cvt.rn.f32.u32	%f236, %r133;
	sub.f32 	%f237, %f236, %f42;
	fma.rn.f32 	%f238, %f237, %f237, %f235;
	add.s32 	%r134, %r203, 2;
	mul.wide.u32 	%rd61, %r134, 4;
	add.s64 	%rd62, %rd1, %rd61;
	ld.local.u32 	%r135, [%rd62];
	cvt.rn.f32.u32	%f239, %r135;
	sub.f32 	%f240, %f239, %f42;
	fma.rn.f32 	%f241, %f240, %f240, %f238;
	add.s32 	%r136, %r203, 3;
	mul.wide.u32 	%rd63, %r136, 4;
	add.s64 	%rd64, %rd1, %rd63;
	ld.local.u32 	%r137, [%rd64];
	cvt.rn.f32.u32	%f242, %r137;
	sub.f32 	%f243, %f242, %f42;
	fma.rn.f32 	%f306, %f243, %f243, %f241;
	add.s32 	%r203, %r203, 4;
	setp.lt.u32	%p52, %r203, %r10;
	@%p52 bra 	BB3_46;

BB3_47:
	add.s32 	%r138, %r10, -1;
	cvt.rn.f32.u32	%f244, %r138;
	div.rn.f32 	%f245, %f306, %f244;
	div.rn.f32 	%f52, %f245, %f42;
	setp.ne.s32	%p53, %r10, 1;
	@%p53 bra 	BB3_49;

	// inline asm
	activemask.b32 %r139;
	// inline asm
	ld.local.v2.u32 	{%r141, %r142}, [%rd1];
	setp.eq.s32	%p54, %r141, %r142;
	vote.sync.all.pred 	%p55, %p54, %r139;
	mov.u32 	%r204, 2;
	@%p55 bra 	BB3_51;

BB3_49:
	// inline asm
	activemask.b32 %r146;
	// inline asm
	setp.lt.f32	%p56, %f52, 0f3C23D70A;
	vote.sync.all.pred 	%p57, %p56, %r146;
	mov.u32 	%r204, %r195;
	@%p57 bra 	BB3_51;

	// inline asm
	activemask.b32 %r148;
	// inline asm
	setp.le.f32	%p58, %f52, 0f3F800000;
	vote.sync.all.pred 	%p59, %p58, %r148;
	setp.ge.u32	%p60, %r10, %r18;
	and.pred  	%p61, %p59, %p60;
	selp.b32	%r204, %r195, %r12, %p61;

BB3_51:
	cvt.rn.f32.u32	%f307, %r204;
	setp.lt.u32	%p62, %r195, %r204;
	@%p62 bra 	BB3_32;
	bra.uni 	BB3_52;

BB3_54:
	setp.lt.f32	%p63, %f293, 0f3F800000;
	selp.f32	%f60, 0f3F800000, %f293, %p63;
	abs.f32 	%f249, %f60;
	mov.b32 	 %r151, %f60;
	and.b32  	%r152, %r151, -2147483648;
	or.b32  	%r153, %r152, 1056964608;
	mov.b32 	 %f250, %r153;
	add.f32 	%f251, %f60, %f250;
	cvt.rzi.f32.f32	%f252, %f251;
	setp.gt.f32	%p64, %f249, 0f4B000000;
	selp.f32	%f310, %f60, %f252, %p64;
	setp.geu.f32	%p65, %f249, 0f3F000000;
	@%p65 bra 	BB3_56;

	cvt.rzi.f32.f32	%f310, %f60;

BB3_56:
	cvt.rzi.u32.f32	%r154, %f310;
	mov.u32 	%r155, 64;
	min.u32 	%r216, %r155, %r154;
	cvt.rn.f32.u32	%f253, %r57;
	sub.f32 	%f254, %f98, %f96;
	div.rn.f32 	%f64, %f254, %f253;
	cvt.rn.f32.u32	%f255, %r58;
	sub.f32 	%f256, %f99, %f97;
	div.rn.f32 	%f65, %f256, %f255;
	setp.lt.u32	%p66, %r216, 65;
	@%p66 bra 	BB3_58;

	mov.u64 	%rd67, $str11;
	cvta.global.u64 	%rd68, %rd67;
	mov.u64 	%rd69, $str2;
	cvta.global.u64 	%rd70, %rd69;
	mov.u32 	%r156, 113;
	mov.u64 	%rd71, 0;
	mov.u64 	%rd72, 2;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd68;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd70;
	.param .b32 param2;
	st.param.b32	[param2+0], %r156;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd71;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd72;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB3_58:
	setp.eq.s32	%p67, %r216, 0;
	cvt.rn.f32.u32	%f319, %r216;
	mov.u32 	%r217, 0;
	@%p67 bra 	BB3_59;

	cvt.rn.f32.u32	%f67, %r4;
	cvt.rn.f32.u32	%f68, %r5;
	and.b32  	%r33, %r60, 1;
	mov.u32 	%r160, 0;
	mov.u32 	%r207, %r160;
	mov.u32 	%r217, %r160;

BB3_61:
	mov.u32 	%r36, %r216;
	mov.u32 	%r34, %r207;
	cvt.rn.f32.u32	%f259, %r34;
	div.rn.f32 	%f260, %f259, %f319;
	add.f32 	%f261, %f67, %f260;
	add.f32 	%f262, %f68, %f260;
	neg.f32 	%f263, %f262;
	fma.rn.f32 	%f70, %f64, %f261, %f96;
	fma.rn.f32 	%f71, %f65, %f263, %f99;
	setp.eq.s32	%p68, %r59, 0;
	mov.f32 	%f312, 0f00000000;
	mov.u32 	%r211, %r160;
	mov.f32 	%f313, %f312;
	@%p68 bra 	BB3_64;

BB3_62:
	mul.f32 	%f74, %f312, %f312;
	mul.f32 	%f75, %f313, %f313;
	add.f32 	%f264, %f75, %f74;
	setp.geu.f32	%p69, %f264, 0f40800000;
	@%p69 bra 	BB3_64;

	sub.f32 	%f265, %f75, %f74;
	add.f32 	%f76, %f70, %f265;
	add.f32 	%f266, %f313, %f313;
	fma.rn.f32 	%f312, %f266, %f312, %f71;
	add.s32 	%r211, %r211, 1;
	setp.lt.u32	%p70, %r211, %r59;
	mov.f32 	%f313, %f76;
	@%p70 bra 	BB3_62;

BB3_64:
	cvt.rn.f32.u32	%f267, %r211;
	cvt.rzi.u32.f32	%r40, %f267;
	add.s32 	%r217, %r40, %r217;
	setp.gt.u32	%p71, %r34, 9;
	@%p71 bra 	BB3_66;

	mul.wide.u32 	%rd75, %r34, 4;
	add.s64 	%rd76, %rd1, %rd75;
	st.local.u32 	[%rd76], %r40;

BB3_66:
	setp.lt.u32	%p72, %r34, 10;
	setp.ne.s32	%p73, %r34, 0;
	and.pred  	%p74, %p72, %p73;
	setp.ne.s32	%p75, %r33, 0;
	and.pred  	%p76, %p74, %p75;
	shr.u32 	%r42, %r36, 1;
	setp.eq.s32	%p77, %r34, %r42;
	or.pred  	%p78, %p76, %p77;
	add.s32 	%r207, %r34, 1;
	mov.u32 	%r216, %r36;
	@!%p78 bra 	BB3_80;
	bra.uni 	BB3_67;

BB3_67:
	div.u32 	%r163, %r217, %r207;
	cvt.rn.f32.u32	%f78, %r163;
	setp.eq.s32	%p79, %r34, 0;
	mov.f32 	%f318, 0f00000000;
	@%p79 bra 	BB3_76;

	and.b32  	%r44, %r34, 3;
	setp.eq.s32	%p80, %r44, 0;
	mov.f32 	%f318, 0f00000000;
	mov.u32 	%r215, 0;
	@%p80 bra 	BB3_74;

	setp.eq.s32	%p81, %r44, 1;
	mov.f32 	%f315, 0f00000000;
	mov.u32 	%r213, 0;
	@%p81 bra 	BB3_73;

	setp.eq.s32	%p82, %r44, 2;
	mov.f32 	%f314, 0f00000000;
	mov.u32 	%r212, 0;
	@%p82 bra 	BB3_72;

	ld.local.u32 	%r168, [%rd1];
	cvt.rn.f32.u32	%f272, %r168;
	sub.f32 	%f273, %f272, %f78;
	fma.rn.f32 	%f314, %f273, %f273, 0f00000000;
	mov.u32 	%r212, 1;

BB3_72:
	mul.wide.u32 	%rd79, %r212, 4;
	add.s64 	%rd80, %rd1, %rd79;
	ld.local.u32 	%r169, [%rd80];
	cvt.rn.f32.u32	%f274, %r169;
	sub.f32 	%f275, %f274, %f78;
	fma.rn.f32 	%f315, %f275, %f275, %f314;
	add.s32 	%r213, %r212, 1;

BB3_73:
	mul.wide.u32 	%rd83, %r213, 4;
	add.s64 	%rd84, %rd1, %rd83;
	ld.local.u32 	%r170, [%rd84];
	cvt.rn.f32.u32	%f276, %r170;
	sub.f32 	%f277, %f276, %f78;
	fma.rn.f32 	%f318, %f277, %f277, %f315;
	add.s32 	%r215, %r213, 1;

BB3_74:
	setp.lt.u32	%p83, %r34, 4;
	@%p83 bra 	BB3_76;

BB3_75:
	mul.wide.u32 	%rd86, %r215, 4;
	add.s64 	%rd87, %rd1, %rd86;
	ld.local.u32 	%r171, [%rd87];
	cvt.rn.f32.u32	%f278, %r171;
	sub.f32 	%f279, %f278, %f78;
	fma.rn.f32 	%f280, %f279, %f279, %f318;
	add.s32 	%r172, %r215, 1;
	mul.wide.u32 	%rd88, %r172, 4;
	add.s64 	%rd89, %rd1, %rd88;
	ld.local.u32 	%r173, [%rd89];
	cvt.rn.f32.u32	%f281, %r173;
	sub.f32 	%f282, %f281, %f78;
	fma.rn.f32 	%f283, %f282, %f282, %f280;
	add.s32 	%r174, %r215, 2;
	mul.wide.u32 	%rd90, %r174, 4;
	add.s64 	%rd91, %rd1, %rd90;
	ld.local.u32 	%r175, [%rd91];
	cvt.rn.f32.u32	%f284, %r175;
	sub.f32 	%f285, %f284, %f78;
	fma.rn.f32 	%f286, %f285, %f285, %f283;
	add.s32 	%r176, %r215, 3;
	mul.wide.u32 	%rd92, %r176, 4;
	add.s64 	%rd93, %rd1, %rd92;
	ld.local.u32 	%r177, [%rd93];
	cvt.rn.f32.u32	%f287, %r177;
	sub.f32 	%f288, %f287, %f78;
	fma.rn.f32 	%f318, %f288, %f288, %f286;
	add.s32 	%r215, %r215, 4;
	setp.lt.u32	%p84, %r215, %r34;
	@%p84 bra 	BB3_75;

BB3_76:
	add.s32 	%r178, %r34, -1;
	cvt.rn.f32.u32	%f289, %r178;
	div.rn.f32 	%f290, %f318, %f289;
	div.rn.f32 	%f88, %f290, %f78;
	setp.ne.s32	%p85, %r34, 1;
	@%p85 bra 	BB3_78;

	// inline asm
	activemask.b32 %r179;
	// inline asm
	ld.local.v2.u32 	{%r181, %r182}, [%rd1];
	setp.eq.s32	%p86, %r181, %r182;
	vote.sync.all.pred 	%p87, %p86, %r179;
	mov.u32 	%r216, 2;
	@%p87 bra 	BB3_80;

BB3_78:
	// inline asm
	activemask.b32 %r186;
	// inline asm
	setp.lt.f32	%p88, %f88, 0f3C23D70A;
	vote.sync.all.pred 	%p89, %p88, %r186;
	mov.u32 	%r216, %r207;
	@%p89 bra 	BB3_80;

	// inline asm
	activemask.b32 %r188;
	// inline asm
	setp.le.f32	%p90, %f88, 0f3F800000;
	vote.sync.all.pred 	%p91, %p90, %r188;
	setp.ge.u32	%p92, %r34, %r42;
	and.pred  	%p93, %p91, %p92;
	selp.b32	%r216, %r207, %r36, %p93;

BB3_80:
	cvt.rn.f32.u32	%f319, %r216;
	setp.lt.u32	%p94, %r207, %r216;
	@%p94 bra 	BB3_61;
	bra.uni 	BB3_81;

BB3_59:
	mov.u32 	%r216, %r217;

BB3_81:
	div.u32 	%r190, %r217, %r216;
	cvt.rn.f32.u32	%f320, %r190;
	mov.f32 	%f307, 0f00000000;
	mov.u16 	%rs15, 0;
	mov.f32 	%f293, %f319;
	bra.uni 	BB3_82;

BB3_30:
	mov.u32 	%r204, %r205;

BB3_52:
	div.u32 	%r150, %r205, %r204;
	cvt.rn.f32.u32	%f309, %r150;

BB3_53:
	mul.f32 	%f246, %f319, 0f3F400000;
	add.f32 	%f319, %f246, %f307;
	mul.f32 	%f247, %f307, %f309;
	fma.rn.f32 	%f248, %f320, %f246, %f247;
	div.rn.f32 	%f320, %f248, %f319;
	mov.f32 	%f293, %f307;

BB3_82:
	setp.eq.s32	%p95, %r63, %r5;
	setp.eq.s32	%p96, %r62, %r4;
	and.pred  	%p97, %p96, %p95;
	@!%p97 bra 	BB3_84;
	bra.uni 	BB3_83;

BB3_83:
	cvt.f64.f32	%fd5, %f293;
	add.u64 	%rd94, %SP, 40;
	cvta.to.local.u64 	%rd95, %rd94;
	st.local.f64 	[%rd95], %fd5;
	cvt.u32.u16	%r191, %rs14;
	st.local.u32 	[%rd95+8], %r191;
	mov.u64 	%rd96, $str9;
	cvta.global.u64 	%rd97, %rd96;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd97;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd94;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r192, [retval0+0];
	
	//{
	}// Callseq End 13

BB3_84:
	cvta.to.global.u64 	%rd98, %rd4;
	mul.lo.s32 	%r193, %r5, %r56;
	cvt.u64.u32	%rd99, %r193;
	add.s64 	%rd100, %rd98, %rd99;
	mul.wide.u32 	%rd101, %r4, 16;
	add.s64 	%rd102, %rd100, %rd101;
	st.global.f32 	[%rd102], %f320;
	st.global.f32 	[%rd102+4], %f319;
	st.global.f32 	[%rd102+12], %f307;
	st.global.u8 	[%rd102+8], %rs15;
	setp.gt.f32	%p98, %f319, 0f00000000;
	@%p98 bra 	BB3_86;

	mov.u64 	%rd103, $str10;
	cvta.global.u64 	%rd104, %rd103;
	mov.u64 	%rd105, $str2;
	cvta.global.u64 	%rd106, %rd105;
	mov.u32 	%r194, 364;
	mov.u64 	%rd107, 0;
	mov.u64 	%rd108, 2;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd104;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd106;
	.param .b32 param2;
	st.param.b32	[param2+0], %r194;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd107;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd108;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14

BB3_86:
	ret;
}

	// .globl	fractalRenderAdvancedDouble
.visible .entry fractalRenderAdvancedDouble(
	.param .u64 fractalRenderAdvancedDouble_param_0,
	.param .u32 fractalRenderAdvancedDouble_param_1,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_2[8],
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_3[32],
	.param .u32 fractalRenderAdvancedDouble_param_4,
	.param .f32 fractalRenderAdvancedDouble_param_5,
	.param .u32 fractalRenderAdvancedDouble_param_6,
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_7[32],
	.param .u64 fractalRenderAdvancedDouble_param_8,
	.param .u32 fractalRenderAdvancedDouble_param_9,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot4[56];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<99>;
	.reg .b16 	%rs<16>;
	.reg .f32 	%f<156>;
	.reg .b32 	%r<219>;
	.reg .f64 	%fd<170>;
	.reg .b64 	%rd<111>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [fractalRenderAdvancedDouble_param_0];
	ld.param.u32 	%r55, [fractalRenderAdvancedDouble_param_1];
	ld.param.u32 	%r57, [fractalRenderAdvancedDouble_param_2+4];
	ld.param.u32 	%r56, [fractalRenderAdvancedDouble_param_2];
	ld.param.f64 	%fd54, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd53, [fractalRenderAdvancedDouble_param_3+16];
	ld.param.f64 	%fd52, [fractalRenderAdvancedDouble_param_3+8];
	ld.param.f64 	%fd51, [fractalRenderAdvancedDouble_param_3];
	ld.param.u32 	%r58, [fractalRenderAdvancedDouble_param_4];
	ld.param.f32 	%f143, [fractalRenderAdvancedDouble_param_5];
	ld.param.u32 	%r59, [fractalRenderAdvancedDouble_param_6];
	ld.param.f64 	%fd58, [fractalRenderAdvancedDouble_param_7+24];
	ld.param.f64 	%fd57, [fractalRenderAdvancedDouble_param_7+16];
	ld.param.f64 	%fd56, [fractalRenderAdvancedDouble_param_7+8];
	ld.param.f64 	%fd55, [fractalRenderAdvancedDouble_param_7];
	ld.param.u64 	%rd4, [fractalRenderAdvancedDouble_param_8];
	ld.param.u32 	%r60, [fractalRenderAdvancedDouble_param_9];
	ld.param.u32 	%r62, [fractalRenderAdvancedDouble_param_10+4];
	ld.param.u32 	%r61, [fractalRenderAdvancedDouble_param_10];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB4_2;

	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, $str2;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r63, 59;
	mov.u64 	%rd9, 0;
	mov.u64 	%rd10, 2;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 param2;
	st.param.b32	[param2+0], %r63;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 15

BB4_2:
	mov.u32 	%r64, %tid.x;
	mov.u32 	%r65, %tid.y;
	mad.lo.s32 	%r66, %r1, %r65, %r64;
	shl.b32 	%r67, %r1, 2;
	and.b32  	%r68, %r66, 15;
	rem.u32 	%r69, %r66, %r67;
	sub.s32 	%r70, %r69, %r68;
	shr.u32 	%r71, %r70, 2;
	and.b32  	%r72, %r66, 3;
	add.s32 	%r73, %r71, %r72;
	div.u32 	%r74, %r66, %r67;
	shl.b32 	%r75, %r74, 2;
	bfe.u32 	%r76, %r66, 2, 2;
	add.s32 	%r77, %r75, %r76;
	mov.u32 	%r78, %ctaid.x;
	mad.lo.s32 	%r4, %r78, %r1, %r73;
	mov.u32 	%r79, %ctaid.y;
	mov.u32 	%r80, %ntid.y;
	mad.lo.s32 	%r5, %r79, %r80, %r77;
	setp.lt.u32	%p2, %r4, %r56;
	setp.gt.u32	%p3, %r57, %r5;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB4_84;
	bra.uni 	BB4_3;

BB4_3:
	and.b32  	%r81, %r59, 52;
	mov.u16 	%rs14, 0;
	setp.ne.s32	%p5, %r81, 52;
	@%p5 bra 	BB4_4;

	setp.gt.f32	%p6, %f143, 0f00000000;
	@%p6 bra 	BB4_7;

	mov.u64 	%rd11, $str7;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str2;
	cvta.global.u64 	%rd14, %rd13;
	mov.u32 	%r82, 237;
	mov.u64 	%rd15, 0;
	mov.u64 	%rd16, 2;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r82;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 16

BB4_7:
	and.b32  	%r83, %r4, -8;
	cvt.rn.f32.u32	%f41, %r83;
	and.b32  	%r84, %r5, -4;
	cvt.rn.f32.u32	%f42, %r84;
	cvt.rn.f32.u32	%f43, %r61;
	sub.f32 	%f44, %f43, %f41;
	cvt.rn.f32.u32	%f45, %r62;
	sub.f32 	%f46, %f45, %f42;
	mul.f32 	%f47, %f46, %f46;
	fma.rn.f32 	%f48, %f44, %f44, %f47;
	sqrt.rn.f32 	%f49, %f48;
	ld.global.f32 	%f50, [pixelRealWidthInCm];
	mul.f32 	%f51, %f49, %f50;
	ld.global.f32 	%f52, [screenDistance];
	div.rn.f32 	%f1, %f51, %f52;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p7, %f2, 0f3F800000;
	mov.f32 	%f142, %f2;
	@%p7 bra 	BB4_9;

	rcp.rn.f32 	%f142, %f2;

BB4_9:
	mul.rn.f32 	%f53, %f142, %f142;
	mov.f32 	%f54, 0fC0B59883;
	mov.f32 	%f55, 0fBF52C7EA;
	fma.rn.f32 	%f56, %f53, %f55, %f54;
	mov.f32 	%f57, 0fC0D21907;
	fma.rn.f32 	%f58, %f56, %f53, %f57;
	mul.f32 	%f59, %f53, %f58;
	mul.f32 	%f60, %f142, %f59;
	add.f32 	%f61, %f53, 0f41355DC0;
	mov.f32 	%f62, 0f41E6BD60;
	fma.rn.f32 	%f63, %f61, %f53, %f62;
	mov.f32 	%f64, 0f419D92C8;
	fma.rn.f32 	%f65, %f63, %f53, %f64;
	rcp.rn.f32 	%f66, %f65;
	fma.rn.f32 	%f67, %f60, %f66, %f142;
	mov.f32 	%f68, 0f3FC90FDB;
	sub.f32 	%f69, %f68, %f67;
	setp.gt.f32	%p8, %f2, 0f3F800000;
	selp.f32	%f70, %f69, %f67, %p8;
	mov.b32 	 %r85, %f70;
	mov.b32 	 %r86, %f1;
	and.b32  	%r87, %r86, -2147483648;
	or.b32  	%r88, %r85, %r87;
	mov.b32 	 %f71, %r88;
	setp.gtu.f32	%p9, %f2, 0f7F800000;
	selp.f32	%f72, %f70, %f71, %p9;
	mul.f32 	%f73, %f72, 0f43340000;
	div.rn.f32 	%f5, %f73, 0f40490FDB;
	setp.ge.f32	%p10, %f5, 0f00000000;
	@%p10 bra 	BB4_11;

	mov.u64 	%rd17, $str8;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, $str2;
	cvta.global.u64 	%rd20, %rd19;
	mov.u32 	%r89, 247;
	mov.u64 	%rd21, 0;
	mov.u64 	%rd22, 2;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd18;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 param2;
	st.param.b32	[param2+0], %r89;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd21;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd22;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 17

BB4_11:
	setp.lt.f32	%p11, %f143, 0f3F800000;
	mul.f32 	%f74, %f143, 0f40B00000;
	selp.f32	%f75, %f74, 0f40B00000, %p11;
	add.f32 	%f76, %f75, 0fC2700000;
	rcp.rn.f32 	%f77, %f76;
	mov.f32 	%f78, 0fC2700000;
	div.rn.f32 	%f79, %f78, %f76;
	fma.rn.f32 	%f80, %f5, %f77, %f79;
	mul.f32 	%f143, %f80, %f143;
	setp.gtu.f32	%p12, %f5, %f75;
	@%p12 bra 	BB4_12;
	bra.uni 	BB4_13;

BB4_12:
	mov.u16 	%rs13, %rs14;
	bra.uni 	BB4_14;

BB4_4:
	mov.u16 	%rs13, %rs14;
	bra.uni 	BB4_14;

BB4_13:
	cvt.f64.f32	%fd59, %f143;
	mov.f64 	%fd60, 0d3FF0000000000000;
	max.f64 	%fd61, %fd60, %fd59;
	cvt.rn.f32.f64	%f143, %fd61;
	mov.u16 	%rs13, 1;

BB4_14:
	and.b32  	%r90, %r59, 8;
	setp.eq.s32	%p13, %r90, 0;
	mov.f32 	%f152, 0f00000000;
	@%p13 bra 	BB4_15;

	sub.s32 	%r91, %r57, %r5;
	cvt.rn.f64.u32	%fd62, %r91;
	cvt.rn.f64.u32	%fd63, %r56;
	cvt.rn.f64.u32	%fd64, %r4;
	div.rn.f64 	%fd65, %fd64, %fd63;
	cvt.rn.f64.u32	%fd66, %r57;
	div.rn.f64 	%fd67, %fd62, %fd66;
	sub.f64 	%fd68, %fd53, %fd51;
	sub.f64 	%fd69, %fd54, %fd52;
	fma.rn.f64 	%fd70, %fd68, %fd65, %fd51;
	fma.rn.f64 	%fd71, %fd69, %fd67, %fd52;
	sub.f64 	%fd72, %fd70, %fd55;
	sub.f64 	%fd73, %fd71, %fd56;
	sub.f64 	%fd74, %fd57, %fd55;
	div.rn.f64 	%fd75, %fd72, %fd74;
	sub.f64 	%fd76, %fd58, %fd56;
	div.rn.f64 	%fd77, %fd73, %fd76;
	cvt.rn.f32.f64	%f83, %fd75;
	cvt.rn.f32.f64	%f84, %fd77;
	cvt.rn.f32.u32	%f85, %r56;
	mul.f32 	%f9, %f85, %f83;
	cvt.rn.f32.u32	%f86, %r57;
	mul.f32 	%f87, %f86, %f84;
	sub.f32 	%f10, %f86, %f87;
	abs.f32 	%f88, %f9;
	mov.b32 	 %r92, %f9;
	and.b32  	%r93, %r92, -2147483648;
	or.b32  	%r94, %r93, 1056964608;
	mov.b32 	 %f89, %r94;
	add.f32 	%f90, %f9, %f89;
	cvt.rzi.f32.f32	%f91, %f90;
	setp.gt.f32	%p14, %f88, 0f4B000000;
	selp.f32	%f144, %f9, %f91, %p14;
	setp.geu.f32	%p15, %f88, 0f3F000000;
	@%p15 bra 	BB4_18;

	cvt.rzi.f32.f32	%f144, %f9;

BB4_18:
	cvt.rzi.s32.f32	%r8, %f144;
	mov.b32 	 %r95, %f10;
	and.b32  	%r96, %r95, -2147483648;
	or.b32  	%r97, %r96, 1056964608;
	mov.b32 	 %f92, %r97;
	add.f32 	%f93, %f10, %f92;
	cvt.rzi.f32.f32	%f94, %f93;
	abs.f32 	%f95, %f10;
	setp.gt.f32	%p16, %f95, 0f4B000000;
	selp.f32	%f145, %f10, %f94, %p16;
	setp.geu.f32	%p17, %f95, 0f3F000000;
	@%p17 bra 	BB4_20;

	cvt.rzi.f32.f32	%f145, %f10;

BB4_20:
	add.s32 	%r98, %r56, -2;
	setp.lt.u32	%p18, %r8, %r98;
	setp.gt.s32	%p19, %r8, 1;
	and.pred  	%p20, %p19, %p18;
	cvt.rzi.s32.f32	%r99, %f145;
	setp.gt.s32	%p21, %r99, 1;
	and.pred  	%p22, %p20, %p21;
	add.s32 	%r100, %r57, -2;
	setp.lt.u32	%p23, %r99, %r100;
	and.pred  	%p24, %p23, %p22;
	mov.f32 	%f147, %f152;
	@!%p24 bra 	BB4_22;
	bra.uni 	BB4_21;

BB4_21:
	cvt.rmi.f32.f32	%f98, %f9;
	cvt.rzi.u32.f32	%r101, %f98;
	cvt.rmi.f32.f32	%f99, %f10;
	cvt.rzi.u32.f32	%r102, %f99;
	cvt.rn.f32.u32	%f100, %r101;
	sub.f32 	%f101, %f9, %f100;
	cvt.rn.f32.u32	%f102, %r102;
	sub.f32 	%f103, %f10, %f102;
	mul.lo.s32 	%r103, %r102, %r60;
	cvt.u64.u32	%rd23, %r103;
	cvta.to.global.u64 	%rd24, %rd4;
	add.s64 	%rd25, %rd24, %rd23;
	mul.wide.u32 	%rd26, %r101, 16;
	add.s64 	%rd27, %rd25, %rd26;
	add.s32 	%r104, %r101, 1;
	mul.wide.u32 	%rd28, %r104, 16;
	add.s64 	%rd29, %rd25, %rd28;
	add.s32 	%r105, %r102, 1;
	mul.lo.s32 	%r106, %r105, %r60;
	cvt.u64.u32	%rd30, %r106;
	add.s64 	%rd31, %rd24, %rd30;
	add.s64 	%rd32, %rd31, %rd26;
	add.s64 	%rd33, %rd31, %rd28;
	mov.f32 	%f104, 0f3F800000;
	sub.f32 	%f105, %f104, %f101;
	ld.global.f32 	%f106, [%rd27];
	ld.global.f32 	%f107, [%rd29];
	mul.f32 	%f108, %f101, %f107;
	fma.rn.f32 	%f109, %f106, %f105, %f108;
	sub.f32 	%f110, %f104, %f103;
	ld.global.f32 	%f111, [%rd32];
	ld.global.f32 	%f112, [%rd33];
	mul.f32 	%f113, %f101, %f112;
	fma.rn.f32 	%f114, %f105, %f111, %f113;
	mul.f32 	%f115, %f103, %f114;
	fma.rn.f32 	%f152, %f110, %f109, %f115;
	ld.global.f32 	%f116, [%rd27+4];
	ld.global.f32 	%f117, [%rd29+4];
	mul.f32 	%f118, %f101, %f117;
	fma.rn.f32 	%f119, %f105, %f116, %f118;
	ld.global.f32 	%f120, [%rd32+4];
	ld.global.f32 	%f121, [%rd33+4];
	mul.f32 	%f122, %f101, %f121;
	fma.rn.f32 	%f123, %f105, %f120, %f122;
	mul.f32 	%f124, %f103, %f123;
	fma.rn.f32 	%f147, %f110, %f119, %f124;
	cvt.f64.f32	%fd78, %f147;
	setp.geu.f64	%p25, %fd78, 0d3FB999999999999A;
	selp.u16	%rs14, 1, 0, %p25;
	bra.uni 	BB4_22;

BB4_15:
	mov.f32 	%f147, %f152;

BB4_22:
	setp.eq.s16	%p26, %rs14, 0;
	@%p26 bra 	BB4_53;

	shr.u32 	%r107, %r59, 5;
	and.b32  	%r108, %r107, 1;
	setp.eq.b32	%p27, %r108, 1;
	not.pred 	%p28, %p27;
	setp.eq.s16	%p29, %rs13, 0;
	mov.f32 	%f154, 0f00000000;
	mov.u16 	%rs15, 1;
	or.pred  	%p30, %p29, %p28;
	@%p30 bra 	BB4_80;

	setp.lt.f32	%p31, %f143, 0f3F800000;
	mov.f32 	%f154, 0f00000000;
	mov.f32 	%f150, %f154;
	@%p31 bra 	BB4_52;

	abs.f32 	%f128, %f143;
	mov.b32 	 %r109, %f143;
	and.b32  	%r110, %r109, -2147483648;
	or.b32  	%r111, %r110, 1056964608;
	mov.b32 	 %f129, %r111;
	add.f32 	%f130, %f143, %f129;
	cvt.rzi.f32.f32	%f131, %f130;
	setp.gt.f32	%p32, %f128, 0f4B000000;
	selp.f32	%f148, %f143, %f131, %p32;
	setp.geu.f32	%p33, %f128, 0f3F000000;
	@%p33 bra 	BB4_27;

	cvt.rzi.f32.f32	%f148, %f143;

BB4_27:
	cvt.rzi.u32.f32	%r112, %f148;
	mov.u32 	%r113, 64;
	min.u32 	%r9, %r113, %r112;
	cvt.rn.f64.u32	%fd79, %r56;
	sub.f64 	%fd80, %fd53, %fd51;
	div.rn.f64 	%fd5, %fd80, %fd79;
	cvt.rn.f64.u32	%fd81, %r57;
	sub.f64 	%fd82, %fd54, %fd52;
	div.rn.f64 	%fd6, %fd82, %fd81;
	setp.lt.u32	%p34, %r9, 65;
	@%p34 bra 	BB4_29;

	mov.u64 	%rd34, $str11;
	cvta.global.u64 	%rd35, %rd34;
	mov.u64 	%rd36, $str2;
	cvta.global.u64 	%rd37, %rd36;
	mov.u32 	%r114, 113;
	mov.u64 	%rd38, 0;
	mov.u64 	%rd39, 2;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd37;
	.param .b32 param2;
	st.param.b32	[param2+0], %r114;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd38;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd39;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 18

BB4_29:
	setp.eq.s32	%p35, %r9, 0;
	mov.u32 	%r205, 0;
	mov.u32 	%r204, %r205;
	@%p35 bra 	BB4_51;

	cvt.rn.f64.u32	%fd7, %r4;
	cvt.rn.f64.u32	%fd8, %r5;
	mov.u32 	%r118, 0;
	mov.u32 	%r195, %r118;
	mov.u32 	%r205, %r118;
	mov.u32 	%r204, %r9;

BB4_31:
	mov.u32 	%r12, %r204;
	mov.u32 	%r10, %r195;
	cvt.rn.f64.u32	%fd85, %r12;
	cvt.rn.f64.u32	%fd86, %r10;
	div.rn.f64 	%fd87, %fd86, %fd85;
	add.f64 	%fd88, %fd7, %fd87;
	add.f64 	%fd89, %fd8, %fd87;
	neg.f64 	%fd90, %fd89;
	fma.rn.f64 	%fd9, %fd5, %fd88, %fd51;
	fma.rn.f64 	%fd10, %fd6, %fd90, %fd54;
	setp.eq.s32	%p36, %r58, 0;
	mov.f64 	%fd156, 0d0000000000000000;
	mov.u32 	%r199, %r118;
	mov.f64 	%fd157, %fd156;
	@%p36 bra 	BB4_34;

BB4_32:
	mul.f64 	%fd13, %fd156, %fd156;
	mul.f64 	%fd14, %fd157, %fd157;
	add.f64 	%fd91, %fd14, %fd13;
	setp.geu.f64	%p37, %fd91, 0d4010000000000000;
	@%p37 bra 	BB4_34;

	sub.f64 	%fd92, %fd14, %fd13;
	add.f64 	%fd15, %fd9, %fd92;
	add.f64 	%fd93, %fd157, %fd157;
	fma.rn.f64 	%fd156, %fd93, %fd156, %fd10;
	add.s32 	%r199, %r199, 1;
	setp.lt.u32	%p38, %r199, %r58;
	mov.f64 	%fd157, %fd15;
	@%p38 bra 	BB4_32;

BB4_34:
	cvt.rn.f32.u32	%f132, %r199;
	cvt.rzi.u32.f32	%r16, %f132;
	add.s32 	%r205, %r16, %r205;
	setp.gt.u32	%p39, %r10, 9;
	@%p39 bra 	BB4_36;

	add.u64 	%rd40, %SP, 0;
	cvta.to.local.u64 	%rd41, %rd40;
	mul.wide.u32 	%rd42, %r10, 4;
	add.s64 	%rd43, %rd41, %rd42;
	st.local.u32 	[%rd43], %r16;

BB4_36:
	setp.lt.u32	%p40, %r10, 10;
	and.b32  	%r121, %r59, 1;
	setp.eq.b32	%p41, %r121, 1;
	setp.ne.s32	%p42, %r10, 0;
	and.pred  	%p43, %p40, %p42;
	and.pred  	%p44, %p43, %p41;
	shr.u32 	%r18, %r12, 1;
	setp.eq.s32	%p45, %r10, %r18;
	or.pred  	%p46, %p44, %p45;
	add.s32 	%r195, %r10, 1;
	mov.u32 	%r204, %r12;
	@!%p46 bra 	BB4_50;
	bra.uni 	BB4_37;

BB4_37:
	div.u32 	%r122, %r205, %r195;
	cvt.rn.f64.u32	%fd17, %r122;
	setp.eq.s32	%p47, %r10, 0;
	mov.f64 	%fd162, 0d0000000000000000;
	@%p47 bra 	BB4_46;

	and.b32  	%r20, %r10, 3;
	setp.eq.s32	%p48, %r20, 0;
	mov.f64 	%fd162, 0d0000000000000000;
	mov.u32 	%r203, 0;
	@%p48 bra 	BB4_44;

	setp.eq.s32	%p49, %r20, 1;
	mov.f64 	%fd159, 0d0000000000000000;
	mov.u32 	%r201, 0;
	@%p49 bra 	BB4_43;

	setp.eq.s32	%p50, %r20, 2;
	mov.f64 	%fd158, 0d0000000000000000;
	mov.u32 	%r200, 0;
	@%p50 bra 	BB4_42;

	add.u64 	%rd44, %SP, 0;
	cvta.to.local.u64 	%rd45, %rd44;
	ld.local.u32 	%r127, [%rd45];
	cvt.rn.f64.u32	%fd98, %r127;
	sub.f64 	%fd99, %fd98, %fd17;
	fma.rn.f64 	%fd158, %fd99, %fd99, 0d0000000000000000;
	mov.u32 	%r200, 1;

BB4_42:
	add.u64 	%rd46, %SP, 0;
	cvta.to.local.u64 	%rd47, %rd46;
	mul.wide.u32 	%rd48, %r200, 4;
	add.s64 	%rd49, %rd47, %rd48;
	ld.local.u32 	%r128, [%rd49];
	cvt.rn.f64.u32	%fd100, %r128;
	sub.f64 	%fd101, %fd100, %fd17;
	fma.rn.f64 	%fd159, %fd101, %fd101, %fd158;
	add.s32 	%r201, %r200, 1;

BB4_43:
	add.u64 	%rd50, %SP, 0;
	cvta.to.local.u64 	%rd51, %rd50;
	mul.wide.u32 	%rd52, %r201, 4;
	add.s64 	%rd53, %rd51, %rd52;
	ld.local.u32 	%r129, [%rd53];
	cvt.rn.f64.u32	%fd102, %r129;
	sub.f64 	%fd103, %fd102, %fd17;
	fma.rn.f64 	%fd162, %fd103, %fd103, %fd159;
	add.s32 	%r203, %r201, 1;

BB4_44:
	add.u64 	%rd54, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd54;
	setp.lt.u32	%p51, %r10, 4;
	@%p51 bra 	BB4_46;

BB4_45:
	mul.wide.u32 	%rd55, %r203, 4;
	add.s64 	%rd56, %rd1, %rd55;
	ld.local.u32 	%r130, [%rd56];
	cvt.rn.f64.u32	%fd104, %r130;
	sub.f64 	%fd105, %fd104, %fd17;
	fma.rn.f64 	%fd106, %fd105, %fd105, %fd162;
	add.s32 	%r131, %r203, 1;
	mul.wide.u32 	%rd57, %r131, 4;
	add.s64 	%rd58, %rd1, %rd57;
	ld.local.u32 	%r132, [%rd58];
	cvt.rn.f64.u32	%fd107, %r132;
	sub.f64 	%fd108, %fd107, %fd17;
	fma.rn.f64 	%fd109, %fd108, %fd108, %fd106;
	add.s32 	%r133, %r203, 2;
	mul.wide.u32 	%rd59, %r133, 4;
	add.s64 	%rd60, %rd1, %rd59;
	ld.local.u32 	%r134, [%rd60];
	cvt.rn.f64.u32	%fd110, %r134;
	sub.f64 	%fd111, %fd110, %fd17;
	fma.rn.f64 	%fd112, %fd111, %fd111, %fd109;
	add.s32 	%r135, %r203, 3;
	mul.wide.u32 	%rd61, %r135, 4;
	add.s64 	%rd62, %rd1, %rd61;
	ld.local.u32 	%r136, [%rd62];
	cvt.rn.f64.u32	%fd113, %r136;
	sub.f64 	%fd114, %fd113, %fd17;
	fma.rn.f64 	%fd162, %fd114, %fd114, %fd112;
	add.s32 	%r203, %r203, 4;
	setp.lt.u32	%p52, %r203, %r10;
	@%p52 bra 	BB4_45;

BB4_46:
	add.s32 	%r137, %r10, -1;
	cvt.rn.f64.u32	%fd115, %r137;
	div.rn.f64 	%fd116, %fd162, %fd115;
	div.rn.f64 	%fd27, %fd116, %fd17;
	setp.ne.s32	%p53, %r10, 1;
	@%p53 bra 	BB4_48;

	// inline asm
	activemask.b32 %r138;
	// inline asm
	add.u64 	%rd63, %SP, 0;
	cvta.to.local.u64 	%rd64, %rd63;
	ld.local.v2.u32 	{%r140, %r141}, [%rd64];
	setp.eq.s32	%p54, %r140, %r141;
	vote.sync.all.pred 	%p55, %p54, %r138;
	mov.u32 	%r204, 2;
	@%p55 bra 	BB4_50;

BB4_48:
	// inline asm
	activemask.b32 %r145;
	// inline asm
	setp.lt.f64	%p56, %fd27, 0d3F847AE140000000;
	vote.sync.all.pred 	%p57, %p56, %r145;
	mov.u32 	%r204, %r195;
	@%p57 bra 	BB4_50;

	// inline asm
	activemask.b32 %r147;
	// inline asm
	setp.le.f64	%p58, %fd27, 0d3FF0000000000000;
	vote.sync.all.pred 	%p59, %p58, %r147;
	setp.ge.u32	%p60, %r10, %r18;
	and.pred  	%p61, %p59, %p60;
	selp.b32	%r204, %r195, %r12, %p61;

BB4_50:
	setp.lt.u32	%p62, %r195, %r204;
	@%p62 bra 	BB4_31;

BB4_51:
	cvt.rn.f32.u32	%f154, %r204;
	div.u32 	%r149, %r205, %r204;
	cvt.rn.f32.u32	%f150, %r149;

BB4_52:
	mul.f32 	%f133, %f147, 0f3F400000;
	add.f32 	%f147, %f133, %f154;
	mul.f32 	%f134, %f154, %f150;
	fma.rn.f32 	%f135, %f152, %f133, %f134;
	div.rn.f32 	%f152, %f135, %f147;
	mov.f32 	%f143, %f154;
	bra.uni 	BB4_80;

BB4_53:
	setp.lt.f32	%p63, %f143, 0f3F800000;
	selp.f32	%f30, 0f3F800000, %f143, %p63;
	abs.f32 	%f136, %f30;
	mov.b32 	 %r150, %f30;
	and.b32  	%r151, %r150, -2147483648;
	or.b32  	%r152, %r151, 1056964608;
	mov.b32 	 %f137, %r152;
	add.f32 	%f138, %f30, %f137;
	cvt.rzi.f32.f32	%f139, %f138;
	setp.gt.f32	%p64, %f136, 0f4B000000;
	selp.f32	%f151, %f30, %f139, %p64;
	setp.geu.f32	%p65, %f136, 0f3F000000;
	@%p65 bra 	BB4_55;

	cvt.rzi.f32.f32	%f151, %f30;

BB4_55:
	cvt.rzi.u32.f32	%r153, %f151;
	mov.u32 	%r154, 64;
	min.u32 	%r32, %r154, %r153;
	cvt.rn.f64.u32	%fd117, %r56;
	sub.f64 	%fd118, %fd53, %fd51;
	div.rn.f64 	%fd28, %fd118, %fd117;
	cvt.rn.f64.u32	%fd119, %r57;
	sub.f64 	%fd120, %fd54, %fd52;
	div.rn.f64 	%fd29, %fd120, %fd119;
	setp.lt.u32	%p66, %r32, 65;
	@%p66 bra 	BB4_57;

	mov.u64 	%rd65, $str11;
	cvta.global.u64 	%rd66, %rd65;
	mov.u64 	%rd67, $str2;
	cvta.global.u64 	%rd68, %rd67;
	mov.u32 	%r155, 113;
	mov.u64 	%rd69, 0;
	mov.u64 	%rd70, 2;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd66;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd68;
	.param .b32 param2;
	st.param.b32	[param2+0], %r155;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd69;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd70;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 19

BB4_57:
	setp.eq.s32	%p67, %r32, 0;
	mov.u32 	%r217, 0;
	mov.u32 	%r216, %r217;
	@%p67 bra 	BB4_79;

	cvt.rn.f64.u32	%fd30, %r4;
	cvt.rn.f64.u32	%fd31, %r5;
	mov.u32 	%r159, 0;
	mov.u32 	%r207, %r159;
	mov.u32 	%r217, %r159;
	mov.u32 	%r216, %r32;

BB4_59:
	mov.u32 	%r35, %r216;
	mov.u32 	%r33, %r207;
	cvt.rn.f64.u32	%fd123, %r35;
	cvt.rn.f64.u32	%fd124, %r33;
	div.rn.f64 	%fd125, %fd124, %fd123;
	add.f64 	%fd126, %fd30, %fd125;
	add.f64 	%fd127, %fd31, %fd125;
	neg.f64 	%fd128, %fd127;
	fma.rn.f64 	%fd32, %fd28, %fd126, %fd51;
	fma.rn.f64 	%fd33, %fd29, %fd128, %fd54;
	setp.eq.s32	%p68, %r58, 0;
	mov.f64 	%fd163, 0d0000000000000000;
	mov.u32 	%r211, %r159;
	mov.f64 	%fd164, %fd163;
	@%p68 bra 	BB4_62;

BB4_60:
	mul.f64 	%fd36, %fd163, %fd163;
	mul.f64 	%fd37, %fd164, %fd164;
	add.f64 	%fd129, %fd37, %fd36;
	setp.geu.f64	%p69, %fd129, 0d4010000000000000;
	@%p69 bra 	BB4_62;

	sub.f64 	%fd130, %fd37, %fd36;
	add.f64 	%fd38, %fd32, %fd130;
	add.f64 	%fd131, %fd164, %fd164;
	fma.rn.f64 	%fd163, %fd131, %fd163, %fd33;
	add.s32 	%r211, %r211, 1;
	setp.lt.u32	%p70, %r211, %r58;
	mov.f64 	%fd164, %fd38;
	@%p70 bra 	BB4_60;

BB4_62:
	cvt.rn.f32.u32	%f140, %r211;
	cvt.rzi.u32.f32	%r39, %f140;
	add.s32 	%r217, %r39, %r217;
	setp.gt.u32	%p71, %r33, 9;
	@%p71 bra 	BB4_64;

	add.u64 	%rd71, %SP, 0;
	cvta.to.local.u64 	%rd72, %rd71;
	mul.wide.u32 	%rd73, %r33, 4;
	add.s64 	%rd74, %rd72, %rd73;
	st.local.u32 	[%rd74], %r39;

BB4_64:
	setp.lt.u32	%p72, %r33, 10;
	and.b32  	%r162, %r59, 1;
	setp.eq.b32	%p73, %r162, 1;
	setp.ne.s32	%p74, %r33, 0;
	and.pred  	%p75, %p72, %p74;
	and.pred  	%p76, %p75, %p73;
	shr.u32 	%r41, %r35, 1;
	setp.eq.s32	%p77, %r33, %r41;
	or.pred  	%p78, %p76, %p77;
	add.s32 	%r207, %r33, 1;
	mov.u32 	%r216, %r35;
	@!%p78 bra 	BB4_78;
	bra.uni 	BB4_65;

BB4_65:
	div.u32 	%r163, %r217, %r207;
	cvt.rn.f64.u32	%fd40, %r163;
	setp.eq.s32	%p79, %r33, 0;
	mov.f64 	%fd169, 0d0000000000000000;
	@%p79 bra 	BB4_74;

	and.b32  	%r43, %r33, 3;
	setp.eq.s32	%p80, %r43, 0;
	mov.f64 	%fd169, 0d0000000000000000;
	mov.u32 	%r215, 0;
	@%p80 bra 	BB4_72;

	setp.eq.s32	%p81, %r43, 1;
	mov.f64 	%fd166, 0d0000000000000000;
	mov.u32 	%r213, 0;
	@%p81 bra 	BB4_71;

	setp.eq.s32	%p82, %r43, 2;
	mov.f64 	%fd165, 0d0000000000000000;
	mov.u32 	%r212, 0;
	@%p82 bra 	BB4_70;

	add.u64 	%rd75, %SP, 0;
	cvta.to.local.u64 	%rd76, %rd75;
	ld.local.u32 	%r168, [%rd76];
	cvt.rn.f64.u32	%fd136, %r168;
	sub.f64 	%fd137, %fd136, %fd40;
	fma.rn.f64 	%fd165, %fd137, %fd137, 0d0000000000000000;
	mov.u32 	%r212, 1;

BB4_70:
	add.u64 	%rd77, %SP, 0;
	cvta.to.local.u64 	%rd78, %rd77;
	mul.wide.u32 	%rd79, %r212, 4;
	add.s64 	%rd80, %rd78, %rd79;
	ld.local.u32 	%r169, [%rd80];
	cvt.rn.f64.u32	%fd138, %r169;
	sub.f64 	%fd139, %fd138, %fd40;
	fma.rn.f64 	%fd166, %fd139, %fd139, %fd165;
	add.s32 	%r213, %r212, 1;

BB4_71:
	add.u64 	%rd81, %SP, 0;
	cvta.to.local.u64 	%rd82, %rd81;
	mul.wide.u32 	%rd83, %r213, 4;
	add.s64 	%rd84, %rd82, %rd83;
	ld.local.u32 	%r170, [%rd84];
	cvt.rn.f64.u32	%fd140, %r170;
	sub.f64 	%fd141, %fd140, %fd40;
	fma.rn.f64 	%fd169, %fd141, %fd141, %fd166;
	add.s32 	%r215, %r213, 1;

BB4_72:
	add.u64 	%rd85, %SP, 0;
	cvta.to.local.u64 	%rd2, %rd85;
	setp.lt.u32	%p83, %r33, 4;
	@%p83 bra 	BB4_74;

BB4_73:
	mul.wide.u32 	%rd86, %r215, 4;
	add.s64 	%rd87, %rd2, %rd86;
	ld.local.u32 	%r171, [%rd87];
	cvt.rn.f64.u32	%fd142, %r171;
	sub.f64 	%fd143, %fd142, %fd40;
	fma.rn.f64 	%fd144, %fd143, %fd143, %fd169;
	add.s32 	%r172, %r215, 1;
	mul.wide.u32 	%rd88, %r172, 4;
	add.s64 	%rd89, %rd2, %rd88;
	ld.local.u32 	%r173, [%rd89];
	cvt.rn.f64.u32	%fd145, %r173;
	sub.f64 	%fd146, %fd145, %fd40;
	fma.rn.f64 	%fd147, %fd146, %fd146, %fd144;
	add.s32 	%r174, %r215, 2;
	mul.wide.u32 	%rd90, %r174, 4;
	add.s64 	%rd91, %rd2, %rd90;
	ld.local.u32 	%r175, [%rd91];
	cvt.rn.f64.u32	%fd148, %r175;
	sub.f64 	%fd149, %fd148, %fd40;
	fma.rn.f64 	%fd150, %fd149, %fd149, %fd147;
	add.s32 	%r176, %r215, 3;
	mul.wide.u32 	%rd92, %r176, 4;
	add.s64 	%rd93, %rd2, %rd92;
	ld.local.u32 	%r177, [%rd93];
	cvt.rn.f64.u32	%fd151, %r177;
	sub.f64 	%fd152, %fd151, %fd40;
	fma.rn.f64 	%fd169, %fd152, %fd152, %fd150;
	add.s32 	%r215, %r215, 4;
	setp.lt.u32	%p84, %r215, %r33;
	@%p84 bra 	BB4_73;

BB4_74:
	add.s32 	%r178, %r33, -1;
	cvt.rn.f64.u32	%fd153, %r178;
	div.rn.f64 	%fd154, %fd169, %fd153;
	div.rn.f64 	%fd50, %fd154, %fd40;
	setp.ne.s32	%p85, %r33, 1;
	@%p85 bra 	BB4_76;

	// inline asm
	activemask.b32 %r179;
	// inline asm
	add.u64 	%rd94, %SP, 0;
	cvta.to.local.u64 	%rd95, %rd94;
	ld.local.v2.u32 	{%r181, %r182}, [%rd95];
	setp.eq.s32	%p86, %r181, %r182;
	vote.sync.all.pred 	%p87, %p86, %r179;
	mov.u32 	%r216, 2;
	@%p87 bra 	BB4_78;

BB4_76:
	// inline asm
	activemask.b32 %r186;
	// inline asm
	setp.lt.f64	%p88, %fd50, 0d3F847AE140000000;
	vote.sync.all.pred 	%p89, %p88, %r186;
	mov.u32 	%r216, %r207;
	@%p89 bra 	BB4_78;

	// inline asm
	activemask.b32 %r188;
	// inline asm
	setp.le.f64	%p90, %fd50, 0d3FF0000000000000;
	vote.sync.all.pred 	%p91, %p90, %r188;
	setp.ge.u32	%p92, %r33, %r41;
	and.pred  	%p93, %p91, %p92;
	selp.b32	%r216, %r207, %r35, %p93;

BB4_78:
	setp.lt.u32	%p94, %r207, %r216;
	@%p94 bra 	BB4_59;

BB4_79:
	cvt.rn.f32.u32	%f147, %r216;
	div.u32 	%r190, %r217, %r216;
	cvt.rn.f32.u32	%f152, %r190;
	mov.f32 	%f154, 0f00000000;
	mov.u16 	%rs15, 0;
	mov.f32 	%f143, %f147;

BB4_80:
	setp.eq.s32	%p95, %r62, %r5;
	setp.eq.s32	%p96, %r61, %r4;
	and.pred  	%p97, %p96, %p95;
	@!%p97 bra 	BB4_82;
	bra.uni 	BB4_81;

BB4_81:
	cvt.f64.f32	%fd155, %f143;
	add.u64 	%rd96, %SP, 40;
	cvta.to.local.u64 	%rd97, %rd96;
	st.local.f64 	[%rd97], %fd155;
	cvt.u32.u16	%r191, %rs14;
	st.local.u32 	[%rd97+8], %r191;
	mov.u64 	%rd98, $str9;
	cvta.global.u64 	%rd99, %rd98;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd99;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd96;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r192, [retval0+0];
	
	//{
	}// Callseq End 20

BB4_82:
	cvta.to.global.u64 	%rd100, %rd3;
	mul.lo.s32 	%r193, %r5, %r55;
	cvt.u64.u32	%rd101, %r193;
	add.s64 	%rd102, %rd100, %rd101;
	mul.wide.u32 	%rd103, %r4, 16;
	add.s64 	%rd104, %rd102, %rd103;
	st.global.f32 	[%rd104], %f152;
	st.global.f32 	[%rd104+4], %f147;
	st.global.f32 	[%rd104+12], %f154;
	st.global.u8 	[%rd104+8], %rs15;
	setp.gt.f32	%p98, %f147, 0f00000000;
	@%p98 bra 	BB4_84;

	mov.u64 	%rd105, $str10;
	cvta.global.u64 	%rd106, %rd105;
	mov.u64 	%rd107, $str2;
	cvta.global.u64 	%rd108, %rd107;
	mov.u32 	%r194, 364;
	mov.u64 	%rd109, 0;
	mov.u64 	%rd110, 2;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd106;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd108;
	.param .b32 param2;
	st.param.b32	[param2+0], %r194;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd109;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd110;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 21

BB4_84:
	ret;
}

	// .globl	compose
.visible .entry compose(
	.param .u64 compose_param_0,
	.param .u32 compose_param_1,
	.param .u64 compose_param_2,
	.param .u32 compose_param_3,
	.param .u64 compose_param_4,
	.param .u32 compose_param_5,
	.param .u32 compose_param_6,
	.param .u64 compose_param_7,
	.param .u32 compose_param_8,
	.param .f32 compose_param_9
)
{
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<20>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<16>;


	ld.param.u64 	%rd2, [compose_param_0];
	ld.param.u32 	%r11, [compose_param_1];
	ld.param.u64 	%rd3, [compose_param_4];
	ld.param.u32 	%r13, [compose_param_5];
	ld.param.u32 	%r14, [compose_param_6];
	ld.param.u64 	%rd4, [compose_param_7];
	ld.param.u32 	%r12, [compose_param_8];
	ld.param.f32 	%f6, [compose_param_9];
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r16, %r15, %r17;
	mov.u32 	%r18, %ctaid.y;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r2, %r18, %r19, %r20;
	setp.ge.u32	%p1, %r2, %r14;
	setp.ge.u32	%p2, %r1, %r13;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_11;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.lo.s32 	%r21, %r2, %r11;
	cvt.u64.u32	%rd6, %r21;
	add.s64 	%rd7, %rd5, %rd6;
	mul.wide.u32 	%rd8, %r1, 16;
	add.s64 	%rd9, %rd7, %rd8;
	add.s64 	%rd1, %rd9, 12;
	ld.const.u8 	%rs1, [VISUALIZE_SAMPLE_COUNT];
	setp.eq.s16	%p4, %rs1, 0;
	@%p4 bra 	BB5_5;

	ld.global.f32 	%f7, [%rd1+-8];
	cvt.rzi.u32.f32	%r22, %f7;
	cvt.rzi.u32.f32	%r3, %f6;
	min.u32 	%r23, %r22, %r3;
	cvt.rn.f32.u32	%f8, %r23;
	cvt.rn.f32.u32	%f1, %r3;
	div.rn.f32 	%f9, %f8, %f1;
	mul.f32 	%f10, %f9, 0f437F0000;
	cvt.rzi.s32.f32	%r24, %f10;
	and.b32  	%r25, %r24, 255;
	prmt.b32 	%r26, %r25, %r25, 30212;
	prmt.b32 	%r42, %r25, %r26, 28756;
	ld.global.u8 	%rs2, [%rd1+-4];
	setp.eq.s16	%p5, %rs2, 0;
	@%p5 bra 	BB5_4;

	ld.global.f32 	%f11, [%rd1];
	cvt.rzi.u32.f32	%r27, %f11;
	min.u32 	%r28, %r27, %r3;
	cvt.rn.f32.u32	%f12, %r28;
	div.rn.f32 	%f13, %f12, %f1;
	mul.f32 	%f14, %f13, 0f437F0000;
	cvt.rzi.s32.f32	%r29, %f14;
	and.b32  	%r30, %r29, 255;
	prmt.b32 	%r31, %r30, %r30, 30212;
	prmt.b32 	%r42, %r30, %r31, 28756;

BB5_4:
	or.b32  	%r43, %r42, -16777216;
	bra.uni 	BB5_10;

BB5_5:
	ld.global.f32 	%f2, [%rd1+-12];
	abs.f32 	%f15, %f2;
	mov.b32 	 %r32, %f2;
	and.b32  	%r33, %r32, -2147483648;
	or.b32  	%r34, %r33, 1056964608;
	mov.b32 	 %f16, %r34;
	add.f32 	%f17, %f2, %f16;
	cvt.rzi.f32.f32	%f18, %f17;
	setp.gt.f32	%p6, %f15, 0f4B000000;
	selp.f32	%f19, %f2, %f18, %p6;
	setp.geu.f32	%p7, %f15, 0f3F000000;
	@%p7 bra 	BB5_7;

	cvt.rzi.f32.f32	%f19, %f2;

BB5_7:
	cvt.rzi.u32.f32	%r35, %f19;
	rem.u32 	%r36, %r35, %r12;
	sub.s32 	%r37, %r12, %r36;
	add.s32 	%r8, %r37, -1;
	setp.lt.u32	%p8, %r8, %r12;
	@%p8 bra 	BB5_9;

	mov.u64 	%rd10, $str12;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str13;
	cvta.global.u64 	%rd13, %rd12;
	mov.u32 	%r38, 29;
	mov.u64 	%rd14, 0;
	mov.u64 	%rd15, 2;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r38;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd14;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd15;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 22

BB5_9:
	shl.b32 	%r39, %r8, 2;
	mov.u32 	%r40, 0;
	suld.b.2d.b32.trap {%r43}, [%rd4, {%r39, %r40}];

BB5_10:
	shl.b32 	%r41, %r1, 2;
	sust.b.2d.b32.trap 	[%rd3, {%r41, %r2}], {%r43};

BB5_11:
	ret;
}

	// .globl	fractalRenderUnderSampled
.visible .entry fractalRenderUnderSampled(
	.param .u64 fractalRenderUnderSampled_param_0,
	.param .u32 fractalRenderUnderSampled_param_1,
	.param .u32 fractalRenderUnderSampled_param_2,
	.param .u32 fractalRenderUnderSampled_param_3,
	.param .f32 fractalRenderUnderSampled_param_4,
	.param .f32 fractalRenderUnderSampled_param_5,
	.param .f32 fractalRenderUnderSampled_param_6,
	.param .f32 fractalRenderUnderSampled_param_7,
	.param .u32 fractalRenderUnderSampled_param_8,
	.param .u32 fractalRenderUnderSampled_param_9
)
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<51>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [fractalRenderUnderSampled_param_0];
	ld.param.u32 	%r12, [fractalRenderUnderSampled_param_1];
	ld.param.u32 	%r13, [fractalRenderUnderSampled_param_2];
	ld.param.u32 	%r14, [fractalRenderUnderSampled_param_3];
	ld.param.f32 	%f11, [fractalRenderUnderSampled_param_4];
	ld.param.f32 	%f12, [fractalRenderUnderSampled_param_5];
	ld.param.f32 	%f13, [fractalRenderUnderSampled_param_6];
	ld.param.f32 	%f14, [fractalRenderUnderSampled_param_7];
	ld.param.u32 	%r15, [fractalRenderUnderSampled_param_8];
	ld.param.u32 	%r16, [fractalRenderUnderSampled_param_9];
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r20, %r18, %r17, %r19;
	mul.lo.s32 	%r1, %r20, %r16;
	mov.u32 	%r21, %ctaid.y;
	mov.u32 	%r22, %ntid.y;
	mov.u32 	%r23, %tid.y;
	mad.lo.s32 	%r24, %r21, %r22, %r23;
	mul.lo.s32 	%r2, %r24, %r16;
	sub.s32 	%r25, %r14, %r16;
	setp.ge.u32	%p1, %r2, %r25;
	sub.s32 	%r26, %r13, %r16;
	setp.ge.u32	%p2, %r1, %r26;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB6_14;

	sub.f32 	%f17, %f13, %f11;
	cvt.rn.f32.u32	%f18, %r13;
	div.rn.f32 	%f19, %f17, %f18;
	cvt.rn.f32.u32	%f20, %r14;
	sub.f32 	%f21, %f14, %f12;
	div.rn.f32 	%f22, %f21, %f20;
	cvt.rn.f32.u32	%f23, %r1;
	fma.rn.f32 	%f1, %f23, %f19, %f11;
	cvt.rn.f32.u32	%f24, %r2;
	mul.f32 	%f25, %f24, %f22;
	sub.f32 	%f2, %f14, %f25;
	setp.eq.s32	%p4, %r15, 0;
	mov.f32 	%f31, 0f00000000;
	mov.u32 	%r46, 0;
	@%p4 bra 	BB6_5;

	mov.f32 	%f32, %f31;

BB6_3:
	mul.f32 	%f5, %f31, %f31;
	mul.f32 	%f6, %f32, %f32;
	add.f32 	%f26, %f6, %f5;
	setp.geu.f32	%p5, %f26, 0f40800000;
	@%p5 bra 	BB6_5;

	sub.f32 	%f27, %f6, %f5;
	add.f32 	%f7, %f1, %f27;
	add.f32 	%f28, %f32, %f32;
	fma.rn.f32 	%f31, %f28, %f31, %f2;
	add.s32 	%r46, %r46, 1;
	setp.lt.u32	%p6, %r46, %r15;
	mov.f32 	%f32, %f7;
	@%p6 bra 	BB6_3;

BB6_5:
	setp.eq.s32	%p7, %r16, 0;
	@%p7 bra 	BB6_14;

	cvt.rn.f32.u32	%f29, %r46;
	cvt.rzi.u32.f32	%r33, %f29;
	mul.lo.s32 	%r34, %r2, %r12;
	cvt.u64.u32	%rd3, %r34;
	cvta.to.global.u64 	%rd4, %rd2;
	add.s64 	%rd5, %rd4, %rd3;
	cvt.rn.f32.u32	%f30, %r16;
	rcp.rn.f32 	%f9, %f30;
	cvt.rn.f32.u32	%f10, %r33;
	mul.wide.u32 	%rd6, %r1, 16;
	add.s64 	%rd1, %rd5, %rd6;
	and.b32  	%r32, %r16, 3;
	mov.u32 	%r47, 1;
	mov.u32 	%r50, 0;
	setp.eq.s32	%p8, %r32, 0;
	@%p8 bra 	BB6_12;

	setp.eq.s32	%p9, %r32, 1;
	mov.u32 	%r48, %r50;
	@%p9 bra 	BB6_11;

	setp.eq.s32	%p10, %r32, 2;
	@%p10 bra 	BB6_10;

	st.global.f32 	[%rd1], %f10;
	st.global.f32 	[%rd1+4], %f9;
	mov.u32 	%r41, 0;
	st.global.u32 	[%rd1+12], %r41;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd1+8], %rs1;
	mov.u32 	%r47, 2;

BB6_10:
	st.global.f32 	[%rd1], %f10;
	st.global.f32 	[%rd1+4], %f9;
	mov.u32 	%r42, 0;
	st.global.u32 	[%rd1+12], %r42;
	mov.u16 	%rs2, 0;
	st.global.u8 	[%rd1+8], %rs2;
	mov.u32 	%r48, %r47;

BB6_11:
	st.global.f32 	[%rd1], %f10;
	st.global.f32 	[%rd1+4], %f9;
	st.global.u32 	[%rd1+12], %r50;
	mov.u16 	%rs3, 0;
	st.global.u8 	[%rd1+8], %rs3;
	add.s32 	%r50, %r48, 1;

BB6_12:
	setp.lt.u32	%p11, %r16, 4;
	@%p11 bra 	BB6_14;

BB6_13:
	st.global.f32 	[%rd1], %f10;
	st.global.f32 	[%rd1+4], %f9;
	mov.u32 	%r44, 0;
	st.global.u32 	[%rd1+12], %r44;
	mov.u16 	%rs4, 0;
	st.global.u8 	[%rd1+8], %rs4;
	add.s32 	%r50, %r50, 4;
	setp.lt.u32	%p12, %r50, %r16;
	@%p12 bra 	BB6_13;

BB6_14:
	ret;
}

	// .globl	debug
.visible .entry debug(

)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<4>;


	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mul.lo.s32 	%r3, %r2, %r1;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ntid.y;
	mul.lo.s32 	%r6, %r4, %r5;
	mov.u32 	%r7, %tid.x;
	neg.s32 	%r8, %r7;
	setp.eq.s32	%p1, %r3, %r8;
	mov.u32 	%r9, %tid.y;
	neg.s32 	%r10, %r9;
	setp.eq.s32	%p2, %r6, %r10;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB7_2;
	bra.uni 	BB7_1;

BB7_1:
	mov.u64 	%rd1, $str;
	cvta.global.u64 	%rd2, %rd1;
	mov.u64 	%rd3, 0;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 23

BB7_2:
	ret;
}


