//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24330188
// Cuda compilation tools, release 9.2, V9.2.148
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	init
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 1 .u8 VISUALIZE_SAMPLE_COUNT;
.global .align 4 .u32 seed;
.global .align 4 .u32 WARP_SIZE_X = 8;
.global .align 4 .u32 WARP_SIZE_Y = 4;
.global .align 4 .u32 USE_ADAPTIVE_SS_FLAG_MASK = 1;
.global .align 4 .u32 USE_FOVEATION_FLAG_MASK = 4;
.global .align 4 .u32 USE_SAMPLE_REUSE_FLAG_MASK = 8;
.global .align 4 .u32 IS_ZOOMING_FLAG_MASK = 16;
.global .align 4 .u32 ZOOMING_IN_FLAG_MASK = 32;
.global .align 4 .u32 visualityAmplifyCoeff = 10;
.global .align 4 .f32 screenDistance = 0f42700000;
.global .align 16 .b8 $str[23] = {104, 101, 108, 108, 111, 32, 102, 114, 111, 109, 32, 109, 97, 110, 100, 101, 108, 98, 114, 111, 116, 10, 0};
.global .align 16 .b8 $str1[34] = {98, 0, 108, 0, 111, 0, 99, 0, 107, 0, 68, 0, 105, 0, 109, 0, 46, 0, 120, 0, 32, 0, 61, 0, 61, 0, 32, 0, 51, 0, 50, 0, 0, 0};
.global .align 16 .b8 $str2[138] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 82, 0, 101, 0, 110, 0, 100, 0, 101, 0, 114, 0, 101, 0, 114, 0, 71, 0, 101, 0, 110, 0, 101, 0, 114, 0, 105, 0, 99, 0, 46, 0, 99, 0, 117, 0, 0, 0};
.global .align 16 .b8 $str3[40] = {112, 0, 79, 0, 117, 0, 116, 0, 112, 0, 117, 0, 116, 0, 45, 0, 62, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str6[34] = {118, 0, 105, 0, 115, 0, 117, 0, 97, 0, 108, 0, 65, 0, 110, 0, 103, 0, 108, 0, 101, 0, 32, 0, 62, 0, 61, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str7[68] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 60, 0, 61, 0, 32, 0, 77, 0, 65, 0, 88, 0, 95, 0, 83, 0, 85, 0, 80, 0, 69, 0, 82, 0, 95, 0, 83, 0, 65, 0, 77, 0, 80, 0, 76, 0, 73, 0, 78, 0, 71, 0, 0, 0};
.global .align 16 .b8 $str8[54] = {112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 73, 0, 100, 0, 120, 0, 32, 0, 60, 0, 32, 0, 112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 76, 0, 101, 0, 110, 0, 103, 0, 116, 0, 104, 0, 0, 0};
.global .align 16 .b8 $str9[132] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 115, 0, 47, 0, 109, 0, 97, 0, 110, 0, 100, 0, 101, 0, 108, 0, 98, 0, 114, 0, 111, 0, 116, 0, 46, 0, 99, 0, 117, 0, 0, 0};

.visible .entry init(

)
{



	ret;
}

	// .globl	fractalRenderMainFloat
.visible .entry fractalRenderMainFloat(
	.param .u64 fractalRenderMainFloat_param_0,
	.param .u32 fractalRenderMainFloat_param_1,
	.param .align 4 .b8 fractalRenderMainFloat_param_2[8],
	.param .align 4 .b8 fractalRenderMainFloat_param_3[16],
	.param .u32 fractalRenderMainFloat_param_4,
	.param .f32 fractalRenderMainFloat_param_5,
	.param .u32 fractalRenderMainFloat_param_6
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<38>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<97>;
	.reg .b32 	%r<106>;
	.reg .b64 	%rd<48>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [fractalRenderMainFloat_param_0];
	ld.param.u32 	%r29, [fractalRenderMainFloat_param_1];
	ld.param.u32 	%r31, [fractalRenderMainFloat_param_2+4];
	ld.param.u32 	%r30, [fractalRenderMainFloat_param_2];
	ld.param.f32 	%f39, [fractalRenderMainFloat_param_3+12];
	ld.param.f32 	%f38, [fractalRenderMainFloat_param_3+8];
	ld.param.f32 	%f37, [fractalRenderMainFloat_param_3+4];
	ld.param.f32 	%f36, [fractalRenderMainFloat_param_3];
	ld.param.u32 	%r32, [fractalRenderMainFloat_param_4];
	ld.param.f32 	%f40, [fractalRenderMainFloat_param_5];
	ld.param.u32 	%r33, [fractalRenderMainFloat_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str2;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r34, 59;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB1_2:
	mov.u32 	%r35, %tid.x;
	mov.u32 	%r36, %tid.y;
	mad.lo.s32 	%r37, %r1, %r36, %r35;
	shl.b32 	%r38, %r1, 2;
	and.b32  	%r39, %r37, 15;
	rem.u32 	%r40, %r37, %r38;
	sub.s32 	%r41, %r40, %r39;
	shr.u32 	%r42, %r41, 2;
	and.b32  	%r43, %r37, 3;
	add.s32 	%r44, %r42, %r43;
	div.u32 	%r45, %r37, %r38;
	shl.b32 	%r46, %r45, 2;
	bfe.u32 	%r47, %r37, 2, 2;
	add.s32 	%r48, %r46, %r47;
	mov.u32 	%r49, %ctaid.x;
	mad.lo.s32 	%r4, %r49, %r1, %r44;
	mov.u32 	%r50, %ctaid.y;
	mov.u32 	%r51, %ntid.y;
	mad.lo.s32 	%r5, %r50, %r51, %r48;
	setp.lt.u32	%p2, %r4, %r30;
	setp.lt.u32	%p3, %r5, %r31;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB1_34;
	bra.uni 	BB1_3;

BB1_3:
	setp.lt.f32	%p5, %f40, 0f3F800000;
	mov.f32 	%f94, 0f00000000;
	mov.f32 	%f96, %f94;
	@%p5 bra 	BB1_32;

	abs.f32 	%f43, %f40;
	mov.b32 	 %r52, %f40;
	and.b32  	%r53, %r52, -2147483648;
	or.b32  	%r54, %r53, 1056964608;
	mov.b32 	 %f44, %r54;
	add.f32 	%f45, %f44, %f40;
	cvt.rzi.f32.f32	%f46, %f45;
	setp.gt.f32	%p6, %f43, 0f4B000000;
	selp.f32	%f85, %f40, %f46, %p6;
	setp.geu.f32	%p7, %f43, 0f3F000000;
	@%p7 bra 	BB1_6;

	cvt.rzi.f32.f32	%f85, %f40;

BB1_6:
	cvt.rzi.u32.f32	%r103, %f85;
	setp.lt.u32	%p8, %r103, 65;
	@%p8 bra 	BB1_8;

	mov.u64 	%rd10, $str7;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str2;
	cvta.global.u64 	%rd13, %rd12;
	mov.u32 	%r55, 113;
	mov.u64 	%rd14, 0;
	mov.u64 	%rd15, 2;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r55;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd14;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd15;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_8:
	setp.eq.s32	%p9, %r103, 0;
	cvt.rn.f32.u32	%f94, %r103;
	mov.u32 	%r104, 0;
	@%p9 bra 	BB1_9;

	cvt.rn.f32.u32	%f7, %r4;
	cvt.rn.f32.u32	%f8, %r5;
	cvt.rn.f32.u32	%f47, %r30;
	sub.f32 	%f48, %f38, %f36;
	div.rn.f32 	%f9, %f48, %f47;
	cvt.rn.f32.u32	%f49, %r31;
	sub.f32 	%f50, %f39, %f37;
	div.rn.f32 	%f10, %f50, %f49;
	mov.u32 	%r59, 0;
	and.b32  	%r62, %r33, 1;
	mov.u32 	%r94, %r59;
	mov.u32 	%r104, %r59;

BB1_11:
	mov.u32 	%r9, %r103;
	mov.u32 	%r7, %r94;
	cvt.rn.f32.u32	%f53, %r7;
	div.rn.f32 	%f54, %f53, %f94;
	add.f32 	%f55, %f7, %f54;
	add.f32 	%f56, %f8, %f54;
	neg.f32 	%f57, %f56;
	fma.rn.f32 	%f12, %f9, %f55, %f36;
	fma.rn.f32 	%f13, %f10, %f57, %f39;
	setp.eq.s32	%p10, %r32, 0;
	mov.f32 	%f87, 0f00000000;
	mov.u32 	%r98, %r59;
	mov.f32 	%f88, %f87;
	@%p10 bra 	BB1_14;

BB1_12:
	mul.f32 	%f16, %f87, %f87;
	mul.f32 	%f17, %f88, %f88;
	add.f32 	%f58, %f17, %f16;
	setp.geu.f32	%p11, %f58, 0f40800000;
	@%p11 bra 	BB1_14;

	sub.f32 	%f59, %f17, %f16;
	add.f32 	%f18, %f12, %f59;
	add.f32 	%f60, %f88, %f88;
	fma.rn.f32 	%f87, %f60, %f87, %f13;
	add.s32 	%r98, %r98, 1;
	setp.lt.u32	%p12, %r98, %r32;
	mov.f32 	%f88, %f18;
	@%p12 bra 	BB1_12;

BB1_14:
	cvt.rn.f32.u32	%f61, %r98;
	cvt.rzi.u32.f32	%r13, %f61;
	add.s32 	%r104, %r13, %r104;
	setp.gt.u32	%p13, %r7, 9;
	@%p13 bra 	BB1_16;

	add.u64 	%rd16, %SP, 0;
	cvta.to.local.u64 	%rd17, %rd16;
	mul.wide.u32 	%rd18, %r7, 4;
	add.s64 	%rd19, %rd17, %rd18;
	st.local.u32 	[%rd19], %r13;

BB1_16:
	setp.lt.u32	%p14, %r7, 10;
	setp.eq.b32	%p15, %r62, 1;
	setp.ne.s32	%p16, %r7, 0;
	and.pred  	%p17, %p14, %p16;
	and.pred  	%p18, %p17, %p15;
	shr.u32 	%r15, %r9, 1;
	setp.eq.s32	%p19, %r7, %r15;
	or.pred  	%p20, %p18, %p19;
	add.s32 	%r94, %r7, 1;
	mov.u32 	%r103, %r9;
	@!%p20 bra 	BB1_30;
	bra.uni 	BB1_17;

BB1_17:
	div.u32 	%r63, %r104, %r94;
	cvt.rn.f32.u32	%f20, %r63;
	add.u64 	%rd20, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd20;
	setp.eq.s32	%p21, %r7, 0;
	mov.f32 	%f93, 0f00000000;
	@%p21 bra 	BB1_26;

	and.b32  	%r17, %r7, 3;
	setp.eq.s32	%p22, %r17, 0;
	mov.f32 	%f93, 0f00000000;
	mov.u32 	%r102, 0;
	@%p22 bra 	BB1_24;

	setp.eq.s32	%p23, %r17, 1;
	mov.f32 	%f90, 0f00000000;
	mov.u32 	%r100, 0;
	@%p23 bra 	BB1_23;

	setp.eq.s32	%p24, %r17, 2;
	mov.f32 	%f89, 0f00000000;
	mov.u32 	%r99, 0;
	@%p24 bra 	BB1_22;

	ld.local.u32 	%r68, [%rd1];
	cvt.rn.f32.u32	%f66, %r68;
	sub.f32 	%f67, %f66, %f20;
	fma.rn.f32 	%f89, %f67, %f67, 0f00000000;
	mov.u32 	%r99, 1;

BB1_22:
	mul.wide.u32 	%rd23, %r99, 4;
	add.s64 	%rd24, %rd1, %rd23;
	ld.local.u32 	%r69, [%rd24];
	cvt.rn.f32.u32	%f68, %r69;
	sub.f32 	%f69, %f68, %f20;
	fma.rn.f32 	%f90, %f69, %f69, %f89;
	add.s32 	%r100, %r99, 1;

BB1_23:
	mul.wide.u32 	%rd27, %r100, 4;
	add.s64 	%rd28, %rd1, %rd27;
	ld.local.u32 	%r70, [%rd28];
	cvt.rn.f32.u32	%f70, %r70;
	sub.f32 	%f71, %f70, %f20;
	fma.rn.f32 	%f93, %f71, %f71, %f90;
	add.s32 	%r102, %r100, 1;

BB1_24:
	setp.lt.u32	%p25, %r7, 4;
	@%p25 bra 	BB1_26;

BB1_25:
	mul.wide.u32 	%rd29, %r102, 4;
	add.s64 	%rd30, %rd1, %rd29;
	ld.local.u32 	%r71, [%rd30];
	cvt.rn.f32.u32	%f72, %r71;
	sub.f32 	%f73, %f72, %f20;
	fma.rn.f32 	%f74, %f73, %f73, %f93;
	add.s32 	%r72, %r102, 1;
	mul.wide.u32 	%rd31, %r72, 4;
	add.s64 	%rd32, %rd1, %rd31;
	ld.local.u32 	%r73, [%rd32];
	cvt.rn.f32.u32	%f75, %r73;
	sub.f32 	%f76, %f75, %f20;
	fma.rn.f32 	%f77, %f76, %f76, %f74;
	add.s32 	%r74, %r102, 2;
	mul.wide.u32 	%rd33, %r74, 4;
	add.s64 	%rd34, %rd1, %rd33;
	ld.local.u32 	%r75, [%rd34];
	cvt.rn.f32.u32	%f78, %r75;
	sub.f32 	%f79, %f78, %f20;
	fma.rn.f32 	%f80, %f79, %f79, %f77;
	add.s32 	%r76, %r102, 3;
	mul.wide.u32 	%rd35, %r76, 4;
	add.s64 	%rd36, %rd1, %rd35;
	ld.local.u32 	%r77, [%rd36];
	cvt.rn.f32.u32	%f81, %r77;
	sub.f32 	%f82, %f81, %f20;
	fma.rn.f32 	%f93, %f82, %f82, %f80;
	add.s32 	%r102, %r102, 4;
	setp.lt.u32	%p26, %r102, %r7;
	@%p26 bra 	BB1_25;

BB1_26:
	add.s32 	%r78, %r7, -1;
	cvt.rn.f32.u32	%f83, %r78;
	div.rn.f32 	%f84, %f93, %f83;
	div.rn.f32 	%f30, %f84, %f20;
	setp.ne.s32	%p27, %r7, 1;
	@%p27 bra 	BB1_28;

	// inline asm
	activemask.b32 %r79;
	// inline asm
	ld.local.v2.u32 	{%r81, %r82}, [%rd1];
	setp.eq.s32	%p28, %r81, %r82;
	vote.sync.all.pred 	%p29, %p28, %r79;
	mov.u32 	%r103, 2;
	@%p29 bra 	BB1_30;

BB1_28:
	// inline asm
	activemask.b32 %r86;
	// inline asm
	setp.lt.f32	%p30, %f30, 0f3C23D70A;
	vote.sync.all.pred 	%p31, %p30, %r86;
	mov.u32 	%r103, %r94;
	@%p31 bra 	BB1_30;

	// inline asm
	activemask.b32 %r88;
	// inline asm
	setp.le.f32	%p32, %f30, 0f3F800000;
	vote.sync.all.pred 	%p33, %p32, %r88;
	setp.ge.u32	%p34, %r7, %r15;
	and.pred  	%p35, %p33, %p34;
	selp.b32	%r103, %r94, %r9, %p35;

BB1_30:
	cvt.rn.f32.u32	%f94, %r103;
	setp.lt.u32	%p36, %r94, %r103;
	@%p36 bra 	BB1_11;
	bra.uni 	BB1_31;

BB1_9:
	mov.u32 	%r103, %r104;

BB1_31:
	div.u32 	%r90, %r104, %r103;
	cvt.rn.f32.u32	%f96, %r90;

BB1_32:
	mul.lo.s32 	%r91, %r5, %r29;
	cvt.u64.u32	%rd37, %r91;
	cvta.to.global.u64 	%rd38, %rd3;
	add.s64 	%rd39, %rd38, %rd37;
	mul.wide.u32 	%rd40, %r4, 16;
	add.s64 	%rd41, %rd39, %rd40;
	st.global.f32 	[%rd41], %f96;
	st.global.f32 	[%rd41+4], %f94;
	mov.u32 	%r92, 0;
	st.global.u32 	[%rd41+12], %r92;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd41+8], %rs1;
	setp.gt.f32	%p37, %f94, 0f00000000;
	@%p37 bra 	BB1_34;

	mov.u64 	%rd42, $str3;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, $str2;
	cvta.global.u64 	%rd45, %rd44;
	mov.u32 	%r93, 202;
	mov.u64 	%rd46, 0;
	mov.u64 	%rd47, 2;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd45;
	.param .b32 param2;
	st.param.b32	[param2+0], %r93;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd46;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd47;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB1_34:
	ret;
}

	// .globl	fractalRenderMainDouble
.visible .entry fractalRenderMainDouble(
	.param .u64 fractalRenderMainDouble_param_0,
	.param .u32 fractalRenderMainDouble_param_1,
	.param .align 4 .b8 fractalRenderMainDouble_param_2[8],
	.param .align 8 .b8 fractalRenderMainDouble_param_3[32],
	.param .u32 fractalRenderMainDouble_param_4,
	.param .f32 fractalRenderMainDouble_param_5,
	.param .u32 fractalRenderMainDouble_param_6
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<38>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<19>;
	.reg .b32 	%r<106>;
	.reg .f64 	%fd<75>;
	.reg .b64 	%rd<48>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [fractalRenderMainDouble_param_0];
	ld.param.u32 	%r29, [fractalRenderMainDouble_param_1];
	ld.param.u32 	%r31, [fractalRenderMainDouble_param_2+4];
	ld.param.u32 	%r30, [fractalRenderMainDouble_param_2];
	ld.param.f64 	%fd29, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd28, [fractalRenderMainDouble_param_3+16];
	ld.param.f64 	%fd27, [fractalRenderMainDouble_param_3+8];
	ld.param.f64 	%fd26, [fractalRenderMainDouble_param_3];
	ld.param.u32 	%r32, [fractalRenderMainDouble_param_4];
	ld.param.f32 	%f8, [fractalRenderMainDouble_param_5];
	ld.param.u32 	%r33, [fractalRenderMainDouble_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str2;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r34, 59;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB2_2:
	mov.u32 	%r35, %tid.x;
	mov.u32 	%r36, %tid.y;
	mad.lo.s32 	%r37, %r1, %r36, %r35;
	shl.b32 	%r38, %r1, 2;
	and.b32  	%r39, %r37, 15;
	rem.u32 	%r40, %r37, %r38;
	sub.s32 	%r41, %r40, %r39;
	shr.u32 	%r42, %r41, 2;
	and.b32  	%r43, %r37, 3;
	add.s32 	%r44, %r42, %r43;
	div.u32 	%r45, %r37, %r38;
	shl.b32 	%r46, %r45, 2;
	bfe.u32 	%r47, %r37, 2, 2;
	add.s32 	%r48, %r46, %r47;
	mov.u32 	%r49, %ctaid.x;
	mad.lo.s32 	%r4, %r49, %r1, %r44;
	mov.u32 	%r50, %ctaid.y;
	mov.u32 	%r51, %ntid.y;
	mad.lo.s32 	%r5, %r50, %r51, %r48;
	setp.lt.u32	%p2, %r4, %r30;
	setp.lt.u32	%p3, %r5, %r31;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB2_33;
	bra.uni 	BB2_3;

BB2_3:
	setp.lt.f32	%p5, %f8, 0f3F800000;
	mov.f32 	%f17, 0f00000000;
	mov.f32 	%f18, %f17;
	@%p5 bra 	BB2_31;

	abs.f32 	%f11, %f8;
	mov.b32 	 %r52, %f8;
	and.b32  	%r53, %r52, -2147483648;
	or.b32  	%r54, %r53, 1056964608;
	mov.b32 	 %f12, %r54;
	add.f32 	%f13, %f12, %f8;
	cvt.rzi.f32.f32	%f14, %f13;
	setp.gt.f32	%p6, %f11, 0f4B000000;
	selp.f32	%f16, %f8, %f14, %p6;
	setp.geu.f32	%p7, %f11, 0f3F000000;
	@%p7 bra 	BB2_6;

	cvt.rzi.f32.f32	%f16, %f8;

BB2_6:
	cvt.rzi.u32.f32	%r6, %f16;
	setp.lt.u32	%p8, %r6, 65;
	@%p8 bra 	BB2_8;

	mov.u64 	%rd10, $str7;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str2;
	cvta.global.u64 	%rd13, %rd12;
	mov.u32 	%r55, 113;
	mov.u64 	%rd14, 0;
	mov.u64 	%rd15, 2;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r55;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd14;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd15;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB2_8:
	setp.eq.s32	%p9, %r6, 0;
	mov.u32 	%r104, 0;
	mov.u32 	%r103, %r104;
	@%p9 bra 	BB2_30;

	cvt.rn.f64.u32	%fd3, %r4;
	cvt.rn.f64.u32	%fd4, %r5;
	cvt.rn.f64.u32	%fd30, %r30;
	sub.f64 	%fd31, %fd28, %fd26;
	div.rn.f64 	%fd5, %fd31, %fd30;
	cvt.rn.f64.u32	%fd32, %r31;
	sub.f64 	%fd33, %fd29, %fd27;
	div.rn.f64 	%fd6, %fd33, %fd32;
	mov.u32 	%r59, 0;
	and.b32  	%r62, %r33, 1;
	mov.u32 	%r94, %r59;
	mov.u32 	%r104, %r59;
	mov.u32 	%r103, %r6;

BB2_10:
	mov.u32 	%r9, %r103;
	mov.u32 	%r7, %r94;
	cvt.rn.f64.u32	%fd36, %r9;
	cvt.rn.f64.u32	%fd37, %r7;
	div.rn.f64 	%fd38, %fd37, %fd36;
	add.f64 	%fd39, %fd3, %fd38;
	add.f64 	%fd40, %fd4, %fd38;
	neg.f64 	%fd41, %fd40;
	fma.rn.f64 	%fd7, %fd5, %fd39, %fd26;
	fma.rn.f64 	%fd8, %fd6, %fd41, %fd29;
	setp.eq.s32	%p10, %r32, 0;
	mov.f64 	%fd68, 0d0000000000000000;
	mov.u32 	%r98, %r59;
	mov.f64 	%fd69, %fd68;
	@%p10 bra 	BB2_13;

BB2_11:
	mul.f64 	%fd11, %fd68, %fd68;
	mul.f64 	%fd12, %fd69, %fd69;
	add.f64 	%fd42, %fd12, %fd11;
	setp.geu.f64	%p11, %fd42, 0d4010000000000000;
	@%p11 bra 	BB2_13;

	sub.f64 	%fd43, %fd12, %fd11;
	add.f64 	%fd13, %fd7, %fd43;
	add.f64 	%fd44, %fd69, %fd69;
	fma.rn.f64 	%fd68, %fd44, %fd68, %fd8;
	add.s32 	%r98, %r98, 1;
	setp.lt.u32	%p12, %r98, %r32;
	mov.f64 	%fd69, %fd13;
	@%p12 bra 	BB2_11;

BB2_13:
	cvt.rn.f32.u32	%f15, %r98;
	cvt.rzi.u32.f32	%r13, %f15;
	add.s32 	%r104, %r13, %r104;
	setp.gt.u32	%p13, %r7, 9;
	@%p13 bra 	BB2_15;

	add.u64 	%rd16, %SP, 0;
	cvta.to.local.u64 	%rd17, %rd16;
	mul.wide.u32 	%rd18, %r7, 4;
	add.s64 	%rd19, %rd17, %rd18;
	st.local.u32 	[%rd19], %r13;

BB2_15:
	setp.lt.u32	%p14, %r7, 10;
	setp.eq.b32	%p15, %r62, 1;
	setp.ne.s32	%p16, %r7, 0;
	and.pred  	%p17, %p14, %p16;
	and.pred  	%p18, %p17, %p15;
	shr.u32 	%r15, %r9, 1;
	setp.eq.s32	%p19, %r7, %r15;
	or.pred  	%p20, %p18, %p19;
	add.s32 	%r94, %r7, 1;
	mov.u32 	%r103, %r9;
	@!%p20 bra 	BB2_29;
	bra.uni 	BB2_16;

BB2_16:
	div.u32 	%r63, %r104, %r94;
	cvt.rn.f64.u32	%fd15, %r63;
	add.u64 	%rd20, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd20;
	setp.eq.s32	%p21, %r7, 0;
	mov.f64 	%fd74, 0d0000000000000000;
	@%p21 bra 	BB2_25;

	and.b32  	%r17, %r7, 3;
	setp.eq.s32	%p22, %r17, 0;
	mov.f64 	%fd74, 0d0000000000000000;
	mov.u32 	%r102, 0;
	@%p22 bra 	BB2_23;

	setp.eq.s32	%p23, %r17, 1;
	mov.f64 	%fd71, 0d0000000000000000;
	mov.u32 	%r100, 0;
	@%p23 bra 	BB2_22;

	setp.eq.s32	%p24, %r17, 2;
	mov.f64 	%fd70, 0d0000000000000000;
	mov.u32 	%r99, 0;
	@%p24 bra 	BB2_21;

	ld.local.u32 	%r68, [%rd1];
	cvt.rn.f64.u32	%fd49, %r68;
	sub.f64 	%fd50, %fd49, %fd15;
	fma.rn.f64 	%fd70, %fd50, %fd50, 0d0000000000000000;
	mov.u32 	%r99, 1;

BB2_21:
	mul.wide.u32 	%rd23, %r99, 4;
	add.s64 	%rd24, %rd1, %rd23;
	ld.local.u32 	%r69, [%rd24];
	cvt.rn.f64.u32	%fd51, %r69;
	sub.f64 	%fd52, %fd51, %fd15;
	fma.rn.f64 	%fd71, %fd52, %fd52, %fd70;
	add.s32 	%r100, %r99, 1;

BB2_22:
	mul.wide.u32 	%rd27, %r100, 4;
	add.s64 	%rd28, %rd1, %rd27;
	ld.local.u32 	%r70, [%rd28];
	cvt.rn.f64.u32	%fd53, %r70;
	sub.f64 	%fd54, %fd53, %fd15;
	fma.rn.f64 	%fd74, %fd54, %fd54, %fd71;
	add.s32 	%r102, %r100, 1;

BB2_23:
	setp.lt.u32	%p25, %r7, 4;
	@%p25 bra 	BB2_25;

BB2_24:
	mul.wide.u32 	%rd29, %r102, 4;
	add.s64 	%rd30, %rd1, %rd29;
	ld.local.u32 	%r71, [%rd30];
	cvt.rn.f64.u32	%fd55, %r71;
	sub.f64 	%fd56, %fd55, %fd15;
	fma.rn.f64 	%fd57, %fd56, %fd56, %fd74;
	add.s32 	%r72, %r102, 1;
	mul.wide.u32 	%rd31, %r72, 4;
	add.s64 	%rd32, %rd1, %rd31;
	ld.local.u32 	%r73, [%rd32];
	cvt.rn.f64.u32	%fd58, %r73;
	sub.f64 	%fd59, %fd58, %fd15;
	fma.rn.f64 	%fd60, %fd59, %fd59, %fd57;
	add.s32 	%r74, %r102, 2;
	mul.wide.u32 	%rd33, %r74, 4;
	add.s64 	%rd34, %rd1, %rd33;
	ld.local.u32 	%r75, [%rd34];
	cvt.rn.f64.u32	%fd61, %r75;
	sub.f64 	%fd62, %fd61, %fd15;
	fma.rn.f64 	%fd63, %fd62, %fd62, %fd60;
	add.s32 	%r76, %r102, 3;
	mul.wide.u32 	%rd35, %r76, 4;
	add.s64 	%rd36, %rd1, %rd35;
	ld.local.u32 	%r77, [%rd36];
	cvt.rn.f64.u32	%fd64, %r77;
	sub.f64 	%fd65, %fd64, %fd15;
	fma.rn.f64 	%fd74, %fd65, %fd65, %fd63;
	add.s32 	%r102, %r102, 4;
	setp.lt.u32	%p26, %r102, %r7;
	@%p26 bra 	BB2_24;

BB2_25:
	add.s32 	%r78, %r7, -1;
	cvt.rn.f64.u32	%fd66, %r78;
	div.rn.f64 	%fd67, %fd74, %fd66;
	div.rn.f64 	%fd25, %fd67, %fd15;
	setp.ne.s32	%p27, %r7, 1;
	@%p27 bra 	BB2_27;

	// inline asm
	activemask.b32 %r79;
	// inline asm
	ld.local.v2.u32 	{%r81, %r82}, [%rd1];
	setp.eq.s32	%p28, %r81, %r82;
	vote.sync.all.pred 	%p29, %p28, %r79;
	mov.u32 	%r103, 2;
	@%p29 bra 	BB2_29;

BB2_27:
	// inline asm
	activemask.b32 %r86;
	// inline asm
	setp.lt.f64	%p30, %fd25, 0d3F847AE140000000;
	vote.sync.all.pred 	%p31, %p30, %r86;
	mov.u32 	%r103, %r94;
	@%p31 bra 	BB2_29;

	// inline asm
	activemask.b32 %r88;
	// inline asm
	setp.le.f64	%p32, %fd25, 0d3FF0000000000000;
	vote.sync.all.pred 	%p33, %p32, %r88;
	setp.ge.u32	%p34, %r7, %r15;
	and.pred  	%p35, %p33, %p34;
	selp.b32	%r103, %r94, %r9, %p35;

BB2_29:
	setp.lt.u32	%p36, %r94, %r103;
	@%p36 bra 	BB2_10;

BB2_30:
	cvt.rn.f32.u32	%f17, %r103;
	div.u32 	%r90, %r104, %r103;
	cvt.rn.f32.u32	%f18, %r90;

BB2_31:
	mul.lo.s32 	%r91, %r5, %r29;
	cvt.u64.u32	%rd37, %r91;
	cvta.to.global.u64 	%rd38, %rd3;
	add.s64 	%rd39, %rd38, %rd37;
	mul.wide.u32 	%rd40, %r4, 16;
	add.s64 	%rd41, %rd39, %rd40;
	st.global.f32 	[%rd41], %f18;
	st.global.f32 	[%rd41+4], %f17;
	mov.u32 	%r92, 0;
	st.global.u32 	[%rd41+12], %r92;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd41+8], %rs1;
	setp.gt.f32	%p37, %f17, 0f00000000;
	@%p37 bra 	BB2_33;

	mov.u64 	%rd42, $str3;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, $str2;
	cvta.global.u64 	%rd45, %rd44;
	mov.u32 	%r93, 202;
	mov.u64 	%rd46, 0;
	mov.u64 	%rd47, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd45;
	.param .b32 param2;
	st.param.b32	[param2+0], %r93;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd46;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd47;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB2_33:
	ret;
}

	// .globl	fractalRenderAdvancedFloat
.visible .entry fractalRenderAdvancedFloat(
	.param .u64 fractalRenderAdvancedFloat_param_0,
	.param .u32 fractalRenderAdvancedFloat_param_1,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_2[8],
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_3[16],
	.param .u32 fractalRenderAdvancedFloat_param_4,
	.param .f32 fractalRenderAdvancedFloat_param_5,
	.param .u32 fractalRenderAdvancedFloat_param_6,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_7[16],
	.param .u64 fractalRenderAdvancedFloat_param_8,
	.param .u32 fractalRenderAdvancedFloat_param_9,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<67>;
	.reg .b16 	%rs<9>;
	.reg .f32 	%f<219>;
	.reg .b32 	%r<137>;
	.reg .b64 	%rd<60>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [fractalRenderAdvancedFloat_param_0];
	ld.param.u32 	%r29, [fractalRenderAdvancedFloat_param_1];
	ld.param.u32 	%r31, [fractalRenderAdvancedFloat_param_2+4];
	ld.param.u32 	%r30, [fractalRenderAdvancedFloat_param_2];
	ld.param.f32 	%f61, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f60, [fractalRenderAdvancedFloat_param_3+8];
	ld.param.f32 	%f59, [fractalRenderAdvancedFloat_param_3+4];
	ld.param.f32 	%f58, [fractalRenderAdvancedFloat_param_3];
	ld.param.u32 	%r32, [fractalRenderAdvancedFloat_param_4];
	ld.param.f32 	%f202, [fractalRenderAdvancedFloat_param_5];
	ld.param.u32 	%r33, [fractalRenderAdvancedFloat_param_6];
	ld.param.f32 	%f66, [fractalRenderAdvancedFloat_param_7+12];
	ld.param.f32 	%f65, [fractalRenderAdvancedFloat_param_7+8];
	ld.param.f32 	%f64, [fractalRenderAdvancedFloat_param_7+4];
	ld.param.f32 	%f63, [fractalRenderAdvancedFloat_param_7];
	ld.param.u64 	%rd4, [fractalRenderAdvancedFloat_param_8];
	ld.param.u32 	%r34, [fractalRenderAdvancedFloat_param_9];
	ld.param.u32 	%r36, [fractalRenderAdvancedFloat_param_10+4];
	ld.param.u32 	%r35, [fractalRenderAdvancedFloat_param_10];
	mov.u32 	%r37, %ntid.x;
	setp.eq.s32	%p2, %r37, 32;
	@%p2 bra 	BB3_2;

	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, $str2;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r38, 59;
	mov.u64 	%rd9, 0;
	mov.u64 	%rd10, 2;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 param2;
	st.param.b32	[param2+0], %r38;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB3_2:
	mov.u32 	%r39, %tid.y;
	mov.u32 	%r41, %tid.x;
	mad.lo.s32 	%r42, %r37, %r39, %r41;
	and.b32  	%r43, %r42, 15;
	shl.b32 	%r44, %r37, 2;
	rem.u32 	%r45, %r42, %r44;
	sub.s32 	%r46, %r45, %r43;
	shr.u32 	%r47, %r46, 2;
	and.b32  	%r48, %r42, 3;
	add.s32 	%r49, %r47, %r48;
	div.u32 	%r50, %r42, %r44;
	shl.b32 	%r51, %r50, 2;
	bfe.u32 	%r52, %r42, 2, 2;
	add.s32 	%r53, %r51, %r52;
	mov.u32 	%r54, %ctaid.x;
	mad.lo.s32 	%r3, %r54, %r37, %r49;
	mov.u32 	%r55, %ctaid.y;
	mov.u32 	%r56, %ntid.y;
	mad.lo.s32 	%r4, %r55, %r56, %r53;
	setp.lt.u32	%p3, %r3, %r30;
	setp.gt.u32	%p4, %r31, %r4;
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB3_48;
	bra.uni 	BB3_3;

BB3_3:
	and.b32  	%r57, %r33, 20;
	setp.eq.s32	%p6, %r57, 20;
	setp.ge.f32	%p7, %f202, 0f3F800000;
	and.pred  	%p8, %p6, %p7;
	mov.u16 	%rs7, 0;
	@!%p8 bra 	BB3_9;
	bra.uni 	BB3_4;

BB3_4:
	and.b32  	%r58, %r3, -8;
	cvt.rn.f32.u32	%f67, %r58;
	and.b32  	%r59, %r4, -4;
	cvt.rn.f32.u32	%f68, %r59;
	cvt.rn.f32.u32	%f69, %r35;
	sub.f32 	%f70, %f69, %f67;
	cvt.rn.f32.u32	%f71, %r36;
	sub.f32 	%f72, %f71, %f68;
	mul.f32 	%f73, %f72, %f72;
	fma.rn.f32 	%f74, %f70, %f70, %f73;
	sqrt.rn.f32 	%f75, %f74;
	mul.f32 	%f76, %f75, 0f3CD94079;
	ld.global.f32 	%f77, [screenDistance];
	div.rn.f32 	%f1, %f76, %f77;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p9, %f2, 0f3F800000;
	mov.f32 	%f201, %f2;
	@%p9 bra 	BB3_6;

	rcp.rn.f32 	%f201, %f2;

BB3_6:
	mul.rn.f32 	%f78, %f201, %f201;
	mov.f32 	%f79, 0fC0B59883;
	mov.f32 	%f80, 0fBF52C7EA;
	fma.rn.f32 	%f81, %f78, %f80, %f79;
	mov.f32 	%f82, 0fC0D21907;
	fma.rn.f32 	%f83, %f81, %f78, %f82;
	mul.f32 	%f84, %f78, %f83;
	mul.f32 	%f85, %f201, %f84;
	add.f32 	%f86, %f78, 0f41355DC0;
	mov.f32 	%f87, 0f41E6BD60;
	fma.rn.f32 	%f88, %f86, %f78, %f87;
	mov.f32 	%f89, 0f419D92C8;
	fma.rn.f32 	%f90, %f88, %f78, %f89;
	rcp.rn.f32 	%f91, %f90;
	fma.rn.f32 	%f92, %f85, %f91, %f201;
	mov.f32 	%f93, 0f3FC90FDB;
	sub.f32 	%f94, %f93, %f92;
	setp.gt.f32	%p10, %f2, 0f3F800000;
	selp.f32	%f95, %f94, %f92, %p10;
	mov.b32 	 %r60, %f95;
	mov.b32 	 %r61, %f1;
	and.b32  	%r62, %r61, -2147483648;
	or.b32  	%r63, %r60, %r62;
	mov.b32 	 %f96, %r63;
	setp.gtu.f32	%p11, %f2, 0f7F800000;
	selp.f32	%f97, %f95, %f96, %p11;
	mul.f32 	%f98, %f97, 0f43340000;
	div.rn.f32 	%f5, %f98, 0f40490FDB;
	setp.ge.f32	%p12, %f5, 0f00000000;
	@%p12 bra 	BB3_8;

	mov.u64 	%rd11, $str6;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str2;
	cvta.global.u64 	%rd14, %rd13;
	mov.u32 	%r64, 245;
	mov.u64 	%rd15, 0;
	mov.u64 	%rd16, 2;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r64;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB3_8:
	fma.rn.f32 	%f99, %f5, 0fBC964FDA, 0f3F8CEADD;
	setp.gtu.f32	%p13, %f5, 0f40B00000;
	setp.le.f32	%p14, %f5, 0f40B00000;
	selp.u16	%rs7, 1, 0, %p14;
	selp.f32	%f100, %f99, 0f3F800000, %p13;
	mul.f32 	%f202, %f100, %f202;

BB3_9:
	and.b32  	%r65, %r33, 8;
	setp.eq.s32	%p16, %r65, 0;
	mov.pred 	%p66, -1;
	mov.f32 	%f205, 0f00000000;
	@%p16 bra 	BB3_10;

	sub.s32 	%r66, %r31, %r4;
	cvt.rn.f32.u32	%f103, %r66;
	cvt.rn.f32.u32	%f104, %r30;
	cvt.rn.f32.u32	%f105, %r3;
	div.rn.f32 	%f106, %f105, %f104;
	cvt.rn.f32.u32	%f107, %r31;
	div.rn.f32 	%f108, %f103, %f107;
	sub.f32 	%f109, %f60, %f58;
	sub.f32 	%f110, %f61, %f59;
	fma.rn.f32 	%f111, %f109, %f106, %f58;
	fma.rn.f32 	%f112, %f110, %f108, %f59;
	sub.f32 	%f113, %f111, %f63;
	sub.f32 	%f114, %f112, %f64;
	sub.f32 	%f115, %f65, %f63;
	div.rn.f32 	%f116, %f113, %f115;
	sub.f32 	%f117, %f66, %f64;
	div.rn.f32 	%f118, %f114, %f117;
	mul.f32 	%f12, %f104, %f116;
	mul.f32 	%f119, %f107, %f118;
	sub.f32 	%f13, %f107, %f119;
	abs.f32 	%f120, %f12;
	mov.b32 	 %r67, %f12;
	and.b32  	%r68, %r67, -2147483648;
	or.b32  	%r69, %r68, 1056964608;
	mov.b32 	 %f121, %r69;
	add.f32 	%f122, %f12, %f121;
	cvt.rzi.f32.f32	%f123, %f122;
	setp.gt.f32	%p17, %f120, 0f4B000000;
	selp.f32	%f203, %f12, %f123, %p17;
	setp.geu.f32	%p18, %f120, 0f3F000000;
	@%p18 bra 	BB3_13;

	cvt.rzi.f32.f32	%f203, %f12;

BB3_13:
	cvt.rzi.s32.f32	%r5, %f203;
	mov.b32 	 %r70, %f13;
	and.b32  	%r71, %r70, -2147483648;
	or.b32  	%r72, %r71, 1056964608;
	mov.b32 	 %f124, %r72;
	add.f32 	%f125, %f13, %f124;
	cvt.rzi.f32.f32	%f126, %f125;
	abs.f32 	%f127, %f13;
	setp.gt.f32	%p19, %f127, 0f4B000000;
	selp.f32	%f204, %f13, %f126, %p19;
	setp.geu.f32	%p20, %f127, 0f3F000000;
	@%p20 bra 	BB3_15;

	cvt.rzi.f32.f32	%f204, %f13;

BB3_15:
	add.s32 	%r73, %r30, -2;
	setp.lt.u32	%p22, %r5, %r73;
	setp.gt.s32	%p23, %r5, 1;
	and.pred  	%p24, %p23, %p22;
	cvt.rzi.s32.f32	%r74, %f204;
	setp.gt.s32	%p25, %r74, 1;
	and.pred  	%p26, %p24, %p25;
	add.s32 	%r75, %r31, -2;
	setp.lt.u32	%p27, %r74, %r75;
	and.pred  	%p28, %p27, %p26;
	mov.f32 	%f206, %f205;
	@!%p28 bra 	BB3_18;
	bra.uni 	BB3_16;

BB3_16:
	shr.u32 	%r76, %r33, 5;
	and.b32  	%r77, %r76, 1;
	setp.eq.b32	%p30, %r77, 1;
	setp.ne.s16	%p31, %rs7, 0;
	and.pred  	%p32, %p31, %p30;
	mov.f32 	%f206, %f205;
	@%p32 bra 	BB3_18;

	cvt.rmi.f32.f32	%f132, %f12;
	cvt.rzi.u32.f32	%r78, %f132;
	cvt.rmi.f32.f32	%f133, %f13;
	cvt.rzi.u32.f32	%r79, %f133;
	cvt.rn.f32.u32	%f134, %r78;
	sub.f32 	%f135, %f12, %f134;
	cvt.rn.f32.u32	%f136, %r79;
	sub.f32 	%f137, %f13, %f136;
	mul.lo.s32 	%r80, %r79, %r34;
	cvt.u64.u32	%rd17, %r80;
	cvta.to.global.u64 	%rd18, %rd4;
	add.s64 	%rd19, %rd18, %rd17;
	mul.wide.u32 	%rd20, %r78, 16;
	add.s64 	%rd21, %rd19, %rd20;
	add.s32 	%r81, %r78, 1;
	mul.wide.u32 	%rd22, %r81, 16;
	add.s64 	%rd23, %rd19, %rd22;
	add.s32 	%r82, %r79, 1;
	mul.lo.s32 	%r83, %r82, %r34;
	cvt.u64.u32	%rd24, %r83;
	add.s64 	%rd25, %rd18, %rd24;
	add.s64 	%rd26, %rd25, %rd20;
	add.s64 	%rd27, %rd25, %rd22;
	mov.f32 	%f138, 0f3F800000;
	sub.f32 	%f139, %f138, %f135;
	ld.global.f32 	%f140, [%rd21];
	ld.global.f32 	%f141, [%rd23];
	mul.f32 	%f142, %f135, %f141;
	fma.rn.f32 	%f143, %f140, %f139, %f142;
	sub.f32 	%f144, %f138, %f137;
	ld.global.f32 	%f145, [%rd26];
	ld.global.f32 	%f146, [%rd27];
	mul.f32 	%f147, %f135, %f146;
	fma.rn.f32 	%f148, %f139, %f145, %f147;
	mul.f32 	%f149, %f137, %f148;
	fma.rn.f32 	%f205, %f144, %f143, %f149;
	ld.global.f32 	%f150, [%rd21+4];
	ld.global.f32 	%f151, [%rd23+4];
	mul.f32 	%f152, %f135, %f151;
	fma.rn.f32 	%f153, %f139, %f150, %f152;
	ld.global.f32 	%f154, [%rd26+4];
	ld.global.f32 	%f155, [%rd27+4];
	mul.f32 	%f156, %f135, %f155;
	fma.rn.f32 	%f157, %f139, %f154, %f156;
	mul.f32 	%f158, %f137, %f157;
	fma.rn.f32 	%f206, %f144, %f153, %f158;
	mov.pred 	%p66, 0;
	bra.uni 	BB3_18;

BB3_10:
	mov.f32 	%f206, %f205;

BB3_18:
	mov.u16 	%rs8, 1;
	@!%p66 bra 	BB3_47;
	bra.uni 	BB3_19;

BB3_19:
	setp.lt.f32	%p34, %f202, 0f3F800000;
	selp.f32	%f24, 0f3F800000, %f202, %p34;
	abs.f32 	%f159, %f24;
	mov.b32 	 %r84, %f24;
	and.b32  	%r85, %r84, -2147483648;
	or.b32  	%r86, %r85, 1056964608;
	mov.b32 	 %f160, %r86;
	add.f32 	%f161, %f24, %f160;
	cvt.rzi.f32.f32	%f162, %f161;
	setp.gt.f32	%p35, %f159, 0f4B000000;
	selp.f32	%f207, %f24, %f162, %p35;
	setp.geu.f32	%p36, %f159, 0f3F000000;
	@%p36 bra 	BB3_21;

	cvt.rzi.f32.f32	%f207, %f24;

BB3_21:
	cvt.rn.f32.u32	%f163, %r30;
	sub.f32 	%f164, %f60, %f58;
	div.rn.f32 	%f28, %f164, %f163;
	cvt.rn.f32.u32	%f165, %r31;
	sub.f32 	%f166, %f61, %f59;
	div.rn.f32 	%f29, %f166, %f165;
	cvt.rzi.u32.f32	%r134, %f207;
	setp.lt.u32	%p37, %r134, 65;
	@%p37 bra 	BB3_23;

	mov.u64 	%rd28, $str7;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, $str2;
	cvta.global.u64 	%rd31, %rd30;
	mov.u32 	%r87, 113;
	mov.u64 	%rd32, 0;
	mov.u64 	%rd33, 2;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd31;
	.param .b32 param2;
	st.param.b32	[param2+0], %r87;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd32;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd33;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB3_23:
	setp.eq.s32	%p38, %r134, 0;
	cvt.rn.f32.u32	%f206, %r134;
	mov.u32 	%r135, 0;
	@%p38 bra 	BB3_24;

	cvt.rn.f32.u32	%f31, %r3;
	cvt.rn.f32.u32	%f32, %r4;
	mov.u32 	%r91, 0;
	mov.u32 	%r125, %r91;
	mov.u32 	%r135, %r91;

BB3_26:
	mov.u32 	%r9, %r134;
	mov.u32 	%r7, %r125;
	cvt.rn.f32.u32	%f169, %r7;
	div.rn.f32 	%f170, %f169, %f206;
	add.f32 	%f171, %f31, %f170;
	add.f32 	%f172, %f32, %f170;
	neg.f32 	%f173, %f172;
	fma.rn.f32 	%f34, %f28, %f171, %f58;
	fma.rn.f32 	%f35, %f29, %f173, %f61;
	setp.eq.s32	%p39, %r32, 0;
	mov.f32 	%f209, 0f00000000;
	mov.u32 	%r129, %r91;
	mov.f32 	%f210, %f209;
	@%p39 bra 	BB3_29;

BB3_27:
	mul.f32 	%f38, %f209, %f209;
	mul.f32 	%f39, %f210, %f210;
	add.f32 	%f174, %f39, %f38;
	setp.geu.f32	%p40, %f174, 0f40800000;
	@%p40 bra 	BB3_29;

	sub.f32 	%f175, %f39, %f38;
	add.f32 	%f40, %f34, %f175;
	add.f32 	%f176, %f210, %f210;
	fma.rn.f32 	%f209, %f176, %f209, %f35;
	add.s32 	%r129, %r129, 1;
	setp.lt.u32	%p41, %r129, %r32;
	mov.f32 	%f210, %f40;
	@%p41 bra 	BB3_27;

BB3_29:
	cvt.rn.f32.u32	%f177, %r129;
	cvt.rzi.u32.f32	%r13, %f177;
	add.s32 	%r135, %r13, %r135;
	setp.gt.u32	%p42, %r7, 9;
	@%p42 bra 	BB3_31;

	add.u64 	%rd34, %SP, 0;
	cvta.to.local.u64 	%rd35, %rd34;
	mul.wide.u32 	%rd36, %r7, 4;
	add.s64 	%rd37, %rd35, %rd36;
	st.local.u32 	[%rd37], %r13;

BB3_31:
	setp.lt.u32	%p43, %r7, 10;
	and.b32  	%r94, %r33, 1;
	setp.eq.b32	%p44, %r94, 1;
	setp.ne.s32	%p45, %r7, 0;
	and.pred  	%p46, %p43, %p45;
	and.pred  	%p47, %p46, %p44;
	shr.u32 	%r15, %r9, 1;
	setp.eq.s32	%p48, %r7, %r15;
	or.pred  	%p49, %p47, %p48;
	add.s32 	%r125, %r7, 1;
	mov.u32 	%r134, %r9;
	@!%p49 bra 	BB3_45;
	bra.uni 	BB3_32;

BB3_32:
	div.u32 	%r95, %r135, %r125;
	cvt.rn.f32.u32	%f42, %r95;
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd38;
	setp.eq.s32	%p50, %r7, 0;
	mov.f32 	%f215, 0f00000000;
	@%p50 bra 	BB3_41;

	and.b32  	%r17, %r7, 3;
	setp.eq.s32	%p51, %r17, 0;
	mov.f32 	%f215, 0f00000000;
	mov.u32 	%r133, 0;
	@%p51 bra 	BB3_39;

	setp.eq.s32	%p52, %r17, 1;
	mov.f32 	%f212, 0f00000000;
	mov.u32 	%r131, 0;
	@%p52 bra 	BB3_38;

	setp.eq.s32	%p53, %r17, 2;
	mov.f32 	%f211, 0f00000000;
	mov.u32 	%r130, 0;
	@%p53 bra 	BB3_37;

	ld.local.u32 	%r100, [%rd1];
	cvt.rn.f32.u32	%f182, %r100;
	sub.f32 	%f183, %f182, %f42;
	fma.rn.f32 	%f211, %f183, %f183, 0f00000000;
	mov.u32 	%r130, 1;

BB3_37:
	mul.wide.u32 	%rd41, %r130, 4;
	add.s64 	%rd42, %rd1, %rd41;
	ld.local.u32 	%r101, [%rd42];
	cvt.rn.f32.u32	%f184, %r101;
	sub.f32 	%f185, %f184, %f42;
	fma.rn.f32 	%f212, %f185, %f185, %f211;
	add.s32 	%r131, %r130, 1;

BB3_38:
	mul.wide.u32 	%rd45, %r131, 4;
	add.s64 	%rd46, %rd1, %rd45;
	ld.local.u32 	%r102, [%rd46];
	cvt.rn.f32.u32	%f186, %r102;
	sub.f32 	%f187, %f186, %f42;
	fma.rn.f32 	%f215, %f187, %f187, %f212;
	add.s32 	%r133, %r131, 1;

BB3_39:
	setp.lt.u32	%p54, %r7, 4;
	@%p54 bra 	BB3_41;

BB3_40:
	mul.wide.u32 	%rd47, %r133, 4;
	add.s64 	%rd48, %rd1, %rd47;
	ld.local.u32 	%r103, [%rd48];
	cvt.rn.f32.u32	%f188, %r103;
	sub.f32 	%f189, %f188, %f42;
	fma.rn.f32 	%f190, %f189, %f189, %f215;
	add.s32 	%r104, %r133, 1;
	mul.wide.u32 	%rd49, %r104, 4;
	add.s64 	%rd50, %rd1, %rd49;
	ld.local.u32 	%r105, [%rd50];
	cvt.rn.f32.u32	%f191, %r105;
	sub.f32 	%f192, %f191, %f42;
	fma.rn.f32 	%f193, %f192, %f192, %f190;
	add.s32 	%r106, %r133, 2;
	mul.wide.u32 	%rd51, %r106, 4;
	add.s64 	%rd52, %rd1, %rd51;
	ld.local.u32 	%r107, [%rd52];
	cvt.rn.f32.u32	%f194, %r107;
	sub.f32 	%f195, %f194, %f42;
	fma.rn.f32 	%f196, %f195, %f195, %f193;
	add.s32 	%r108, %r133, 3;
	mul.wide.u32 	%rd53, %r108, 4;
	add.s64 	%rd54, %rd1, %rd53;
	ld.local.u32 	%r109, [%rd54];
	cvt.rn.f32.u32	%f197, %r109;
	sub.f32 	%f198, %f197, %f42;
	fma.rn.f32 	%f215, %f198, %f198, %f196;
	add.s32 	%r133, %r133, 4;
	setp.lt.u32	%p55, %r133, %r7;
	@%p55 bra 	BB3_40;

BB3_41:
	add.s32 	%r110, %r7, -1;
	cvt.rn.f32.u32	%f199, %r110;
	div.rn.f32 	%f200, %f215, %f199;
	div.rn.f32 	%f52, %f200, %f42;
	setp.ne.s32	%p56, %r7, 1;
	@%p56 bra 	BB3_43;

	// inline asm
	activemask.b32 %r111;
	// inline asm
	ld.local.v2.u32 	{%r113, %r114}, [%rd1];
	setp.eq.s32	%p57, %r113, %r114;
	vote.sync.all.pred 	%p58, %p57, %r111;
	mov.u32 	%r134, 2;
	@%p58 bra 	BB3_45;

BB3_43:
	// inline asm
	activemask.b32 %r118;
	// inline asm
	setp.lt.f32	%p59, %f52, 0f3C23D70A;
	vote.sync.all.pred 	%p60, %p59, %r118;
	mov.u32 	%r134, %r125;
	@%p60 bra 	BB3_45;

	// inline asm
	activemask.b32 %r120;
	// inline asm
	setp.le.f32	%p61, %f52, 0f3F800000;
	vote.sync.all.pred 	%p62, %p61, %r120;
	setp.ge.u32	%p63, %r7, %r15;
	and.pred  	%p64, %p62, %p63;
	selp.b32	%r134, %r125, %r9, %p64;

BB3_45:
	cvt.rn.f32.u32	%f206, %r134;
	setp.lt.u32	%p65, %r125, %r134;
	@%p65 bra 	BB3_26;
	bra.uni 	BB3_46;

BB3_24:
	mov.u32 	%r134, %r135;

BB3_46:
	div.u32 	%r122, %r135, %r134;
	cvt.rn.f32.u32	%f205, %r122;
	mov.u16 	%rs8, 0;

BB3_47:
	mul.lo.s32 	%r123, %r4, %r29;
	cvt.u64.u32	%rd55, %r123;
	cvta.to.global.u64 	%rd56, %rd3;
	add.s64 	%rd57, %rd56, %rd55;
	mul.wide.u32 	%rd58, %r3, 16;
	add.s64 	%rd59, %rd57, %rd58;
	st.global.f32 	[%rd59], %f205;
	st.global.f32 	[%rd59+4], %f206;
	mov.u32 	%r124, 0;
	st.global.u32 	[%rd59+12], %r124;
	st.global.u8 	[%rd59+8], %rs8;

BB3_48:
	ret;
}

	// .globl	fractalRenderAdvancedDouble
.visible .entry fractalRenderAdvancedDouble(
	.param .u64 fractalRenderAdvancedDouble_param_0,
	.param .u32 fractalRenderAdvancedDouble_param_1,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_2[8],
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_3[32],
	.param .u32 fractalRenderAdvancedDouble_param_4,
	.param .f32 fractalRenderAdvancedDouble_param_5,
	.param .u32 fractalRenderAdvancedDouble_param_6,
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_7[32],
	.param .u64 fractalRenderAdvancedDouble_param_8,
	.param .u32 fractalRenderAdvancedDouble_param_9,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot4[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<67>;
	.reg .b16 	%rs<9>;
	.reg .f32 	%f<123>;
	.reg .b32 	%r<137>;
	.reg .f64 	%fd<97>;
	.reg .b64 	%rd<60>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd3, [fractalRenderAdvancedDouble_param_0];
	ld.param.u32 	%r29, [fractalRenderAdvancedDouble_param_1];
	ld.param.u32 	%r31, [fractalRenderAdvancedDouble_param_2+4];
	ld.param.u32 	%r30, [fractalRenderAdvancedDouble_param_2];
	ld.param.f64 	%fd31, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd30, [fractalRenderAdvancedDouble_param_3+16];
	ld.param.f64 	%fd29, [fractalRenderAdvancedDouble_param_3+8];
	ld.param.f64 	%fd28, [fractalRenderAdvancedDouble_param_3];
	ld.param.u32 	%r32, [fractalRenderAdvancedDouble_param_4];
	ld.param.f32 	%f115, [fractalRenderAdvancedDouble_param_5];
	ld.param.u32 	%r33, [fractalRenderAdvancedDouble_param_6];
	ld.param.f64 	%fd35, [fractalRenderAdvancedDouble_param_7+24];
	ld.param.f64 	%fd34, [fractalRenderAdvancedDouble_param_7+16];
	ld.param.f64 	%fd33, [fractalRenderAdvancedDouble_param_7+8];
	ld.param.f64 	%fd32, [fractalRenderAdvancedDouble_param_7];
	ld.param.u64 	%rd4, [fractalRenderAdvancedDouble_param_8];
	ld.param.u32 	%r34, [fractalRenderAdvancedDouble_param_9];
	ld.param.u32 	%r36, [fractalRenderAdvancedDouble_param_10+4];
	ld.param.u32 	%r35, [fractalRenderAdvancedDouble_param_10];
	mov.u32 	%r37, %ntid.x;
	setp.eq.s32	%p2, %r37, 32;
	@%p2 bra 	BB4_2;

	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, $str2;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r38, 59;
	mov.u64 	%rd9, 0;
	mov.u64 	%rd10, 2;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 param2;
	st.param.b32	[param2+0], %r38;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB4_2:
	mov.u32 	%r39, %tid.y;
	mov.u32 	%r41, %tid.x;
	mad.lo.s32 	%r42, %r37, %r39, %r41;
	and.b32  	%r43, %r42, 15;
	shl.b32 	%r44, %r37, 2;
	rem.u32 	%r45, %r42, %r44;
	sub.s32 	%r46, %r45, %r43;
	shr.u32 	%r47, %r46, 2;
	and.b32  	%r48, %r42, 3;
	add.s32 	%r49, %r47, %r48;
	div.u32 	%r50, %r42, %r44;
	shl.b32 	%r51, %r50, 2;
	bfe.u32 	%r52, %r42, 2, 2;
	add.s32 	%r53, %r51, %r52;
	mov.u32 	%r54, %ctaid.x;
	mad.lo.s32 	%r3, %r54, %r37, %r49;
	mov.u32 	%r55, %ctaid.y;
	mov.u32 	%r56, %ntid.y;
	mad.lo.s32 	%r4, %r55, %r56, %r53;
	setp.lt.u32	%p3, %r3, %r30;
	setp.gt.u32	%p4, %r31, %r4;
	and.pred  	%p5, %p3, %p4;
	@!%p5 bra 	BB4_47;
	bra.uni 	BB4_3;

BB4_3:
	and.b32  	%r57, %r33, 20;
	setp.eq.s32	%p6, %r57, 20;
	setp.ge.f32	%p7, %f115, 0f3F800000;
	and.pred  	%p8, %p6, %p7;
	mov.u16 	%rs7, 0;
	@!%p8 bra 	BB4_9;
	bra.uni 	BB4_4;

BB4_4:
	and.b32  	%r58, %r3, -8;
	cvt.rn.f32.u32	%f29, %r58;
	and.b32  	%r59, %r4, -4;
	cvt.rn.f32.u32	%f30, %r59;
	cvt.rn.f32.u32	%f31, %r35;
	sub.f32 	%f32, %f31, %f29;
	cvt.rn.f32.u32	%f33, %r36;
	sub.f32 	%f34, %f33, %f30;
	mul.f32 	%f35, %f34, %f34;
	fma.rn.f32 	%f36, %f32, %f32, %f35;
	sqrt.rn.f32 	%f37, %f36;
	mul.f32 	%f38, %f37, 0f3CD94079;
	ld.global.f32 	%f39, [screenDistance];
	div.rn.f32 	%f1, %f38, %f39;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p9, %f2, 0f3F800000;
	mov.f32 	%f114, %f2;
	@%p9 bra 	BB4_6;

	rcp.rn.f32 	%f114, %f2;

BB4_6:
	mul.rn.f32 	%f40, %f114, %f114;
	mov.f32 	%f41, 0fC0B59883;
	mov.f32 	%f42, 0fBF52C7EA;
	fma.rn.f32 	%f43, %f40, %f42, %f41;
	mov.f32 	%f44, 0fC0D21907;
	fma.rn.f32 	%f45, %f43, %f40, %f44;
	mul.f32 	%f46, %f40, %f45;
	mul.f32 	%f47, %f114, %f46;
	add.f32 	%f48, %f40, 0f41355DC0;
	mov.f32 	%f49, 0f41E6BD60;
	fma.rn.f32 	%f50, %f48, %f40, %f49;
	mov.f32 	%f51, 0f419D92C8;
	fma.rn.f32 	%f52, %f50, %f40, %f51;
	rcp.rn.f32 	%f53, %f52;
	fma.rn.f32 	%f54, %f47, %f53, %f114;
	mov.f32 	%f55, 0f3FC90FDB;
	sub.f32 	%f56, %f55, %f54;
	setp.gt.f32	%p10, %f2, 0f3F800000;
	selp.f32	%f57, %f56, %f54, %p10;
	mov.b32 	 %r60, %f57;
	mov.b32 	 %r61, %f1;
	and.b32  	%r62, %r61, -2147483648;
	or.b32  	%r63, %r60, %r62;
	mov.b32 	 %f58, %r63;
	setp.gtu.f32	%p11, %f2, 0f7F800000;
	selp.f32	%f59, %f57, %f58, %p11;
	mul.f32 	%f60, %f59, 0f43340000;
	div.rn.f32 	%f5, %f60, 0f40490FDB;
	setp.ge.f32	%p12, %f5, 0f00000000;
	@%p12 bra 	BB4_8;

	mov.u64 	%rd11, $str6;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str2;
	cvta.global.u64 	%rd14, %rd13;
	mov.u32 	%r64, 245;
	mov.u64 	%rd15, 0;
	mov.u64 	%rd16, 2;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r64;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB4_8:
	fma.rn.f32 	%f61, %f5, 0fBC964FDA, 0f3F8CEADD;
	setp.gtu.f32	%p13, %f5, 0f40B00000;
	setp.le.f32	%p14, %f5, 0f40B00000;
	selp.u16	%rs7, 1, 0, %p14;
	selp.f32	%f62, %f61, 0f3F800000, %p13;
	mul.f32 	%f115, %f62, %f115;

BB4_9:
	and.b32  	%r65, %r33, 8;
	setp.eq.s32	%p16, %r65, 0;
	mov.pred 	%p66, -1;
	mov.f32 	%f118, 0f00000000;
	@%p16 bra 	BB4_10;

	sub.s32 	%r66, %r31, %r4;
	cvt.rn.f64.u32	%fd36, %r66;
	cvt.rn.f64.u32	%fd37, %r30;
	cvt.rn.f64.u32	%fd38, %r3;
	div.rn.f64 	%fd39, %fd38, %fd37;
	cvt.rn.f64.u32	%fd40, %r31;
	div.rn.f64 	%fd41, %fd36, %fd40;
	sub.f64 	%fd42, %fd30, %fd28;
	sub.f64 	%fd43, %fd31, %fd29;
	fma.rn.f64 	%fd44, %fd42, %fd39, %fd28;
	fma.rn.f64 	%fd45, %fd43, %fd41, %fd29;
	sub.f64 	%fd46, %fd44, %fd32;
	sub.f64 	%fd47, %fd45, %fd33;
	sub.f64 	%fd48, %fd34, %fd32;
	div.rn.f64 	%fd49, %fd46, %fd48;
	sub.f64 	%fd50, %fd35, %fd33;
	div.rn.f64 	%fd51, %fd47, %fd50;
	cvt.rn.f32.f64	%f65, %fd49;
	cvt.rn.f32.f64	%f66, %fd51;
	cvt.rn.f32.u32	%f67, %r30;
	mul.f32 	%f8, %f67, %f65;
	cvt.rn.f32.u32	%f68, %r31;
	mul.f32 	%f69, %f68, %f66;
	sub.f32 	%f9, %f68, %f69;
	abs.f32 	%f70, %f8;
	mov.b32 	 %r67, %f8;
	and.b32  	%r68, %r67, -2147483648;
	or.b32  	%r69, %r68, 1056964608;
	mov.b32 	 %f71, %r69;
	add.f32 	%f72, %f8, %f71;
	cvt.rzi.f32.f32	%f73, %f72;
	setp.gt.f32	%p17, %f70, 0f4B000000;
	selp.f32	%f116, %f8, %f73, %p17;
	setp.geu.f32	%p18, %f70, 0f3F000000;
	@%p18 bra 	BB4_13;

	cvt.rzi.f32.f32	%f116, %f8;

BB4_13:
	cvt.rzi.s32.f32	%r5, %f116;
	mov.b32 	 %r70, %f9;
	and.b32  	%r71, %r70, -2147483648;
	or.b32  	%r72, %r71, 1056964608;
	mov.b32 	 %f74, %r72;
	add.f32 	%f75, %f9, %f74;
	cvt.rzi.f32.f32	%f76, %f75;
	abs.f32 	%f77, %f9;
	setp.gt.f32	%p19, %f77, 0f4B000000;
	selp.f32	%f117, %f9, %f76, %p19;
	setp.geu.f32	%p20, %f77, 0f3F000000;
	@%p20 bra 	BB4_15;

	cvt.rzi.f32.f32	%f117, %f9;

BB4_15:
	add.s32 	%r73, %r30, -2;
	setp.lt.u32	%p22, %r5, %r73;
	setp.gt.s32	%p23, %r5, 1;
	and.pred  	%p24, %p23, %p22;
	cvt.rzi.s32.f32	%r74, %f117;
	setp.gt.s32	%p25, %r74, 1;
	and.pred  	%p26, %p24, %p25;
	add.s32 	%r75, %r31, -2;
	setp.lt.u32	%p27, %r74, %r75;
	and.pred  	%p28, %p27, %p26;
	mov.f32 	%f119, %f118;
	@!%p28 bra 	BB4_18;
	bra.uni 	BB4_16;

BB4_16:
	shr.u32 	%r76, %r33, 5;
	and.b32  	%r77, %r76, 1;
	setp.eq.b32	%p30, %r77, 1;
	setp.ne.s16	%p31, %rs7, 0;
	and.pred  	%p32, %p31, %p30;
	mov.f32 	%f119, %f118;
	@%p32 bra 	BB4_18;

	cvt.rmi.f32.f32	%f82, %f8;
	cvt.rzi.u32.f32	%r78, %f82;
	cvt.rmi.f32.f32	%f83, %f9;
	cvt.rzi.u32.f32	%r79, %f83;
	cvt.rn.f32.u32	%f84, %r78;
	sub.f32 	%f85, %f8, %f84;
	cvt.rn.f32.u32	%f86, %r79;
	sub.f32 	%f87, %f9, %f86;
	mul.lo.s32 	%r80, %r79, %r34;
	cvt.u64.u32	%rd17, %r80;
	cvta.to.global.u64 	%rd18, %rd4;
	add.s64 	%rd19, %rd18, %rd17;
	mul.wide.u32 	%rd20, %r78, 16;
	add.s64 	%rd21, %rd19, %rd20;
	add.s32 	%r81, %r78, 1;
	mul.wide.u32 	%rd22, %r81, 16;
	add.s64 	%rd23, %rd19, %rd22;
	add.s32 	%r82, %r79, 1;
	mul.lo.s32 	%r83, %r82, %r34;
	cvt.u64.u32	%rd24, %r83;
	add.s64 	%rd25, %rd18, %rd24;
	add.s64 	%rd26, %rd25, %rd20;
	add.s64 	%rd27, %rd25, %rd22;
	mov.f32 	%f88, 0f3F800000;
	sub.f32 	%f89, %f88, %f85;
	ld.global.f32 	%f90, [%rd21];
	ld.global.f32 	%f91, [%rd23];
	mul.f32 	%f92, %f85, %f91;
	fma.rn.f32 	%f93, %f90, %f89, %f92;
	sub.f32 	%f94, %f88, %f87;
	ld.global.f32 	%f95, [%rd26];
	ld.global.f32 	%f96, [%rd27];
	mul.f32 	%f97, %f85, %f96;
	fma.rn.f32 	%f98, %f89, %f95, %f97;
	mul.f32 	%f99, %f87, %f98;
	fma.rn.f32 	%f118, %f94, %f93, %f99;
	ld.global.f32 	%f100, [%rd21+4];
	ld.global.f32 	%f101, [%rd23+4];
	mul.f32 	%f102, %f85, %f101;
	fma.rn.f32 	%f103, %f89, %f100, %f102;
	ld.global.f32 	%f104, [%rd26+4];
	ld.global.f32 	%f105, [%rd27+4];
	mul.f32 	%f106, %f85, %f105;
	fma.rn.f32 	%f107, %f89, %f104, %f106;
	mul.f32 	%f108, %f87, %f107;
	fma.rn.f32 	%f119, %f94, %f103, %f108;
	mov.pred 	%p66, 0;
	bra.uni 	BB4_18;

BB4_10:
	mov.f32 	%f119, %f118;

BB4_18:
	mov.u16 	%rs8, 1;
	@!%p66 bra 	BB4_46;
	bra.uni 	BB4_19;

BB4_19:
	setp.lt.f32	%p34, %f115, 0f3F800000;
	selp.f32	%f20, 0f3F800000, %f115, %p34;
	abs.f32 	%f109, %f20;
	mov.b32 	 %r84, %f20;
	and.b32  	%r85, %r84, -2147483648;
	or.b32  	%r86, %r85, 1056964608;
	mov.b32 	 %f110, %r86;
	add.f32 	%f111, %f20, %f110;
	cvt.rzi.f32.f32	%f112, %f111;
	setp.gt.f32	%p35, %f109, 0f4B000000;
	selp.f32	%f120, %f20, %f112, %p35;
	setp.geu.f32	%p36, %f109, 0f3F000000;
	@%p36 bra 	BB4_21;

	cvt.rzi.f32.f32	%f120, %f20;

BB4_21:
	cvt.rn.f64.u32	%fd52, %r30;
	sub.f64 	%fd53, %fd30, %fd28;
	div.rn.f64 	%fd5, %fd53, %fd52;
	cvt.rn.f64.u32	%fd54, %r31;
	sub.f64 	%fd55, %fd31, %fd29;
	div.rn.f64 	%fd6, %fd55, %fd54;
	cvt.rzi.u32.f32	%r6, %f120;
	setp.lt.u32	%p37, %r6, 65;
	@%p37 bra 	BB4_23;

	mov.u64 	%rd28, $str7;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, $str2;
	cvta.global.u64 	%rd31, %rd30;
	mov.u32 	%r87, 113;
	mov.u64 	%rd32, 0;
	mov.u64 	%rd33, 2;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd31;
	.param .b32 param2;
	st.param.b32	[param2+0], %r87;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd32;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd33;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB4_23:
	setp.eq.s32	%p38, %r6, 0;
	mov.u32 	%r135, 0;
	mov.u32 	%r134, %r135;
	@%p38 bra 	BB4_45;

	cvt.rn.f64.u32	%fd7, %r3;
	cvt.rn.f64.u32	%fd8, %r4;
	mov.u32 	%r91, 0;
	mov.u32 	%r125, %r91;
	mov.u32 	%r135, %r91;
	mov.u32 	%r134, %r6;

BB4_25:
	mov.u32 	%r9, %r134;
	mov.u32 	%r7, %r125;
	cvt.rn.f64.u32	%fd58, %r9;
	cvt.rn.f64.u32	%fd59, %r7;
	div.rn.f64 	%fd60, %fd59, %fd58;
	add.f64 	%fd61, %fd7, %fd60;
	add.f64 	%fd62, %fd8, %fd60;
	neg.f64 	%fd63, %fd62;
	fma.rn.f64 	%fd9, %fd5, %fd61, %fd28;
	fma.rn.f64 	%fd10, %fd6, %fd63, %fd31;
	setp.eq.s32	%p39, %r32, 0;
	mov.f64 	%fd90, 0d0000000000000000;
	mov.u32 	%r129, %r91;
	mov.f64 	%fd91, %fd90;
	@%p39 bra 	BB4_28;

BB4_26:
	mul.f64 	%fd13, %fd90, %fd90;
	mul.f64 	%fd14, %fd91, %fd91;
	add.f64 	%fd64, %fd14, %fd13;
	setp.geu.f64	%p40, %fd64, 0d4010000000000000;
	@%p40 bra 	BB4_28;

	sub.f64 	%fd65, %fd14, %fd13;
	add.f64 	%fd15, %fd9, %fd65;
	add.f64 	%fd66, %fd91, %fd91;
	fma.rn.f64 	%fd90, %fd66, %fd90, %fd10;
	add.s32 	%r129, %r129, 1;
	setp.lt.u32	%p41, %r129, %r32;
	mov.f64 	%fd91, %fd15;
	@%p41 bra 	BB4_26;

BB4_28:
	cvt.rn.f32.u32	%f113, %r129;
	cvt.rzi.u32.f32	%r13, %f113;
	add.s32 	%r135, %r13, %r135;
	setp.gt.u32	%p42, %r7, 9;
	@%p42 bra 	BB4_30;

	add.u64 	%rd34, %SP, 0;
	cvta.to.local.u64 	%rd35, %rd34;
	mul.wide.u32 	%rd36, %r7, 4;
	add.s64 	%rd37, %rd35, %rd36;
	st.local.u32 	[%rd37], %r13;

BB4_30:
	setp.lt.u32	%p43, %r7, 10;
	and.b32  	%r94, %r33, 1;
	setp.eq.b32	%p44, %r94, 1;
	setp.ne.s32	%p45, %r7, 0;
	and.pred  	%p46, %p43, %p45;
	and.pred  	%p47, %p46, %p44;
	shr.u32 	%r15, %r9, 1;
	setp.eq.s32	%p48, %r7, %r15;
	or.pred  	%p49, %p47, %p48;
	add.s32 	%r125, %r7, 1;
	mov.u32 	%r134, %r9;
	@!%p49 bra 	BB4_44;
	bra.uni 	BB4_31;

BB4_31:
	div.u32 	%r95, %r135, %r125;
	cvt.rn.f64.u32	%fd17, %r95;
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd38;
	setp.eq.s32	%p50, %r7, 0;
	mov.f64 	%fd96, 0d0000000000000000;
	@%p50 bra 	BB4_40;

	and.b32  	%r17, %r7, 3;
	setp.eq.s32	%p51, %r17, 0;
	mov.f64 	%fd96, 0d0000000000000000;
	mov.u32 	%r133, 0;
	@%p51 bra 	BB4_38;

	setp.eq.s32	%p52, %r17, 1;
	mov.f64 	%fd93, 0d0000000000000000;
	mov.u32 	%r131, 0;
	@%p52 bra 	BB4_37;

	setp.eq.s32	%p53, %r17, 2;
	mov.f64 	%fd92, 0d0000000000000000;
	mov.u32 	%r130, 0;
	@%p53 bra 	BB4_36;

	ld.local.u32 	%r100, [%rd1];
	cvt.rn.f64.u32	%fd71, %r100;
	sub.f64 	%fd72, %fd71, %fd17;
	fma.rn.f64 	%fd92, %fd72, %fd72, 0d0000000000000000;
	mov.u32 	%r130, 1;

BB4_36:
	mul.wide.u32 	%rd41, %r130, 4;
	add.s64 	%rd42, %rd1, %rd41;
	ld.local.u32 	%r101, [%rd42];
	cvt.rn.f64.u32	%fd73, %r101;
	sub.f64 	%fd74, %fd73, %fd17;
	fma.rn.f64 	%fd93, %fd74, %fd74, %fd92;
	add.s32 	%r131, %r130, 1;

BB4_37:
	mul.wide.u32 	%rd45, %r131, 4;
	add.s64 	%rd46, %rd1, %rd45;
	ld.local.u32 	%r102, [%rd46];
	cvt.rn.f64.u32	%fd75, %r102;
	sub.f64 	%fd76, %fd75, %fd17;
	fma.rn.f64 	%fd96, %fd76, %fd76, %fd93;
	add.s32 	%r133, %r131, 1;

BB4_38:
	setp.lt.u32	%p54, %r7, 4;
	@%p54 bra 	BB4_40;

BB4_39:
	mul.wide.u32 	%rd47, %r133, 4;
	add.s64 	%rd48, %rd1, %rd47;
	ld.local.u32 	%r103, [%rd48];
	cvt.rn.f64.u32	%fd77, %r103;
	sub.f64 	%fd78, %fd77, %fd17;
	fma.rn.f64 	%fd79, %fd78, %fd78, %fd96;
	add.s32 	%r104, %r133, 1;
	mul.wide.u32 	%rd49, %r104, 4;
	add.s64 	%rd50, %rd1, %rd49;
	ld.local.u32 	%r105, [%rd50];
	cvt.rn.f64.u32	%fd80, %r105;
	sub.f64 	%fd81, %fd80, %fd17;
	fma.rn.f64 	%fd82, %fd81, %fd81, %fd79;
	add.s32 	%r106, %r133, 2;
	mul.wide.u32 	%rd51, %r106, 4;
	add.s64 	%rd52, %rd1, %rd51;
	ld.local.u32 	%r107, [%rd52];
	cvt.rn.f64.u32	%fd83, %r107;
	sub.f64 	%fd84, %fd83, %fd17;
	fma.rn.f64 	%fd85, %fd84, %fd84, %fd82;
	add.s32 	%r108, %r133, 3;
	mul.wide.u32 	%rd53, %r108, 4;
	add.s64 	%rd54, %rd1, %rd53;
	ld.local.u32 	%r109, [%rd54];
	cvt.rn.f64.u32	%fd86, %r109;
	sub.f64 	%fd87, %fd86, %fd17;
	fma.rn.f64 	%fd96, %fd87, %fd87, %fd85;
	add.s32 	%r133, %r133, 4;
	setp.lt.u32	%p55, %r133, %r7;
	@%p55 bra 	BB4_39;

BB4_40:
	add.s32 	%r110, %r7, -1;
	cvt.rn.f64.u32	%fd88, %r110;
	div.rn.f64 	%fd89, %fd96, %fd88;
	div.rn.f64 	%fd27, %fd89, %fd17;
	setp.ne.s32	%p56, %r7, 1;
	@%p56 bra 	BB4_42;

	// inline asm
	activemask.b32 %r111;
	// inline asm
	ld.local.v2.u32 	{%r113, %r114}, [%rd1];
	setp.eq.s32	%p57, %r113, %r114;
	vote.sync.all.pred 	%p58, %p57, %r111;
	mov.u32 	%r134, 2;
	@%p58 bra 	BB4_44;

BB4_42:
	// inline asm
	activemask.b32 %r118;
	// inline asm
	setp.lt.f64	%p59, %fd27, 0d3F847AE140000000;
	vote.sync.all.pred 	%p60, %p59, %r118;
	mov.u32 	%r134, %r125;
	@%p60 bra 	BB4_44;

	// inline asm
	activemask.b32 %r120;
	// inline asm
	setp.le.f64	%p61, %fd27, 0d3FF0000000000000;
	vote.sync.all.pred 	%p62, %p61, %r120;
	setp.ge.u32	%p63, %r7, %r15;
	and.pred  	%p64, %p62, %p63;
	selp.b32	%r134, %r125, %r9, %p64;

BB4_44:
	setp.lt.u32	%p65, %r125, %r134;
	@%p65 bra 	BB4_25;

BB4_45:
	cvt.rn.f32.u32	%f119, %r134;
	div.u32 	%r122, %r135, %r134;
	cvt.rn.f32.u32	%f118, %r122;
	mov.u16 	%rs8, 0;

BB4_46:
	mul.lo.s32 	%r123, %r4, %r29;
	cvt.u64.u32	%rd55, %r123;
	cvta.to.global.u64 	%rd56, %rd3;
	add.s64 	%rd57, %rd56, %rd55;
	mul.wide.u32 	%rd58, %r3, 16;
	add.s64 	%rd59, %rd57, %rd58;
	st.global.f32 	[%rd59], %f118;
	st.global.f32 	[%rd59+4], %f119;
	mov.u32 	%r124, 0;
	st.global.u32 	[%rd59+12], %r124;
	st.global.u8 	[%rd59+8], %rs8;

BB4_47:
	ret;
}

	// .globl	compose
.visible .entry compose(
	.param .u64 compose_param_0,
	.param .u32 compose_param_1,
	.param .u64 compose_param_2,
	.param .u32 compose_param_3,
	.param .u64 compose_param_4,
	.param .u32 compose_param_5,
	.param .u32 compose_param_6,
	.param .u64 compose_param_7,
	.param .u32 compose_param_8,
	.param .f32 compose_param_9
)
{
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<16>;
	.reg .b32 	%r<37>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [compose_param_0];
	ld.param.u32 	%r7, [compose_param_1];
	ld.param.u64 	%rd3, [compose_param_4];
	ld.param.u32 	%r9, [compose_param_5];
	ld.param.u32 	%r10, [compose_param_6];
	ld.param.u64 	%rd4, [compose_param_7];
	ld.param.u32 	%r8, [compose_param_8];
	ld.param.f32 	%f5, [compose_param_9];
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r12, %r11, %r13;
	mov.u32 	%r14, %ctaid.y;
	mov.u32 	%r15, %ntid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r2, %r14, %r15, %r16;
	setp.ge.u32	%p1, %r2, %r10;
	setp.ge.u32	%p2, %r1, %r9;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_9;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.lo.s32 	%r17, %r2, %r7;
	cvt.u64.u32	%rd6, %r17;
	add.s64 	%rd7, %rd5, %rd6;
	mul.wide.u32 	%rd8, %r1, 16;
	add.s64 	%rd1, %rd7, %rd8;
	ld.const.u8 	%rs1, [VISUALIZE_SAMPLE_COUNT];
	setp.eq.s16	%p4, %rs1, 0;
	@%p4 bra 	BB5_3;

	ld.global.f32 	%f6, [%rd1+4];
	cvt.rzi.u32.f32	%r18, %f6;
	cvt.rzi.u32.f32	%r19, %f5;
	min.u32 	%r20, %r18, %r19;
	cvt.rn.f32.u32	%f7, %r20;
	cvt.rn.f32.u32	%f8, %r19;
	div.rn.f32 	%f9, %f7, %f8;
	mul.f32 	%f10, %f9, 0f437F0000;
	cvt.rzi.s32.f32	%r21, %f10;
	and.b32  	%r22, %r21, 255;
	prmt.b32 	%r23, %r22, %r22, 30212;
	prmt.b32 	%r24, %r22, %r23, 28756;
	or.b32  	%r25, %r24, -16777216;
	ld.global.u8 	%rs2, [%rd1+8];
	setp.eq.s16	%p5, %rs2, 0;
	selp.b32	%r36, %r25, -16777216, %p5;
	bra.uni 	BB5_8;

BB5_3:
	ld.global.f32 	%f1, [%rd1];
	abs.f32 	%f11, %f1;
	mov.b32 	 %r26, %f1;
	and.b32  	%r27, %r26, -2147483648;
	or.b32  	%r28, %r27, 1056964608;
	mov.b32 	 %f12, %r28;
	add.f32 	%f13, %f1, %f12;
	cvt.rzi.f32.f32	%f14, %f13;
	setp.gt.f32	%p6, %f11, 0f4B000000;
	selp.f32	%f15, %f1, %f14, %p6;
	setp.geu.f32	%p7, %f11, 0f3F000000;
	@%p7 bra 	BB5_5;

	cvt.rzi.f32.f32	%f15, %f1;

BB5_5:
	cvt.rzi.u32.f32	%r29, %f15;
	rem.u32 	%r30, %r29, %r8;
	sub.s32 	%r31, %r8, %r30;
	add.s32 	%r4, %r31, -1;
	setp.lt.u32	%p8, %r4, %r8;
	@%p8 bra 	BB5_7;

	mov.u64 	%rd9, $str8;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str9;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r32, 29;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB5_7:
	shl.b32 	%r33, %r4, 2;
	mov.u32 	%r34, 0;
	suld.b.2d.b32.trap {%r36}, [%rd4, {%r33, %r34}];

BB5_8:
	shl.b32 	%r35, %r1, 2;
	sust.b.2d.b32.trap 	[%rd3, {%r35, %r2}], {%r36};

BB5_9:
	ret;
}

	// .globl	fractalRenderUnderSampled
.visible .entry fractalRenderUnderSampled(
	.param .u64 fractalRenderUnderSampled_param_0,
	.param .u32 fractalRenderUnderSampled_param_1,
	.param .u32 fractalRenderUnderSampled_param_2,
	.param .u32 fractalRenderUnderSampled_param_3,
	.param .f32 fractalRenderUnderSampled_param_4,
	.param .f32 fractalRenderUnderSampled_param_5,
	.param .f32 fractalRenderUnderSampled_param_6,
	.param .f32 fractalRenderUnderSampled_param_7,
	.param .u32 fractalRenderUnderSampled_param_8,
	.param .u32 fractalRenderUnderSampled_param_9
)
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<51>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [fractalRenderUnderSampled_param_0];
	ld.param.u32 	%r12, [fractalRenderUnderSampled_param_1];
	ld.param.u32 	%r13, [fractalRenderUnderSampled_param_2];
	ld.param.u32 	%r14, [fractalRenderUnderSampled_param_3];
	ld.param.f32 	%f11, [fractalRenderUnderSampled_param_4];
	ld.param.f32 	%f12, [fractalRenderUnderSampled_param_5];
	ld.param.f32 	%f13, [fractalRenderUnderSampled_param_6];
	ld.param.f32 	%f14, [fractalRenderUnderSampled_param_7];
	ld.param.u32 	%r15, [fractalRenderUnderSampled_param_8];
	ld.param.u32 	%r16, [fractalRenderUnderSampled_param_9];
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r20, %r18, %r17, %r19;
	mul.lo.s32 	%r1, %r20, %r16;
	mov.u32 	%r21, %ctaid.y;
	mov.u32 	%r22, %ntid.y;
	mov.u32 	%r23, %tid.y;
	mad.lo.s32 	%r24, %r21, %r22, %r23;
	mul.lo.s32 	%r2, %r24, %r16;
	sub.s32 	%r25, %r14, %r16;
	setp.ge.u32	%p1, %r2, %r25;
	sub.s32 	%r26, %r13, %r16;
	setp.ge.u32	%p2, %r1, %r26;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB6_14;

	sub.f32 	%f17, %f13, %f11;
	cvt.rn.f32.u32	%f18, %r13;
	div.rn.f32 	%f19, %f17, %f18;
	cvt.rn.f32.u32	%f20, %r14;
	sub.f32 	%f21, %f14, %f12;
	div.rn.f32 	%f22, %f21, %f20;
	cvt.rn.f32.u32	%f23, %r1;
	fma.rn.f32 	%f1, %f23, %f19, %f11;
	cvt.rn.f32.u32	%f24, %r2;
	mul.f32 	%f25, %f24, %f22;
	sub.f32 	%f2, %f14, %f25;
	setp.eq.s32	%p4, %r15, 0;
	mov.f32 	%f31, 0f00000000;
	mov.u32 	%r46, 0;
	@%p4 bra 	BB6_5;

	mov.f32 	%f32, %f31;

BB6_3:
	mul.f32 	%f5, %f31, %f31;
	mul.f32 	%f6, %f32, %f32;
	add.f32 	%f26, %f6, %f5;
	setp.geu.f32	%p5, %f26, 0f40800000;
	@%p5 bra 	BB6_5;

	sub.f32 	%f27, %f6, %f5;
	add.f32 	%f7, %f1, %f27;
	add.f32 	%f28, %f32, %f32;
	fma.rn.f32 	%f31, %f28, %f31, %f2;
	add.s32 	%r46, %r46, 1;
	setp.lt.u32	%p6, %r46, %r15;
	mov.f32 	%f32, %f7;
	@%p6 bra 	BB6_3;

BB6_5:
	setp.eq.s32	%p7, %r16, 0;
	@%p7 bra 	BB6_14;

	cvt.rn.f32.u32	%f29, %r46;
	cvt.rzi.u32.f32	%r33, %f29;
	mul.lo.s32 	%r34, %r2, %r12;
	cvt.u64.u32	%rd3, %r34;
	cvta.to.global.u64 	%rd4, %rd2;
	add.s64 	%rd5, %rd4, %rd3;
	cvt.rn.f32.u32	%f30, %r16;
	rcp.rn.f32 	%f9, %f30;
	cvt.rn.f32.u32	%f10, %r33;
	mul.wide.u32 	%rd6, %r1, 16;
	add.s64 	%rd1, %rd5, %rd6;
	and.b32  	%r32, %r16, 3;
	mov.u32 	%r47, 1;
	mov.u32 	%r50, 0;
	setp.eq.s32	%p8, %r32, 0;
	@%p8 bra 	BB6_12;

	setp.eq.s32	%p9, %r32, 1;
	mov.u32 	%r48, %r50;
	@%p9 bra 	BB6_11;

	setp.eq.s32	%p10, %r32, 2;
	@%p10 bra 	BB6_10;

	st.global.f32 	[%rd1], %f10;
	st.global.f32 	[%rd1+4], %f9;
	mov.u32 	%r41, 0;
	st.global.u32 	[%rd1+12], %r41;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd1+8], %rs1;
	mov.u32 	%r47, 2;

BB6_10:
	st.global.f32 	[%rd1], %f10;
	st.global.f32 	[%rd1+4], %f9;
	mov.u32 	%r42, 0;
	st.global.u32 	[%rd1+12], %r42;
	mov.u16 	%rs2, 0;
	st.global.u8 	[%rd1+8], %rs2;
	mov.u32 	%r48, %r47;

BB6_11:
	st.global.f32 	[%rd1], %f10;
	st.global.f32 	[%rd1+4], %f9;
	st.global.u32 	[%rd1+12], %r50;
	mov.u16 	%rs3, 0;
	st.global.u8 	[%rd1+8], %rs3;
	add.s32 	%r50, %r48, 1;

BB6_12:
	setp.lt.u32	%p11, %r16, 4;
	@%p11 bra 	BB6_14;

BB6_13:
	st.global.f32 	[%rd1], %f10;
	st.global.f32 	[%rd1+4], %f9;
	mov.u32 	%r44, 0;
	st.global.u32 	[%rd1+12], %r44;
	mov.u16 	%rs4, 0;
	st.global.u8 	[%rd1+8], %rs4;
	add.s32 	%r50, %r50, 4;
	setp.lt.u32	%p12, %r50, %r16;
	@%p12 bra 	BB6_13;

BB6_14:
	ret;
}

	// .globl	debug
.visible .entry debug(

)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<4>;


	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mul.lo.s32 	%r3, %r2, %r1;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ntid.y;
	mul.lo.s32 	%r6, %r4, %r5;
	mov.u32 	%r7, %tid.x;
	neg.s32 	%r8, %r7;
	setp.eq.s32	%p1, %r3, %r8;
	mov.u32 	%r9, %tid.y;
	neg.s32 	%r10, %r9;
	setp.eq.s32	%p2, %r6, %r10;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB7_2;
	bra.uni 	BB7_1;

BB7_1:
	mov.u64 	%rd1, $str;
	cvta.global.u64 	%rd2, %rd1;
	mov.u64 	%rd3, 0;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 13

BB7_2:
	ret;
}


