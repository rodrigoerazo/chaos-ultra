//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24330188
// Cuda compilation tools, release 9.2, V9.2.148
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	init
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 8 .b8 julia_c[16];
.const .align 1 .u8 VISUALIZE_SAMPLE_COUNT;
.global .align 4 .u32 seed;
.global .align 4 .u32 WARP_SIZE_X = 8;
.global .align 4 .u32 WARP_SIZE_Y = 4;
.global .align 4 .u32 USE_ADAPTIVE_SS_FLAG_MASK = 1;
.global .align 4 .u32 USE_FOVEATION_FLAG_MASK = 4;
.global .align 4 .u32 USE_SAMPLE_REUSE_FLAG_MASK = 8;
.global .align 4 .u32 IS_ZOOMING_FLAG_MASK = 16;
.global .align 4 .u32 ZOOMING_IN_FLAG_MASK = 32;
.global .align 4 .u32 visualityAmplifyCoeff = 10;
.global .align 4 .f32 screenDistance = 0f42700000;
.global .align 4 .f32 pixelRealWidthInCm = 0f3CD94079;
.global .align 16 .b8 $str[18] = {104, 101, 108, 108, 111, 32, 102, 114, 111, 109, 32, 106, 117, 108, 105, 97, 10, 0};
.global .align 16 .b8 $str1[34] = {98, 0, 108, 0, 111, 0, 99, 0, 107, 0, 68, 0, 105, 0, 109, 0, 46, 0, 120, 0, 32, 0, 61, 0, 61, 0, 32, 0, 51, 0, 50, 0, 0, 0};
.global .align 16 .b8 $str2[138] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 82, 0, 101, 0, 110, 0, 100, 0, 101, 0, 114, 0, 101, 0, 114, 0, 71, 0, 101, 0, 110, 0, 101, 0, 114, 0, 105, 0, 99, 0, 46, 0, 99, 0, 117, 0, 0, 0};
.global .align 16 .b8 $str3[44] = {109, 0, 97, 0, 120, 0, 83, 0, 117, 0, 112, 0, 101, 0, 114, 0, 83, 0, 97, 0, 109, 0, 112, 0, 108, 0, 105, 0, 110, 0, 103, 0, 32, 0, 62, 0, 61, 0, 32, 0, 49, 0, 0, 0};
.global .align 16 .b8 $str4[40] = {112, 0, 79, 0, 117, 0, 116, 0, 112, 0, 117, 0, 116, 0, 45, 0, 62, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str7[42] = {109, 0, 97, 0, 120, 0, 83, 0, 117, 0, 112, 0, 101, 0, 114, 0, 83, 0, 97, 0, 109, 0, 112, 0, 108, 0, 105, 0, 110, 0, 103, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str8[34] = {118, 0, 105, 0, 115, 0, 117, 0, 97, 0, 108, 0, 65, 0, 110, 0, 103, 0, 108, 0, 101, 0, 32, 0, 62, 0, 61, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str9[36] = {114, 0, 101, 0, 115, 0, 117, 0, 108, 0, 116, 0, 46, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str10[68] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 60, 0, 61, 0, 32, 0, 77, 0, 65, 0, 88, 0, 95, 0, 83, 0, 85, 0, 80, 0, 69, 0, 82, 0, 95, 0, 83, 0, 65, 0, 77, 0, 80, 0, 76, 0, 73, 0, 78, 0, 71, 0, 0, 0};
.global .align 16 .b8 $str11[16] = {100, 0, 121, 0, 32, 0, 60, 0, 61, 0, 32, 0, 49, 0, 0, 0};
.global .align 16 .b8 $str12[16] = {100, 0, 120, 0, 32, 0, 60, 0, 61, 0, 32, 0, 49, 0, 0, 0};
.global .align 16 .b8 $str13[54] = {112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 73, 0, 100, 0, 120, 0, 32, 0, 60, 0, 32, 0, 112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 76, 0, 101, 0, 110, 0, 103, 0, 116, 0, 104, 0, 0, 0};
.global .align 16 .b8 $str14[122] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 115, 0, 47, 0, 106, 0, 117, 0, 108, 0, 105, 0, 97, 0, 46, 0, 99, 0, 117, 0, 0, 0};

.visible .entry init(

)
{



	ret;
}

	// .globl	fractalRenderMainFloat
.visible .entry fractalRenderMainFloat(
	.param .u64 fractalRenderMainFloat_param_0,
	.param .u32 fractalRenderMainFloat_param_1,
	.param .align 4 .b8 fractalRenderMainFloat_param_2[8],
	.param .align 4 .b8 fractalRenderMainFloat_param_3[16],
	.param .u32 fractalRenderMainFloat_param_4,
	.param .f32 fractalRenderMainFloat_param_5,
	.param .u32 fractalRenderMainFloat_param_6
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<44>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<117>;
	.reg .b32 	%r<110>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<69>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainFloat_param_0];
	ld.param.u32 	%r27, [fractalRenderMainFloat_param_1];
	ld.param.u32 	%r29, [fractalRenderMainFloat_param_2+4];
	ld.param.u32 	%r28, [fractalRenderMainFloat_param_2];
	ld.param.f32 	%f47, [fractalRenderMainFloat_param_3+12];
	ld.param.f32 	%f46, [fractalRenderMainFloat_param_3+8];
	ld.param.f32 	%f45, [fractalRenderMainFloat_param_3+4];
	ld.param.f32 	%f44, [fractalRenderMainFloat_param_3];
	ld.param.u32 	%r30, [fractalRenderMainFloat_param_4];
	ld.param.f32 	%f48, [fractalRenderMainFloat_param_5];
	ld.param.u32 	%r31, [fractalRenderMainFloat_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd3, $str1;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str2;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r32, 59;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB1_2:
	mov.u32 	%r33, %tid.x;
	mov.u32 	%r34, %tid.y;
	mad.lo.s32 	%r35, %r1, %r34, %r33;
	shl.b32 	%r36, %r1, 2;
	and.b32  	%r37, %r35, 15;
	rem.u32 	%r38, %r35, %r36;
	sub.s32 	%r39, %r38, %r37;
	shr.u32 	%r40, %r39, 2;
	and.b32  	%r41, %r35, 3;
	add.s32 	%r42, %r40, %r41;
	div.u32 	%r43, %r35, %r36;
	shl.b32 	%r44, %r43, 2;
	bfe.u32 	%r45, %r35, 2, 2;
	add.s32 	%r46, %r44, %r45;
	mov.u32 	%r47, %ctaid.x;
	mad.lo.s32 	%r4, %r47, %r1, %r42;
	mov.u32 	%r48, %ctaid.y;
	mov.u32 	%r49, %ntid.y;
	mad.lo.s32 	%r5, %r48, %r49, %r46;
	setp.lt.u32	%p2, %r4, %r28;
	setp.lt.u32	%p3, %r5, %r29;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB1_43;
	bra.uni 	BB1_3;

BB1_3:
	setp.ge.f32	%p5, %f48, 0f3F800000;
	@%p5 bra 	BB1_5;

	mov.u64 	%rd9, $str3;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r50, 213;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r50;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_5:
	setp.lt.f32	%p6, %f48, 0f3F800000;
	mov.f32 	%f115, 0f00000000;
	mov.f32 	%f116, %f115;
	@%p6 bra 	BB1_41;

	abs.f32 	%f51, %f48;
	mov.b32 	 %r51, %f48;
	and.b32  	%r52, %r51, -2147483648;
	or.b32  	%r53, %r52, 1056964608;
	mov.b32 	 %f52, %r53;
	add.f32 	%f53, %f52, %f48;
	cvt.rzi.f32.f32	%f54, %f53;
	setp.gt.f32	%p7, %f51, 0f4B000000;
	selp.f32	%f104, %f48, %f54, %p7;
	setp.geu.f32	%p8, %f51, 0f3F000000;
	@%p8 bra 	BB1_8;

	cvt.rzi.f32.f32	%f104, %f48;

BB1_8:
	cvt.rzi.u32.f32	%r54, %f104;
	mov.u32 	%r55, 64;
	min.u32 	%r6, %r55, %r54;
	setp.lt.u32	%p9, %r6, 65;
	@%p9 bra 	BB1_10;

	mov.u64 	%rd15, $str10;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str2;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r56, 113;
	mov.u64 	%rd19, 0;
	mov.u64 	%rd20, 2;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r56;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd20;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB1_10:
	setp.eq.s32	%p10, %r6, 0;
	mov.u32 	%r108, 0;
	mov.u32 	%r107, %r108;
	@%p10 bra 	BB1_40;

	cvt.rn.f32.u32	%f6, %r4;
	cvt.rn.f32.u32	%f7, %r5;
	ld.const.f64 	%fd1, [julia_c];
	cvt.rn.f32.f64	%f8, %fd1;
	ld.const.f64 	%fd2, [julia_c+8];
	cvt.rn.f32.f64	%f9, %fd2;
	cvt.rn.f32.u32	%f55, %r28;
	sub.f32 	%f56, %f46, %f44;
	div.rn.f32 	%f10, %f56, %f55;
	cvt.rn.f32.u32	%f57, %r29;
	sub.f32 	%f58, %f47, %f45;
	div.rn.f32 	%f11, %f58, %f57;
	mov.u32 	%r98, 0;
	and.b32  	%r72, %r31, 1;
	mov.u32 	%r108, %r98;
	mov.u32 	%r107, %r6;

BB1_12:
	mov.u32 	%r9, %r107;
	mov.u32 	%r7, %r98;
	setp.lt.u32	%p11, %r7, 3;
	@%p11 bra 	BB1_19;
	bra.uni 	BB1_13;

BB1_19:
	cvt.rn.f32.u32	%f66, %r7;
	div.rn.f32 	%f106, %f66, 0f40400000;
	mov.f32 	%f107, %f106;
	bra.uni 	BB1_20;

BB1_13:
	add.f32 	%f59, %f48, 0fC0000000;
	sqrt.rn.f32 	%f12, %f59;
	abs.f32 	%f60, %f12;
	mov.b32 	 %r61, %f12;
	and.b32  	%r62, %r61, -2147483648;
	or.b32  	%r63, %r62, 1056964608;
	mov.b32 	 %f61, %r63;
	add.f32 	%f62, %f12, %f61;
	cvt.rzi.f32.f32	%f63, %f62;
	setp.gt.f32	%p12, %f60, 0f4B000000;
	selp.f32	%f105, %f12, %f63, %p12;
	setp.geu.f32	%p13, %f60, 0f3F000000;
	@%p13 bra 	BB1_15;

	cvt.rzi.f32.f32	%f105, %f12;

BB1_15:
	add.s32 	%r64, %r7, -2;
	cvt.rzi.u32.f32	%r65, %f105;
	rem.u32 	%r66, %r64, %r65;
	cvt.rn.f32.u32	%f64, %r66;
	div.rn.f32 	%f106, %f64, %f12;
	div.u32 	%r67, %r64, %r65;
	cvt.rn.f32.u32	%f65, %r67;
	div.rn.f32 	%f107, %f65, %f12;
	setp.le.f32	%p14, %f107, 0f3F800000;
	@%p14 bra 	BB1_17;

	mov.u64 	%rd21, $str11;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str2;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r68, 132;
	mov.u64 	%rd25, 0;
	mov.u64 	%rd26, 2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r68;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB1_17:
	setp.le.f32	%p15, %f106, 0f3F800000;
	@%p15 bra 	BB1_20;

	mov.u64 	%rd27, $str12;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, $str2;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r69, 133;
	mov.u64 	%rd31, 0;
	mov.u64 	%rd32, 2;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r69;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB1_20:
	add.f32 	%f67, %f7, %f107;
	neg.f32 	%f68, %f67;
	add.f32 	%f69, %f6, %f106;
	fma.rn.f32 	%f109, %f10, %f69, %f44;
	fma.rn.f32 	%f108, %f11, %f68, %f47;
	setp.eq.s32	%p16, %r30, 0;
	mov.u32 	%r102, 0;
	@%p16 bra 	BB1_23;

BB1_21:
	mul.f32 	%f25, %f108, %f108;
	mul.f32 	%f26, %f109, %f109;
	add.f32 	%f70, %f26, %f25;
	setp.geu.f32	%p17, %f70, 0f40800000;
	@%p17 bra 	BB1_23;

	sub.f32 	%f71, %f26, %f25;
	add.f32 	%f27, %f8, %f71;
	add.f32 	%f72, %f109, %f109;
	fma.rn.f32 	%f108, %f72, %f108, %f9;
	add.s32 	%r102, %r102, 1;
	setp.lt.u32	%p18, %r102, %r30;
	mov.f32 	%f109, %f27;
	@%p18 bra 	BB1_21;

BB1_23:
	cvt.rn.f32.u32	%f73, %r102;
	cvt.rzi.u32.f32	%r13, %f73;
	add.s32 	%r108, %r13, %r108;
	setp.gt.u32	%p19, %r7, 9;
	@%p19 bra 	BB1_25;

	cvt.rn.f32.u32	%f74, %r13;
	add.u64 	%rd33, %SP, 0;
	cvta.to.local.u64 	%rd34, %rd33;
	mul.wide.u32 	%rd35, %r7, 4;
	add.s64 	%rd36, %rd34, %rd35;
	st.local.f32 	[%rd36], %f74;

BB1_25:
	setp.lt.u32	%p20, %r7, 10;
	setp.eq.b32	%p21, %r72, 1;
	setp.ne.s32	%p22, %r7, 0;
	and.pred  	%p23, %p20, %p22;
	and.pred  	%p24, %p23, %p21;
	shr.u32 	%r73, %r9, 1;
	setp.eq.s32	%p25, %r7, %r73;
	or.pred  	%p26, %p24, %p25;
	add.s32 	%r98, %r7, 1;
	mov.u32 	%r107, %r9;
	@!%p26 bra 	BB1_39;
	bra.uni 	BB1_26;

BB1_26:
	div.u32 	%r74, %r108, %r98;
	cvt.rn.f32.u32	%f29, %r74;
	setp.eq.s32	%p27, %r7, 0;
	mov.f32 	%f114, 0f00000000;
	@%p27 bra 	BB1_35;

	and.b32  	%r76, %r7, 3;
	setp.eq.s32	%p28, %r76, 0;
	mov.f32 	%f114, 0f00000000;
	mov.u32 	%r106, 0;
	@%p28 bra 	BB1_33;

	setp.eq.s32	%p29, %r76, 1;
	mov.f32 	%f111, 0f00000000;
	mov.u32 	%r104, 0;
	@%p29 bra 	BB1_32;

	setp.eq.s32	%p30, %r76, 2;
	mov.f32 	%f110, 0f00000000;
	mov.u32 	%r103, 0;
	@%p30 bra 	BB1_31;

	add.u64 	%rd37, %SP, 0;
	cvta.to.local.u64 	%rd38, %rd37;
	ld.local.f32 	%f79, [%rd38];
	sub.f32 	%f80, %f79, %f29;
	fma.rn.f32 	%f110, %f80, %f80, 0f00000000;
	mov.u32 	%r103, 1;

BB1_31:
	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd39;
	mul.wide.u32 	%rd41, %r103, 4;
	add.s64 	%rd42, %rd40, %rd41;
	ld.local.f32 	%f81, [%rd42];
	sub.f32 	%f82, %f81, %f29;
	fma.rn.f32 	%f111, %f82, %f82, %f110;
	add.s32 	%r104, %r103, 1;

BB1_32:
	add.u64 	%rd43, %SP, 0;
	cvta.to.local.u64 	%rd44, %rd43;
	mul.wide.u32 	%rd45, %r104, 4;
	add.s64 	%rd46, %rd44, %rd45;
	ld.local.f32 	%f83, [%rd46];
	sub.f32 	%f84, %f83, %f29;
	fma.rn.f32 	%f114, %f84, %f84, %f111;
	add.s32 	%r106, %r104, 1;

BB1_33:
	add.u64 	%rd47, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd47;
	setp.lt.u32	%p31, %r7, 4;
	@%p31 bra 	BB1_35;

BB1_34:
	mul.wide.u32 	%rd48, %r106, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.f32 	%f85, [%rd49];
	sub.f32 	%f86, %f85, %f29;
	fma.rn.f32 	%f87, %f86, %f86, %f114;
	add.s32 	%r82, %r106, 1;
	mul.wide.u32 	%rd50, %r82, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.f32 	%f88, [%rd51];
	sub.f32 	%f89, %f88, %f29;
	fma.rn.f32 	%f90, %f89, %f89, %f87;
	add.s32 	%r83, %r106, 2;
	mul.wide.u32 	%rd52, %r83, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.f32 	%f91, [%rd53];
	sub.f32 	%f92, %f91, %f29;
	fma.rn.f32 	%f93, %f92, %f92, %f90;
	add.s32 	%r84, %r106, 3;
	mul.wide.u32 	%rd54, %r84, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.f32 	%f94, [%rd55];
	sub.f32 	%f95, %f94, %f29;
	fma.rn.f32 	%f114, %f95, %f95, %f93;
	add.s32 	%r106, %r106, 4;
	setp.lt.u32	%p32, %r106, %r7;
	@%p32 bra 	BB1_34;

BB1_35:
	add.s32 	%r85, %r7, -1;
	cvt.rn.f32.u32	%f96, %r85;
	div.rn.f32 	%f97, %f114, %f96;
	div.rn.f32 	%f39, %f97, %f29;
	setp.ne.s32	%p33, %r7, 1;
	@%p33 bra 	BB1_37;

	// inline asm
	activemask.b32 %r86;
	// inline asm
	add.u64 	%rd56, %SP, 0;
	cvta.to.local.u64 	%rd57, %rd56;
	ld.local.v2.f32 	{%f98, %f99}, [%rd57];
	sub.f32 	%f102, %f98, %f99;
	abs.f32 	%f103, %f102;
	setp.lt.f32	%p34, %f103, 0f34000000;
	vote.sync.all.pred 	%p35, %p34, %r86;
	mov.u32 	%r107, 2;
	@%p35 bra 	BB1_39;

BB1_37:
	// inline asm
	activemask.b32 %r89;
	// inline asm
	setp.lt.f32	%p36, %f39, 0f3C23D70A;
	vote.sync.all.pred 	%p37, %p36, %r89;
	mov.u32 	%r107, %r98;
	@%p37 bra 	BB1_39;

	// inline asm
	activemask.b32 %r91;
	// inline asm
	setp.le.f32	%p38, %f39, 0f3F800000;
	vote.sync.all.pred 	%p39, %p38, %r91;
	setp.ge.u32	%p40, %r7, %r73;
	and.pred  	%p41, %p39, %p40;
	selp.b32	%r107, %r98, %r9, %p41;

BB1_39:
	setp.lt.u32	%p42, %r98, %r107;
	@%p42 bra 	BB1_12;

BB1_40:
	cvt.rn.f32.u32	%f115, %r107;
	div.u32 	%r94, %r108, %r107;
	cvt.rn.f32.u32	%f116, %r94;

BB1_41:
	mul.lo.s32 	%r95, %r5, %r27;
	cvt.u64.u32	%rd58, %r95;
	cvta.to.global.u64 	%rd59, %rd2;
	add.s64 	%rd60, %rd59, %rd58;
	mul.wide.u32 	%rd61, %r4, 16;
	add.s64 	%rd62, %rd60, %rd61;
	st.global.f32 	[%rd62], %f116;
	st.global.f32 	[%rd62+4], %f115;
	mov.u32 	%r96, 0;
	st.global.u32 	[%rd62+12], %r96;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd62+8], %rs1;
	setp.gt.f32	%p43, %f115, 0f00000000;
	@%p43 bra 	BB1_43;

	mov.u64 	%rd63, $str4;
	cvta.global.u64 	%rd64, %rd63;
	mov.u64 	%rd65, $str2;
	cvta.global.u64 	%rd66, %rd65;
	mov.u32 	%r97, 220;
	mov.u64 	%rd67, 0;
	mov.u64 	%rd68, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd64;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 param2;
	st.param.b32	[param2+0], %r97;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd67;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd68;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB1_43:
	ret;
}

	// .globl	fractalRenderMainDouble
.visible .entry fractalRenderMainDouble(
	.param .u64 fractalRenderMainDouble_param_0,
	.param .u32 fractalRenderMainDouble_param_1,
	.param .align 4 .b8 fractalRenderMainDouble_param_2[8],
	.param .align 8 .b8 fractalRenderMainDouble_param_3[32],
	.param .u32 fractalRenderMainDouble_param_4,
	.param .f32 fractalRenderMainDouble_param_5,
	.param .u32 fractalRenderMainDouble_param_6
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<44>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<79>;
	.reg .b32 	%r<110>;
	.reg .f64 	%fd<41>;
	.reg .b64 	%rd<69>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainDouble_param_0];
	ld.param.u32 	%r27, [fractalRenderMainDouble_param_1];
	ld.param.u32 	%r29, [fractalRenderMainDouble_param_2+4];
	ld.param.u32 	%r28, [fractalRenderMainDouble_param_2];
	ld.param.f64 	%fd25, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd24, [fractalRenderMainDouble_param_3+16];
	ld.param.f64 	%fd23, [fractalRenderMainDouble_param_3+8];
	ld.param.f64 	%fd22, [fractalRenderMainDouble_param_3];
	ld.param.u32 	%r30, [fractalRenderMainDouble_param_4];
	ld.param.f32 	%f25, [fractalRenderMainDouble_param_5];
	ld.param.u32 	%r31, [fractalRenderMainDouble_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd3, $str1;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str2;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r32, 59;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB2_2:
	mov.u32 	%r33, %tid.x;
	mov.u32 	%r34, %tid.y;
	mad.lo.s32 	%r35, %r1, %r34, %r33;
	shl.b32 	%r36, %r1, 2;
	and.b32  	%r37, %r35, 15;
	rem.u32 	%r38, %r35, %r36;
	sub.s32 	%r39, %r38, %r37;
	shr.u32 	%r40, %r39, 2;
	and.b32  	%r41, %r35, 3;
	add.s32 	%r42, %r40, %r41;
	div.u32 	%r43, %r35, %r36;
	shl.b32 	%r44, %r43, 2;
	bfe.u32 	%r45, %r35, 2, 2;
	add.s32 	%r46, %r44, %r45;
	mov.u32 	%r47, %ctaid.x;
	mad.lo.s32 	%r4, %r47, %r1, %r42;
	mov.u32 	%r48, %ctaid.y;
	mov.u32 	%r49, %ntid.y;
	mad.lo.s32 	%r5, %r48, %r49, %r46;
	setp.lt.u32	%p2, %r4, %r28;
	setp.lt.u32	%p3, %r5, %r29;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB2_44;
	bra.uni 	BB2_3;

BB2_3:
	setp.ge.f32	%p5, %f25, 0f3F800000;
	@%p5 bra 	BB2_5;

	mov.u64 	%rd9, $str3;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r50, 213;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r50;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB2_5:
	setp.lt.f32	%p6, %f25, 0f3F800000;
	mov.f32 	%f77, 0f00000000;
	mov.f32 	%f78, %f77;
	@%p6 bra 	BB2_42;

	abs.f32 	%f28, %f25;
	mov.b32 	 %r51, %f25;
	and.b32  	%r52, %r51, -2147483648;
	or.b32  	%r53, %r52, 1056964608;
	mov.b32 	 %f29, %r53;
	add.f32 	%f30, %f29, %f25;
	cvt.rzi.f32.f32	%f31, %f30;
	setp.gt.f32	%p7, %f28, 0f4B000000;
	selp.f32	%f70, %f25, %f31, %p7;
	setp.geu.f32	%p8, %f28, 0f3F000000;
	@%p8 bra 	BB2_8;

	cvt.rzi.f32.f32	%f70, %f25;

BB2_8:
	cvt.rzi.u32.f32	%r54, %f70;
	mov.u32 	%r55, 64;
	min.u32 	%r6, %r55, %r54;
	setp.lt.u32	%p9, %r6, 65;
	@%p9 bra 	BB2_10;

	mov.u64 	%rd15, $str10;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str2;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r56, 113;
	mov.u64 	%rd19, 0;
	mov.u64 	%rd20, 2;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r56;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd20;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB2_10:
	setp.eq.s32	%p10, %r6, 0;
	mov.u32 	%r108, 0;
	mov.u32 	%r107, %r108;
	@%p10 bra 	BB2_41;

	cvt.rn.f64.u32	%fd3, %r4;
	cvt.rn.f64.u32	%fd4, %r5;
	ld.const.f64 	%fd5, [julia_c];
	ld.const.f64 	%fd6, [julia_c+8];
	cvt.rn.f64.u32	%fd26, %r28;
	sub.f64 	%fd27, %fd24, %fd22;
	div.rn.f64 	%fd7, %fd27, %fd26;
	cvt.rn.f64.u32	%fd28, %r29;
	sub.f64 	%fd29, %fd25, %fd23;
	div.rn.f64 	%fd8, %fd29, %fd28;
	mov.u32 	%r98, 0;
	and.b32  	%r72, %r31, 1;
	mov.u32 	%r108, %r98;
	mov.u32 	%r107, %r6;

BB2_12:
	mov.u32 	%r9, %r107;
	mov.u32 	%r7, %r98;
	setp.lt.u32	%p11, %r7, 3;
	@%p11 bra 	BB2_20;
	bra.uni 	BB2_13;

BB2_20:
	cvt.rn.f64.u32	%fd30, %r7;
	div.rn.f64 	%fd37, %fd30, 0d4008000000000000;
	mov.f64 	%fd38, %fd37;
	bra.uni 	BB2_21;

BB2_13:
	add.f32 	%f32, %f25, 0fC0000000;
	sqrt.rn.f32 	%f4, %f32;
	abs.f32 	%f33, %f4;
	mov.b32 	 %r61, %f4;
	and.b32  	%r62, %r61, -2147483648;
	or.b32  	%r63, %r62, 1056964608;
	mov.b32 	 %f34, %r63;
	add.f32 	%f35, %f4, %f34;
	cvt.rzi.f32.f32	%f36, %f35;
	setp.gt.f32	%p12, %f33, 0f4B000000;
	selp.f32	%f71, %f4, %f36, %p12;
	setp.geu.f32	%p13, %f33, 0f3F000000;
	@%p13 bra 	BB2_15;

	cvt.rzi.f32.f32	%f71, %f4;

BB2_15:
	add.s32 	%r64, %r7, -2;
	cvt.rzi.u32.f32	%r65, %f71;
	rem.u32 	%r66, %r64, %r65;
	cvt.rn.f32.u32	%f37, %r66;
	div.rn.f32 	%f8, %f37, %f4;
	div.u32 	%r67, %r64, %r65;
	cvt.rn.f32.u32	%f38, %r67;
	div.rn.f32 	%f9, %f38, %f4;
	setp.le.f32	%p14, %f9, 0f3F800000;
	@%p14 bra 	BB2_17;

	mov.u64 	%rd21, $str11;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str2;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r68, 132;
	mov.u64 	%rd25, 0;
	mov.u64 	%rd26, 2;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r68;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB2_17:
	setp.le.f32	%p15, %f8, 0f3F800000;
	@%p15 bra 	BB2_19;

	mov.u64 	%rd27, $str12;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, $str2;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r69, 133;
	mov.u64 	%rd31, 0;
	mov.u64 	%rd32, 2;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r69;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB2_19:
	cvt.f64.f32	%fd37, %f8;
	cvt.f64.f32	%fd38, %f9;

BB2_21:
	add.f64 	%fd31, %fd4, %fd38;
	neg.f64 	%fd32, %fd31;
	add.f64 	%fd33, %fd3, %fd37;
	fma.rn.f64 	%fd40, %fd7, %fd33, %fd22;
	fma.rn.f64 	%fd39, %fd8, %fd32, %fd25;
	setp.eq.s32	%p16, %r30, 0;
	mov.u32 	%r102, 0;
	@%p16 bra 	BB2_24;

BB2_22:
	mul.f64 	%fd18, %fd39, %fd39;
	mul.f64 	%fd19, %fd40, %fd40;
	add.f64 	%fd34, %fd19, %fd18;
	setp.geu.f64	%p17, %fd34, 0d4010000000000000;
	@%p17 bra 	BB2_24;

	sub.f64 	%fd35, %fd19, %fd18;
	add.f64 	%fd20, %fd5, %fd35;
	add.f64 	%fd36, %fd40, %fd40;
	fma.rn.f64 	%fd39, %fd36, %fd39, %fd6;
	add.s32 	%r102, %r102, 1;
	setp.lt.u32	%p18, %r102, %r30;
	mov.f64 	%fd40, %fd20;
	@%p18 bra 	BB2_22;

BB2_24:
	cvt.rn.f32.u32	%f39, %r102;
	cvt.rzi.u32.f32	%r13, %f39;
	add.s32 	%r108, %r13, %r108;
	setp.gt.u32	%p19, %r7, 9;
	@%p19 bra 	BB2_26;

	cvt.rn.f32.u32	%f40, %r13;
	add.u64 	%rd33, %SP, 0;
	cvta.to.local.u64 	%rd34, %rd33;
	mul.wide.u32 	%rd35, %r7, 4;
	add.s64 	%rd36, %rd34, %rd35;
	st.local.f32 	[%rd36], %f40;

BB2_26:
	setp.lt.u32	%p20, %r7, 10;
	setp.eq.b32	%p21, %r72, 1;
	setp.ne.s32	%p22, %r7, 0;
	and.pred  	%p23, %p20, %p22;
	and.pred  	%p24, %p23, %p21;
	shr.u32 	%r73, %r9, 1;
	setp.eq.s32	%p25, %r7, %r73;
	or.pred  	%p26, %p24, %p25;
	add.s32 	%r98, %r7, 1;
	mov.u32 	%r107, %r9;
	@!%p26 bra 	BB2_40;
	bra.uni 	BB2_27;

BB2_27:
	div.u32 	%r74, %r108, %r98;
	cvt.rn.f32.u32	%f10, %r74;
	setp.eq.s32	%p27, %r7, 0;
	mov.f32 	%f76, 0f00000000;
	@%p27 bra 	BB2_36;

	and.b32  	%r76, %r7, 3;
	setp.eq.s32	%p28, %r76, 0;
	mov.f32 	%f76, 0f00000000;
	mov.u32 	%r106, 0;
	@%p28 bra 	BB2_34;

	setp.eq.s32	%p29, %r76, 1;
	mov.f32 	%f73, 0f00000000;
	mov.u32 	%r104, 0;
	@%p29 bra 	BB2_33;

	setp.eq.s32	%p30, %r76, 2;
	mov.f32 	%f72, 0f00000000;
	mov.u32 	%r103, 0;
	@%p30 bra 	BB2_32;

	add.u64 	%rd37, %SP, 0;
	cvta.to.local.u64 	%rd38, %rd37;
	ld.local.f32 	%f45, [%rd38];
	sub.f32 	%f46, %f45, %f10;
	fma.rn.f32 	%f72, %f46, %f46, 0f00000000;
	mov.u32 	%r103, 1;

BB2_32:
	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd39;
	mul.wide.u32 	%rd41, %r103, 4;
	add.s64 	%rd42, %rd40, %rd41;
	ld.local.f32 	%f47, [%rd42];
	sub.f32 	%f48, %f47, %f10;
	fma.rn.f32 	%f73, %f48, %f48, %f72;
	add.s32 	%r104, %r103, 1;

BB2_33:
	add.u64 	%rd43, %SP, 0;
	cvta.to.local.u64 	%rd44, %rd43;
	mul.wide.u32 	%rd45, %r104, 4;
	add.s64 	%rd46, %rd44, %rd45;
	ld.local.f32 	%f49, [%rd46];
	sub.f32 	%f50, %f49, %f10;
	fma.rn.f32 	%f76, %f50, %f50, %f73;
	add.s32 	%r106, %r104, 1;

BB2_34:
	add.u64 	%rd47, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd47;
	setp.lt.u32	%p31, %r7, 4;
	@%p31 bra 	BB2_36;

BB2_35:
	mul.wide.u32 	%rd48, %r106, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.f32 	%f51, [%rd49];
	sub.f32 	%f52, %f51, %f10;
	fma.rn.f32 	%f53, %f52, %f52, %f76;
	add.s32 	%r82, %r106, 1;
	mul.wide.u32 	%rd50, %r82, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.f32 	%f54, [%rd51];
	sub.f32 	%f55, %f54, %f10;
	fma.rn.f32 	%f56, %f55, %f55, %f53;
	add.s32 	%r83, %r106, 2;
	mul.wide.u32 	%rd52, %r83, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.f32 	%f57, [%rd53];
	sub.f32 	%f58, %f57, %f10;
	fma.rn.f32 	%f59, %f58, %f58, %f56;
	add.s32 	%r84, %r106, 3;
	mul.wide.u32 	%rd54, %r84, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.f32 	%f60, [%rd55];
	sub.f32 	%f61, %f60, %f10;
	fma.rn.f32 	%f76, %f61, %f61, %f59;
	add.s32 	%r106, %r106, 4;
	setp.lt.u32	%p32, %r106, %r7;
	@%p32 bra 	BB2_35;

BB2_36:
	add.s32 	%r85, %r7, -1;
	cvt.rn.f32.u32	%f62, %r85;
	div.rn.f32 	%f63, %f76, %f62;
	div.rn.f32 	%f20, %f63, %f10;
	setp.ne.s32	%p33, %r7, 1;
	@%p33 bra 	BB2_38;

	// inline asm
	activemask.b32 %r86;
	// inline asm
	add.u64 	%rd56, %SP, 0;
	cvta.to.local.u64 	%rd57, %rd56;
	ld.local.v2.f32 	{%f64, %f65}, [%rd57];
	sub.f32 	%f68, %f64, %f65;
	abs.f32 	%f69, %f68;
	setp.lt.f32	%p34, %f69, 0f34000000;
	vote.sync.all.pred 	%p35, %p34, %r86;
	mov.u32 	%r107, 2;
	@%p35 bra 	BB2_40;

BB2_38:
	// inline asm
	activemask.b32 %r89;
	// inline asm
	setp.lt.f32	%p36, %f20, 0f3C23D70A;
	vote.sync.all.pred 	%p37, %p36, %r89;
	mov.u32 	%r107, %r98;
	@%p37 bra 	BB2_40;

	// inline asm
	activemask.b32 %r91;
	// inline asm
	setp.le.f32	%p38, %f20, 0f3F800000;
	vote.sync.all.pred 	%p39, %p38, %r91;
	setp.ge.u32	%p40, %r7, %r73;
	and.pred  	%p41, %p39, %p40;
	selp.b32	%r107, %r98, %r9, %p41;

BB2_40:
	setp.lt.u32	%p42, %r98, %r107;
	@%p42 bra 	BB2_12;

BB2_41:
	cvt.rn.f32.u32	%f77, %r107;
	div.u32 	%r94, %r108, %r107;
	cvt.rn.f32.u32	%f78, %r94;

BB2_42:
	mul.lo.s32 	%r95, %r5, %r27;
	cvt.u64.u32	%rd58, %r95;
	cvta.to.global.u64 	%rd59, %rd2;
	add.s64 	%rd60, %rd59, %rd58;
	mul.wide.u32 	%rd61, %r4, 16;
	add.s64 	%rd62, %rd60, %rd61;
	st.global.f32 	[%rd62], %f78;
	st.global.f32 	[%rd62+4], %f77;
	mov.u32 	%r96, 0;
	st.global.u32 	[%rd62+12], %r96;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd62+8], %rs1;
	setp.gt.f32	%p43, %f77, 0f00000000;
	@%p43 bra 	BB2_44;

	mov.u64 	%rd63, $str4;
	cvta.global.u64 	%rd64, %rd63;
	mov.u64 	%rd65, $str2;
	cvta.global.u64 	%rd66, %rd65;
	mov.u32 	%r97, 220;
	mov.u64 	%rd67, 0;
	mov.u64 	%rd68, 2;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd64;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 param2;
	st.param.b32	[param2+0], %r97;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd67;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd68;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB2_44:
	ret;
}

	// .globl	fractalRenderAdvancedFloat
.visible .entry fractalRenderAdvancedFloat(
	.param .u64 fractalRenderAdvancedFloat_param_0,
	.param .u32 fractalRenderAdvancedFloat_param_1,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_2[8],
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_3[16],
	.param .u32 fractalRenderAdvancedFloat_param_4,
	.param .f32 fractalRenderAdvancedFloat_param_5,
	.param .u32 fractalRenderAdvancedFloat_param_6,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_7[16],
	.param .u64 fractalRenderAdvancedFloat_param_8,
	.param .u32 fractalRenderAdvancedFloat_param_9,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<109>;
	.reg .b16 	%rs<11>;
	.reg .f32 	%f<362>;
	.reg .b32 	%r<211>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<122>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd4, [fractalRenderAdvancedFloat_param_0];
	ld.param.u32 	%r54, [fractalRenderAdvancedFloat_param_1];
	ld.param.u32 	%r56, [fractalRenderAdvancedFloat_param_2+4];
	ld.param.u32 	%r55, [fractalRenderAdvancedFloat_param_2];
	ld.param.f32 	%f116, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f115, [fractalRenderAdvancedFloat_param_3+8];
	ld.param.f32 	%f114, [fractalRenderAdvancedFloat_param_3+4];
	ld.param.f32 	%f113, [fractalRenderAdvancedFloat_param_3];
	ld.param.u32 	%r57, [fractalRenderAdvancedFloat_param_4];
	ld.param.f32 	%f330, [fractalRenderAdvancedFloat_param_5];
	ld.param.u32 	%r58, [fractalRenderAdvancedFloat_param_6];
	ld.param.f32 	%f121, [fractalRenderAdvancedFloat_param_7+12];
	ld.param.f32 	%f120, [fractalRenderAdvancedFloat_param_7+8];
	ld.param.f32 	%f119, [fractalRenderAdvancedFloat_param_7+4];
	ld.param.f32 	%f118, [fractalRenderAdvancedFloat_param_7];
	ld.param.u64 	%rd5, [fractalRenderAdvancedFloat_param_8];
	ld.param.u32 	%r59, [fractalRenderAdvancedFloat_param_9];
	ld.param.u32 	%r61, [fractalRenderAdvancedFloat_param_10+4];
	ld.param.u32 	%r60, [fractalRenderAdvancedFloat_param_10];
	add.u64 	%rd6, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd6;
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p3, %r1, 32;
	@%p3 bra 	BB3_2;

	mov.u64 	%rd7, $str1;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, $str2;
	cvta.global.u64 	%rd10, %rd9;
	mov.u32 	%r62, 59;
	mov.u64 	%rd11, 0;
	mov.u64 	%rd12, 2;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 param2;
	st.param.b32	[param2+0], %r62;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd11;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd12;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB3_2:
	mov.u32 	%r63, %tid.x;
	mov.u32 	%r64, %tid.y;
	mad.lo.s32 	%r65, %r1, %r64, %r63;
	shl.b32 	%r66, %r1, 2;
	and.b32  	%r67, %r65, 15;
	rem.u32 	%r68, %r65, %r66;
	sub.s32 	%r69, %r68, %r67;
	shr.u32 	%r70, %r69, 2;
	and.b32  	%r71, %r65, 3;
	add.s32 	%r72, %r70, %r71;
	div.u32 	%r73, %r65, %r66;
	shl.b32 	%r74, %r73, 2;
	bfe.u32 	%r75, %r65, 2, 2;
	add.s32 	%r76, %r74, %r75;
	mov.u32 	%r77, %ctaid.x;
	mad.lo.s32 	%r4, %r77, %r1, %r72;
	mov.u32 	%r78, %ctaid.y;
	mov.u32 	%r79, %ntid.y;
	mad.lo.s32 	%r5, %r78, %r79, %r76;
	setp.lt.u32	%p4, %r4, %r55;
	setp.gt.u32	%p5, %r56, %r5;
	and.pred  	%p6, %p4, %p5;
	@!%p6 bra 	BB3_96;
	bra.uni 	BB3_3;

BB3_3:
	and.b32  	%r80, %r58, 52;
	mov.u16 	%rs9, 0;
	setp.ne.s32	%p7, %r80, 52;
	@%p7 bra 	BB3_12;

	setp.gt.f32	%p8, %f330, 0f00000000;
	@%p8 bra 	BB3_6;

	mov.u64 	%rd13, $str7;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, $str2;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r81, 254;
	mov.u64 	%rd17, 0;
	mov.u64 	%rd18, 2;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 param2;
	st.param.b32	[param2+0], %r81;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd17;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd18;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 13

BB3_6:
	and.b32  	%r82, %r4, -8;
	cvt.rn.f32.u32	%f122, %r82;
	and.b32  	%r83, %r5, -4;
	cvt.rn.f32.u32	%f123, %r83;
	cvt.rn.f32.u32	%f124, %r60;
	sub.f32 	%f125, %f124, %f122;
	cvt.rn.f32.u32	%f126, %r61;
	sub.f32 	%f127, %f126, %f123;
	mul.f32 	%f128, %f127, %f127;
	fma.rn.f32 	%f129, %f125, %f125, %f128;
	sqrt.rn.f32 	%f130, %f129;
	ld.global.f32 	%f131, [pixelRealWidthInCm];
	mul.f32 	%f132, %f130, %f131;
	ld.global.f32 	%f133, [screenDistance];
	div.rn.f32 	%f1, %f132, %f133;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p9, %f2, 0f3F800000;
	mov.f32 	%f329, %f2;
	@%p9 bra 	BB3_8;

	rcp.rn.f32 	%f329, %f2;

BB3_8:
	mul.rn.f32 	%f134, %f329, %f329;
	mov.f32 	%f135, 0fC0B59883;
	mov.f32 	%f136, 0fBF52C7EA;
	fma.rn.f32 	%f137, %f134, %f136, %f135;
	mov.f32 	%f138, 0fC0D21907;
	fma.rn.f32 	%f139, %f137, %f134, %f138;
	mul.f32 	%f140, %f134, %f139;
	mul.f32 	%f141, %f329, %f140;
	add.f32 	%f142, %f134, 0f41355DC0;
	mov.f32 	%f143, 0f41E6BD60;
	fma.rn.f32 	%f144, %f142, %f134, %f143;
	mov.f32 	%f145, 0f419D92C8;
	fma.rn.f32 	%f146, %f144, %f134, %f145;
	rcp.rn.f32 	%f147, %f146;
	fma.rn.f32 	%f148, %f141, %f147, %f329;
	mov.f32 	%f149, 0f3FC90FDB;
	sub.f32 	%f150, %f149, %f148;
	setp.gt.f32	%p10, %f2, 0f3F800000;
	selp.f32	%f151, %f150, %f148, %p10;
	mov.b32 	 %r84, %f151;
	mov.b32 	 %r85, %f1;
	and.b32  	%r86, %r85, -2147483648;
	or.b32  	%r87, %r84, %r86;
	mov.b32 	 %f152, %r87;
	setp.gtu.f32	%p11, %f2, 0f7F800000;
	selp.f32	%f153, %f151, %f152, %p11;
	mul.f32 	%f154, %f153, 0f43340000;
	div.rn.f32 	%f5, %f154, 0f40490FDB;
	setp.ge.f32	%p12, %f5, 0f00000000;
	@%p12 bra 	BB3_10;

	mov.u64 	%rd19, $str8;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, $str2;
	cvta.global.u64 	%rd22, %rd21;
	mov.u32 	%r88, 264;
	mov.u64 	%rd23, 0;
	mov.u64 	%rd24, 2;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b32 param2;
	st.param.b32	[param2+0], %r88;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14

BB3_10:
	setp.lt.f32	%p13, %f330, 0f3F800000;
	mul.f32 	%f155, %f330, 0f40B00000;
	selp.f32	%f156, %f155, 0f40B00000, %p13;
	add.f32 	%f157, %f156, 0fC2700000;
	rcp.rn.f32 	%f158, %f157;
	mov.f32 	%f159, 0fC2700000;
	div.rn.f32 	%f160, %f159, %f157;
	fma.rn.f32 	%f161, %f5, %f158, %f160;
	mul.f32 	%f330, %f161, %f330;
	setp.gtu.f32	%p14, %f5, %f156;
	@%p14 bra 	BB3_12;

	cvt.f64.f32	%fd1, %f330;
	mov.f64 	%fd2, 0d3FF0000000000000;
	max.f64 	%fd3, %fd2, %fd1;
	cvt.rn.f32.f64	%f330, %fd3;
	mov.u16 	%rs9, 1;

BB3_12:
	and.b32  	%r89, %r58, 8;
	setp.eq.s32	%p16, %r89, 0;
	mov.pred 	%p108, -1;
	mov.f32 	%f359, 0f00000000;
	@%p16 bra 	BB3_13;

	sub.s32 	%r90, %r56, %r5;
	cvt.rn.f32.u32	%f164, %r90;
	cvt.rn.f32.u32	%f165, %r55;
	cvt.rn.f32.u32	%f166, %r4;
	div.rn.f32 	%f167, %f166, %f165;
	cvt.rn.f32.u32	%f168, %r56;
	div.rn.f32 	%f169, %f164, %f168;
	sub.f32 	%f170, %f115, %f113;
	sub.f32 	%f171, %f116, %f114;
	fma.rn.f32 	%f172, %f170, %f167, %f113;
	fma.rn.f32 	%f173, %f171, %f169, %f114;
	sub.f32 	%f174, %f172, %f118;
	sub.f32 	%f175, %f173, %f119;
	sub.f32 	%f176, %f120, %f118;
	div.rn.f32 	%f177, %f174, %f176;
	sub.f32 	%f178, %f121, %f119;
	div.rn.f32 	%f179, %f175, %f178;
	mul.f32 	%f13, %f165, %f177;
	mul.f32 	%f180, %f168, %f179;
	sub.f32 	%f14, %f168, %f180;
	abs.f32 	%f181, %f13;
	mov.b32 	 %r91, %f13;
	and.b32  	%r92, %r91, -2147483648;
	or.b32  	%r93, %r92, 1056964608;
	mov.b32 	 %f182, %r93;
	add.f32 	%f183, %f13, %f182;
	cvt.rzi.f32.f32	%f184, %f183;
	setp.gt.f32	%p17, %f181, 0f4B000000;
	selp.f32	%f331, %f13, %f184, %p17;
	setp.geu.f32	%p18, %f181, 0f3F000000;
	@%p18 bra 	BB3_16;

	cvt.rzi.f32.f32	%f331, %f13;

BB3_16:
	cvt.rzi.s32.f32	%r6, %f331;
	mov.b32 	 %r94, %f14;
	and.b32  	%r95, %r94, -2147483648;
	or.b32  	%r96, %r95, 1056964608;
	mov.b32 	 %f185, %r96;
	add.f32 	%f186, %f14, %f185;
	cvt.rzi.f32.f32	%f187, %f186;
	abs.f32 	%f188, %f14;
	setp.gt.f32	%p19, %f188, 0f4B000000;
	selp.f32	%f332, %f14, %f187, %p19;
	setp.geu.f32	%p20, %f188, 0f3F000000;
	@%p20 bra 	BB3_18;

	cvt.rzi.f32.f32	%f332, %f14;

BB3_18:
	add.s32 	%r97, %r55, -2;
	setp.lt.u32	%p22, %r6, %r97;
	setp.gt.s32	%p23, %r6, 1;
	and.pred  	%p24, %p23, %p22;
	cvt.rzi.s32.f32	%r98, %f332;
	setp.gt.s32	%p25, %r98, 1;
	and.pred  	%p26, %p24, %p25;
	add.s32 	%r99, %r56, -2;
	setp.lt.u32	%p27, %r98, %r99;
	and.pred  	%p28, %p27, %p26;
	mov.f32 	%f334, %f359;
	@!%p28 bra 	BB3_20;
	bra.uni 	BB3_19;

BB3_19:
	cvt.rmi.f32.f32	%f191, %f13;
	cvt.rzi.u32.f32	%r100, %f191;
	cvt.rmi.f32.f32	%f192, %f14;
	cvt.rzi.u32.f32	%r101, %f192;
	cvt.rn.f32.u32	%f193, %r100;
	sub.f32 	%f194, %f13, %f193;
	cvt.rn.f32.u32	%f195, %r101;
	sub.f32 	%f196, %f14, %f195;
	mul.lo.s32 	%r102, %r101, %r59;
	cvt.u64.u32	%rd25, %r102;
	cvta.to.global.u64 	%rd26, %rd5;
	add.s64 	%rd27, %rd26, %rd25;
	mul.wide.u32 	%rd28, %r100, 16;
	add.s64 	%rd29, %rd27, %rd28;
	add.s32 	%r103, %r100, 1;
	mul.wide.u32 	%rd30, %r103, 16;
	add.s64 	%rd31, %rd27, %rd30;
	add.s32 	%r104, %r101, 1;
	mul.lo.s32 	%r105, %r104, %r59;
	cvt.u64.u32	%rd32, %r105;
	add.s64 	%rd33, %rd26, %rd32;
	add.s64 	%rd34, %rd33, %rd28;
	add.s64 	%rd35, %rd33, %rd30;
	mov.f32 	%f197, 0f3F800000;
	sub.f32 	%f198, %f197, %f194;
	ld.global.f32 	%f199, [%rd29];
	ld.global.f32 	%f200, [%rd31];
	mul.f32 	%f201, %f194, %f200;
	fma.rn.f32 	%f202, %f199, %f198, %f201;
	sub.f32 	%f203, %f197, %f196;
	ld.global.f32 	%f204, [%rd34];
	ld.global.f32 	%f205, [%rd35];
	mul.f32 	%f206, %f194, %f205;
	fma.rn.f32 	%f207, %f198, %f204, %f206;
	mul.f32 	%f208, %f196, %f207;
	fma.rn.f32 	%f359, %f203, %f202, %f208;
	ld.global.f32 	%f209, [%rd29+4];
	ld.global.f32 	%f210, [%rd31+4];
	mul.f32 	%f211, %f194, %f210;
	fma.rn.f32 	%f212, %f198, %f209, %f211;
	ld.global.f32 	%f213, [%rd34+4];
	ld.global.f32 	%f214, [%rd35+4];
	mul.f32 	%f215, %f194, %f214;
	fma.rn.f32 	%f216, %f198, %f213, %f215;
	mul.f32 	%f217, %f196, %f216;
	fma.rn.f32 	%f334, %f203, %f212, %f217;
	cvt.f64.f32	%fd4, %f334;
	setp.lt.f64	%p108, %fd4, 0d3FB999999999999A;
	bra.uni 	BB3_20;

BB3_13:
	mov.f32 	%f334, %f359;

BB3_20:
	@%p108 bra 	BB3_59;
	bra.uni 	BB3_21;

BB3_59:
	setp.lt.f32	%p70, %f330, 0f3F800000;
	selp.f32	%f69, 0f3F800000, %f330, %p70;
	abs.f32 	%f276, %f69;
	mov.b32 	 %r147, %f69;
	and.b32  	%r148, %r147, -2147483648;
	or.b32  	%r149, %r148, 1056964608;
	mov.b32 	 %f277, %r149;
	add.f32 	%f278, %f69, %f277;
	cvt.rzi.f32.f32	%f279, %f278;
	setp.gt.f32	%p71, %f276, 0f4B000000;
	selp.f32	%f348, %f69, %f279, %p71;
	setp.geu.f32	%p72, %f276, 0f3F000000;
	@%p72 bra 	BB3_61;

	cvt.rzi.f32.f32	%f348, %f69;

BB3_61:
	cvt.rzi.u32.f32	%r150, %f348;
	mov.u32 	%r151, 64;
	min.u32 	%r30, %r151, %r150;
	cvt.rn.f32.u32	%f280, %r55;
	sub.f32 	%f281, %f115, %f113;
	div.rn.f32 	%f73, %f281, %f280;
	cvt.rn.f32.u32	%f282, %r56;
	sub.f32 	%f283, %f116, %f114;
	div.rn.f32 	%f74, %f283, %f282;
	setp.lt.u32	%p73, %r30, 65;
	@%p73 bra 	BB3_63;

	mov.u64 	%rd79, $str10;
	cvta.global.u64 	%rd80, %rd79;
	mov.u64 	%rd81, $str2;
	cvta.global.u64 	%rd82, %rd81;
	mov.u32 	%r152, 113;
	mov.u64 	%rd83, 0;
	mov.u64 	%rd84, 2;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd80;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd82;
	.param .b32 param2;
	st.param.b32	[param2+0], %r152;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd83;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd84;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 18

BB3_63:
	setp.eq.s32	%p74, %r30, 0;
	mov.u32 	%r209, 0;
	mov.u32 	%r208, %r209;
	@%p74 bra 	BB3_93;

	cvt.rn.f32.u32	%f75, %r4;
	cvt.rn.f32.u32	%f76, %r5;
	ld.const.f64 	%fd7, [julia_c];
	cvt.rn.f32.f64	%f77, %fd7;
	ld.const.f64 	%fd8, [julia_c+8];
	cvt.rn.f32.f64	%f78, %fd8;
	add.f32 	%f79, %f69, 0fC0000000;
	and.b32  	%r31, %r58, 1;
	mov.u32 	%r199, 0;
	sqrt.rn.f32 	%f80, %f79;
	mov.u32 	%r209, %r199;
	mov.u32 	%r208, %r30;

BB3_65:
	mov.u32 	%r34, %r208;
	mov.u32 	%r32, %r199;
	setp.lt.u32	%p75, %r32, 3;
	@%p75 bra 	BB3_72;
	bra.uni 	BB3_66;

BB3_72:
	cvt.rn.f32.u32	%f290, %r32;
	div.rn.f32 	%f350, %f290, 0f40400000;
	mov.f32 	%f351, %f350;
	bra.uni 	BB3_73;

BB3_66:
	abs.f32 	%f284, %f80;
	mov.b32 	 %r157, %f80;
	and.b32  	%r158, %r157, -2147483648;
	or.b32  	%r159, %r158, 1056964608;
	mov.b32 	 %f285, %r159;
	add.f32 	%f286, %f80, %f285;
	cvt.rzi.f32.f32	%f287, %f286;
	setp.gt.f32	%p76, %f284, 0f4B000000;
	selp.f32	%f349, %f80, %f287, %p76;
	setp.geu.f32	%p77, %f284, 0f3F000000;
	@%p77 bra 	BB3_68;

	cvt.rzi.f32.f32	%f349, %f80;

BB3_68:
	add.s32 	%r160, %r32, -2;
	cvt.rzi.u32.f32	%r161, %f349;
	rem.u32 	%r162, %r160, %r161;
	cvt.rn.f32.u32	%f288, %r162;
	div.rn.f32 	%f350, %f288, %f80;
	div.u32 	%r163, %r160, %r161;
	cvt.rn.f32.u32	%f289, %r163;
	div.rn.f32 	%f351, %f289, %f80;
	setp.le.f32	%p78, %f351, 0f3F800000;
	@%p78 bra 	BB3_70;

	mov.u64 	%rd85, $str11;
	cvta.global.u64 	%rd86, %rd85;
	mov.u64 	%rd87, $str2;
	cvta.global.u64 	%rd88, %rd87;
	mov.u32 	%r164, 132;
	mov.u64 	%rd89, 0;
	mov.u64 	%rd90, 2;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd86;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd88;
	.param .b32 param2;
	st.param.b32	[param2+0], %r164;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd89;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd90;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 19

BB3_70:
	setp.le.f32	%p79, %f350, 0f3F800000;
	@%p79 bra 	BB3_73;

	mov.u64 	%rd91, $str12;
	cvta.global.u64 	%rd92, %rd91;
	mov.u64 	%rd93, $str2;
	cvta.global.u64 	%rd94, %rd93;
	mov.u32 	%r165, 133;
	mov.u64 	%rd95, 0;
	mov.u64 	%rd96, 2;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd92;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd94;
	.param .b32 param2;
	st.param.b32	[param2+0], %r165;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd95;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd96;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 20

BB3_73:
	add.f32 	%f291, %f76, %f351;
	neg.f32 	%f292, %f291;
	add.f32 	%f293, %f75, %f350;
	fma.rn.f32 	%f353, %f73, %f293, %f113;
	fma.rn.f32 	%f352, %f74, %f292, %f116;
	setp.eq.s32	%p80, %r57, 0;
	mov.u32 	%r203, 0;
	@%p80 bra 	BB3_76;

BB3_74:
	mul.f32 	%f93, %f352, %f352;
	mul.f32 	%f94, %f353, %f353;
	add.f32 	%f294, %f94, %f93;
	setp.geu.f32	%p81, %f294, 0f40800000;
	@%p81 bra 	BB3_76;

	sub.f32 	%f295, %f94, %f93;
	add.f32 	%f95, %f77, %f295;
	add.f32 	%f296, %f353, %f353;
	fma.rn.f32 	%f352, %f296, %f352, %f78;
	add.s32 	%r203, %r203, 1;
	setp.lt.u32	%p82, %r203, %r57;
	mov.f32 	%f353, %f95;
	@%p82 bra 	BB3_74;

BB3_76:
	cvt.rn.f32.u32	%f297, %r203;
	cvt.rzi.u32.f32	%r38, %f297;
	add.s32 	%r209, %r38, %r209;
	setp.gt.u32	%p83, %r32, 9;
	@%p83 bra 	BB3_78;

	cvt.rn.f32.u32	%f298, %r38;
	mul.wide.u32 	%rd97, %r32, 4;
	add.s64 	%rd98, %rd1, %rd97;
	st.local.f32 	[%rd98], %f298;

BB3_78:
	setp.lt.u32	%p84, %r32, 10;
	setp.ne.s32	%p85, %r32, 0;
	and.pred  	%p86, %p84, %p85;
	setp.ne.s32	%p87, %r31, 0;
	and.pred  	%p88, %p86, %p87;
	shr.u32 	%r40, %r34, 1;
	setp.eq.s32	%p89, %r32, %r40;
	or.pred  	%p90, %p88, %p89;
	add.s32 	%r199, %r32, 1;
	mov.u32 	%r208, %r34;
	@!%p90 bra 	BB3_92;
	bra.uni 	BB3_79;

BB3_79:
	div.u32 	%r168, %r209, %r199;
	cvt.rn.f32.u32	%f97, %r168;
	setp.eq.s32	%p91, %r32, 0;
	mov.f32 	%f358, 0f00000000;
	@%p91 bra 	BB3_88;

	and.b32  	%r42, %r32, 3;
	setp.eq.s32	%p92, %r42, 0;
	mov.f32 	%f358, 0f00000000;
	mov.u32 	%r207, 0;
	@%p92 bra 	BB3_86;

	setp.eq.s32	%p93, %r42, 1;
	mov.f32 	%f355, 0f00000000;
	mov.u32 	%r205, 0;
	@%p93 bra 	BB3_85;

	setp.eq.s32	%p94, %r42, 2;
	mov.f32 	%f354, 0f00000000;
	mov.u32 	%r204, 0;
	@%p94 bra 	BB3_84;

	ld.local.f32 	%f303, [%rd1];
	sub.f32 	%f304, %f303, %f97;
	fma.rn.f32 	%f354, %f304, %f304, 0f00000000;
	mov.u32 	%r204, 1;

BB3_84:
	mul.wide.u32 	%rd99, %r204, 4;
	add.s64 	%rd100, %rd1, %rd99;
	ld.local.f32 	%f305, [%rd100];
	sub.f32 	%f306, %f305, %f97;
	fma.rn.f32 	%f355, %f306, %f306, %f354;
	add.s32 	%r205, %r204, 1;

BB3_85:
	mul.wide.u32 	%rd101, %r205, 4;
	add.s64 	%rd102, %rd1, %rd101;
	ld.local.f32 	%f307, [%rd102];
	sub.f32 	%f308, %f307, %f97;
	fma.rn.f32 	%f358, %f308, %f308, %f355;
	add.s32 	%r207, %r205, 1;

BB3_86:
	setp.lt.u32	%p95, %r32, 4;
	@%p95 bra 	BB3_88;

BB3_87:
	mul.wide.u32 	%rd103, %r207, 4;
	add.s64 	%rd104, %rd1, %rd103;
	ld.local.f32 	%f309, [%rd104];
	sub.f32 	%f310, %f309, %f97;
	fma.rn.f32 	%f311, %f310, %f310, %f358;
	add.s32 	%r173, %r207, 1;
	mul.wide.u32 	%rd105, %r173, 4;
	add.s64 	%rd106, %rd1, %rd105;
	ld.local.f32 	%f312, [%rd106];
	sub.f32 	%f313, %f312, %f97;
	fma.rn.f32 	%f314, %f313, %f313, %f311;
	add.s32 	%r174, %r207, 2;
	mul.wide.u32 	%rd107, %r174, 4;
	add.s64 	%rd108, %rd1, %rd107;
	ld.local.f32 	%f315, [%rd108];
	sub.f32 	%f316, %f315, %f97;
	fma.rn.f32 	%f317, %f316, %f316, %f314;
	add.s32 	%r175, %r207, 3;
	mul.wide.u32 	%rd109, %r175, 4;
	add.s64 	%rd110, %rd1, %rd109;
	ld.local.f32 	%f318, [%rd110];
	sub.f32 	%f319, %f318, %f97;
	fma.rn.f32 	%f358, %f319, %f319, %f317;
	add.s32 	%r207, %r207, 4;
	setp.lt.u32	%p96, %r207, %r32;
	@%p96 bra 	BB3_87;

BB3_88:
	add.s32 	%r176, %r32, -1;
	cvt.rn.f32.u32	%f320, %r176;
	div.rn.f32 	%f321, %f358, %f320;
	div.rn.f32 	%f107, %f321, %f97;
	setp.ne.s32	%p97, %r32, 1;
	@%p97 bra 	BB3_90;

	// inline asm
	activemask.b32 %r177;
	// inline asm
	ld.local.v2.f32 	{%f322, %f323}, [%rd1];
	sub.f32 	%f326, %f322, %f323;
	abs.f32 	%f327, %f326;
	setp.lt.f32	%p98, %f327, 0f34000000;
	vote.sync.all.pred 	%p99, %p98, %r177;
	mov.u32 	%r208, 2;
	@%p99 bra 	BB3_92;

BB3_90:
	// inline asm
	activemask.b32 %r180;
	// inline asm
	setp.lt.f32	%p100, %f107, 0f3C23D70A;
	vote.sync.all.pred 	%p101, %p100, %r180;
	mov.u32 	%r208, %r199;
	@%p101 bra 	BB3_92;

	// inline asm
	activemask.b32 %r182;
	// inline asm
	setp.le.f32	%p102, %f107, 0f3F800000;
	vote.sync.all.pred 	%p103, %p102, %r182;
	setp.ge.u32	%p104, %r32, %r40;
	and.pred  	%p105, %p103, %p104;
	selp.b32	%r208, %r199, %r34, %p105;

BB3_92:
	setp.lt.u32	%p106, %r199, %r208;
	@%p106 bra 	BB3_65;

BB3_93:
	cvt.rn.f32.u32	%f334, %r208;
	div.u32 	%r184, %r209, %r208;
	cvt.rn.f32.u32	%f359, %r184;
	mov.f32 	%f361, 0f00000000;
	mov.u16 	%rs10, 0;
	bra.uni 	BB3_94;

BB3_21:
	shr.u32 	%r106, %r58, 5;
	and.b32  	%r107, %r106, 1;
	setp.eq.b32	%p29, %r107, 1;
	not.pred 	%p30, %p29;
	setp.eq.s16	%p31, %rs9, 0;
	mov.f32 	%f361, 0f00000000;
	mov.u16 	%rs10, 1;
	or.pred  	%p32, %p31, %p30;
	@%p32 bra 	BB3_94;

	setp.lt.f32	%p33, %f330, 0f3F800000;
	mov.f32 	%f361, 0f00000000;
	mov.f32 	%f347, %f361;
	@%p33 bra 	BB3_58;

	abs.f32 	%f221, %f330;
	mov.b32 	 %r108, %f330;
	and.b32  	%r109, %r108, -2147483648;
	or.b32  	%r110, %r109, 1056964608;
	mov.b32 	 %f222, %r110;
	add.f32 	%f223, %f330, %f222;
	cvt.rzi.f32.f32	%f224, %f223;
	setp.gt.f32	%p34, %f221, 0f4B000000;
	selp.f32	%f335, %f330, %f224, %p34;
	setp.geu.f32	%p35, %f221, 0f3F000000;
	@%p35 bra 	BB3_25;

	cvt.rzi.f32.f32	%f335, %f330;

BB3_25:
	cvt.rzi.u32.f32	%r111, %f335;
	mov.u32 	%r112, 64;
	min.u32 	%r7, %r112, %r111;
	cvt.rn.f32.u32	%f225, %r55;
	sub.f32 	%f226, %f115, %f113;
	div.rn.f32 	%f28, %f226, %f225;
	cvt.rn.f32.u32	%f227, %r56;
	sub.f32 	%f228, %f116, %f114;
	div.rn.f32 	%f29, %f228, %f227;
	setp.lt.u32	%p36, %r7, 65;
	@%p36 bra 	BB3_27;

	mov.u64 	%rd36, $str10;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, $str2;
	cvta.global.u64 	%rd39, %rd38;
	mov.u32 	%r113, 113;
	mov.u64 	%rd40, 0;
	mov.u64 	%rd41, 2;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd37;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b32 param2;
	st.param.b32	[param2+0], %r113;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd40;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd41;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 15

BB3_27:
	setp.eq.s32	%p37, %r7, 0;
	mov.u32 	%r197, 0;
	mov.u32 	%r196, %r197;
	@%p37 bra 	BB3_57;

	cvt.rn.f32.u32	%f30, %r4;
	cvt.rn.f32.u32	%f31, %r5;
	ld.const.f64 	%fd5, [julia_c];
	cvt.rn.f32.f64	%f32, %fd5;
	ld.const.f64 	%fd6, [julia_c+8];
	cvt.rn.f32.f64	%f33, %fd6;
	add.f32 	%f34, %f330, 0fC0000000;
	mov.u32 	%r187, 0;
	sqrt.rn.f32 	%f35, %f34;
	mov.u32 	%r197, %r187;
	mov.u32 	%r196, %r7;

BB3_29:
	mov.u32 	%r10, %r196;
	mov.u32 	%r8, %r187;
	setp.lt.u32	%p38, %r8, 3;
	@%p38 bra 	BB3_36;
	bra.uni 	BB3_30;

BB3_36:
	cvt.rn.f32.u32	%f235, %r8;
	div.rn.f32 	%f337, %f235, 0f40400000;
	mov.f32 	%f338, %f337;
	bra.uni 	BB3_37;

BB3_30:
	abs.f32 	%f229, %f35;
	mov.b32 	 %r118, %f35;
	and.b32  	%r119, %r118, -2147483648;
	or.b32  	%r120, %r119, 1056964608;
	mov.b32 	 %f230, %r120;
	add.f32 	%f231, %f35, %f230;
	cvt.rzi.f32.f32	%f232, %f231;
	setp.gt.f32	%p39, %f229, 0f4B000000;
	selp.f32	%f336, %f35, %f232, %p39;
	setp.geu.f32	%p40, %f229, 0f3F000000;
	@%p40 bra 	BB3_32;

	cvt.rzi.f32.f32	%f336, %f35;

BB3_32:
	add.s32 	%r121, %r8, -2;
	cvt.rzi.u32.f32	%r122, %f336;
	rem.u32 	%r123, %r121, %r122;
	cvt.rn.f32.u32	%f233, %r123;
	div.rn.f32 	%f337, %f233, %f35;
	div.u32 	%r124, %r121, %r122;
	cvt.rn.f32.u32	%f234, %r124;
	div.rn.f32 	%f338, %f234, %f35;
	setp.le.f32	%p41, %f338, 0f3F800000;
	@%p41 bra 	BB3_34;

	mov.u64 	%rd42, $str11;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, $str2;
	cvta.global.u64 	%rd45, %rd44;
	mov.u32 	%r125, 132;
	mov.u64 	%rd46, 0;
	mov.u64 	%rd47, 2;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd45;
	.param .b32 param2;
	st.param.b32	[param2+0], %r125;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd46;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd47;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 16

BB3_34:
	setp.le.f32	%p42, %f337, 0f3F800000;
	@%p42 bra 	BB3_37;

	mov.u64 	%rd48, $str12;
	cvta.global.u64 	%rd49, %rd48;
	mov.u64 	%rd50, $str2;
	cvta.global.u64 	%rd51, %rd50;
	mov.u32 	%r126, 133;
	mov.u64 	%rd52, 0;
	mov.u64 	%rd53, 2;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd49;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 param2;
	st.param.b32	[param2+0], %r126;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd52;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd53;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 17

BB3_37:
	add.f32 	%f236, %f31, %f338;
	neg.f32 	%f237, %f236;
	add.f32 	%f238, %f30, %f337;
	fma.rn.f32 	%f340, %f28, %f238, %f113;
	fma.rn.f32 	%f339, %f29, %f237, %f116;
	setp.eq.s32	%p43, %r57, 0;
	mov.u32 	%r191, 0;
	@%p43 bra 	BB3_40;

BB3_38:
	mul.f32 	%f48, %f339, %f339;
	mul.f32 	%f49, %f340, %f340;
	add.f32 	%f239, %f49, %f48;
	setp.geu.f32	%p44, %f239, 0f40800000;
	@%p44 bra 	BB3_40;

	sub.f32 	%f240, %f49, %f48;
	add.f32 	%f50, %f32, %f240;
	add.f32 	%f241, %f340, %f340;
	fma.rn.f32 	%f339, %f241, %f339, %f33;
	add.s32 	%r191, %r191, 1;
	setp.lt.u32	%p45, %r191, %r57;
	mov.f32 	%f340, %f50;
	@%p45 bra 	BB3_38;

BB3_40:
	cvt.rn.f32.u32	%f242, %r191;
	cvt.rzi.u32.f32	%r14, %f242;
	add.s32 	%r197, %r14, %r197;
	setp.gt.u32	%p46, %r8, 9;
	@%p46 bra 	BB3_42;

	cvt.rn.f32.u32	%f243, %r14;
	mul.wide.u32 	%rd56, %r8, 4;
	add.s64 	%rd57, %rd1, %rd56;
	st.local.f32 	[%rd57], %f243;

BB3_42:
	setp.lt.u32	%p47, %r8, 10;
	and.b32  	%r129, %r58, 1;
	setp.eq.b32	%p48, %r129, 1;
	setp.ne.s32	%p49, %r8, 0;
	and.pred  	%p50, %p47, %p49;
	and.pred  	%p51, %p50, %p48;
	shr.u32 	%r16, %r10, 1;
	setp.eq.s32	%p52, %r8, %r16;
	or.pred  	%p53, %p51, %p52;
	add.s32 	%r187, %r8, 1;
	mov.u32 	%r196, %r10;
	@!%p53 bra 	BB3_56;
	bra.uni 	BB3_43;

BB3_43:
	div.u32 	%r130, %r197, %r187;
	cvt.rn.f32.u32	%f52, %r130;
	setp.eq.s32	%p54, %r8, 0;
	mov.f32 	%f345, 0f00000000;
	@%p54 bra 	BB3_52;

	and.b32  	%r18, %r8, 3;
	setp.eq.s32	%p55, %r18, 0;
	mov.f32 	%f345, 0f00000000;
	mov.u32 	%r195, 0;
	@%p55 bra 	BB3_50;

	setp.eq.s32	%p56, %r18, 1;
	mov.f32 	%f342, 0f00000000;
	mov.u32 	%r193, 0;
	@%p56 bra 	BB3_49;

	setp.eq.s32	%p57, %r18, 2;
	mov.f32 	%f341, 0f00000000;
	mov.u32 	%r192, 0;
	@%p57 bra 	BB3_48;

	ld.local.f32 	%f248, [%rd1];
	sub.f32 	%f249, %f248, %f52;
	fma.rn.f32 	%f341, %f249, %f249, 0f00000000;
	mov.u32 	%r192, 1;

BB3_48:
	mul.wide.u32 	%rd62, %r192, 4;
	add.s64 	%rd63, %rd1, %rd62;
	ld.local.f32 	%f250, [%rd63];
	sub.f32 	%f251, %f250, %f52;
	fma.rn.f32 	%f342, %f251, %f251, %f341;
	add.s32 	%r193, %r192, 1;

BB3_49:
	mul.wide.u32 	%rd66, %r193, 4;
	add.s64 	%rd67, %rd1, %rd66;
	ld.local.f32 	%f252, [%rd67];
	sub.f32 	%f253, %f252, %f52;
	fma.rn.f32 	%f345, %f253, %f253, %f342;
	add.s32 	%r195, %r193, 1;

BB3_50:
	setp.lt.u32	%p58, %r8, 4;
	@%p58 bra 	BB3_52;

BB3_51:
	mul.wide.u32 	%rd69, %r195, 4;
	add.s64 	%rd70, %rd1, %rd69;
	ld.local.f32 	%f254, [%rd70];
	sub.f32 	%f255, %f254, %f52;
	fma.rn.f32 	%f256, %f255, %f255, %f345;
	add.s32 	%r135, %r195, 1;
	mul.wide.u32 	%rd71, %r135, 4;
	add.s64 	%rd72, %rd1, %rd71;
	ld.local.f32 	%f257, [%rd72];
	sub.f32 	%f258, %f257, %f52;
	fma.rn.f32 	%f259, %f258, %f258, %f256;
	add.s32 	%r136, %r195, 2;
	mul.wide.u32 	%rd73, %r136, 4;
	add.s64 	%rd74, %rd1, %rd73;
	ld.local.f32 	%f260, [%rd74];
	sub.f32 	%f261, %f260, %f52;
	fma.rn.f32 	%f262, %f261, %f261, %f259;
	add.s32 	%r137, %r195, 3;
	mul.wide.u32 	%rd75, %r137, 4;
	add.s64 	%rd76, %rd1, %rd75;
	ld.local.f32 	%f263, [%rd76];
	sub.f32 	%f264, %f263, %f52;
	fma.rn.f32 	%f345, %f264, %f264, %f262;
	add.s32 	%r195, %r195, 4;
	setp.lt.u32	%p59, %r195, %r8;
	@%p59 bra 	BB3_51;

BB3_52:
	add.s32 	%r138, %r8, -1;
	cvt.rn.f32.u32	%f265, %r138;
	div.rn.f32 	%f266, %f345, %f265;
	div.rn.f32 	%f62, %f266, %f52;
	setp.ne.s32	%p60, %r8, 1;
	@%p60 bra 	BB3_54;

	// inline asm
	activemask.b32 %r139;
	// inline asm
	ld.local.v2.f32 	{%f267, %f268}, [%rd1];
	sub.f32 	%f271, %f267, %f268;
	abs.f32 	%f272, %f271;
	setp.lt.f32	%p61, %f272, 0f34000000;
	vote.sync.all.pred 	%p62, %p61, %r139;
	mov.u32 	%r196, 2;
	@%p62 bra 	BB3_56;

BB3_54:
	// inline asm
	activemask.b32 %r142;
	// inline asm
	setp.lt.f32	%p63, %f62, 0f3C23D70A;
	vote.sync.all.pred 	%p64, %p63, %r142;
	mov.u32 	%r196, %r187;
	@%p64 bra 	BB3_56;

	// inline asm
	activemask.b32 %r144;
	// inline asm
	setp.le.f32	%p65, %f62, 0f3F800000;
	vote.sync.all.pred 	%p66, %p65, %r144;
	setp.ge.u32	%p67, %r8, %r16;
	and.pred  	%p68, %p66, %p67;
	selp.b32	%r196, %r187, %r10, %p68;

BB3_56:
	setp.lt.u32	%p69, %r187, %r196;
	@%p69 bra 	BB3_29;

BB3_57:
	cvt.rn.f32.u32	%f361, %r196;
	div.u32 	%r146, %r197, %r196;
	cvt.rn.f32.u32	%f347, %r146;

BB3_58:
	mul.f32 	%f273, %f334, 0f3F400000;
	add.f32 	%f334, %f273, %f361;
	mul.f32 	%f274, %f361, %f347;
	fma.rn.f32 	%f275, %f359, %f273, %f274;
	div.rn.f32 	%f359, %f275, %f334;

BB3_94:
	mul.lo.s32 	%r185, %r5, %r54;
	cvt.u64.u32	%rd111, %r185;
	cvta.to.global.u64 	%rd112, %rd4;
	add.s64 	%rd113, %rd112, %rd111;
	mul.wide.u32 	%rd114, %r4, 16;
	add.s64 	%rd115, %rd113, %rd114;
	st.global.f32 	[%rd115], %f359;
	st.global.f32 	[%rd115+4], %f334;
	st.global.f32 	[%rd115+12], %f361;
	st.global.u8 	[%rd115+8], %rs10;
	setp.gt.f32	%p107, %f334, 0f00000000;
	@%p107 bra 	BB3_96;

	mov.u64 	%rd116, $str9;
	cvta.global.u64 	%rd117, %rd116;
	mov.u64 	%rd118, $str2;
	cvta.global.u64 	%rd119, %rd118;
	mov.u32 	%r186, 378;
	mov.u64 	%rd120, 0;
	mov.u64 	%rd121, 2;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd117;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd119;
	.param .b32 param2;
	st.param.b32	[param2+0], %r186;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd120;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd121;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 21

BB3_96:
	ret;
}

	// .globl	fractalRenderAdvancedDouble
.visible .entry fractalRenderAdvancedDouble(
	.param .u64 fractalRenderAdvancedDouble_param_0,
	.param .u32 fractalRenderAdvancedDouble_param_1,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_2[8],
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_3[32],
	.param .u32 fractalRenderAdvancedDouble_param_4,
	.param .f32 fractalRenderAdvancedDouble_param_5,
	.param .u32 fractalRenderAdvancedDouble_param_6,
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_7[32],
	.param .u64 fractalRenderAdvancedDouble_param_8,
	.param .u32 fractalRenderAdvancedDouble_param_9,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot4[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<109>;
	.reg .b16 	%rs<11>;
	.reg .f32 	%f<274>;
	.reg .b32 	%r<211>;
	.reg .f64 	%fd<101>;
	.reg .b64 	%rd<122>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd4, [fractalRenderAdvancedDouble_param_0];
	ld.param.u32 	%r54, [fractalRenderAdvancedDouble_param_1];
	ld.param.u32 	%r56, [fractalRenderAdvancedDouble_param_2+4];
	ld.param.u32 	%r55, [fractalRenderAdvancedDouble_param_2];
	ld.param.f64 	%fd46, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd45, [fractalRenderAdvancedDouble_param_3+16];
	ld.param.f64 	%fd44, [fractalRenderAdvancedDouble_param_3+8];
	ld.param.f64 	%fd43, [fractalRenderAdvancedDouble_param_3];
	ld.param.u32 	%r57, [fractalRenderAdvancedDouble_param_4];
	ld.param.f32 	%f250, [fractalRenderAdvancedDouble_param_5];
	ld.param.u32 	%r58, [fractalRenderAdvancedDouble_param_6];
	ld.param.f64 	%fd50, [fractalRenderAdvancedDouble_param_7+24];
	ld.param.f64 	%fd49, [fractalRenderAdvancedDouble_param_7+16];
	ld.param.f64 	%fd48, [fractalRenderAdvancedDouble_param_7+8];
	ld.param.f64 	%fd47, [fractalRenderAdvancedDouble_param_7];
	ld.param.u64 	%rd5, [fractalRenderAdvancedDouble_param_8];
	ld.param.u32 	%r59, [fractalRenderAdvancedDouble_param_9];
	ld.param.u32 	%r61, [fractalRenderAdvancedDouble_param_10+4];
	ld.param.u32 	%r60, [fractalRenderAdvancedDouble_param_10];
	add.u64 	%rd6, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd6;
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p3, %r1, 32;
	@%p3 bra 	BB4_2;

	mov.u64 	%rd7, $str1;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, $str2;
	cvta.global.u64 	%rd10, %rd9;
	mov.u32 	%r62, 59;
	mov.u64 	%rd11, 0;
	mov.u64 	%rd12, 2;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 param2;
	st.param.b32	[param2+0], %r62;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd11;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd12;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 22

BB4_2:
	mov.u32 	%r63, %tid.x;
	mov.u32 	%r64, %tid.y;
	mad.lo.s32 	%r65, %r1, %r64, %r63;
	shl.b32 	%r66, %r1, 2;
	and.b32  	%r67, %r65, 15;
	rem.u32 	%r68, %r65, %r66;
	sub.s32 	%r69, %r68, %r67;
	shr.u32 	%r70, %r69, 2;
	and.b32  	%r71, %r65, 3;
	add.s32 	%r72, %r70, %r71;
	div.u32 	%r73, %r65, %r66;
	shl.b32 	%r74, %r73, 2;
	bfe.u32 	%r75, %r65, 2, 2;
	add.s32 	%r76, %r74, %r75;
	mov.u32 	%r77, %ctaid.x;
	mad.lo.s32 	%r4, %r77, %r1, %r72;
	mov.u32 	%r78, %ctaid.y;
	mov.u32 	%r79, %ntid.y;
	mad.lo.s32 	%r5, %r78, %r79, %r76;
	setp.lt.u32	%p4, %r4, %r55;
	setp.gt.u32	%p5, %r56, %r5;
	and.pred  	%p6, %p4, %p5;
	@!%p6 bra 	BB4_98;
	bra.uni 	BB4_3;

BB4_3:
	and.b32  	%r80, %r58, 52;
	mov.u16 	%rs9, 0;
	setp.ne.s32	%p7, %r80, 52;
	@%p7 bra 	BB4_12;

	setp.gt.f32	%p8, %f250, 0f00000000;
	@%p8 bra 	BB4_6;

	mov.u64 	%rd13, $str7;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, $str2;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r81, 254;
	mov.u64 	%rd17, 0;
	mov.u64 	%rd18, 2;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 param2;
	st.param.b32	[param2+0], %r81;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd17;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd18;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 23

BB4_6:
	and.b32  	%r82, %r4, -8;
	cvt.rn.f32.u32	%f76, %r82;
	and.b32  	%r83, %r5, -4;
	cvt.rn.f32.u32	%f77, %r83;
	cvt.rn.f32.u32	%f78, %r60;
	sub.f32 	%f79, %f78, %f76;
	cvt.rn.f32.u32	%f80, %r61;
	sub.f32 	%f81, %f80, %f77;
	mul.f32 	%f82, %f81, %f81;
	fma.rn.f32 	%f83, %f79, %f79, %f82;
	sqrt.rn.f32 	%f84, %f83;
	ld.global.f32 	%f85, [pixelRealWidthInCm];
	mul.f32 	%f86, %f84, %f85;
	ld.global.f32 	%f87, [screenDistance];
	div.rn.f32 	%f1, %f86, %f87;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p9, %f2, 0f3F800000;
	mov.f32 	%f249, %f2;
	@%p9 bra 	BB4_8;

	rcp.rn.f32 	%f249, %f2;

BB4_8:
	mul.rn.f32 	%f88, %f249, %f249;
	mov.f32 	%f89, 0fC0B59883;
	mov.f32 	%f90, 0fBF52C7EA;
	fma.rn.f32 	%f91, %f88, %f90, %f89;
	mov.f32 	%f92, 0fC0D21907;
	fma.rn.f32 	%f93, %f91, %f88, %f92;
	mul.f32 	%f94, %f88, %f93;
	mul.f32 	%f95, %f249, %f94;
	add.f32 	%f96, %f88, 0f41355DC0;
	mov.f32 	%f97, 0f41E6BD60;
	fma.rn.f32 	%f98, %f96, %f88, %f97;
	mov.f32 	%f99, 0f419D92C8;
	fma.rn.f32 	%f100, %f98, %f88, %f99;
	rcp.rn.f32 	%f101, %f100;
	fma.rn.f32 	%f102, %f95, %f101, %f249;
	mov.f32 	%f103, 0f3FC90FDB;
	sub.f32 	%f104, %f103, %f102;
	setp.gt.f32	%p10, %f2, 0f3F800000;
	selp.f32	%f105, %f104, %f102, %p10;
	mov.b32 	 %r84, %f105;
	mov.b32 	 %r85, %f1;
	and.b32  	%r86, %r85, -2147483648;
	or.b32  	%r87, %r84, %r86;
	mov.b32 	 %f106, %r87;
	setp.gtu.f32	%p11, %f2, 0f7F800000;
	selp.f32	%f107, %f105, %f106, %p11;
	mul.f32 	%f108, %f107, 0f43340000;
	div.rn.f32 	%f5, %f108, 0f40490FDB;
	setp.ge.f32	%p12, %f5, 0f00000000;
	@%p12 bra 	BB4_10;

	mov.u64 	%rd19, $str8;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, $str2;
	cvta.global.u64 	%rd22, %rd21;
	mov.u32 	%r88, 264;
	mov.u64 	%rd23, 0;
	mov.u64 	%rd24, 2;
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b32 param2;
	st.param.b32	[param2+0], %r88;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 24

BB4_10:
	setp.lt.f32	%p13, %f250, 0f3F800000;
	mul.f32 	%f109, %f250, 0f40B00000;
	selp.f32	%f110, %f109, 0f40B00000, %p13;
	add.f32 	%f111, %f110, 0fC2700000;
	rcp.rn.f32 	%f112, %f111;
	mov.f32 	%f113, 0fC2700000;
	div.rn.f32 	%f114, %f113, %f111;
	fma.rn.f32 	%f115, %f5, %f112, %f114;
	mul.f32 	%f250, %f115, %f250;
	setp.gtu.f32	%p14, %f5, %f110;
	@%p14 bra 	BB4_12;

	cvt.f64.f32	%fd51, %f250;
	mov.f64 	%fd52, 0d3FF0000000000000;
	max.f64 	%fd53, %fd52, %fd51;
	cvt.rn.f32.f64	%f250, %fd53;
	mov.u16 	%rs9, 1;

BB4_12:
	and.b32  	%r89, %r58, 8;
	setp.eq.s32	%p16, %r89, 0;
	mov.pred 	%p108, -1;
	mov.f32 	%f271, 0f00000000;
	@%p16 bra 	BB4_13;

	sub.s32 	%r90, %r56, %r5;
	cvt.rn.f64.u32	%fd54, %r90;
	cvt.rn.f64.u32	%fd55, %r55;
	cvt.rn.f64.u32	%fd56, %r4;
	div.rn.f64 	%fd57, %fd56, %fd55;
	cvt.rn.f64.u32	%fd58, %r56;
	div.rn.f64 	%fd59, %fd54, %fd58;
	sub.f64 	%fd60, %fd45, %fd43;
	sub.f64 	%fd61, %fd46, %fd44;
	fma.rn.f64 	%fd62, %fd60, %fd57, %fd43;
	fma.rn.f64 	%fd63, %fd61, %fd59, %fd44;
	sub.f64 	%fd64, %fd62, %fd47;
	sub.f64 	%fd65, %fd63, %fd48;
	sub.f64 	%fd66, %fd49, %fd47;
	div.rn.f64 	%fd67, %fd64, %fd66;
	sub.f64 	%fd68, %fd50, %fd48;
	div.rn.f64 	%fd69, %fd65, %fd68;
	cvt.rn.f32.f64	%f118, %fd67;
	cvt.rn.f32.f64	%f119, %fd69;
	cvt.rn.f32.u32	%f120, %r55;
	mul.f32 	%f9, %f120, %f118;
	cvt.rn.f32.u32	%f121, %r56;
	mul.f32 	%f122, %f121, %f119;
	sub.f32 	%f10, %f121, %f122;
	abs.f32 	%f123, %f9;
	mov.b32 	 %r91, %f9;
	and.b32  	%r92, %r91, -2147483648;
	or.b32  	%r93, %r92, 1056964608;
	mov.b32 	 %f124, %r93;
	add.f32 	%f125, %f9, %f124;
	cvt.rzi.f32.f32	%f126, %f125;
	setp.gt.f32	%p17, %f123, 0f4B000000;
	selp.f32	%f251, %f9, %f126, %p17;
	setp.geu.f32	%p18, %f123, 0f3F000000;
	@%p18 bra 	BB4_16;

	cvt.rzi.f32.f32	%f251, %f9;

BB4_16:
	cvt.rzi.s32.f32	%r6, %f251;
	mov.b32 	 %r94, %f10;
	and.b32  	%r95, %r94, -2147483648;
	or.b32  	%r96, %r95, 1056964608;
	mov.b32 	 %f127, %r96;
	add.f32 	%f128, %f10, %f127;
	cvt.rzi.f32.f32	%f129, %f128;
	abs.f32 	%f130, %f10;
	setp.gt.f32	%p19, %f130, 0f4B000000;
	selp.f32	%f252, %f10, %f129, %p19;
	setp.geu.f32	%p20, %f130, 0f3F000000;
	@%p20 bra 	BB4_18;

	cvt.rzi.f32.f32	%f252, %f10;

BB4_18:
	add.s32 	%r97, %r55, -2;
	setp.lt.u32	%p22, %r6, %r97;
	setp.gt.s32	%p23, %r6, 1;
	and.pred  	%p24, %p23, %p22;
	cvt.rzi.s32.f32	%r98, %f252;
	setp.gt.s32	%p25, %r98, 1;
	and.pred  	%p26, %p24, %p25;
	add.s32 	%r99, %r56, -2;
	setp.lt.u32	%p27, %r98, %r99;
	and.pred  	%p28, %p27, %p26;
	mov.f32 	%f254, %f271;
	@!%p28 bra 	BB4_20;
	bra.uni 	BB4_19;

BB4_19:
	cvt.rmi.f32.f32	%f133, %f9;
	cvt.rzi.u32.f32	%r100, %f133;
	cvt.rmi.f32.f32	%f134, %f10;
	cvt.rzi.u32.f32	%r101, %f134;
	cvt.rn.f32.u32	%f135, %r100;
	sub.f32 	%f136, %f9, %f135;
	cvt.rn.f32.u32	%f137, %r101;
	sub.f32 	%f138, %f10, %f137;
	mul.lo.s32 	%r102, %r101, %r59;
	cvt.u64.u32	%rd25, %r102;
	cvta.to.global.u64 	%rd26, %rd5;
	add.s64 	%rd27, %rd26, %rd25;
	mul.wide.u32 	%rd28, %r100, 16;
	add.s64 	%rd29, %rd27, %rd28;
	add.s32 	%r103, %r100, 1;
	mul.wide.u32 	%rd30, %r103, 16;
	add.s64 	%rd31, %rd27, %rd30;
	add.s32 	%r104, %r101, 1;
	mul.lo.s32 	%r105, %r104, %r59;
	cvt.u64.u32	%rd32, %r105;
	add.s64 	%rd33, %rd26, %rd32;
	add.s64 	%rd34, %rd33, %rd28;
	add.s64 	%rd35, %rd33, %rd30;
	mov.f32 	%f139, 0f3F800000;
	sub.f32 	%f140, %f139, %f136;
	ld.global.f32 	%f141, [%rd29];
	ld.global.f32 	%f142, [%rd31];
	mul.f32 	%f143, %f136, %f142;
	fma.rn.f32 	%f144, %f141, %f140, %f143;
	sub.f32 	%f145, %f139, %f138;
	ld.global.f32 	%f146, [%rd34];
	ld.global.f32 	%f147, [%rd35];
	mul.f32 	%f148, %f136, %f147;
	fma.rn.f32 	%f149, %f140, %f146, %f148;
	mul.f32 	%f150, %f138, %f149;
	fma.rn.f32 	%f271, %f145, %f144, %f150;
	ld.global.f32 	%f151, [%rd29+4];
	ld.global.f32 	%f152, [%rd31+4];
	mul.f32 	%f153, %f136, %f152;
	fma.rn.f32 	%f154, %f140, %f151, %f153;
	ld.global.f32 	%f155, [%rd34+4];
	ld.global.f32 	%f156, [%rd35+4];
	mul.f32 	%f157, %f136, %f156;
	fma.rn.f32 	%f158, %f140, %f155, %f157;
	mul.f32 	%f159, %f138, %f158;
	fma.rn.f32 	%f254, %f145, %f154, %f159;
	cvt.f64.f32	%fd70, %f254;
	setp.lt.f64	%p108, %fd70, 0d3FB999999999999A;
	bra.uni 	BB4_20;

BB4_13:
	mov.f32 	%f254, %f271;

BB4_20:
	@%p108 bra 	BB4_60;
	bra.uni 	BB4_21;

BB4_60:
	setp.lt.f32	%p70, %f250, 0f3F800000;
	selp.f32	%f48, 0f3F800000, %f250, %p70;
	abs.f32 	%f207, %f48;
	mov.b32 	 %r147, %f48;
	and.b32  	%r148, %r147, -2147483648;
	or.b32  	%r149, %r148, 1056964608;
	mov.b32 	 %f208, %r149;
	add.f32 	%f209, %f48, %f208;
	cvt.rzi.f32.f32	%f210, %f209;
	setp.gt.f32	%p71, %f207, 0f4B000000;
	selp.f32	%f264, %f48, %f210, %p71;
	setp.geu.f32	%p72, %f207, 0f3F000000;
	@%p72 bra 	BB4_62;

	cvt.rzi.f32.f32	%f264, %f48;

BB4_62:
	cvt.rzi.u32.f32	%r150, %f264;
	mov.u32 	%r151, 64;
	min.u32 	%r30, %r151, %r150;
	cvt.rn.f64.u32	%fd82, %r55;
	sub.f64 	%fd83, %fd45, %fd43;
	div.rn.f64 	%fd24, %fd83, %fd82;
	cvt.rn.f64.u32	%fd84, %r56;
	sub.f64 	%fd85, %fd46, %fd44;
	div.rn.f64 	%fd25, %fd85, %fd84;
	setp.lt.u32	%p73, %r30, 65;
	@%p73 bra 	BB4_64;

	mov.u64 	%rd79, $str10;
	cvta.global.u64 	%rd80, %rd79;
	mov.u64 	%rd81, $str2;
	cvta.global.u64 	%rd82, %rd81;
	mov.u32 	%r152, 113;
	mov.u64 	%rd83, 0;
	mov.u64 	%rd84, 2;
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd80;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd82;
	.param .b32 param2;
	st.param.b32	[param2+0], %r152;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd83;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd84;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 28

BB4_64:
	setp.eq.s32	%p74, %r30, 0;
	mov.u32 	%r209, 0;
	mov.u32 	%r208, %r209;
	@%p74 bra 	BB4_95;

	cvt.rn.f64.u32	%fd26, %r4;
	cvt.rn.f64.u32	%fd27, %r5;
	ld.const.f64 	%fd28, [julia_c];
	ld.const.f64 	%fd29, [julia_c+8];
	add.f32 	%f52, %f48, 0fC0000000;
	and.b32  	%r31, %r58, 1;
	mov.u32 	%r199, 0;
	sqrt.rn.f32 	%f53, %f52;
	mov.u32 	%r209, %r199;
	mov.u32 	%r208, %r30;

BB4_66:
	mov.u32 	%r34, %r208;
	mov.u32 	%r32, %r199;
	setp.lt.u32	%p75, %r32, 3;
	@%p75 bra 	BB4_74;
	bra.uni 	BB4_67;

BB4_74:
	cvt.rn.f64.u32	%fd86, %r32;
	div.rn.f64 	%fd97, %fd86, 0d4008000000000000;
	mov.f64 	%fd98, %fd97;
	bra.uni 	BB4_75;

BB4_67:
	abs.f32 	%f211, %f53;
	mov.b32 	 %r157, %f53;
	and.b32  	%r158, %r157, -2147483648;
	or.b32  	%r159, %r158, 1056964608;
	mov.b32 	 %f212, %r159;
	add.f32 	%f213, %f53, %f212;
	cvt.rzi.f32.f32	%f214, %f213;
	setp.gt.f32	%p76, %f211, 0f4B000000;
	selp.f32	%f265, %f53, %f214, %p76;
	setp.geu.f32	%p77, %f211, 0f3F000000;
	@%p77 bra 	BB4_69;

	cvt.rzi.f32.f32	%f265, %f53;

BB4_69:
	add.s32 	%r160, %r32, -2;
	cvt.rzi.u32.f32	%r161, %f265;
	rem.u32 	%r162, %r160, %r161;
	cvt.rn.f32.u32	%f215, %r162;
	div.rn.f32 	%f57, %f215, %f53;
	div.u32 	%r163, %r160, %r161;
	cvt.rn.f32.u32	%f216, %r163;
	div.rn.f32 	%f58, %f216, %f53;
	setp.le.f32	%p78, %f58, 0f3F800000;
	@%p78 bra 	BB4_71;

	mov.u64 	%rd85, $str11;
	cvta.global.u64 	%rd86, %rd85;
	mov.u64 	%rd87, $str2;
	cvta.global.u64 	%rd88, %rd87;
	mov.u32 	%r164, 132;
	mov.u64 	%rd89, 0;
	mov.u64 	%rd90, 2;
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd86;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd88;
	.param .b32 param2;
	st.param.b32	[param2+0], %r164;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd89;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd90;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 29

BB4_71:
	setp.le.f32	%p79, %f57, 0f3F800000;
	@%p79 bra 	BB4_73;

	mov.u64 	%rd91, $str12;
	cvta.global.u64 	%rd92, %rd91;
	mov.u64 	%rd93, $str2;
	cvta.global.u64 	%rd94, %rd93;
	mov.u32 	%r165, 133;
	mov.u64 	%rd95, 0;
	mov.u64 	%rd96, 2;
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd92;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd94;
	.param .b32 param2;
	st.param.b32	[param2+0], %r165;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd95;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd96;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 30

BB4_73:
	cvt.f64.f32	%fd97, %f57;
	cvt.f64.f32	%fd98, %f58;

BB4_75:
	add.f64 	%fd87, %fd27, %fd98;
	neg.f64 	%fd88, %fd87;
	add.f64 	%fd89, %fd26, %fd97;
	fma.rn.f64 	%fd100, %fd24, %fd89, %fd43;
	fma.rn.f64 	%fd99, %fd25, %fd88, %fd46;
	setp.eq.s32	%p80, %r57, 0;
	mov.u32 	%r203, 0;
	@%p80 bra 	BB4_78;

BB4_76:
	mul.f64 	%fd39, %fd99, %fd99;
	mul.f64 	%fd40, %fd100, %fd100;
	add.f64 	%fd90, %fd40, %fd39;
	setp.geu.f64	%p81, %fd90, 0d4010000000000000;
	@%p81 bra 	BB4_78;

	sub.f64 	%fd91, %fd40, %fd39;
	add.f64 	%fd41, %fd28, %fd91;
	add.f64 	%fd92, %fd100, %fd100;
	fma.rn.f64 	%fd99, %fd92, %fd99, %fd29;
	add.s32 	%r203, %r203, 1;
	setp.lt.u32	%p82, %r203, %r57;
	mov.f64 	%fd100, %fd41;
	@%p82 bra 	BB4_76;

BB4_78:
	cvt.rn.f32.u32	%f217, %r203;
	cvt.rzi.u32.f32	%r38, %f217;
	add.s32 	%r209, %r38, %r209;
	setp.gt.u32	%p83, %r32, 9;
	@%p83 bra 	BB4_80;

	cvt.rn.f32.u32	%f218, %r38;
	mul.wide.u32 	%rd97, %r32, 4;
	add.s64 	%rd98, %rd1, %rd97;
	st.local.f32 	[%rd98], %f218;

BB4_80:
	setp.lt.u32	%p84, %r32, 10;
	setp.ne.s32	%p85, %r32, 0;
	and.pred  	%p86, %p84, %p85;
	setp.ne.s32	%p87, %r31, 0;
	and.pred  	%p88, %p86, %p87;
	shr.u32 	%r40, %r34, 1;
	setp.eq.s32	%p89, %r32, %r40;
	or.pred  	%p90, %p88, %p89;
	add.s32 	%r199, %r32, 1;
	mov.u32 	%r208, %r34;
	@!%p90 bra 	BB4_94;
	bra.uni 	BB4_81;

BB4_81:
	div.u32 	%r168, %r209, %r199;
	cvt.rn.f32.u32	%f59, %r168;
	setp.eq.s32	%p91, %r32, 0;
	mov.f32 	%f270, 0f00000000;
	@%p91 bra 	BB4_90;

	and.b32  	%r42, %r32, 3;
	setp.eq.s32	%p92, %r42, 0;
	mov.f32 	%f270, 0f00000000;
	mov.u32 	%r207, 0;
	@%p92 bra 	BB4_88;

	setp.eq.s32	%p93, %r42, 1;
	mov.f32 	%f267, 0f00000000;
	mov.u32 	%r205, 0;
	@%p93 bra 	BB4_87;

	setp.eq.s32	%p94, %r42, 2;
	mov.f32 	%f266, 0f00000000;
	mov.u32 	%r204, 0;
	@%p94 bra 	BB4_86;

	ld.local.f32 	%f223, [%rd1];
	sub.f32 	%f224, %f223, %f59;
	fma.rn.f32 	%f266, %f224, %f224, 0f00000000;
	mov.u32 	%r204, 1;

BB4_86:
	mul.wide.u32 	%rd99, %r204, 4;
	add.s64 	%rd100, %rd1, %rd99;
	ld.local.f32 	%f225, [%rd100];
	sub.f32 	%f226, %f225, %f59;
	fma.rn.f32 	%f267, %f226, %f226, %f266;
	add.s32 	%r205, %r204, 1;

BB4_87:
	mul.wide.u32 	%rd101, %r205, 4;
	add.s64 	%rd102, %rd1, %rd101;
	ld.local.f32 	%f227, [%rd102];
	sub.f32 	%f228, %f227, %f59;
	fma.rn.f32 	%f270, %f228, %f228, %f267;
	add.s32 	%r207, %r205, 1;

BB4_88:
	setp.lt.u32	%p95, %r32, 4;
	@%p95 bra 	BB4_90;

BB4_89:
	mul.wide.u32 	%rd103, %r207, 4;
	add.s64 	%rd104, %rd1, %rd103;
	ld.local.f32 	%f229, [%rd104];
	sub.f32 	%f230, %f229, %f59;
	fma.rn.f32 	%f231, %f230, %f230, %f270;
	add.s32 	%r173, %r207, 1;
	mul.wide.u32 	%rd105, %r173, 4;
	add.s64 	%rd106, %rd1, %rd105;
	ld.local.f32 	%f232, [%rd106];
	sub.f32 	%f233, %f232, %f59;
	fma.rn.f32 	%f234, %f233, %f233, %f231;
	add.s32 	%r174, %r207, 2;
	mul.wide.u32 	%rd107, %r174, 4;
	add.s64 	%rd108, %rd1, %rd107;
	ld.local.f32 	%f235, [%rd108];
	sub.f32 	%f236, %f235, %f59;
	fma.rn.f32 	%f237, %f236, %f236, %f234;
	add.s32 	%r175, %r207, 3;
	mul.wide.u32 	%rd109, %r175, 4;
	add.s64 	%rd110, %rd1, %rd109;
	ld.local.f32 	%f238, [%rd110];
	sub.f32 	%f239, %f238, %f59;
	fma.rn.f32 	%f270, %f239, %f239, %f237;
	add.s32 	%r207, %r207, 4;
	setp.lt.u32	%p96, %r207, %r32;
	@%p96 bra 	BB4_89;

BB4_90:
	add.s32 	%r176, %r32, -1;
	cvt.rn.f32.u32	%f240, %r176;
	div.rn.f32 	%f241, %f270, %f240;
	div.rn.f32 	%f69, %f241, %f59;
	setp.ne.s32	%p97, %r32, 1;
	@%p97 bra 	BB4_92;

	// inline asm
	activemask.b32 %r177;
	// inline asm
	ld.local.v2.f32 	{%f242, %f243}, [%rd1];
	sub.f32 	%f246, %f242, %f243;
	abs.f32 	%f247, %f246;
	setp.lt.f32	%p98, %f247, 0f34000000;
	vote.sync.all.pred 	%p99, %p98, %r177;
	mov.u32 	%r208, 2;
	@%p99 bra 	BB4_94;

BB4_92:
	// inline asm
	activemask.b32 %r180;
	// inline asm
	setp.lt.f32	%p100, %f69, 0f3C23D70A;
	vote.sync.all.pred 	%p101, %p100, %r180;
	mov.u32 	%r208, %r199;
	@%p101 bra 	BB4_94;

	// inline asm
	activemask.b32 %r182;
	// inline asm
	setp.le.f32	%p102, %f69, 0f3F800000;
	vote.sync.all.pred 	%p103, %p102, %r182;
	setp.ge.u32	%p104, %r32, %r40;
	and.pred  	%p105, %p103, %p104;
	selp.b32	%r208, %r199, %r34, %p105;

BB4_94:
	setp.lt.u32	%p106, %r199, %r208;
	@%p106 bra 	BB4_66;

BB4_95:
	cvt.rn.f32.u32	%f254, %r208;
	div.u32 	%r184, %r209, %r208;
	cvt.rn.f32.u32	%f271, %r184;
	mov.f32 	%f273, 0f00000000;
	mov.u16 	%rs10, 0;
	bra.uni 	BB4_96;

BB4_21:
	shr.u32 	%r106, %r58, 5;
	and.b32  	%r107, %r106, 1;
	setp.eq.b32	%p29, %r107, 1;
	not.pred 	%p30, %p29;
	setp.eq.s16	%p31, %rs9, 0;
	mov.f32 	%f273, 0f00000000;
	mov.u16 	%rs10, 1;
	or.pred  	%p32, %p31, %p30;
	@%p32 bra 	BB4_96;

	setp.lt.f32	%p33, %f250, 0f3F800000;
	mov.f32 	%f273, 0f00000000;
	mov.f32 	%f263, %f273;
	@%p33 bra 	BB4_59;

	abs.f32 	%f163, %f250;
	mov.b32 	 %r108, %f250;
	and.b32  	%r109, %r108, -2147483648;
	or.b32  	%r110, %r109, 1056964608;
	mov.b32 	 %f164, %r110;
	add.f32 	%f165, %f250, %f164;
	cvt.rzi.f32.f32	%f166, %f165;
	setp.gt.f32	%p34, %f163, 0f4B000000;
	selp.f32	%f255, %f250, %f166, %p34;
	setp.geu.f32	%p35, %f163, 0f3F000000;
	@%p35 bra 	BB4_25;

	cvt.rzi.f32.f32	%f255, %f250;

BB4_25:
	cvt.rzi.u32.f32	%r111, %f255;
	mov.u32 	%r112, 64;
	min.u32 	%r7, %r112, %r111;
	cvt.rn.f64.u32	%fd71, %r55;
	sub.f64 	%fd72, %fd45, %fd43;
	div.rn.f64 	%fd5, %fd72, %fd71;
	cvt.rn.f64.u32	%fd73, %r56;
	sub.f64 	%fd74, %fd46, %fd44;
	div.rn.f64 	%fd6, %fd74, %fd73;
	setp.lt.u32	%p36, %r7, 65;
	@%p36 bra 	BB4_27;

	mov.u64 	%rd36, $str10;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, $str2;
	cvta.global.u64 	%rd39, %rd38;
	mov.u32 	%r113, 113;
	mov.u64 	%rd40, 0;
	mov.u64 	%rd41, 2;
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd37;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b32 param2;
	st.param.b32	[param2+0], %r113;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd40;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd41;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 25

BB4_27:
	setp.eq.s32	%p37, %r7, 0;
	mov.u32 	%r197, 0;
	mov.u32 	%r196, %r197;
	@%p37 bra 	BB4_58;

	cvt.rn.f64.u32	%fd7, %r4;
	cvt.rn.f64.u32	%fd8, %r5;
	ld.const.f64 	%fd9, [julia_c];
	ld.const.f64 	%fd10, [julia_c+8];
	add.f32 	%f24, %f250, 0fC0000000;
	mov.u32 	%r187, 0;
	sqrt.rn.f32 	%f25, %f24;
	mov.u32 	%r197, %r187;
	mov.u32 	%r196, %r7;

BB4_29:
	mov.u32 	%r10, %r196;
	mov.u32 	%r8, %r187;
	setp.lt.u32	%p38, %r8, 3;
	@%p38 bra 	BB4_37;
	bra.uni 	BB4_30;

BB4_37:
	cvt.rn.f64.u32	%fd75, %r8;
	div.rn.f64 	%fd93, %fd75, 0d4008000000000000;
	mov.f64 	%fd94, %fd93;
	bra.uni 	BB4_38;

BB4_30:
	abs.f32 	%f167, %f25;
	mov.b32 	 %r118, %f25;
	and.b32  	%r119, %r118, -2147483648;
	or.b32  	%r120, %r119, 1056964608;
	mov.b32 	 %f168, %r120;
	add.f32 	%f169, %f25, %f168;
	cvt.rzi.f32.f32	%f170, %f169;
	setp.gt.f32	%p39, %f167, 0f4B000000;
	selp.f32	%f256, %f25, %f170, %p39;
	setp.geu.f32	%p40, %f167, 0f3F000000;
	@%p40 bra 	BB4_32;

	cvt.rzi.f32.f32	%f256, %f25;

BB4_32:
	add.s32 	%r121, %r8, -2;
	cvt.rzi.u32.f32	%r122, %f256;
	rem.u32 	%r123, %r121, %r122;
	cvt.rn.f32.u32	%f171, %r123;
	div.rn.f32 	%f29, %f171, %f25;
	div.u32 	%r124, %r121, %r122;
	cvt.rn.f32.u32	%f172, %r124;
	div.rn.f32 	%f30, %f172, %f25;
	setp.le.f32	%p41, %f30, 0f3F800000;
	@%p41 bra 	BB4_34;

	mov.u64 	%rd42, $str11;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, $str2;
	cvta.global.u64 	%rd45, %rd44;
	mov.u32 	%r125, 132;
	mov.u64 	%rd46, 0;
	mov.u64 	%rd47, 2;
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd45;
	.param .b32 param2;
	st.param.b32	[param2+0], %r125;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd46;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd47;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 26

BB4_34:
	setp.le.f32	%p42, %f29, 0f3F800000;
	@%p42 bra 	BB4_36;

	mov.u64 	%rd48, $str12;
	cvta.global.u64 	%rd49, %rd48;
	mov.u64 	%rd50, $str2;
	cvta.global.u64 	%rd51, %rd50;
	mov.u32 	%r126, 133;
	mov.u64 	%rd52, 0;
	mov.u64 	%rd53, 2;
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd49;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 param2;
	st.param.b32	[param2+0], %r126;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd52;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd53;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 27

BB4_36:
	cvt.f64.f32	%fd93, %f29;
	cvt.f64.f32	%fd94, %f30;

BB4_38:
	add.f64 	%fd76, %fd8, %fd94;
	neg.f64 	%fd77, %fd76;
	add.f64 	%fd78, %fd7, %fd93;
	fma.rn.f64 	%fd96, %fd5, %fd78, %fd43;
	fma.rn.f64 	%fd95, %fd6, %fd77, %fd46;
	setp.eq.s32	%p43, %r57, 0;
	mov.u32 	%r191, 0;
	@%p43 bra 	BB4_41;

BB4_39:
	mul.f64 	%fd20, %fd95, %fd95;
	mul.f64 	%fd21, %fd96, %fd96;
	add.f64 	%fd79, %fd21, %fd20;
	setp.geu.f64	%p44, %fd79, 0d4010000000000000;
	@%p44 bra 	BB4_41;

	sub.f64 	%fd80, %fd21, %fd20;
	add.f64 	%fd22, %fd9, %fd80;
	add.f64 	%fd81, %fd96, %fd96;
	fma.rn.f64 	%fd95, %fd81, %fd95, %fd10;
	add.s32 	%r191, %r191, 1;
	setp.lt.u32	%p45, %r191, %r57;
	mov.f64 	%fd96, %fd22;
	@%p45 bra 	BB4_39;

BB4_41:
	cvt.rn.f32.u32	%f173, %r191;
	cvt.rzi.u32.f32	%r14, %f173;
	add.s32 	%r197, %r14, %r197;
	setp.gt.u32	%p46, %r8, 9;
	@%p46 bra 	BB4_43;

	cvt.rn.f32.u32	%f174, %r14;
	mul.wide.u32 	%rd56, %r8, 4;
	add.s64 	%rd57, %rd1, %rd56;
	st.local.f32 	[%rd57], %f174;

BB4_43:
	setp.lt.u32	%p47, %r8, 10;
	and.b32  	%r129, %r58, 1;
	setp.eq.b32	%p48, %r129, 1;
	setp.ne.s32	%p49, %r8, 0;
	and.pred  	%p50, %p47, %p49;
	and.pred  	%p51, %p50, %p48;
	shr.u32 	%r16, %r10, 1;
	setp.eq.s32	%p52, %r8, %r16;
	or.pred  	%p53, %p51, %p52;
	add.s32 	%r187, %r8, 1;
	mov.u32 	%r196, %r10;
	@!%p53 bra 	BB4_57;
	bra.uni 	BB4_44;

BB4_44:
	div.u32 	%r130, %r197, %r187;
	cvt.rn.f32.u32	%f31, %r130;
	setp.eq.s32	%p54, %r8, 0;
	mov.f32 	%f261, 0f00000000;
	@%p54 bra 	BB4_53;

	and.b32  	%r18, %r8, 3;
	setp.eq.s32	%p55, %r18, 0;
	mov.f32 	%f261, 0f00000000;
	mov.u32 	%r195, 0;
	@%p55 bra 	BB4_51;

	setp.eq.s32	%p56, %r18, 1;
	mov.f32 	%f258, 0f00000000;
	mov.u32 	%r193, 0;
	@%p56 bra 	BB4_50;

	setp.eq.s32	%p57, %r18, 2;
	mov.f32 	%f257, 0f00000000;
	mov.u32 	%r192, 0;
	@%p57 bra 	BB4_49;

	ld.local.f32 	%f179, [%rd1];
	sub.f32 	%f180, %f179, %f31;
	fma.rn.f32 	%f257, %f180, %f180, 0f00000000;
	mov.u32 	%r192, 1;

BB4_49:
	mul.wide.u32 	%rd62, %r192, 4;
	add.s64 	%rd63, %rd1, %rd62;
	ld.local.f32 	%f181, [%rd63];
	sub.f32 	%f182, %f181, %f31;
	fma.rn.f32 	%f258, %f182, %f182, %f257;
	add.s32 	%r193, %r192, 1;

BB4_50:
	mul.wide.u32 	%rd66, %r193, 4;
	add.s64 	%rd67, %rd1, %rd66;
	ld.local.f32 	%f183, [%rd67];
	sub.f32 	%f184, %f183, %f31;
	fma.rn.f32 	%f261, %f184, %f184, %f258;
	add.s32 	%r195, %r193, 1;

BB4_51:
	setp.lt.u32	%p58, %r8, 4;
	@%p58 bra 	BB4_53;

BB4_52:
	mul.wide.u32 	%rd69, %r195, 4;
	add.s64 	%rd70, %rd1, %rd69;
	ld.local.f32 	%f185, [%rd70];
	sub.f32 	%f186, %f185, %f31;
	fma.rn.f32 	%f187, %f186, %f186, %f261;
	add.s32 	%r135, %r195, 1;
	mul.wide.u32 	%rd71, %r135, 4;
	add.s64 	%rd72, %rd1, %rd71;
	ld.local.f32 	%f188, [%rd72];
	sub.f32 	%f189, %f188, %f31;
	fma.rn.f32 	%f190, %f189, %f189, %f187;
	add.s32 	%r136, %r195, 2;
	mul.wide.u32 	%rd73, %r136, 4;
	add.s64 	%rd74, %rd1, %rd73;
	ld.local.f32 	%f191, [%rd74];
	sub.f32 	%f192, %f191, %f31;
	fma.rn.f32 	%f193, %f192, %f192, %f190;
	add.s32 	%r137, %r195, 3;
	mul.wide.u32 	%rd75, %r137, 4;
	add.s64 	%rd76, %rd1, %rd75;
	ld.local.f32 	%f194, [%rd76];
	sub.f32 	%f195, %f194, %f31;
	fma.rn.f32 	%f261, %f195, %f195, %f193;
	add.s32 	%r195, %r195, 4;
	setp.lt.u32	%p59, %r195, %r8;
	@%p59 bra 	BB4_52;

BB4_53:
	add.s32 	%r138, %r8, -1;
	cvt.rn.f32.u32	%f196, %r138;
	div.rn.f32 	%f197, %f261, %f196;
	div.rn.f32 	%f41, %f197, %f31;
	setp.ne.s32	%p60, %r8, 1;
	@%p60 bra 	BB4_55;

	// inline asm
	activemask.b32 %r139;
	// inline asm
	ld.local.v2.f32 	{%f198, %f199}, [%rd1];
	sub.f32 	%f202, %f198, %f199;
	abs.f32 	%f203, %f202;
	setp.lt.f32	%p61, %f203, 0f34000000;
	vote.sync.all.pred 	%p62, %p61, %r139;
	mov.u32 	%r196, 2;
	@%p62 bra 	BB4_57;

BB4_55:
	// inline asm
	activemask.b32 %r142;
	// inline asm
	setp.lt.f32	%p63, %f41, 0f3C23D70A;
	vote.sync.all.pred 	%p64, %p63, %r142;
	mov.u32 	%r196, %r187;
	@%p64 bra 	BB4_57;

	// inline asm
	activemask.b32 %r144;
	// inline asm
	setp.le.f32	%p65, %f41, 0f3F800000;
	vote.sync.all.pred 	%p66, %p65, %r144;
	setp.ge.u32	%p67, %r8, %r16;
	and.pred  	%p68, %p66, %p67;
	selp.b32	%r196, %r187, %r10, %p68;

BB4_57:
	setp.lt.u32	%p69, %r187, %r196;
	@%p69 bra 	BB4_29;

BB4_58:
	cvt.rn.f32.u32	%f273, %r196;
	div.u32 	%r146, %r197, %r196;
	cvt.rn.f32.u32	%f263, %r146;

BB4_59:
	mul.f32 	%f204, %f254, 0f3F400000;
	add.f32 	%f254, %f204, %f273;
	mul.f32 	%f205, %f273, %f263;
	fma.rn.f32 	%f206, %f271, %f204, %f205;
	div.rn.f32 	%f271, %f206, %f254;

BB4_96:
	mul.lo.s32 	%r185, %r5, %r54;
	cvt.u64.u32	%rd111, %r185;
	cvta.to.global.u64 	%rd112, %rd4;
	add.s64 	%rd113, %rd112, %rd111;
	mul.wide.u32 	%rd114, %r4, 16;
	add.s64 	%rd115, %rd113, %rd114;
	st.global.f32 	[%rd115], %f271;
	st.global.f32 	[%rd115+4], %f254;
	st.global.f32 	[%rd115+12], %f273;
	st.global.u8 	[%rd115+8], %rs10;
	setp.gt.f32	%p107, %f254, 0f00000000;
	@%p107 bra 	BB4_98;

	mov.u64 	%rd116, $str9;
	cvta.global.u64 	%rd117, %rd116;
	mov.u64 	%rd118, $str2;
	cvta.global.u64 	%rd119, %rd118;
	mov.u32 	%r186, 378;
	mov.u64 	%rd120, 0;
	mov.u64 	%rd121, 2;
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd117;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd119;
	.param .b32 param2;
	st.param.b32	[param2+0], %r186;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd120;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd121;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 31

BB4_98:
	ret;
}

	// .globl	compose
.visible .entry compose(
	.param .u64 compose_param_0,
	.param .u32 compose_param_1,
	.param .u64 compose_param_2,
	.param .u32 compose_param_3,
	.param .u64 compose_param_4,
	.param .u32 compose_param_5,
	.param .u32 compose_param_6,
	.param .u64 compose_param_7,
	.param .u32 compose_param_8,
	.param .f32 compose_param_9
)
{
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<20>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<16>;


	ld.param.u64 	%rd2, [compose_param_0];
	ld.param.u32 	%r11, [compose_param_1];
	ld.param.u64 	%rd3, [compose_param_4];
	ld.param.u32 	%r13, [compose_param_5];
	ld.param.u32 	%r14, [compose_param_6];
	ld.param.u64 	%rd4, [compose_param_7];
	ld.param.u32 	%r12, [compose_param_8];
	ld.param.f32 	%f6, [compose_param_9];
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r16, %r15, %r17;
	mov.u32 	%r18, %ctaid.y;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r2, %r18, %r19, %r20;
	setp.ge.u32	%p1, %r2, %r14;
	setp.ge.u32	%p2, %r1, %r13;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_11;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.lo.s32 	%r21, %r2, %r11;
	cvt.u64.u32	%rd6, %r21;
	add.s64 	%rd7, %rd5, %rd6;
	mul.wide.u32 	%rd8, %r1, 16;
	add.s64 	%rd9, %rd7, %rd8;
	add.s64 	%rd1, %rd9, 12;
	ld.const.u8 	%rs1, [VISUALIZE_SAMPLE_COUNT];
	setp.eq.s16	%p4, %rs1, 0;
	@%p4 bra 	BB5_5;

	ld.global.f32 	%f7, [%rd1+-8];
	cvt.rzi.u32.f32	%r22, %f7;
	cvt.rzi.u32.f32	%r3, %f6;
	min.u32 	%r23, %r22, %r3;
	cvt.rn.f32.u32	%f8, %r23;
	cvt.rn.f32.u32	%f1, %r3;
	div.rn.f32 	%f9, %f8, %f1;
	mul.f32 	%f10, %f9, 0f437F0000;
	cvt.rzi.s32.f32	%r24, %f10;
	and.b32  	%r25, %r24, 255;
	prmt.b32 	%r26, %r25, %r25, 30212;
	prmt.b32 	%r42, %r25, %r26, 28756;
	ld.global.u8 	%rs2, [%rd1+-4];
	setp.eq.s16	%p5, %rs2, 0;
	@%p5 bra 	BB5_4;

	ld.global.f32 	%f11, [%rd1];
	cvt.rzi.u32.f32	%r27, %f11;
	min.u32 	%r28, %r27, %r3;
	cvt.rn.f32.u32	%f12, %r28;
	div.rn.f32 	%f13, %f12, %f1;
	mul.f32 	%f14, %f13, 0f437F0000;
	cvt.rzi.s32.f32	%r29, %f14;
	and.b32  	%r30, %r29, 255;
	prmt.b32 	%r31, %r30, %r30, 30212;
	prmt.b32 	%r42, %r30, %r31, 28756;

BB5_4:
	or.b32  	%r43, %r42, -16777216;
	bra.uni 	BB5_10;

BB5_5:
	ld.global.f32 	%f2, [%rd1+-12];
	abs.f32 	%f15, %f2;
	mov.b32 	 %r32, %f2;
	and.b32  	%r33, %r32, -2147483648;
	or.b32  	%r34, %r33, 1056964608;
	mov.b32 	 %f16, %r34;
	add.f32 	%f17, %f2, %f16;
	cvt.rzi.f32.f32	%f18, %f17;
	setp.gt.f32	%p6, %f15, 0f4B000000;
	selp.f32	%f19, %f2, %f18, %p6;
	setp.geu.f32	%p7, %f15, 0f3F000000;
	@%p7 bra 	BB5_7;

	cvt.rzi.f32.f32	%f19, %f2;

BB5_7:
	cvt.rzi.u32.f32	%r35, %f19;
	rem.u32 	%r36, %r35, %r12;
	sub.s32 	%r37, %r12, %r36;
	add.s32 	%r8, %r37, -1;
	setp.lt.u32	%p8, %r8, %r12;
	@%p8 bra 	BB5_9;

	mov.u64 	%rd10, $str13;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str14;
	cvta.global.u64 	%rd13, %rd12;
	mov.u32 	%r38, 23;
	mov.u64 	%rd14, 0;
	mov.u64 	%rd15, 2;
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r38;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd14;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd15;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 32

BB5_9:
	shl.b32 	%r39, %r8, 2;
	mov.u32 	%r40, 0;
	suld.b.2d.b32.trap {%r43}, [%rd4, {%r39, %r40}];

BB5_10:
	shl.b32 	%r41, %r1, 2;
	sust.b.2d.b32.trap 	[%rd3, {%r41, %r2}], {%r43};

BB5_11:
	ret;
}

	// .globl	fractalRenderUnderSampled
.visible .entry fractalRenderUnderSampled(
	.param .u64 fractalRenderUnderSampled_param_0,
	.param .u32 fractalRenderUnderSampled_param_1,
	.param .u32 fractalRenderUnderSampled_param_2,
	.param .u32 fractalRenderUnderSampled_param_3,
	.param .f32 fractalRenderUnderSampled_param_4,
	.param .f32 fractalRenderUnderSampled_param_5,
	.param .f32 fractalRenderUnderSampled_param_6,
	.param .f32 fractalRenderUnderSampled_param_7,
	.param .u32 fractalRenderUnderSampled_param_8,
	.param .u32 fractalRenderUnderSampled_param_9
)
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<51>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [fractalRenderUnderSampled_param_0];
	ld.param.u32 	%r12, [fractalRenderUnderSampled_param_1];
	ld.param.u32 	%r13, [fractalRenderUnderSampled_param_2];
	ld.param.u32 	%r14, [fractalRenderUnderSampled_param_3];
	ld.param.f32 	%f13, [fractalRenderUnderSampled_param_4];
	ld.param.f32 	%f14, [fractalRenderUnderSampled_param_5];
	ld.param.f32 	%f15, [fractalRenderUnderSampled_param_6];
	ld.param.f32 	%f16, [fractalRenderUnderSampled_param_7];
	ld.param.u32 	%r15, [fractalRenderUnderSampled_param_8];
	ld.param.u32 	%r16, [fractalRenderUnderSampled_param_9];
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r20, %r18, %r17, %r19;
	mul.lo.s32 	%r1, %r20, %r16;
	mov.u32 	%r21, %ctaid.y;
	mov.u32 	%r22, %ntid.y;
	mov.u32 	%r23, %tid.y;
	mad.lo.s32 	%r24, %r21, %r22, %r23;
	mul.lo.s32 	%r2, %r24, %r16;
	sub.s32 	%r25, %r14, %r16;
	setp.ge.u32	%p1, %r2, %r25;
	sub.s32 	%r26, %r13, %r16;
	setp.ge.u32	%p2, %r1, %r26;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB6_13;

	sub.f32 	%f17, %f15, %f13;
	cvt.rn.f32.u32	%f18, %r13;
	div.rn.f32 	%f19, %f17, %f18;
	cvt.rn.f32.u32	%f20, %r14;
	sub.f32 	%f21, %f16, %f14;
	div.rn.f32 	%f22, %f21, %f20;
	cvt.rn.f32.u32	%f23, %r1;
	fma.rn.f32 	%f32, %f23, %f19, %f13;
	cvt.rn.f32.u32	%f24, %r2;
	mul.f32 	%f25, %f24, %f22;
	sub.f32 	%f31, %f16, %f25;
	ld.const.f64 	%fd1, [julia_c];
	cvt.rn.f32.f64	%f3, %fd1;
	ld.const.f64 	%fd2, [julia_c+8];
	cvt.rn.f32.f64	%f4, %fd2;
	setp.eq.s32	%p4, %r15, 0;
	mov.u32 	%r46, 0;
	@%p4 bra 	BB6_4;

BB6_2:
	mul.f32 	%f7, %f31, %f31;
	mul.f32 	%f8, %f32, %f32;
	add.f32 	%f26, %f8, %f7;
	setp.geu.f32	%p5, %f26, 0f40800000;
	@%p5 bra 	BB6_4;

	sub.f32 	%f27, %f8, %f7;
	add.f32 	%f9, %f3, %f27;
	add.f32 	%f28, %f32, %f32;
	fma.rn.f32 	%f31, %f28, %f31, %f4;
	add.s32 	%r46, %r46, 1;
	setp.lt.u32	%p6, %r46, %r15;
	mov.f32 	%f32, %f9;
	@%p6 bra 	BB6_2;

BB6_4:
	setp.eq.s32	%p7, %r16, 0;
	@%p7 bra 	BB6_13;

	cvt.rn.f32.u32	%f29, %r46;
	cvt.rzi.u32.f32	%r33, %f29;
	mul.lo.s32 	%r34, %r2, %r12;
	cvt.u64.u32	%rd3, %r34;
	cvta.to.global.u64 	%rd4, %rd2;
	add.s64 	%rd5, %rd4, %rd3;
	cvt.rn.f32.u32	%f30, %r16;
	rcp.rn.f32 	%f11, %f30;
	cvt.rn.f32.u32	%f12, %r33;
	mul.wide.u32 	%rd6, %r1, 16;
	add.s64 	%rd1, %rd5, %rd6;
	and.b32  	%r32, %r16, 3;
	mov.u32 	%r47, 1;
	mov.u32 	%r50, 0;
	setp.eq.s32	%p8, %r32, 0;
	@%p8 bra 	BB6_11;

	setp.eq.s32	%p9, %r32, 1;
	mov.u32 	%r48, %r50;
	@%p9 bra 	BB6_10;

	setp.eq.s32	%p10, %r32, 2;
	@%p10 bra 	BB6_9;

	st.global.f32 	[%rd1], %f12;
	st.global.f32 	[%rd1+4], %f11;
	mov.u32 	%r41, 0;
	st.global.u32 	[%rd1+12], %r41;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd1+8], %rs1;
	mov.u32 	%r47, 2;

BB6_9:
	st.global.f32 	[%rd1], %f12;
	st.global.f32 	[%rd1+4], %f11;
	mov.u32 	%r42, 0;
	st.global.u32 	[%rd1+12], %r42;
	mov.u16 	%rs2, 0;
	st.global.u8 	[%rd1+8], %rs2;
	mov.u32 	%r48, %r47;

BB6_10:
	st.global.f32 	[%rd1], %f12;
	st.global.f32 	[%rd1+4], %f11;
	st.global.u32 	[%rd1+12], %r50;
	mov.u16 	%rs3, 0;
	st.global.u8 	[%rd1+8], %rs3;
	add.s32 	%r50, %r48, 1;

BB6_11:
	setp.lt.u32	%p11, %r16, 4;
	@%p11 bra 	BB6_13;

BB6_12:
	st.global.f32 	[%rd1], %f12;
	st.global.f32 	[%rd1+4], %f11;
	mov.u32 	%r44, 0;
	st.global.u32 	[%rd1+12], %r44;
	mov.u16 	%rs4, 0;
	st.global.u8 	[%rd1+8], %rs4;
	add.s32 	%r50, %r50, 4;
	setp.lt.u32	%p12, %r50, %r16;
	@%p12 bra 	BB6_12;

BB6_13:
	ret;
}

	// .globl	debug
.visible .entry debug(

)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<4>;


	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mul.lo.s32 	%r3, %r2, %r1;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ntid.y;
	mul.lo.s32 	%r6, %r4, %r5;
	mov.u32 	%r7, %tid.x;
	neg.s32 	%r8, %r7;
	setp.eq.s32	%p1, %r3, %r8;
	mov.u32 	%r9, %tid.y;
	neg.s32 	%r10, %r9;
	setp.eq.s32	%p2, %r6, %r10;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB7_2;
	bra.uni 	BB7_1;

BB7_1:
	mov.u64 	%rd1, $str;
	cvta.global.u64 	%rd2, %rd1;
	mov.u64 	%rd3, 0;
	// Callseq Start 33
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 33

BB7_2:
	ret;
}


