//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24330188
// Cuda compilation tools, release 9.2, V9.2.148
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	init
.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 8 .b8 julia_c[16];
.const .align 1 .u8 VISUALIZE_SAMPLE_COUNT;
.global .align 4 .u32 seed;
.global .align 4 .u32 WARP_SIZE_X = 8;
.global .align 4 .u32 WARP_SIZE_Y = 4;
.global .align 4 .u32 USE_ADAPTIVE_SS_FLAG_MASK = 1;
.global .align 4 .u32 USE_FOVEATION_FLAG_MASK = 4;
.global .align 4 .u32 USE_SAMPLE_REUSE_FLAG_MASK = 8;
.global .align 4 .u32 IS_ZOOMING_FLAG_MASK = 16;
.global .align 4 .u32 ZOOMING_IN_FLAG_MASK = 32;
.global .align 4 .u32 visualityAmplifyCoeff = 10;
.global .align 4 .f32 screenDistance = 0f42700000;
.global .align 16 .b8 $str[18] = {104, 101, 108, 108, 111, 32, 102, 114, 111, 109, 32, 106, 117, 108, 105, 97, 10, 0};
.global .align 16 .b8 $str1[34] = {98, 0, 108, 0, 111, 0, 99, 0, 107, 0, 68, 0, 105, 0, 109, 0, 46, 0, 120, 0, 32, 0, 61, 0, 61, 0, 32, 0, 51, 0, 50, 0, 0, 0};
.global .align 16 .b8 $str2[138] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 82, 0, 101, 0, 110, 0, 100, 0, 101, 0, 114, 0, 101, 0, 114, 0, 71, 0, 101, 0, 110, 0, 101, 0, 114, 0, 105, 0, 99, 0, 46, 0, 99, 0, 117, 0, 0, 0};
.global .align 16 .b8 $str3[40] = {112, 0, 79, 0, 117, 0, 116, 0, 112, 0, 117, 0, 116, 0, 45, 0, 62, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str6[34] = {118, 0, 105, 0, 115, 0, 117, 0, 97, 0, 108, 0, 65, 0, 110, 0, 103, 0, 108, 0, 101, 0, 32, 0, 62, 0, 61, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str7[36] = {114, 0, 101, 0, 115, 0, 117, 0, 108, 0, 116, 0, 46, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str8[68] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 60, 0, 61, 0, 32, 0, 77, 0, 65, 0, 88, 0, 95, 0, 83, 0, 85, 0, 80, 0, 69, 0, 82, 0, 95, 0, 83, 0, 65, 0, 77, 0, 80, 0, 76, 0, 73, 0, 78, 0, 71, 0, 0, 0};
.global .align 16 .b8 $str9[54] = {112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 73, 0, 100, 0, 120, 0, 32, 0, 60, 0, 32, 0, 112, 0, 97, 0, 108, 0, 101, 0, 116, 0, 116, 0, 101, 0, 76, 0, 101, 0, 110, 0, 103, 0, 116, 0, 104, 0, 0, 0};
.global .align 16 .b8 $str10[122] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 115, 0, 47, 0, 106, 0, 117, 0, 108, 0, 105, 0, 97, 0, 46, 0, 99, 0, 117, 0, 0, 0};

.visible .entry init(

)
{



	ret;
}

	// .globl	fractalRenderMainFloat
.visible .entry fractalRenderMainFloat(
	.param .u64 fractalRenderMainFloat_param_0,
	.param .u32 fractalRenderMainFloat_param_1,
	.param .align 4 .b8 fractalRenderMainFloat_param_2[8],
	.param .align 4 .b8 fractalRenderMainFloat_param_3[16],
	.param .u32 fractalRenderMainFloat_param_4,
	.param .f32 fractalRenderMainFloat_param_5,
	.param .u32 fractalRenderMainFloat_param_6
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<38>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<97>;
	.reg .b32 	%r<109>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<51>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainFloat_param_0];
	ld.param.u32 	%r27, [fractalRenderMainFloat_param_1];
	ld.param.u32 	%r29, [fractalRenderMainFloat_param_2+4];
	ld.param.u32 	%r28, [fractalRenderMainFloat_param_2];
	ld.param.f32 	%f41, [fractalRenderMainFloat_param_3+12];
	ld.param.f32 	%f40, [fractalRenderMainFloat_param_3+8];
	ld.param.f32 	%f39, [fractalRenderMainFloat_param_3+4];
	ld.param.f32 	%f38, [fractalRenderMainFloat_param_3];
	ld.param.u32 	%r30, [fractalRenderMainFloat_param_4];
	ld.param.f32 	%f42, [fractalRenderMainFloat_param_5];
	ld.param.u32 	%r31, [fractalRenderMainFloat_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd3, $str1;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str2;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r32, 59;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB1_2:
	mov.u32 	%r33, %tid.x;
	mov.u32 	%r34, %tid.y;
	mad.lo.s32 	%r35, %r1, %r34, %r33;
	shl.b32 	%r36, %r1, 2;
	and.b32  	%r37, %r35, 15;
	rem.u32 	%r38, %r35, %r36;
	sub.s32 	%r39, %r38, %r37;
	shr.u32 	%r40, %r39, 2;
	and.b32  	%r41, %r35, 3;
	add.s32 	%r42, %r40, %r41;
	div.u32 	%r43, %r35, %r36;
	shl.b32 	%r44, %r43, 2;
	bfe.u32 	%r45, %r35, 2, 2;
	add.s32 	%r46, %r44, %r45;
	mov.u32 	%r47, %ctaid.x;
	mad.lo.s32 	%r4, %r47, %r1, %r42;
	mov.u32 	%r48, %ctaid.y;
	mov.u32 	%r49, %ntid.y;
	mad.lo.s32 	%r5, %r48, %r49, %r46;
	setp.lt.u32	%p2, %r4, %r28;
	setp.lt.u32	%p3, %r5, %r29;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB1_34;
	bra.uni 	BB1_3;

BB1_3:
	setp.lt.f32	%p5, %f42, 0f3F800000;
	mov.f32 	%f94, 0f00000000;
	mov.f32 	%f96, %f94;
	@%p5 bra 	BB1_32;

	abs.f32 	%f45, %f42;
	mov.b32 	 %r50, %f42;
	and.b32  	%r51, %r50, -2147483648;
	or.b32  	%r52, %r51, 1056964608;
	mov.b32 	 %f46, %r52;
	add.f32 	%f47, %f46, %f42;
	cvt.rzi.f32.f32	%f48, %f47;
	setp.gt.f32	%p6, %f45, 0f4B000000;
	selp.f32	%f85, %f42, %f48, %p6;
	setp.geu.f32	%p7, %f45, 0f3F000000;
	@%p7 bra 	BB1_6;

	cvt.rzi.f32.f32	%f85, %f42;

BB1_6:
	cvt.rzi.u32.f32	%r106, %f85;
	setp.lt.u32	%p8, %r106, 65;
	@%p8 bra 	BB1_8;

	mov.u64 	%rd9, $str8;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r53, 113;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r53;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_8:
	setp.eq.s32	%p9, %r106, 0;
	cvt.rn.f32.u32	%f94, %r106;
	mov.u32 	%r107, 0;
	@%p9 bra 	BB1_9;

	cvt.rn.f32.u32	%f7, %r4;
	cvt.rn.f32.u32	%f8, %r5;
	ld.const.f64 	%fd1, [julia_c];
	cvt.rn.f32.f64	%f9, %fd1;
	ld.const.f64 	%fd2, [julia_c+8];
	cvt.rn.f32.f64	%f10, %fd2;
	cvt.rn.f32.u32	%f49, %r28;
	sub.f32 	%f50, %f40, %f38;
	div.rn.f32 	%f11, %f50, %f49;
	cvt.rn.f32.u32	%f51, %r29;
	sub.f32 	%f52, %f41, %f39;
	div.rn.f32 	%f12, %f52, %f51;
	mov.u32 	%r57, 0;
	and.b32  	%r60, %r31, 1;
	mov.u32 	%r97, %r57;
	mov.u32 	%r107, %r57;

BB1_11:
	mov.u32 	%r9, %r106;
	mov.u32 	%r7, %r97;
	cvt.rn.f32.u32	%f53, %r7;
	div.rn.f32 	%f54, %f53, %f94;
	add.f32 	%f55, %f7, %f54;
	add.f32 	%f56, %f8, %f54;
	neg.f32 	%f57, %f56;
	fma.rn.f32 	%f88, %f11, %f55, %f38;
	fma.rn.f32 	%f87, %f12, %f57, %f41;
	setp.eq.s32	%p10, %r30, 0;
	mov.u32 	%r101, %r57;
	@%p10 bra 	BB1_14;

BB1_12:
	mul.f32 	%f18, %f87, %f87;
	mul.f32 	%f19, %f88, %f88;
	add.f32 	%f58, %f19, %f18;
	setp.geu.f32	%p11, %f58, 0f40800000;
	@%p11 bra 	BB1_14;

	sub.f32 	%f59, %f19, %f18;
	add.f32 	%f20, %f9, %f59;
	add.f32 	%f60, %f88, %f88;
	fma.rn.f32 	%f87, %f60, %f87, %f10;
	add.s32 	%r101, %r101, 1;
	setp.lt.u32	%p12, %r101, %r30;
	mov.f32 	%f88, %f20;
	@%p12 bra 	BB1_12;

BB1_14:
	cvt.rn.f32.u32	%f61, %r101;
	cvt.rzi.u32.f32	%r13, %f61;
	add.s32 	%r107, %r13, %r107;
	setp.gt.u32	%p13, %r7, 9;
	@%p13 bra 	BB1_16;

	add.u64 	%rd15, %SP, 0;
	cvta.to.local.u64 	%rd16, %rd15;
	mul.wide.u32 	%rd17, %r7, 4;
	add.s64 	%rd18, %rd16, %rd17;
	st.local.u32 	[%rd18], %r13;

BB1_16:
	setp.lt.u32	%p14, %r7, 10;
	setp.eq.b32	%p15, %r60, 1;
	setp.ne.s32	%p16, %r7, 0;
	and.pred  	%p17, %p14, %p16;
	and.pred  	%p18, %p17, %p15;
	shr.u32 	%r61, %r9, 1;
	setp.eq.s32	%p19, %r7, %r61;
	or.pred  	%p20, %p18, %p19;
	add.s32 	%r97, %r7, 1;
	mov.u32 	%r106, %r9;
	@!%p20 bra 	BB1_30;
	bra.uni 	BB1_17;

BB1_17:
	div.u32 	%r62, %r107, %r97;
	cvt.rn.f32.u32	%f22, %r62;
	setp.eq.s32	%p21, %r7, 0;
	mov.f32 	%f93, 0f00000000;
	@%p21 bra 	BB1_26;

	and.b32  	%r64, %r7, 3;
	setp.eq.s32	%p22, %r64, 0;
	mov.f32 	%f93, 0f00000000;
	mov.u32 	%r105, 0;
	@%p22 bra 	BB1_24;

	setp.eq.s32	%p23, %r64, 1;
	mov.f32 	%f90, 0f00000000;
	mov.u32 	%r103, 0;
	@%p23 bra 	BB1_23;

	setp.eq.s32	%p24, %r64, 2;
	mov.f32 	%f89, 0f00000000;
	mov.u32 	%r102, 0;
	@%p24 bra 	BB1_22;

	add.u64 	%rd19, %SP, 0;
	cvta.to.local.u64 	%rd20, %rd19;
	ld.local.u32 	%r70, [%rd20];
	cvt.rn.f32.u32	%f66, %r70;
	sub.f32 	%f67, %f66, %f22;
	fma.rn.f32 	%f89, %f67, %f67, 0f00000000;
	mov.u32 	%r102, 1;

BB1_22:
	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd22, %rd21;
	mul.wide.u32 	%rd23, %r102, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.local.u32 	%r71, [%rd24];
	cvt.rn.f32.u32	%f68, %r71;
	sub.f32 	%f69, %f68, %f22;
	fma.rn.f32 	%f90, %f69, %f69, %f89;
	add.s32 	%r103, %r102, 1;

BB1_23:
	add.u64 	%rd25, %SP, 0;
	cvta.to.local.u64 	%rd26, %rd25;
	mul.wide.u32 	%rd27, %r103, 4;
	add.s64 	%rd28, %rd26, %rd27;
	ld.local.u32 	%r72, [%rd28];
	cvt.rn.f32.u32	%f70, %r72;
	sub.f32 	%f71, %f70, %f22;
	fma.rn.f32 	%f93, %f71, %f71, %f90;
	add.s32 	%r105, %r103, 1;

BB1_24:
	add.u64 	%rd29, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd29;
	setp.lt.u32	%p25, %r7, 4;
	@%p25 bra 	BB1_26;

BB1_25:
	mul.wide.u32 	%rd30, %r105, 4;
	add.s64 	%rd31, %rd1, %rd30;
	ld.local.u32 	%r73, [%rd31];
	cvt.rn.f32.u32	%f72, %r73;
	sub.f32 	%f73, %f72, %f22;
	fma.rn.f32 	%f74, %f73, %f73, %f93;
	add.s32 	%r74, %r105, 1;
	mul.wide.u32 	%rd32, %r74, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.local.u32 	%r75, [%rd33];
	cvt.rn.f32.u32	%f75, %r75;
	sub.f32 	%f76, %f75, %f22;
	fma.rn.f32 	%f77, %f76, %f76, %f74;
	add.s32 	%r76, %r105, 2;
	mul.wide.u32 	%rd34, %r76, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.local.u32 	%r77, [%rd35];
	cvt.rn.f32.u32	%f78, %r77;
	sub.f32 	%f79, %f78, %f22;
	fma.rn.f32 	%f80, %f79, %f79, %f77;
	add.s32 	%r78, %r105, 3;
	mul.wide.u32 	%rd36, %r78, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r79, [%rd37];
	cvt.rn.f32.u32	%f81, %r79;
	sub.f32 	%f82, %f81, %f22;
	fma.rn.f32 	%f93, %f82, %f82, %f80;
	add.s32 	%r105, %r105, 4;
	setp.lt.u32	%p26, %r105, %r7;
	@%p26 bra 	BB1_25;

BB1_26:
	add.s32 	%r80, %r7, -1;
	cvt.rn.f32.u32	%f83, %r80;
	div.rn.f32 	%f84, %f93, %f83;
	div.rn.f32 	%f32, %f84, %f22;
	setp.ne.s32	%p27, %r7, 1;
	@%p27 bra 	BB1_28;

	// inline asm
	activemask.b32 %r81;
	// inline asm
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd39, %rd38;
	ld.local.v2.u32 	{%r83, %r84}, [%rd39];
	setp.eq.s32	%p28, %r83, %r84;
	vote.sync.all.pred 	%p29, %p28, %r81;
	mov.u32 	%r106, 2;
	@%p29 bra 	BB1_30;

BB1_28:
	// inline asm
	activemask.b32 %r88;
	// inline asm
	setp.lt.f32	%p30, %f32, 0f3C23D70A;
	vote.sync.all.pred 	%p31, %p30, %r88;
	mov.u32 	%r106, %r97;
	@%p31 bra 	BB1_30;

	// inline asm
	activemask.b32 %r90;
	// inline asm
	setp.le.f32	%p32, %f32, 0f3F800000;
	vote.sync.all.pred 	%p33, %p32, %r90;
	setp.ge.u32	%p34, %r7, %r61;
	and.pred  	%p35, %p33, %p34;
	selp.b32	%r106, %r97, %r9, %p35;

BB1_30:
	cvt.rn.f32.u32	%f94, %r106;
	setp.lt.u32	%p36, %r97, %r106;
	@%p36 bra 	BB1_11;
	bra.uni 	BB1_31;

BB1_9:
	mov.u32 	%r106, %r107;

BB1_31:
	div.u32 	%r93, %r107, %r106;
	cvt.rn.f32.u32	%f96, %r93;

BB1_32:
	mul.lo.s32 	%r94, %r5, %r27;
	cvt.u64.u32	%rd40, %r94;
	cvta.to.global.u64 	%rd41, %rd2;
	add.s64 	%rd42, %rd41, %rd40;
	mul.wide.u32 	%rd43, %r4, 16;
	add.s64 	%rd44, %rd42, %rd43;
	st.global.f32 	[%rd44], %f96;
	st.global.f32 	[%rd44+4], %f94;
	mov.u32 	%r95, 0;
	st.global.u32 	[%rd44+12], %r95;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd44+8], %rs1;
	setp.gt.f32	%p37, %f94, 0f00000000;
	@%p37 bra 	BB1_34;

	mov.u64 	%rd45, $str3;
	cvta.global.u64 	%rd46, %rd45;
	mov.u64 	%rd47, $str2;
	cvta.global.u64 	%rd48, %rd47;
	mov.u32 	%r96, 202;
	mov.u64 	%rd49, 0;
	mov.u64 	%rd50, 2;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r96;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd49;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd50;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB1_34:
	ret;
}

	// .globl	fractalRenderMainDouble
.visible .entry fractalRenderMainDouble(
	.param .u64 fractalRenderMainDouble_param_0,
	.param .u32 fractalRenderMainDouble_param_1,
	.param .align 4 .b8 fractalRenderMainDouble_param_2[8],
	.param .align 8 .b8 fractalRenderMainDouble_param_3[32],
	.param .u32 fractalRenderMainDouble_param_4,
	.param .f32 fractalRenderMainDouble_param_5,
	.param .u32 fractalRenderMainDouble_param_6
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<38>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<19>;
	.reg .b32 	%r<109>;
	.reg .f64 	%fd<75>;
	.reg .b64 	%rd<51>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainDouble_param_0];
	ld.param.u32 	%r27, [fractalRenderMainDouble_param_1];
	ld.param.u32 	%r29, [fractalRenderMainDouble_param_2+4];
	ld.param.u32 	%r28, [fractalRenderMainDouble_param_2];
	ld.param.f64 	%fd31, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd30, [fractalRenderMainDouble_param_3+16];
	ld.param.f64 	%fd29, [fractalRenderMainDouble_param_3+8];
	ld.param.f64 	%fd28, [fractalRenderMainDouble_param_3];
	ld.param.u32 	%r30, [fractalRenderMainDouble_param_4];
	ld.param.f32 	%f8, [fractalRenderMainDouble_param_5];
	ld.param.u32 	%r31, [fractalRenderMainDouble_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p1, %r1, 32;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd3, $str1;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str2;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r32, 59;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB2_2:
	mov.u32 	%r33, %tid.x;
	mov.u32 	%r34, %tid.y;
	mad.lo.s32 	%r35, %r1, %r34, %r33;
	shl.b32 	%r36, %r1, 2;
	and.b32  	%r37, %r35, 15;
	rem.u32 	%r38, %r35, %r36;
	sub.s32 	%r39, %r38, %r37;
	shr.u32 	%r40, %r39, 2;
	and.b32  	%r41, %r35, 3;
	add.s32 	%r42, %r40, %r41;
	div.u32 	%r43, %r35, %r36;
	shl.b32 	%r44, %r43, 2;
	bfe.u32 	%r45, %r35, 2, 2;
	add.s32 	%r46, %r44, %r45;
	mov.u32 	%r47, %ctaid.x;
	mad.lo.s32 	%r4, %r47, %r1, %r42;
	mov.u32 	%r48, %ctaid.y;
	mov.u32 	%r49, %ntid.y;
	mad.lo.s32 	%r5, %r48, %r49, %r46;
	setp.lt.u32	%p2, %r4, %r28;
	setp.lt.u32	%p3, %r5, %r29;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB2_33;
	bra.uni 	BB2_3;

BB2_3:
	setp.lt.f32	%p5, %f8, 0f3F800000;
	mov.f32 	%f17, 0f00000000;
	mov.f32 	%f18, %f17;
	@%p5 bra 	BB2_31;

	abs.f32 	%f11, %f8;
	mov.b32 	 %r50, %f8;
	and.b32  	%r51, %r50, -2147483648;
	or.b32  	%r52, %r51, 1056964608;
	mov.b32 	 %f12, %r52;
	add.f32 	%f13, %f12, %f8;
	cvt.rzi.f32.f32	%f14, %f13;
	setp.gt.f32	%p6, %f11, 0f4B000000;
	selp.f32	%f16, %f8, %f14, %p6;
	setp.geu.f32	%p7, %f11, 0f3F000000;
	@%p7 bra 	BB2_6;

	cvt.rzi.f32.f32	%f16, %f8;

BB2_6:
	cvt.rzi.u32.f32	%r6, %f16;
	setp.lt.u32	%p8, %r6, 65;
	@%p8 bra 	BB2_8;

	mov.u64 	%rd9, $str8;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r53, 113;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r53;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB2_8:
	setp.eq.s32	%p9, %r6, 0;
	mov.u32 	%r107, 0;
	mov.u32 	%r106, %r107;
	@%p9 bra 	BB2_30;

	cvt.rn.f64.u32	%fd3, %r4;
	cvt.rn.f64.u32	%fd4, %r5;
	ld.const.f64 	%fd5, [julia_c];
	ld.const.f64 	%fd6, [julia_c+8];
	cvt.rn.f64.u32	%fd32, %r28;
	sub.f64 	%fd33, %fd30, %fd28;
	div.rn.f64 	%fd7, %fd33, %fd32;
	cvt.rn.f64.u32	%fd34, %r29;
	sub.f64 	%fd35, %fd31, %fd29;
	div.rn.f64 	%fd8, %fd35, %fd34;
	mov.u32 	%r57, 0;
	and.b32  	%r60, %r31, 1;
	mov.u32 	%r97, %r57;
	mov.u32 	%r107, %r57;
	mov.u32 	%r106, %r6;

BB2_10:
	mov.u32 	%r9, %r106;
	mov.u32 	%r7, %r97;
	cvt.rn.f64.u32	%fd36, %r9;
	cvt.rn.f64.u32	%fd37, %r7;
	div.rn.f64 	%fd38, %fd37, %fd36;
	add.f64 	%fd39, %fd3, %fd38;
	add.f64 	%fd40, %fd4, %fd38;
	neg.f64 	%fd41, %fd40;
	fma.rn.f64 	%fd69, %fd7, %fd39, %fd28;
	fma.rn.f64 	%fd68, %fd8, %fd41, %fd31;
	setp.eq.s32	%p10, %r30, 0;
	mov.u32 	%r101, %r57;
	@%p10 bra 	BB2_13;

BB2_11:
	mul.f64 	%fd13, %fd68, %fd68;
	mul.f64 	%fd14, %fd69, %fd69;
	add.f64 	%fd42, %fd14, %fd13;
	setp.geu.f64	%p11, %fd42, 0d4010000000000000;
	@%p11 bra 	BB2_13;

	sub.f64 	%fd43, %fd14, %fd13;
	add.f64 	%fd15, %fd5, %fd43;
	add.f64 	%fd44, %fd69, %fd69;
	fma.rn.f64 	%fd68, %fd44, %fd68, %fd6;
	add.s32 	%r101, %r101, 1;
	setp.lt.u32	%p12, %r101, %r30;
	mov.f64 	%fd69, %fd15;
	@%p12 bra 	BB2_11;

BB2_13:
	cvt.rn.f32.u32	%f15, %r101;
	cvt.rzi.u32.f32	%r13, %f15;
	add.s32 	%r107, %r13, %r107;
	setp.gt.u32	%p13, %r7, 9;
	@%p13 bra 	BB2_15;

	add.u64 	%rd15, %SP, 0;
	cvta.to.local.u64 	%rd16, %rd15;
	mul.wide.u32 	%rd17, %r7, 4;
	add.s64 	%rd18, %rd16, %rd17;
	st.local.u32 	[%rd18], %r13;

BB2_15:
	setp.lt.u32	%p14, %r7, 10;
	setp.eq.b32	%p15, %r60, 1;
	setp.ne.s32	%p16, %r7, 0;
	and.pred  	%p17, %p14, %p16;
	and.pred  	%p18, %p17, %p15;
	shr.u32 	%r61, %r9, 1;
	setp.eq.s32	%p19, %r7, %r61;
	or.pred  	%p20, %p18, %p19;
	add.s32 	%r97, %r7, 1;
	mov.u32 	%r106, %r9;
	@!%p20 bra 	BB2_29;
	bra.uni 	BB2_16;

BB2_16:
	div.u32 	%r62, %r107, %r97;
	cvt.rn.f64.u32	%fd17, %r62;
	setp.eq.s32	%p21, %r7, 0;
	mov.f64 	%fd74, 0d0000000000000000;
	@%p21 bra 	BB2_25;

	and.b32  	%r64, %r7, 3;
	setp.eq.s32	%p22, %r64, 0;
	mov.f64 	%fd74, 0d0000000000000000;
	mov.u32 	%r105, 0;
	@%p22 bra 	BB2_23;

	setp.eq.s32	%p23, %r64, 1;
	mov.f64 	%fd71, 0d0000000000000000;
	mov.u32 	%r103, 0;
	@%p23 bra 	BB2_22;

	setp.eq.s32	%p24, %r64, 2;
	mov.f64 	%fd70, 0d0000000000000000;
	mov.u32 	%r102, 0;
	@%p24 bra 	BB2_21;

	add.u64 	%rd19, %SP, 0;
	cvta.to.local.u64 	%rd20, %rd19;
	ld.local.u32 	%r70, [%rd20];
	cvt.rn.f64.u32	%fd49, %r70;
	sub.f64 	%fd50, %fd49, %fd17;
	fma.rn.f64 	%fd70, %fd50, %fd50, 0d0000000000000000;
	mov.u32 	%r102, 1;

BB2_21:
	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd22, %rd21;
	mul.wide.u32 	%rd23, %r102, 4;
	add.s64 	%rd24, %rd22, %rd23;
	ld.local.u32 	%r71, [%rd24];
	cvt.rn.f64.u32	%fd51, %r71;
	sub.f64 	%fd52, %fd51, %fd17;
	fma.rn.f64 	%fd71, %fd52, %fd52, %fd70;
	add.s32 	%r103, %r102, 1;

BB2_22:
	add.u64 	%rd25, %SP, 0;
	cvta.to.local.u64 	%rd26, %rd25;
	mul.wide.u32 	%rd27, %r103, 4;
	add.s64 	%rd28, %rd26, %rd27;
	ld.local.u32 	%r72, [%rd28];
	cvt.rn.f64.u32	%fd53, %r72;
	sub.f64 	%fd54, %fd53, %fd17;
	fma.rn.f64 	%fd74, %fd54, %fd54, %fd71;
	add.s32 	%r105, %r103, 1;

BB2_23:
	add.u64 	%rd29, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd29;
	setp.lt.u32	%p25, %r7, 4;
	@%p25 bra 	BB2_25;

BB2_24:
	mul.wide.u32 	%rd30, %r105, 4;
	add.s64 	%rd31, %rd1, %rd30;
	ld.local.u32 	%r73, [%rd31];
	cvt.rn.f64.u32	%fd55, %r73;
	sub.f64 	%fd56, %fd55, %fd17;
	fma.rn.f64 	%fd57, %fd56, %fd56, %fd74;
	add.s32 	%r74, %r105, 1;
	mul.wide.u32 	%rd32, %r74, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.local.u32 	%r75, [%rd33];
	cvt.rn.f64.u32	%fd58, %r75;
	sub.f64 	%fd59, %fd58, %fd17;
	fma.rn.f64 	%fd60, %fd59, %fd59, %fd57;
	add.s32 	%r76, %r105, 2;
	mul.wide.u32 	%rd34, %r76, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.local.u32 	%r77, [%rd35];
	cvt.rn.f64.u32	%fd61, %r77;
	sub.f64 	%fd62, %fd61, %fd17;
	fma.rn.f64 	%fd63, %fd62, %fd62, %fd60;
	add.s32 	%r78, %r105, 3;
	mul.wide.u32 	%rd36, %r78, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r79, [%rd37];
	cvt.rn.f64.u32	%fd64, %r79;
	sub.f64 	%fd65, %fd64, %fd17;
	fma.rn.f64 	%fd74, %fd65, %fd65, %fd63;
	add.s32 	%r105, %r105, 4;
	setp.lt.u32	%p26, %r105, %r7;
	@%p26 bra 	BB2_24;

BB2_25:
	add.s32 	%r80, %r7, -1;
	cvt.rn.f64.u32	%fd66, %r80;
	div.rn.f64 	%fd67, %fd74, %fd66;
	div.rn.f64 	%fd27, %fd67, %fd17;
	setp.ne.s32	%p27, %r7, 1;
	@%p27 bra 	BB2_27;

	// inline asm
	activemask.b32 %r81;
	// inline asm
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd39, %rd38;
	ld.local.v2.u32 	{%r83, %r84}, [%rd39];
	setp.eq.s32	%p28, %r83, %r84;
	vote.sync.all.pred 	%p29, %p28, %r81;
	mov.u32 	%r106, 2;
	@%p29 bra 	BB2_29;

BB2_27:
	// inline asm
	activemask.b32 %r88;
	// inline asm
	setp.lt.f64	%p30, %fd27, 0d3F847AE140000000;
	vote.sync.all.pred 	%p31, %p30, %r88;
	mov.u32 	%r106, %r97;
	@%p31 bra 	BB2_29;

	// inline asm
	activemask.b32 %r90;
	// inline asm
	setp.le.f64	%p32, %fd27, 0d3FF0000000000000;
	vote.sync.all.pred 	%p33, %p32, %r90;
	setp.ge.u32	%p34, %r7, %r61;
	and.pred  	%p35, %p33, %p34;
	selp.b32	%r106, %r97, %r9, %p35;

BB2_29:
	setp.lt.u32	%p36, %r97, %r106;
	@%p36 bra 	BB2_10;

BB2_30:
	cvt.rn.f32.u32	%f17, %r106;
	div.u32 	%r93, %r107, %r106;
	cvt.rn.f32.u32	%f18, %r93;

BB2_31:
	mul.lo.s32 	%r94, %r5, %r27;
	cvt.u64.u32	%rd40, %r94;
	cvta.to.global.u64 	%rd41, %rd2;
	add.s64 	%rd42, %rd41, %rd40;
	mul.wide.u32 	%rd43, %r4, 16;
	add.s64 	%rd44, %rd42, %rd43;
	st.global.f32 	[%rd44], %f18;
	st.global.f32 	[%rd44+4], %f17;
	mov.u32 	%r95, 0;
	st.global.u32 	[%rd44+12], %r95;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd44+8], %rs1;
	setp.gt.f32	%p37, %f17, 0f00000000;
	@%p37 bra 	BB2_33;

	mov.u64 	%rd45, $str3;
	cvta.global.u64 	%rd46, %rd45;
	mov.u64 	%rd47, $str2;
	cvta.global.u64 	%rd48, %rd47;
	mov.u32 	%r96, 202;
	mov.u64 	%rd49, 0;
	mov.u64 	%rd50, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd46;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r96;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd49;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd50;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB2_33:
	ret;
}

	// .globl	fractalRenderAdvancedFloat
.visible .entry fractalRenderAdvancedFloat(
	.param .u64 fractalRenderAdvancedFloat_param_0,
	.param .u32 fractalRenderAdvancedFloat_param_1,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_2[8],
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_3[16],
	.param .u32 fractalRenderAdvancedFloat_param_4,
	.param .f32 fractalRenderAdvancedFloat_param_5,
	.param .u32 fractalRenderAdvancedFloat_param_6,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_7[16],
	.param .u64 fractalRenderAdvancedFloat_param_8,
	.param .u32 fractalRenderAdvancedFloat_param_9,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<100>;
	.reg .b16 	%rs<10>;
	.reg .f32 	%f<315>;
	.reg .b32 	%r<211>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<98>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd4, [fractalRenderAdvancedFloat_param_0];
	ld.param.u32 	%r53, [fractalRenderAdvancedFloat_param_1];
	ld.param.u32 	%r55, [fractalRenderAdvancedFloat_param_2+4];
	ld.param.u32 	%r54, [fractalRenderAdvancedFloat_param_2];
	ld.param.f32 	%f101, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f100, [fractalRenderAdvancedFloat_param_3+8];
	ld.param.f32 	%f99, [fractalRenderAdvancedFloat_param_3+4];
	ld.param.f32 	%f98, [fractalRenderAdvancedFloat_param_3];
	ld.param.u32 	%r56, [fractalRenderAdvancedFloat_param_4];
	ld.param.f32 	%f7, [fractalRenderAdvancedFloat_param_5];
	ld.param.u32 	%r57, [fractalRenderAdvancedFloat_param_6];
	ld.param.f32 	%f106, [fractalRenderAdvancedFloat_param_7+12];
	ld.param.f32 	%f105, [fractalRenderAdvancedFloat_param_7+8];
	ld.param.f32 	%f104, [fractalRenderAdvancedFloat_param_7+4];
	ld.param.f32 	%f103, [fractalRenderAdvancedFloat_param_7];
	ld.param.u64 	%rd5, [fractalRenderAdvancedFloat_param_8];
	ld.param.u32 	%r58, [fractalRenderAdvancedFloat_param_9];
	ld.param.u32 	%r60, [fractalRenderAdvancedFloat_param_10+4];
	ld.param.u32 	%r59, [fractalRenderAdvancedFloat_param_10];
	mov.u32 	%r61, %ntid.x;
	setp.eq.s32	%p3, %r61, 32;
	@%p3 bra 	BB3_2;

	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, $str2;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r62, 59;
	mov.u64 	%rd10, 0;
	mov.u64 	%rd11, 2;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b32 param2;
	st.param.b32	[param2+0], %r62;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd10;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd11;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB3_2:
	mov.u32 	%r63, %tid.y;
	mov.u32 	%r65, %tid.x;
	mad.lo.s32 	%r66, %r61, %r63, %r65;
	and.b32  	%r67, %r66, 15;
	shl.b32 	%r68, %r61, 2;
	rem.u32 	%r69, %r66, %r68;
	sub.s32 	%r70, %r69, %r67;
	shr.u32 	%r71, %r70, 2;
	and.b32  	%r72, %r66, 3;
	add.s32 	%r73, %r71, %r72;
	div.u32 	%r74, %r66, %r68;
	shl.b32 	%r75, %r74, 2;
	bfe.u32 	%r76, %r66, 2, 2;
	add.s32 	%r77, %r75, %r76;
	mov.u32 	%r78, %ctaid.x;
	mad.lo.s32 	%r3, %r78, %r61, %r73;
	mov.u32 	%r79, %ctaid.y;
	mov.u32 	%r80, %ntid.y;
	mad.lo.s32 	%r4, %r79, %r80, %r77;
	setp.lt.u32	%p4, %r3, %r54;
	setp.gt.u32	%p5, %r55, %r4;
	and.pred  	%p6, %p4, %p5;
	@!%p6 bra 	BB3_79;
	bra.uni 	BB3_3;

BB3_3:
	and.b32  	%r81, %r57, 20;
	setp.eq.s32	%p7, %r81, 20;
	setp.ge.f32	%p8, %f7, 0f3F800000;
	and.pred  	%p9, %p7, %p8;
	mov.u16 	%rs8, 0;
	@!%p9 bra 	BB3_9;
	bra.uni 	BB3_4;

BB3_4:
	and.b32  	%r82, %r3, -8;
	cvt.rn.f32.u32	%f107, %r82;
	and.b32  	%r83, %r4, -4;
	cvt.rn.f32.u32	%f108, %r83;
	cvt.rn.f32.u32	%f109, %r59;
	sub.f32 	%f110, %f109, %f107;
	cvt.rn.f32.u32	%f111, %r60;
	sub.f32 	%f112, %f111, %f108;
	mul.f32 	%f113, %f112, %f112;
	fma.rn.f32 	%f114, %f110, %f110, %f113;
	sqrt.rn.f32 	%f115, %f114;
	mul.f32 	%f116, %f115, 0f3CD94079;
	ld.global.f32 	%f117, [screenDistance];
	div.rn.f32 	%f1, %f116, %f117;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p10, %f2, 0f3F800000;
	mov.f32 	%f284, %f2;
	@%p10 bra 	BB3_6;

	rcp.rn.f32 	%f284, %f2;

BB3_6:
	mul.rn.f32 	%f118, %f284, %f284;
	mov.f32 	%f119, 0fC0B59883;
	mov.f32 	%f120, 0fBF52C7EA;
	fma.rn.f32 	%f121, %f118, %f120, %f119;
	mov.f32 	%f122, 0fC0D21907;
	fma.rn.f32 	%f123, %f121, %f118, %f122;
	mul.f32 	%f124, %f118, %f123;
	mul.f32 	%f125, %f284, %f124;
	add.f32 	%f126, %f118, 0f41355DC0;
	mov.f32 	%f127, 0f41E6BD60;
	fma.rn.f32 	%f128, %f126, %f118, %f127;
	mov.f32 	%f129, 0f419D92C8;
	fma.rn.f32 	%f130, %f128, %f118, %f129;
	rcp.rn.f32 	%f131, %f130;
	fma.rn.f32 	%f132, %f125, %f131, %f284;
	mov.f32 	%f133, 0f3FC90FDB;
	sub.f32 	%f134, %f133, %f132;
	setp.gt.f32	%p11, %f2, 0f3F800000;
	selp.f32	%f135, %f134, %f132, %p11;
	mov.b32 	 %r84, %f135;
	mov.b32 	 %r85, %f1;
	and.b32  	%r86, %r85, -2147483648;
	or.b32  	%r87, %r84, %r86;
	mov.b32 	 %f136, %r87;
	setp.gtu.f32	%p12, %f2, 0f7F800000;
	selp.f32	%f137, %f135, %f136, %p12;
	mul.f32 	%f138, %f137, 0f43340000;
	div.rn.f32 	%f5, %f138, 0f40490FDB;
	setp.ge.f32	%p13, %f5, 0f00000000;
	@%p13 bra 	BB3_8;

	mov.u64 	%rd12, $str6;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, $str2;
	cvta.global.u64 	%rd15, %rd14;
	mov.u32 	%r88, 245;
	mov.u64 	%rd16, 0;
	mov.u64 	%rd17, 2;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 param2;
	st.param.b32	[param2+0], %r88;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB3_8:
	fma.rn.f32 	%f139, %f5, 0fBC964FDA, 0f3F8CEADD;
	setp.gtu.f32	%p14, %f5, 0f40B00000;
	setp.le.f32	%p15, %f5, 0f40B00000;
	selp.u16	%rs8, 1, 0, %p15;
	selp.f32	%f140, %f139, 0f3F800000, %p14;
	mul.f32 	%f7, %f140, %f7;

BB3_9:
	and.b32  	%r89, %r57, 8;
	setp.eq.s32	%p17, %r89, 0;
	mov.pred 	%p99, -1;
	mov.f32 	%f312, 0f00000000;
	@%p17 bra 	BB3_10;

	sub.s32 	%r90, %r55, %r4;
	cvt.rn.f32.u32	%f143, %r90;
	cvt.rn.f32.u32	%f144, %r54;
	cvt.rn.f32.u32	%f145, %r3;
	div.rn.f32 	%f146, %f145, %f144;
	cvt.rn.f32.u32	%f147, %r55;
	div.rn.f32 	%f148, %f143, %f147;
	sub.f32 	%f149, %f100, %f98;
	sub.f32 	%f150, %f101, %f99;
	fma.rn.f32 	%f151, %f149, %f146, %f98;
	fma.rn.f32 	%f152, %f150, %f148, %f99;
	sub.f32 	%f153, %f151, %f103;
	sub.f32 	%f154, %f152, %f104;
	sub.f32 	%f155, %f105, %f103;
	div.rn.f32 	%f156, %f153, %f155;
	sub.f32 	%f157, %f106, %f104;
	div.rn.f32 	%f158, %f154, %f157;
	mul.f32 	%f12, %f144, %f156;
	mul.f32 	%f159, %f147, %f158;
	sub.f32 	%f13, %f147, %f159;
	abs.f32 	%f160, %f12;
	mov.b32 	 %r91, %f12;
	and.b32  	%r92, %r91, -2147483648;
	or.b32  	%r93, %r92, 1056964608;
	mov.b32 	 %f161, %r93;
	add.f32 	%f162, %f12, %f161;
	cvt.rzi.f32.f32	%f163, %f162;
	setp.gt.f32	%p18, %f160, 0f4B000000;
	selp.f32	%f286, %f12, %f163, %p18;
	setp.geu.f32	%p19, %f160, 0f3F000000;
	@%p19 bra 	BB3_13;

	cvt.rzi.f32.f32	%f286, %f12;

BB3_13:
	cvt.rzi.s32.f32	%r5, %f286;
	mov.b32 	 %r94, %f13;
	and.b32  	%r95, %r94, -2147483648;
	or.b32  	%r96, %r95, 1056964608;
	mov.b32 	 %f164, %r96;
	add.f32 	%f165, %f13, %f164;
	cvt.rzi.f32.f32	%f166, %f165;
	abs.f32 	%f167, %f13;
	setp.gt.f32	%p20, %f167, 0f4B000000;
	selp.f32	%f287, %f13, %f166, %p20;
	setp.geu.f32	%p21, %f167, 0f3F000000;
	@%p21 bra 	BB3_15;

	cvt.rzi.f32.f32	%f287, %f13;

BB3_15:
	add.s32 	%r97, %r54, -2;
	setp.lt.u32	%p23, %r5, %r97;
	setp.gt.s32	%p24, %r5, 1;
	and.pred  	%p25, %p24, %p23;
	cvt.rzi.s32.f32	%r98, %f287;
	setp.gt.s32	%p26, %r98, 1;
	and.pred  	%p27, %p25, %p26;
	add.s32 	%r99, %r55, -2;
	setp.lt.u32	%p28, %r98, %r99;
	and.pred  	%p29, %p28, %p27;
	mov.f32 	%f311, %f312;
	@!%p29 bra 	BB3_17;
	bra.uni 	BB3_16;

BB3_16:
	cvt.rmi.f32.f32	%f170, %f12;
	cvt.rzi.u32.f32	%r100, %f170;
	cvt.rmi.f32.f32	%f171, %f13;
	cvt.rzi.u32.f32	%r101, %f171;
	cvt.rn.f32.u32	%f172, %r100;
	sub.f32 	%f173, %f12, %f172;
	cvt.rn.f32.u32	%f174, %r101;
	sub.f32 	%f175, %f13, %f174;
	mul.lo.s32 	%r102, %r101, %r58;
	cvt.u64.u32	%rd18, %r102;
	cvta.to.global.u64 	%rd19, %rd5;
	add.s64 	%rd20, %rd19, %rd18;
	mul.wide.u32 	%rd21, %r100, 16;
	add.s64 	%rd22, %rd20, %rd21;
	add.s32 	%r103, %r100, 1;
	mul.wide.u32 	%rd23, %r103, 16;
	add.s64 	%rd24, %rd20, %rd23;
	add.s32 	%r104, %r101, 1;
	mul.lo.s32 	%r105, %r104, %r58;
	cvt.u64.u32	%rd25, %r105;
	add.s64 	%rd26, %rd19, %rd25;
	add.s64 	%rd27, %rd26, %rd21;
	add.s64 	%rd28, %rd26, %rd23;
	mov.f32 	%f176, 0f3F800000;
	sub.f32 	%f177, %f176, %f173;
	ld.global.f32 	%f178, [%rd22];
	ld.global.f32 	%f179, [%rd24];
	mul.f32 	%f180, %f173, %f179;
	fma.rn.f32 	%f181, %f178, %f177, %f180;
	sub.f32 	%f182, %f176, %f175;
	ld.global.f32 	%f183, [%rd27];
	ld.global.f32 	%f184, [%rd28];
	mul.f32 	%f185, %f173, %f184;
	fma.rn.f32 	%f186, %f177, %f183, %f185;
	mul.f32 	%f187, %f175, %f186;
	fma.rn.f32 	%f312, %f182, %f181, %f187;
	ld.global.f32 	%f188, [%rd22+4];
	ld.global.f32 	%f189, [%rd24+4];
	mul.f32 	%f190, %f173, %f189;
	fma.rn.f32 	%f191, %f177, %f188, %f190;
	ld.global.f32 	%f192, [%rd27+4];
	ld.global.f32 	%f193, [%rd28+4];
	mul.f32 	%f194, %f173, %f193;
	fma.rn.f32 	%f195, %f177, %f192, %f194;
	mul.f32 	%f196, %f175, %f195;
	fma.rn.f32 	%f311, %f182, %f191, %f196;
	cvt.f64.f32	%fd1, %f311;
	setp.lt.f64	%p99, %fd1, 0d3FB999999999999A;
	bra.uni 	BB3_17;

BB3_10:
	mov.f32 	%f311, %f312;

BB3_17:
	add.u64 	%rd29, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd29;
	@%p99 bra 	BB3_49;
	bra.uni 	BB3_18;

BB3_49:
	setp.lt.f32	%p66, %f7, 0f3F800000;
	selp.f32	%f61, 0f3F800000, %f7, %p66;
	abs.f32 	%f243, %f61;
	mov.b32 	 %r147, %f61;
	and.b32  	%r148, %r147, -2147483648;
	or.b32  	%r149, %r148, 1056964608;
	mov.b32 	 %f244, %r149;
	add.f32 	%f245, %f61, %f244;
	cvt.rzi.f32.f32	%f246, %f245;
	setp.gt.f32	%p67, %f243, 0f4B000000;
	selp.f32	%f302, %f61, %f246, %p67;
	setp.geu.f32	%p68, %f243, 0f3F000000;
	@%p68 bra 	BB3_51;

	cvt.rzi.f32.f32	%f302, %f61;

BB3_51:
	cvt.rn.f32.u32	%f247, %r54;
	sub.f32 	%f248, %f100, %f98;
	div.rn.f32 	%f65, %f248, %f247;
	cvt.rn.f32.u32	%f249, %r55;
	sub.f32 	%f250, %f101, %f99;
	div.rn.f32 	%f66, %f250, %f249;
	cvt.rzi.u32.f32	%r208, %f302;
	setp.lt.u32	%p69, %r208, 65;
	@%p69 bra 	BB3_53;

	mov.u64 	%rd61, $str8;
	cvta.global.u64 	%rd62, %rd61;
	mov.u64 	%rd63, $str2;
	cvta.global.u64 	%rd64, %rd63;
	mov.u32 	%r150, 113;
	mov.u64 	%rd65, 0;
	mov.u64 	%rd66, 2;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd62;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd64;
	.param .b32 param2;
	st.param.b32	[param2+0], %r150;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd65;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd66;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB3_53:
	setp.eq.s32	%p70, %r208, 0;
	cvt.rn.f32.u32	%f311, %r208;
	mov.u32 	%r209, 0;
	@%p70 bra 	BB3_54;

	cvt.rn.f32.u32	%f68, %r3;
	cvt.rn.f32.u32	%f69, %r4;
	ld.const.f64 	%fd4, [julia_c];
	cvt.rn.f32.f64	%f70, %fd4;
	ld.const.f64 	%fd5, [julia_c+8];
	cvt.rn.f32.f64	%f71, %fd5;
	and.b32  	%r30, %r57, 1;
	mov.u32 	%r154, 0;
	mov.u32 	%r199, %r154;
	mov.u32 	%r209, %r154;

BB3_56:
	mov.u32 	%r33, %r208;
	mov.u32 	%r31, %r199;
	cvt.rn.f32.u32	%f251, %r31;
	div.rn.f32 	%f252, %f251, %f311;
	add.f32 	%f253, %f68, %f252;
	add.f32 	%f254, %f69, %f252;
	neg.f32 	%f255, %f254;
	fma.rn.f32 	%f305, %f65, %f253, %f98;
	fma.rn.f32 	%f304, %f66, %f255, %f101;
	setp.eq.s32	%p71, %r56, 0;
	mov.u32 	%r203, %r154;
	@%p71 bra 	BB3_59;

BB3_57:
	mul.f32 	%f77, %f304, %f304;
	mul.f32 	%f78, %f305, %f305;
	add.f32 	%f256, %f78, %f77;
	setp.geu.f32	%p72, %f256, 0f40800000;
	@%p72 bra 	BB3_59;

	sub.f32 	%f257, %f78, %f77;
	add.f32 	%f79, %f70, %f257;
	add.f32 	%f258, %f305, %f305;
	fma.rn.f32 	%f304, %f258, %f304, %f71;
	add.s32 	%r203, %r203, 1;
	setp.lt.u32	%p73, %r203, %r56;
	mov.f32 	%f305, %f79;
	@%p73 bra 	BB3_57;

BB3_59:
	cvt.rn.f32.u32	%f259, %r203;
	cvt.rzi.u32.f32	%r37, %f259;
	add.s32 	%r209, %r37, %r209;
	setp.gt.u32	%p74, %r31, 9;
	@%p74 bra 	BB3_61;

	mul.wide.u32 	%rd69, %r31, 4;
	add.s64 	%rd70, %rd1, %rd69;
	st.local.u32 	[%rd70], %r37;

BB3_61:
	setp.lt.u32	%p75, %r31, 10;
	setp.ne.s32	%p76, %r31, 0;
	and.pred  	%p77, %p75, %p76;
	setp.ne.s32	%p78, %r30, 0;
	and.pred  	%p79, %p77, %p78;
	shr.u32 	%r39, %r33, 1;
	setp.eq.s32	%p80, %r31, %r39;
	or.pred  	%p81, %p79, %p80;
	add.s32 	%r199, %r31, 1;
	mov.u32 	%r208, %r33;
	@!%p81 bra 	BB3_75;
	bra.uni 	BB3_62;

BB3_62:
	div.u32 	%r157, %r209, %r199;
	cvt.rn.f32.u32	%f81, %r157;
	setp.eq.s32	%p82, %r31, 0;
	mov.f32 	%f310, 0f00000000;
	@%p82 bra 	BB3_71;

	and.b32  	%r41, %r31, 3;
	setp.eq.s32	%p83, %r41, 0;
	mov.f32 	%f310, 0f00000000;
	mov.u32 	%r207, 0;
	@%p83 bra 	BB3_69;

	setp.eq.s32	%p84, %r41, 1;
	mov.f32 	%f307, 0f00000000;
	mov.u32 	%r205, 0;
	@%p84 bra 	BB3_68;

	setp.eq.s32	%p85, %r41, 2;
	mov.f32 	%f306, 0f00000000;
	mov.u32 	%r204, 0;
	@%p85 bra 	BB3_67;

	ld.local.u32 	%r162, [%rd1];
	cvt.rn.f32.u32	%f264, %r162;
	sub.f32 	%f265, %f264, %f81;
	fma.rn.f32 	%f306, %f265, %f265, 0f00000000;
	mov.u32 	%r204, 1;

BB3_67:
	mul.wide.u32 	%rd73, %r204, 4;
	add.s64 	%rd74, %rd1, %rd73;
	ld.local.u32 	%r163, [%rd74];
	cvt.rn.f32.u32	%f266, %r163;
	sub.f32 	%f267, %f266, %f81;
	fma.rn.f32 	%f307, %f267, %f267, %f306;
	add.s32 	%r205, %r204, 1;

BB3_68:
	mul.wide.u32 	%rd77, %r205, 4;
	add.s64 	%rd78, %rd1, %rd77;
	ld.local.u32 	%r164, [%rd78];
	cvt.rn.f32.u32	%f268, %r164;
	sub.f32 	%f269, %f268, %f81;
	fma.rn.f32 	%f310, %f269, %f269, %f307;
	add.s32 	%r207, %r205, 1;

BB3_69:
	setp.lt.u32	%p86, %r31, 4;
	@%p86 bra 	BB3_71;

BB3_70:
	mul.wide.u32 	%rd79, %r207, 4;
	add.s64 	%rd80, %rd1, %rd79;
	ld.local.u32 	%r165, [%rd80];
	cvt.rn.f32.u32	%f270, %r165;
	sub.f32 	%f271, %f270, %f81;
	fma.rn.f32 	%f272, %f271, %f271, %f310;
	add.s32 	%r166, %r207, 1;
	mul.wide.u32 	%rd81, %r166, 4;
	add.s64 	%rd82, %rd1, %rd81;
	ld.local.u32 	%r167, [%rd82];
	cvt.rn.f32.u32	%f273, %r167;
	sub.f32 	%f274, %f273, %f81;
	fma.rn.f32 	%f275, %f274, %f274, %f272;
	add.s32 	%r168, %r207, 2;
	mul.wide.u32 	%rd83, %r168, 4;
	add.s64 	%rd84, %rd1, %rd83;
	ld.local.u32 	%r169, [%rd84];
	cvt.rn.f32.u32	%f276, %r169;
	sub.f32 	%f277, %f276, %f81;
	fma.rn.f32 	%f278, %f277, %f277, %f275;
	add.s32 	%r170, %r207, 3;
	mul.wide.u32 	%rd85, %r170, 4;
	add.s64 	%rd86, %rd1, %rd85;
	ld.local.u32 	%r171, [%rd86];
	cvt.rn.f32.u32	%f279, %r171;
	sub.f32 	%f280, %f279, %f81;
	fma.rn.f32 	%f310, %f280, %f280, %f278;
	add.s32 	%r207, %r207, 4;
	setp.lt.u32	%p87, %r207, %r31;
	@%p87 bra 	BB3_70;

BB3_71:
	add.s32 	%r172, %r31, -1;
	cvt.rn.f32.u32	%f281, %r172;
	div.rn.f32 	%f282, %f310, %f281;
	div.rn.f32 	%f91, %f282, %f81;
	setp.ne.s32	%p88, %r31, 1;
	@%p88 bra 	BB3_73;

	// inline asm
	activemask.b32 %r173;
	// inline asm
	ld.local.v2.u32 	{%r175, %r176}, [%rd1];
	setp.eq.s32	%p89, %r175, %r176;
	vote.sync.all.pred 	%p90, %p89, %r173;
	mov.u32 	%r208, 2;
	@%p90 bra 	BB3_75;

BB3_73:
	// inline asm
	activemask.b32 %r180;
	// inline asm
	setp.lt.f32	%p91, %f91, 0f3C23D70A;
	vote.sync.all.pred 	%p92, %p91, %r180;
	mov.u32 	%r208, %r199;
	@%p92 bra 	BB3_75;

	// inline asm
	activemask.b32 %r182;
	// inline asm
	setp.le.f32	%p93, %f91, 0f3F800000;
	vote.sync.all.pred 	%p94, %p93, %r182;
	setp.ge.u32	%p95, %r31, %r39;
	and.pred  	%p96, %p94, %p95;
	selp.b32	%r208, %r199, %r33, %p96;

BB3_75:
	cvt.rn.f32.u32	%f311, %r208;
	setp.lt.u32	%p97, %r199, %r208;
	@%p97 bra 	BB3_56;
	bra.uni 	BB3_76;

BB3_18:
	shr.u32 	%r106, %r57, 5;
	and.b32  	%r107, %r106, 1;
	setp.eq.b32	%p30, %r107, 1;
	not.pred 	%p31, %p30;
	setp.eq.s16	%p32, %rs8, 0;
	mov.f32 	%f299, 0f00000000;
	mov.u16 	%rs9, 1;
	or.pred  	%p33, %p32, %p31;
	@%p33 bra 	BB3_77;

	setp.lt.f32	%p34, %f7, 0f3F800000;
	mov.f32 	%f299, 0f00000000;
	mov.f32 	%f301, %f299;
	@%p34 bra 	BB3_48;

	abs.f32 	%f200, %f7;
	mov.b32 	 %r108, %f7;
	and.b32  	%r109, %r108, -2147483648;
	or.b32  	%r110, %r109, 1056964608;
	mov.b32 	 %f201, %r110;
	add.f32 	%f202, %f7, %f201;
	cvt.rzi.f32.f32	%f203, %f202;
	setp.gt.f32	%p35, %f200, 0f4B000000;
	selp.f32	%f290, %f7, %f203, %p35;
	setp.geu.f32	%p36, %f200, 0f3F000000;
	@%p36 bra 	BB3_22;

	cvt.rzi.f32.f32	%f290, %f7;

BB3_22:
	cvt.rn.f32.u32	%f204, %r54;
	sub.f32 	%f205, %f100, %f98;
	div.rn.f32 	%f27, %f205, %f204;
	cvt.rn.f32.u32	%f206, %r55;
	sub.f32 	%f207, %f101, %f99;
	div.rn.f32 	%f28, %f207, %f206;
	cvt.rzi.u32.f32	%r196, %f290;
	setp.lt.u32	%p37, %r196, 65;
	@%p37 bra 	BB3_24;

	mov.u64 	%rd30, $str8;
	cvta.global.u64 	%rd31, %rd30;
	mov.u64 	%rd32, $str2;
	cvta.global.u64 	%rd33, %rd32;
	mov.u32 	%r111, 113;
	mov.u64 	%rd34, 0;
	mov.u64 	%rd35, 2;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd31;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd33;
	.param .b32 param2;
	st.param.b32	[param2+0], %r111;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd34;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd35;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB3_24:
	setp.eq.s32	%p38, %r196, 0;
	cvt.rn.f32.u32	%f299, %r196;
	mov.u32 	%r197, 0;
	@%p38 bra 	BB3_25;

	cvt.rn.f32.u32	%f30, %r3;
	cvt.rn.f32.u32	%f31, %r4;
	ld.const.f64 	%fd2, [julia_c];
	cvt.rn.f32.f64	%f32, %fd2;
	ld.const.f64 	%fd3, [julia_c+8];
	cvt.rn.f32.f64	%f33, %fd3;
	mov.u32 	%r115, 0;
	mov.u32 	%r187, %r115;
	mov.u32 	%r197, %r115;

BB3_27:
	mov.u32 	%r9, %r196;
	mov.u32 	%r7, %r187;
	cvt.rn.f32.u32	%f208, %r7;
	div.rn.f32 	%f209, %f208, %f299;
	add.f32 	%f210, %f30, %f209;
	add.f32 	%f211, %f31, %f209;
	neg.f32 	%f212, %f211;
	fma.rn.f32 	%f293, %f27, %f210, %f98;
	fma.rn.f32 	%f292, %f28, %f212, %f101;
	setp.eq.s32	%p39, %r56, 0;
	mov.u32 	%r191, %r115;
	@%p39 bra 	BB3_30;

BB3_28:
	mul.f32 	%f39, %f292, %f292;
	mul.f32 	%f40, %f293, %f293;
	add.f32 	%f213, %f40, %f39;
	setp.geu.f32	%p40, %f213, 0f40800000;
	@%p40 bra 	BB3_30;

	sub.f32 	%f214, %f40, %f39;
	add.f32 	%f41, %f32, %f214;
	add.f32 	%f215, %f293, %f293;
	fma.rn.f32 	%f292, %f215, %f292, %f33;
	add.s32 	%r191, %r191, 1;
	setp.lt.u32	%p41, %r191, %r56;
	mov.f32 	%f293, %f41;
	@%p41 bra 	BB3_28;

BB3_30:
	cvt.rn.f32.u32	%f216, %r191;
	cvt.rzi.u32.f32	%r13, %f216;
	add.s32 	%r197, %r13, %r197;
	setp.gt.u32	%p42, %r7, 9;
	@%p42 bra 	BB3_32;

	mul.wide.u32 	%rd38, %r7, 4;
	add.s64 	%rd39, %rd1, %rd38;
	st.local.u32 	[%rd39], %r13;

BB3_32:
	setp.lt.u32	%p43, %r7, 10;
	and.b32  	%r118, %r57, 1;
	setp.eq.b32	%p44, %r118, 1;
	setp.ne.s32	%p45, %r7, 0;
	and.pred  	%p46, %p43, %p45;
	and.pred  	%p47, %p46, %p44;
	shr.u32 	%r15, %r9, 1;
	setp.eq.s32	%p48, %r7, %r15;
	or.pred  	%p49, %p47, %p48;
	add.s32 	%r187, %r7, 1;
	mov.u32 	%r196, %r9;
	@!%p49 bra 	BB3_46;
	bra.uni 	BB3_33;

BB3_33:
	div.u32 	%r119, %r197, %r187;
	cvt.rn.f32.u32	%f43, %r119;
	setp.eq.s32	%p50, %r7, 0;
	mov.f32 	%f298, 0f00000000;
	@%p50 bra 	BB3_42;

	and.b32  	%r17, %r7, 3;
	setp.eq.s32	%p51, %r17, 0;
	mov.f32 	%f298, 0f00000000;
	mov.u32 	%r195, 0;
	@%p51 bra 	BB3_40;

	setp.eq.s32	%p52, %r17, 1;
	mov.f32 	%f295, 0f00000000;
	mov.u32 	%r193, 0;
	@%p52 bra 	BB3_39;

	setp.eq.s32	%p53, %r17, 2;
	mov.f32 	%f294, 0f00000000;
	mov.u32 	%r192, 0;
	@%p53 bra 	BB3_38;

	ld.local.u32 	%r124, [%rd1];
	cvt.rn.f32.u32	%f221, %r124;
	sub.f32 	%f222, %f221, %f43;
	fma.rn.f32 	%f294, %f222, %f222, 0f00000000;
	mov.u32 	%r192, 1;

BB3_38:
	mul.wide.u32 	%rd44, %r192, 4;
	add.s64 	%rd45, %rd1, %rd44;
	ld.local.u32 	%r125, [%rd45];
	cvt.rn.f32.u32	%f223, %r125;
	sub.f32 	%f224, %f223, %f43;
	fma.rn.f32 	%f295, %f224, %f224, %f294;
	add.s32 	%r193, %r192, 1;

BB3_39:
	mul.wide.u32 	%rd48, %r193, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.u32 	%r126, [%rd49];
	cvt.rn.f32.u32	%f225, %r126;
	sub.f32 	%f226, %f225, %f43;
	fma.rn.f32 	%f298, %f226, %f226, %f295;
	add.s32 	%r195, %r193, 1;

BB3_40:
	setp.lt.u32	%p54, %r7, 4;
	@%p54 bra 	BB3_42;

BB3_41:
	mul.wide.u32 	%rd51, %r195, 4;
	add.s64 	%rd52, %rd1, %rd51;
	ld.local.u32 	%r127, [%rd52];
	cvt.rn.f32.u32	%f227, %r127;
	sub.f32 	%f228, %f227, %f43;
	fma.rn.f32 	%f229, %f228, %f228, %f298;
	add.s32 	%r128, %r195, 1;
	mul.wide.u32 	%rd53, %r128, 4;
	add.s64 	%rd54, %rd1, %rd53;
	ld.local.u32 	%r129, [%rd54];
	cvt.rn.f32.u32	%f230, %r129;
	sub.f32 	%f231, %f230, %f43;
	fma.rn.f32 	%f232, %f231, %f231, %f229;
	add.s32 	%r130, %r195, 2;
	mul.wide.u32 	%rd55, %r130, 4;
	add.s64 	%rd56, %rd1, %rd55;
	ld.local.u32 	%r131, [%rd56];
	cvt.rn.f32.u32	%f233, %r131;
	sub.f32 	%f234, %f233, %f43;
	fma.rn.f32 	%f235, %f234, %f234, %f232;
	add.s32 	%r132, %r195, 3;
	mul.wide.u32 	%rd57, %r132, 4;
	add.s64 	%rd58, %rd1, %rd57;
	ld.local.u32 	%r133, [%rd58];
	cvt.rn.f32.u32	%f236, %r133;
	sub.f32 	%f237, %f236, %f43;
	fma.rn.f32 	%f298, %f237, %f237, %f235;
	add.s32 	%r195, %r195, 4;
	setp.lt.u32	%p55, %r195, %r7;
	@%p55 bra 	BB3_41;

BB3_42:
	add.s32 	%r134, %r7, -1;
	cvt.rn.f32.u32	%f238, %r134;
	div.rn.f32 	%f239, %f298, %f238;
	div.rn.f32 	%f53, %f239, %f43;
	setp.ne.s32	%p56, %r7, 1;
	@%p56 bra 	BB3_44;

	// inline asm
	activemask.b32 %r135;
	// inline asm
	ld.local.v2.u32 	{%r137, %r138}, [%rd1];
	setp.eq.s32	%p57, %r137, %r138;
	vote.sync.all.pred 	%p58, %p57, %r135;
	mov.u32 	%r196, 2;
	@%p58 bra 	BB3_46;

BB3_44:
	// inline asm
	activemask.b32 %r142;
	// inline asm
	setp.lt.f32	%p59, %f53, 0f3C23D70A;
	vote.sync.all.pred 	%p60, %p59, %r142;
	mov.u32 	%r196, %r187;
	@%p60 bra 	BB3_46;

	// inline asm
	activemask.b32 %r144;
	// inline asm
	setp.le.f32	%p61, %f53, 0f3F800000;
	vote.sync.all.pred 	%p62, %p61, %r144;
	setp.ge.u32	%p63, %r7, %r15;
	and.pred  	%p64, %p62, %p63;
	selp.b32	%r196, %r187, %r9, %p64;

BB3_46:
	cvt.rn.f32.u32	%f299, %r196;
	setp.lt.u32	%p65, %r187, %r196;
	@%p65 bra 	BB3_27;
	bra.uni 	BB3_47;

BB3_54:
	mov.u32 	%r208, %r209;

BB3_76:
	div.u32 	%r184, %r209, %r208;
	cvt.rn.f32.u32	%f312, %r184;
	mov.f32 	%f299, 0f00000000;
	mov.u16 	%rs9, 0;
	bra.uni 	BB3_77;

BB3_25:
	mov.u32 	%r196, %r197;

BB3_47:
	div.u32 	%r146, %r197, %r196;
	cvt.rn.f32.u32	%f301, %r146;

BB3_48:
	mul.f32 	%f240, %f311, 0f3F400000;
	add.f32 	%f311, %f240, %f299;
	mul.f32 	%f241, %f299, %f301;
	fma.rn.f32 	%f242, %f312, %f240, %f241;
	div.rn.f32 	%f312, %f242, %f311;

BB3_77:
	mul.lo.s32 	%r185, %r4, %r53;
	cvt.u64.u32	%rd87, %r185;
	cvta.to.global.u64 	%rd88, %rd4;
	add.s64 	%rd89, %rd88, %rd87;
	mul.wide.u32 	%rd90, %r3, 16;
	add.s64 	%rd91, %rd89, %rd90;
	st.global.f32 	[%rd91], %f312;
	st.global.f32 	[%rd91+4], %f311;
	st.global.f32 	[%rd91+12], %f299;
	st.global.u8 	[%rd91+8], %rs9;
	setp.gt.f32	%p98, %f311, 0f00000000;
	@%p98 bra 	BB3_79;

	mov.u64 	%rd92, $str7;
	cvta.global.u64 	%rd93, %rd92;
	mov.u64 	%rd94, $str2;
	cvta.global.u64 	%rd95, %rd94;
	mov.u32 	%r186, 358;
	mov.u64 	%rd96, 0;
	mov.u64 	%rd97, 2;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd93;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd95;
	.param .b32 param2;
	st.param.b32	[param2+0], %r186;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd96;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd97;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB3_79:
	ret;
}

	// .globl	fractalRenderAdvancedDouble
.visible .entry fractalRenderAdvancedDouble(
	.param .u64 fractalRenderAdvancedDouble_param_0,
	.param .u32 fractalRenderAdvancedDouble_param_1,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_2[8],
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_3[32],
	.param .u32 fractalRenderAdvancedDouble_param_4,
	.param .f32 fractalRenderAdvancedDouble_param_5,
	.param .u32 fractalRenderAdvancedDouble_param_6,
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_7[32],
	.param .u64 fractalRenderAdvancedDouble_param_8,
	.param .u32 fractalRenderAdvancedDouble_param_9,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot4[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<100>;
	.reg .b16 	%rs<10>;
	.reg .f32 	%f<147>;
	.reg .b32 	%r<211>;
	.reg .f64 	%fd<166>;
	.reg .b64 	%rd<98>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd4, [fractalRenderAdvancedDouble_param_0];
	ld.param.u32 	%r53, [fractalRenderAdvancedDouble_param_1];
	ld.param.u32 	%r55, [fractalRenderAdvancedDouble_param_2+4];
	ld.param.u32 	%r54, [fractalRenderAdvancedDouble_param_2];
	ld.param.f64 	%fd58, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd57, [fractalRenderAdvancedDouble_param_3+16];
	ld.param.f64 	%fd56, [fractalRenderAdvancedDouble_param_3+8];
	ld.param.f64 	%fd55, [fractalRenderAdvancedDouble_param_3];
	ld.param.u32 	%r56, [fractalRenderAdvancedDouble_param_4];
	ld.param.f32 	%f7, [fractalRenderAdvancedDouble_param_5];
	ld.param.u32 	%r57, [fractalRenderAdvancedDouble_param_6];
	ld.param.f64 	%fd62, [fractalRenderAdvancedDouble_param_7+24];
	ld.param.f64 	%fd61, [fractalRenderAdvancedDouble_param_7+16];
	ld.param.f64 	%fd60, [fractalRenderAdvancedDouble_param_7+8];
	ld.param.f64 	%fd59, [fractalRenderAdvancedDouble_param_7];
	ld.param.u64 	%rd5, [fractalRenderAdvancedDouble_param_8];
	ld.param.u32 	%r58, [fractalRenderAdvancedDouble_param_9];
	ld.param.u32 	%r60, [fractalRenderAdvancedDouble_param_10+4];
	ld.param.u32 	%r59, [fractalRenderAdvancedDouble_param_10];
	mov.u32 	%r61, %ntid.x;
	setp.eq.s32	%p3, %r61, 32;
	@%p3 bra 	BB4_2;

	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, $str2;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r62, 59;
	mov.u64 	%rd10, 0;
	mov.u64 	%rd11, 2;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b32 param2;
	st.param.b32	[param2+0], %r62;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd10;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd11;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB4_2:
	mov.u32 	%r63, %tid.y;
	mov.u32 	%r65, %tid.x;
	mad.lo.s32 	%r66, %r61, %r63, %r65;
	and.b32  	%r67, %r66, 15;
	shl.b32 	%r68, %r61, 2;
	rem.u32 	%r69, %r66, %r68;
	sub.s32 	%r70, %r69, %r67;
	shr.u32 	%r71, %r70, 2;
	and.b32  	%r72, %r66, 3;
	add.s32 	%r73, %r71, %r72;
	div.u32 	%r74, %r66, %r68;
	shl.b32 	%r75, %r74, 2;
	bfe.u32 	%r76, %r66, 2, 2;
	add.s32 	%r77, %r75, %r76;
	mov.u32 	%r78, %ctaid.x;
	mad.lo.s32 	%r3, %r78, %r61, %r73;
	mov.u32 	%r79, %ctaid.y;
	mov.u32 	%r80, %ntid.y;
	mad.lo.s32 	%r4, %r79, %r80, %r77;
	setp.lt.u32	%p4, %r3, %r54;
	setp.gt.u32	%p5, %r55, %r4;
	and.pred  	%p6, %p4, %p5;
	@!%p6 bra 	BB4_77;
	bra.uni 	BB4_3;

BB4_3:
	and.b32  	%r81, %r57, 20;
	setp.eq.s32	%p7, %r81, 20;
	setp.ge.f32	%p8, %f7, 0f3F800000;
	and.pred  	%p9, %p7, %p8;
	mov.u16 	%rs8, 0;
	@!%p9 bra 	BB4_9;
	bra.uni 	BB4_4;

BB4_4:
	and.b32  	%r82, %r3, -8;
	cvt.rn.f32.u32	%f39, %r82;
	and.b32  	%r83, %r4, -4;
	cvt.rn.f32.u32	%f40, %r83;
	cvt.rn.f32.u32	%f41, %r59;
	sub.f32 	%f42, %f41, %f39;
	cvt.rn.f32.u32	%f43, %r60;
	sub.f32 	%f44, %f43, %f40;
	mul.f32 	%f45, %f44, %f44;
	fma.rn.f32 	%f46, %f42, %f42, %f45;
	sqrt.rn.f32 	%f47, %f46;
	mul.f32 	%f48, %f47, 0f3CD94079;
	ld.global.f32 	%f49, [screenDistance];
	div.rn.f32 	%f1, %f48, %f49;
	abs.f32 	%f2, %f1;
	setp.leu.f32	%p10, %f2, 0f3F800000;
	mov.f32 	%f134, %f2;
	@%p10 bra 	BB4_6;

	rcp.rn.f32 	%f134, %f2;

BB4_6:
	mul.rn.f32 	%f50, %f134, %f134;
	mov.f32 	%f51, 0fC0B59883;
	mov.f32 	%f52, 0fBF52C7EA;
	fma.rn.f32 	%f53, %f50, %f52, %f51;
	mov.f32 	%f54, 0fC0D21907;
	fma.rn.f32 	%f55, %f53, %f50, %f54;
	mul.f32 	%f56, %f50, %f55;
	mul.f32 	%f57, %f134, %f56;
	add.f32 	%f58, %f50, 0f41355DC0;
	mov.f32 	%f59, 0f41E6BD60;
	fma.rn.f32 	%f60, %f58, %f50, %f59;
	mov.f32 	%f61, 0f419D92C8;
	fma.rn.f32 	%f62, %f60, %f50, %f61;
	rcp.rn.f32 	%f63, %f62;
	fma.rn.f32 	%f64, %f57, %f63, %f134;
	mov.f32 	%f65, 0f3FC90FDB;
	sub.f32 	%f66, %f65, %f64;
	setp.gt.f32	%p11, %f2, 0f3F800000;
	selp.f32	%f67, %f66, %f64, %p11;
	mov.b32 	 %r84, %f67;
	mov.b32 	 %r85, %f1;
	and.b32  	%r86, %r85, -2147483648;
	or.b32  	%r87, %r84, %r86;
	mov.b32 	 %f68, %r87;
	setp.gtu.f32	%p12, %f2, 0f7F800000;
	selp.f32	%f69, %f67, %f68, %p12;
	mul.f32 	%f70, %f69, 0f43340000;
	div.rn.f32 	%f5, %f70, 0f40490FDB;
	setp.ge.f32	%p13, %f5, 0f00000000;
	@%p13 bra 	BB4_8;

	mov.u64 	%rd12, $str6;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, $str2;
	cvta.global.u64 	%rd15, %rd14;
	mov.u32 	%r88, 245;
	mov.u64 	%rd16, 0;
	mov.u64 	%rd17, 2;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 param2;
	st.param.b32	[param2+0], %r88;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB4_8:
	fma.rn.f32 	%f71, %f5, 0fBC964FDA, 0f3F8CEADD;
	setp.gtu.f32	%p14, %f5, 0f40B00000;
	setp.le.f32	%p15, %f5, 0f40B00000;
	selp.u16	%rs8, 1, 0, %p15;
	selp.f32	%f72, %f71, 0f3F800000, %p14;
	mul.f32 	%f7, %f72, %f7;

BB4_9:
	and.b32  	%r89, %r57, 8;
	setp.eq.s32	%p17, %r89, 0;
	mov.pred 	%p99, -1;
	mov.f32 	%f144, 0f00000000;
	@%p17 bra 	BB4_10;

	sub.s32 	%r90, %r55, %r4;
	cvt.rn.f64.u32	%fd63, %r90;
	cvt.rn.f64.u32	%fd64, %r54;
	cvt.rn.f64.u32	%fd65, %r3;
	div.rn.f64 	%fd66, %fd65, %fd64;
	cvt.rn.f64.u32	%fd67, %r55;
	div.rn.f64 	%fd68, %fd63, %fd67;
	sub.f64 	%fd69, %fd57, %fd55;
	sub.f64 	%fd70, %fd58, %fd56;
	fma.rn.f64 	%fd71, %fd69, %fd66, %fd55;
	fma.rn.f64 	%fd72, %fd70, %fd68, %fd56;
	sub.f64 	%fd73, %fd71, %fd59;
	sub.f64 	%fd74, %fd72, %fd60;
	sub.f64 	%fd75, %fd61, %fd59;
	div.rn.f64 	%fd76, %fd73, %fd75;
	sub.f64 	%fd77, %fd62, %fd60;
	div.rn.f64 	%fd78, %fd74, %fd77;
	cvt.rn.f32.f64	%f75, %fd76;
	cvt.rn.f32.f64	%f76, %fd78;
	cvt.rn.f32.u32	%f77, %r54;
	mul.f32 	%f8, %f77, %f75;
	cvt.rn.f32.u32	%f78, %r55;
	mul.f32 	%f79, %f78, %f76;
	sub.f32 	%f9, %f78, %f79;
	abs.f32 	%f80, %f8;
	mov.b32 	 %r91, %f8;
	and.b32  	%r92, %r91, -2147483648;
	or.b32  	%r93, %r92, 1056964608;
	mov.b32 	 %f81, %r93;
	add.f32 	%f82, %f8, %f81;
	cvt.rzi.f32.f32	%f83, %f82;
	setp.gt.f32	%p18, %f80, 0f4B000000;
	selp.f32	%f136, %f8, %f83, %p18;
	setp.geu.f32	%p19, %f80, 0f3F000000;
	@%p19 bra 	BB4_13;

	cvt.rzi.f32.f32	%f136, %f8;

BB4_13:
	cvt.rzi.s32.f32	%r5, %f136;
	mov.b32 	 %r94, %f9;
	and.b32  	%r95, %r94, -2147483648;
	or.b32  	%r96, %r95, 1056964608;
	mov.b32 	 %f84, %r96;
	add.f32 	%f85, %f9, %f84;
	cvt.rzi.f32.f32	%f86, %f85;
	abs.f32 	%f87, %f9;
	setp.gt.f32	%p20, %f87, 0f4B000000;
	selp.f32	%f137, %f9, %f86, %p20;
	setp.geu.f32	%p21, %f87, 0f3F000000;
	@%p21 bra 	BB4_15;

	cvt.rzi.f32.f32	%f137, %f9;

BB4_15:
	add.s32 	%r97, %r54, -2;
	setp.lt.u32	%p23, %r5, %r97;
	setp.gt.s32	%p24, %r5, 1;
	and.pred  	%p25, %p24, %p23;
	cvt.rzi.s32.f32	%r98, %f137;
	setp.gt.s32	%p26, %r98, 1;
	and.pred  	%p27, %p25, %p26;
	add.s32 	%r99, %r55, -2;
	setp.lt.u32	%p28, %r98, %r99;
	and.pred  	%p29, %p28, %p27;
	mov.f32 	%f139, %f144;
	@!%p29 bra 	BB4_17;
	bra.uni 	BB4_16;

BB4_16:
	cvt.rmi.f32.f32	%f90, %f8;
	cvt.rzi.u32.f32	%r100, %f90;
	cvt.rmi.f32.f32	%f91, %f9;
	cvt.rzi.u32.f32	%r101, %f91;
	cvt.rn.f32.u32	%f92, %r100;
	sub.f32 	%f93, %f8, %f92;
	cvt.rn.f32.u32	%f94, %r101;
	sub.f32 	%f95, %f9, %f94;
	mul.lo.s32 	%r102, %r101, %r58;
	cvt.u64.u32	%rd18, %r102;
	cvta.to.global.u64 	%rd19, %rd5;
	add.s64 	%rd20, %rd19, %rd18;
	mul.wide.u32 	%rd21, %r100, 16;
	add.s64 	%rd22, %rd20, %rd21;
	add.s32 	%r103, %r100, 1;
	mul.wide.u32 	%rd23, %r103, 16;
	add.s64 	%rd24, %rd20, %rd23;
	add.s32 	%r104, %r101, 1;
	mul.lo.s32 	%r105, %r104, %r58;
	cvt.u64.u32	%rd25, %r105;
	add.s64 	%rd26, %rd19, %rd25;
	add.s64 	%rd27, %rd26, %rd21;
	add.s64 	%rd28, %rd26, %rd23;
	mov.f32 	%f96, 0f3F800000;
	sub.f32 	%f97, %f96, %f93;
	ld.global.f32 	%f98, [%rd22];
	ld.global.f32 	%f99, [%rd24];
	mul.f32 	%f100, %f93, %f99;
	fma.rn.f32 	%f101, %f98, %f97, %f100;
	sub.f32 	%f102, %f96, %f95;
	ld.global.f32 	%f103, [%rd27];
	ld.global.f32 	%f104, [%rd28];
	mul.f32 	%f105, %f93, %f104;
	fma.rn.f32 	%f106, %f97, %f103, %f105;
	mul.f32 	%f107, %f95, %f106;
	fma.rn.f32 	%f144, %f102, %f101, %f107;
	ld.global.f32 	%f108, [%rd22+4];
	ld.global.f32 	%f109, [%rd24+4];
	mul.f32 	%f110, %f93, %f109;
	fma.rn.f32 	%f111, %f97, %f108, %f110;
	ld.global.f32 	%f112, [%rd27+4];
	ld.global.f32 	%f113, [%rd28+4];
	mul.f32 	%f114, %f93, %f113;
	fma.rn.f32 	%f115, %f97, %f112, %f114;
	mul.f32 	%f116, %f95, %f115;
	fma.rn.f32 	%f139, %f102, %f111, %f116;
	cvt.f64.f32	%fd79, %f139;
	setp.lt.f64	%p99, %fd79, 0d3FB999999999999A;
	bra.uni 	BB4_17;

BB4_10:
	mov.f32 	%f139, %f144;

BB4_17:
	add.u64 	%rd29, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd29;
	@%p99 bra 	BB4_48;
	bra.uni 	BB4_18;

BB4_48:
	setp.lt.f32	%p66, %f7, 0f3F800000;
	selp.f32	%f29, 0f3F800000, %f7, %p66;
	abs.f32 	%f128, %f29;
	mov.b32 	 %r147, %f29;
	and.b32  	%r148, %r147, -2147483648;
	or.b32  	%r149, %r148, 1056964608;
	mov.b32 	 %f129, %r149;
	add.f32 	%f130, %f29, %f129;
	cvt.rzi.f32.f32	%f131, %f130;
	setp.gt.f32	%p67, %f128, 0f4B000000;
	selp.f32	%f143, %f29, %f131, %p67;
	setp.geu.f32	%p68, %f128, 0f3F000000;
	@%p68 bra 	BB4_50;

	cvt.rzi.f32.f32	%f143, %f29;

BB4_50:
	cvt.rn.f64.u32	%fd116, %r54;
	sub.f64 	%fd117, %fd57, %fd55;
	div.rn.f64 	%fd30, %fd117, %fd116;
	cvt.rn.f64.u32	%fd118, %r55;
	sub.f64 	%fd119, %fd58, %fd56;
	div.rn.f64 	%fd31, %fd119, %fd118;
	cvt.rzi.u32.f32	%r29, %f143;
	setp.lt.u32	%p69, %r29, 65;
	@%p69 bra 	BB4_52;

	mov.u64 	%rd61, $str8;
	cvta.global.u64 	%rd62, %rd61;
	mov.u64 	%rd63, $str2;
	cvta.global.u64 	%rd64, %rd63;
	mov.u32 	%r150, 113;
	mov.u64 	%rd65, 0;
	mov.u64 	%rd66, 2;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd62;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd64;
	.param .b32 param2;
	st.param.b32	[param2+0], %r150;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd65;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd66;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14

BB4_52:
	setp.eq.s32	%p70, %r29, 0;
	mov.u32 	%r209, 0;
	mov.u32 	%r208, %r209;
	@%p70 bra 	BB4_74;

	cvt.rn.f64.u32	%fd32, %r3;
	cvt.rn.f64.u32	%fd33, %r4;
	ld.const.f64 	%fd34, [julia_c];
	ld.const.f64 	%fd35, [julia_c+8];
	and.b32  	%r30, %r57, 1;
	mov.u32 	%r154, 0;
	mov.u32 	%r199, %r154;
	mov.u32 	%r209, %r154;
	mov.u32 	%r208, %r29;

BB4_54:
	mov.u32 	%r33, %r208;
	mov.u32 	%r31, %r199;
	cvt.rn.f64.u32	%fd120, %r33;
	cvt.rn.f64.u32	%fd121, %r31;
	div.rn.f64 	%fd122, %fd121, %fd120;
	add.f64 	%fd123, %fd32, %fd122;
	add.f64 	%fd124, %fd33, %fd122;
	neg.f64 	%fd125, %fd124;
	fma.rn.f64 	%fd160, %fd30, %fd123, %fd55;
	fma.rn.f64 	%fd159, %fd31, %fd125, %fd58;
	setp.eq.s32	%p71, %r56, 0;
	mov.u32 	%r203, %r154;
	@%p71 bra 	BB4_57;

BB4_55:
	mul.f64 	%fd40, %fd159, %fd159;
	mul.f64 	%fd41, %fd160, %fd160;
	add.f64 	%fd126, %fd41, %fd40;
	setp.geu.f64	%p72, %fd126, 0d4010000000000000;
	@%p72 bra 	BB4_57;

	sub.f64 	%fd127, %fd41, %fd40;
	add.f64 	%fd42, %fd34, %fd127;
	add.f64 	%fd128, %fd160, %fd160;
	fma.rn.f64 	%fd159, %fd128, %fd159, %fd35;
	add.s32 	%r203, %r203, 1;
	setp.lt.u32	%p73, %r203, %r56;
	mov.f64 	%fd160, %fd42;
	@%p73 bra 	BB4_55;

BB4_57:
	cvt.rn.f32.u32	%f132, %r203;
	cvt.rzi.u32.f32	%r37, %f132;
	add.s32 	%r209, %r37, %r209;
	setp.gt.u32	%p74, %r31, 9;
	@%p74 bra 	BB4_59;

	mul.wide.u32 	%rd69, %r31, 4;
	add.s64 	%rd70, %rd1, %rd69;
	st.local.u32 	[%rd70], %r37;

BB4_59:
	setp.lt.u32	%p75, %r31, 10;
	setp.ne.s32	%p76, %r31, 0;
	and.pred  	%p77, %p75, %p76;
	setp.ne.s32	%p78, %r30, 0;
	and.pred  	%p79, %p77, %p78;
	shr.u32 	%r39, %r33, 1;
	setp.eq.s32	%p80, %r31, %r39;
	or.pred  	%p81, %p79, %p80;
	add.s32 	%r199, %r31, 1;
	mov.u32 	%r208, %r33;
	@!%p81 bra 	BB4_73;
	bra.uni 	BB4_60;

BB4_60:
	div.u32 	%r157, %r209, %r199;
	cvt.rn.f64.u32	%fd44, %r157;
	setp.eq.s32	%p82, %r31, 0;
	mov.f64 	%fd165, 0d0000000000000000;
	@%p82 bra 	BB4_69;

	and.b32  	%r41, %r31, 3;
	setp.eq.s32	%p83, %r41, 0;
	mov.f64 	%fd165, 0d0000000000000000;
	mov.u32 	%r207, 0;
	@%p83 bra 	BB4_67;

	setp.eq.s32	%p84, %r41, 1;
	mov.f64 	%fd162, 0d0000000000000000;
	mov.u32 	%r205, 0;
	@%p84 bra 	BB4_66;

	setp.eq.s32	%p85, %r41, 2;
	mov.f64 	%fd161, 0d0000000000000000;
	mov.u32 	%r204, 0;
	@%p85 bra 	BB4_65;

	ld.local.u32 	%r162, [%rd1];
	cvt.rn.f64.u32	%fd133, %r162;
	sub.f64 	%fd134, %fd133, %fd44;
	fma.rn.f64 	%fd161, %fd134, %fd134, 0d0000000000000000;
	mov.u32 	%r204, 1;

BB4_65:
	mul.wide.u32 	%rd73, %r204, 4;
	add.s64 	%rd74, %rd1, %rd73;
	ld.local.u32 	%r163, [%rd74];
	cvt.rn.f64.u32	%fd135, %r163;
	sub.f64 	%fd136, %fd135, %fd44;
	fma.rn.f64 	%fd162, %fd136, %fd136, %fd161;
	add.s32 	%r205, %r204, 1;

BB4_66:
	mul.wide.u32 	%rd77, %r205, 4;
	add.s64 	%rd78, %rd1, %rd77;
	ld.local.u32 	%r164, [%rd78];
	cvt.rn.f64.u32	%fd137, %r164;
	sub.f64 	%fd138, %fd137, %fd44;
	fma.rn.f64 	%fd165, %fd138, %fd138, %fd162;
	add.s32 	%r207, %r205, 1;

BB4_67:
	setp.lt.u32	%p86, %r31, 4;
	@%p86 bra 	BB4_69;

BB4_68:
	mul.wide.u32 	%rd79, %r207, 4;
	add.s64 	%rd80, %rd1, %rd79;
	ld.local.u32 	%r165, [%rd80];
	cvt.rn.f64.u32	%fd139, %r165;
	sub.f64 	%fd140, %fd139, %fd44;
	fma.rn.f64 	%fd141, %fd140, %fd140, %fd165;
	add.s32 	%r166, %r207, 1;
	mul.wide.u32 	%rd81, %r166, 4;
	add.s64 	%rd82, %rd1, %rd81;
	ld.local.u32 	%r167, [%rd82];
	cvt.rn.f64.u32	%fd142, %r167;
	sub.f64 	%fd143, %fd142, %fd44;
	fma.rn.f64 	%fd144, %fd143, %fd143, %fd141;
	add.s32 	%r168, %r207, 2;
	mul.wide.u32 	%rd83, %r168, 4;
	add.s64 	%rd84, %rd1, %rd83;
	ld.local.u32 	%r169, [%rd84];
	cvt.rn.f64.u32	%fd145, %r169;
	sub.f64 	%fd146, %fd145, %fd44;
	fma.rn.f64 	%fd147, %fd146, %fd146, %fd144;
	add.s32 	%r170, %r207, 3;
	mul.wide.u32 	%rd85, %r170, 4;
	add.s64 	%rd86, %rd1, %rd85;
	ld.local.u32 	%r171, [%rd86];
	cvt.rn.f64.u32	%fd148, %r171;
	sub.f64 	%fd149, %fd148, %fd44;
	fma.rn.f64 	%fd165, %fd149, %fd149, %fd147;
	add.s32 	%r207, %r207, 4;
	setp.lt.u32	%p87, %r207, %r31;
	@%p87 bra 	BB4_68;

BB4_69:
	add.s32 	%r172, %r31, -1;
	cvt.rn.f64.u32	%fd150, %r172;
	div.rn.f64 	%fd151, %fd165, %fd150;
	div.rn.f64 	%fd54, %fd151, %fd44;
	setp.ne.s32	%p88, %r31, 1;
	@%p88 bra 	BB4_71;

	// inline asm
	activemask.b32 %r173;
	// inline asm
	ld.local.v2.u32 	{%r175, %r176}, [%rd1];
	setp.eq.s32	%p89, %r175, %r176;
	vote.sync.all.pred 	%p90, %p89, %r173;
	mov.u32 	%r208, 2;
	@%p90 bra 	BB4_73;

BB4_71:
	// inline asm
	activemask.b32 %r180;
	// inline asm
	setp.lt.f64	%p91, %fd54, 0d3F847AE140000000;
	vote.sync.all.pred 	%p92, %p91, %r180;
	mov.u32 	%r208, %r199;
	@%p92 bra 	BB4_73;

	// inline asm
	activemask.b32 %r182;
	// inline asm
	setp.le.f64	%p93, %fd54, 0d3FF0000000000000;
	vote.sync.all.pred 	%p94, %p93, %r182;
	setp.ge.u32	%p95, %r31, %r39;
	and.pred  	%p96, %p94, %p95;
	selp.b32	%r208, %r199, %r33, %p96;

BB4_73:
	setp.lt.u32	%p97, %r199, %r208;
	@%p97 bra 	BB4_54;

BB4_74:
	cvt.rn.f32.u32	%f139, %r208;
	div.u32 	%r184, %r209, %r208;
	cvt.rn.f32.u32	%f144, %r184;
	mov.f32 	%f146, 0f00000000;
	mov.u16 	%rs9, 0;
	bra.uni 	BB4_75;

BB4_18:
	shr.u32 	%r106, %r57, 5;
	and.b32  	%r107, %r106, 1;
	setp.eq.b32	%p30, %r107, 1;
	not.pred 	%p31, %p30;
	setp.eq.s16	%p32, %rs8, 0;
	mov.f32 	%f146, 0f00000000;
	mov.u16 	%rs9, 1;
	or.pred  	%p33, %p32, %p31;
	@%p33 bra 	BB4_75;

	setp.lt.f32	%p34, %f7, 0f3F800000;
	mov.f32 	%f146, 0f00000000;
	mov.f32 	%f142, %f146;
	@%p34 bra 	BB4_47;

	abs.f32 	%f120, %f7;
	mov.b32 	 %r108, %f7;
	and.b32  	%r109, %r108, -2147483648;
	or.b32  	%r110, %r109, 1056964608;
	mov.b32 	 %f121, %r110;
	add.f32 	%f122, %f7, %f121;
	cvt.rzi.f32.f32	%f123, %f122;
	setp.gt.f32	%p35, %f120, 0f4B000000;
	selp.f32	%f140, %f7, %f123, %p35;
	setp.geu.f32	%p36, %f120, 0f3F000000;
	@%p36 bra 	BB4_22;

	cvt.rzi.f32.f32	%f140, %f7;

BB4_22:
	cvt.rn.f64.u32	%fd80, %r54;
	sub.f64 	%fd81, %fd57, %fd55;
	div.rn.f64 	%fd5, %fd81, %fd80;
	cvt.rn.f64.u32	%fd82, %r55;
	sub.f64 	%fd83, %fd58, %fd56;
	div.rn.f64 	%fd6, %fd83, %fd82;
	cvt.rzi.u32.f32	%r6, %f140;
	setp.lt.u32	%p37, %r6, 65;
	@%p37 bra 	BB4_24;

	mov.u64 	%rd30, $str8;
	cvta.global.u64 	%rd31, %rd30;
	mov.u64 	%rd32, $str2;
	cvta.global.u64 	%rd33, %rd32;
	mov.u32 	%r111, 113;
	mov.u64 	%rd34, 0;
	mov.u64 	%rd35, 2;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd31;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd33;
	.param .b32 param2;
	st.param.b32	[param2+0], %r111;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd34;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd35;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 13

BB4_24:
	setp.eq.s32	%p38, %r6, 0;
	mov.u32 	%r197, 0;
	mov.u32 	%r196, %r197;
	@%p38 bra 	BB4_46;

	cvt.rn.f64.u32	%fd7, %r3;
	cvt.rn.f64.u32	%fd8, %r4;
	ld.const.f64 	%fd9, [julia_c];
	mov.u32 	%r115, 0;
	ld.const.f64 	%fd10, [julia_c+8];
	mov.u32 	%r187, %r115;
	mov.u32 	%r197, %r115;
	mov.u32 	%r196, %r6;

BB4_26:
	mov.u32 	%r9, %r196;
	mov.u32 	%r7, %r187;
	cvt.rn.f64.u32	%fd84, %r9;
	cvt.rn.f64.u32	%fd85, %r7;
	div.rn.f64 	%fd86, %fd85, %fd84;
	add.f64 	%fd87, %fd7, %fd86;
	add.f64 	%fd88, %fd8, %fd86;
	neg.f64 	%fd89, %fd88;
	fma.rn.f64 	%fd153, %fd5, %fd87, %fd55;
	fma.rn.f64 	%fd152, %fd6, %fd89, %fd58;
	setp.eq.s32	%p39, %r56, 0;
	mov.u32 	%r191, %r115;
	@%p39 bra 	BB4_29;

BB4_27:
	mul.f64 	%fd15, %fd152, %fd152;
	mul.f64 	%fd16, %fd153, %fd153;
	add.f64 	%fd90, %fd16, %fd15;
	setp.geu.f64	%p40, %fd90, 0d4010000000000000;
	@%p40 bra 	BB4_29;

	sub.f64 	%fd91, %fd16, %fd15;
	add.f64 	%fd17, %fd9, %fd91;
	add.f64 	%fd92, %fd153, %fd153;
	fma.rn.f64 	%fd152, %fd92, %fd152, %fd10;
	add.s32 	%r191, %r191, 1;
	setp.lt.u32	%p41, %r191, %r56;
	mov.f64 	%fd153, %fd17;
	@%p41 bra 	BB4_27;

BB4_29:
	cvt.rn.f32.u32	%f124, %r191;
	cvt.rzi.u32.f32	%r13, %f124;
	add.s32 	%r197, %r13, %r197;
	setp.gt.u32	%p42, %r7, 9;
	@%p42 bra 	BB4_31;

	mul.wide.u32 	%rd38, %r7, 4;
	add.s64 	%rd39, %rd1, %rd38;
	st.local.u32 	[%rd39], %r13;

BB4_31:
	setp.lt.u32	%p43, %r7, 10;
	and.b32  	%r118, %r57, 1;
	setp.eq.b32	%p44, %r118, 1;
	setp.ne.s32	%p45, %r7, 0;
	and.pred  	%p46, %p43, %p45;
	and.pred  	%p47, %p46, %p44;
	shr.u32 	%r15, %r9, 1;
	setp.eq.s32	%p48, %r7, %r15;
	or.pred  	%p49, %p47, %p48;
	add.s32 	%r187, %r7, 1;
	mov.u32 	%r196, %r9;
	@!%p49 bra 	BB4_45;
	bra.uni 	BB4_32;

BB4_32:
	div.u32 	%r119, %r197, %r187;
	cvt.rn.f64.u32	%fd19, %r119;
	setp.eq.s32	%p50, %r7, 0;
	mov.f64 	%fd158, 0d0000000000000000;
	@%p50 bra 	BB4_41;

	and.b32  	%r17, %r7, 3;
	setp.eq.s32	%p51, %r17, 0;
	mov.f64 	%fd158, 0d0000000000000000;
	mov.u32 	%r195, 0;
	@%p51 bra 	BB4_39;

	setp.eq.s32	%p52, %r17, 1;
	mov.f64 	%fd155, 0d0000000000000000;
	mov.u32 	%r193, 0;
	@%p52 bra 	BB4_38;

	setp.eq.s32	%p53, %r17, 2;
	mov.f64 	%fd154, 0d0000000000000000;
	mov.u32 	%r192, 0;
	@%p53 bra 	BB4_37;

	ld.local.u32 	%r124, [%rd1];
	cvt.rn.f64.u32	%fd97, %r124;
	sub.f64 	%fd98, %fd97, %fd19;
	fma.rn.f64 	%fd154, %fd98, %fd98, 0d0000000000000000;
	mov.u32 	%r192, 1;

BB4_37:
	mul.wide.u32 	%rd44, %r192, 4;
	add.s64 	%rd45, %rd1, %rd44;
	ld.local.u32 	%r125, [%rd45];
	cvt.rn.f64.u32	%fd99, %r125;
	sub.f64 	%fd100, %fd99, %fd19;
	fma.rn.f64 	%fd155, %fd100, %fd100, %fd154;
	add.s32 	%r193, %r192, 1;

BB4_38:
	mul.wide.u32 	%rd48, %r193, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.local.u32 	%r126, [%rd49];
	cvt.rn.f64.u32	%fd101, %r126;
	sub.f64 	%fd102, %fd101, %fd19;
	fma.rn.f64 	%fd158, %fd102, %fd102, %fd155;
	add.s32 	%r195, %r193, 1;

BB4_39:
	setp.lt.u32	%p54, %r7, 4;
	@%p54 bra 	BB4_41;

BB4_40:
	mul.wide.u32 	%rd51, %r195, 4;
	add.s64 	%rd52, %rd1, %rd51;
	ld.local.u32 	%r127, [%rd52];
	cvt.rn.f64.u32	%fd103, %r127;
	sub.f64 	%fd104, %fd103, %fd19;
	fma.rn.f64 	%fd105, %fd104, %fd104, %fd158;
	add.s32 	%r128, %r195, 1;
	mul.wide.u32 	%rd53, %r128, 4;
	add.s64 	%rd54, %rd1, %rd53;
	ld.local.u32 	%r129, [%rd54];
	cvt.rn.f64.u32	%fd106, %r129;
	sub.f64 	%fd107, %fd106, %fd19;
	fma.rn.f64 	%fd108, %fd107, %fd107, %fd105;
	add.s32 	%r130, %r195, 2;
	mul.wide.u32 	%rd55, %r130, 4;
	add.s64 	%rd56, %rd1, %rd55;
	ld.local.u32 	%r131, [%rd56];
	cvt.rn.f64.u32	%fd109, %r131;
	sub.f64 	%fd110, %fd109, %fd19;
	fma.rn.f64 	%fd111, %fd110, %fd110, %fd108;
	add.s32 	%r132, %r195, 3;
	mul.wide.u32 	%rd57, %r132, 4;
	add.s64 	%rd58, %rd1, %rd57;
	ld.local.u32 	%r133, [%rd58];
	cvt.rn.f64.u32	%fd112, %r133;
	sub.f64 	%fd113, %fd112, %fd19;
	fma.rn.f64 	%fd158, %fd113, %fd113, %fd111;
	add.s32 	%r195, %r195, 4;
	setp.lt.u32	%p55, %r195, %r7;
	@%p55 bra 	BB4_40;

BB4_41:
	add.s32 	%r134, %r7, -1;
	cvt.rn.f64.u32	%fd114, %r134;
	div.rn.f64 	%fd115, %fd158, %fd114;
	div.rn.f64 	%fd29, %fd115, %fd19;
	setp.ne.s32	%p56, %r7, 1;
	@%p56 bra 	BB4_43;

	// inline asm
	activemask.b32 %r135;
	// inline asm
	ld.local.v2.u32 	{%r137, %r138}, [%rd1];
	setp.eq.s32	%p57, %r137, %r138;
	vote.sync.all.pred 	%p58, %p57, %r135;
	mov.u32 	%r196, 2;
	@%p58 bra 	BB4_45;

BB4_43:
	// inline asm
	activemask.b32 %r142;
	// inline asm
	setp.lt.f64	%p59, %fd29, 0d3F847AE140000000;
	vote.sync.all.pred 	%p60, %p59, %r142;
	mov.u32 	%r196, %r187;
	@%p60 bra 	BB4_45;

	// inline asm
	activemask.b32 %r144;
	// inline asm
	setp.le.f64	%p61, %fd29, 0d3FF0000000000000;
	vote.sync.all.pred 	%p62, %p61, %r144;
	setp.ge.u32	%p63, %r7, %r15;
	and.pred  	%p64, %p62, %p63;
	selp.b32	%r196, %r187, %r9, %p64;

BB4_45:
	setp.lt.u32	%p65, %r187, %r196;
	@%p65 bra 	BB4_26;

BB4_46:
	cvt.rn.f32.u32	%f146, %r196;
	div.u32 	%r146, %r197, %r196;
	cvt.rn.f32.u32	%f142, %r146;

BB4_47:
	mul.f32 	%f125, %f139, 0f3F400000;
	add.f32 	%f139, %f125, %f146;
	mul.f32 	%f126, %f146, %f142;
	fma.rn.f32 	%f127, %f144, %f125, %f126;
	div.rn.f32 	%f144, %f127, %f139;

BB4_75:
	mul.lo.s32 	%r185, %r4, %r53;
	cvt.u64.u32	%rd87, %r185;
	cvta.to.global.u64 	%rd88, %rd4;
	add.s64 	%rd89, %rd88, %rd87;
	mul.wide.u32 	%rd90, %r3, 16;
	add.s64 	%rd91, %rd89, %rd90;
	st.global.f32 	[%rd91], %f144;
	st.global.f32 	[%rd91+4], %f139;
	st.global.f32 	[%rd91+12], %f146;
	st.global.u8 	[%rd91+8], %rs9;
	setp.gt.f32	%p98, %f139, 0f00000000;
	@%p98 bra 	BB4_77;

	mov.u64 	%rd92, $str7;
	cvta.global.u64 	%rd93, %rd92;
	mov.u64 	%rd94, $str2;
	cvta.global.u64 	%rd95, %rd94;
	mov.u32 	%r186, 358;
	mov.u64 	%rd96, 0;
	mov.u64 	%rd97, 2;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd93;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd95;
	.param .b32 param2;
	st.param.b32	[param2+0], %r186;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd96;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd97;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 15

BB4_77:
	ret;
}

	// .globl	compose
.visible .entry compose(
	.param .u64 compose_param_0,
	.param .u32 compose_param_1,
	.param .u64 compose_param_2,
	.param .u32 compose_param_3,
	.param .u64 compose_param_4,
	.param .u32 compose_param_5,
	.param .u32 compose_param_6,
	.param .u64 compose_param_7,
	.param .u32 compose_param_8,
	.param .f32 compose_param_9
)
{
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<20>;
	.reg .b32 	%r<44>;
	.reg .b64 	%rd<16>;


	ld.param.u64 	%rd2, [compose_param_0];
	ld.param.u32 	%r11, [compose_param_1];
	ld.param.u64 	%rd3, [compose_param_4];
	ld.param.u32 	%r13, [compose_param_5];
	ld.param.u32 	%r14, [compose_param_6];
	ld.param.u64 	%rd4, [compose_param_7];
	ld.param.u32 	%r12, [compose_param_8];
	ld.param.f32 	%f6, [compose_param_9];
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r16, %r15, %r17;
	mov.u32 	%r18, %ctaid.y;
	mov.u32 	%r19, %ntid.y;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r2, %r18, %r19, %r20;
	setp.ge.u32	%p1, %r2, %r14;
	setp.ge.u32	%p2, %r1, %r13;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_11;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.lo.s32 	%r21, %r2, %r11;
	cvt.u64.u32	%rd6, %r21;
	add.s64 	%rd7, %rd5, %rd6;
	mul.wide.u32 	%rd8, %r1, 16;
	add.s64 	%rd9, %rd7, %rd8;
	add.s64 	%rd1, %rd9, 12;
	ld.const.u8 	%rs1, [VISUALIZE_SAMPLE_COUNT];
	setp.eq.s16	%p4, %rs1, 0;
	@%p4 bra 	BB5_5;

	ld.global.f32 	%f7, [%rd1+-8];
	cvt.rzi.u32.f32	%r22, %f7;
	cvt.rzi.u32.f32	%r3, %f6;
	min.u32 	%r23, %r22, %r3;
	cvt.rn.f32.u32	%f8, %r23;
	cvt.rn.f32.u32	%f1, %r3;
	div.rn.f32 	%f9, %f8, %f1;
	mul.f32 	%f10, %f9, 0f437F0000;
	cvt.rzi.s32.f32	%r24, %f10;
	and.b32  	%r25, %r24, 255;
	prmt.b32 	%r26, %r25, %r25, 30212;
	prmt.b32 	%r42, %r25, %r26, 28756;
	ld.global.u8 	%rs2, [%rd1+-4];
	setp.eq.s16	%p5, %rs2, 0;
	@%p5 bra 	BB5_4;

	ld.global.f32 	%f11, [%rd1];
	cvt.rzi.u32.f32	%r27, %f11;
	min.u32 	%r28, %r27, %r3;
	cvt.rn.f32.u32	%f12, %r28;
	div.rn.f32 	%f13, %f12, %f1;
	mul.f32 	%f14, %f13, 0f437F0000;
	cvt.rzi.s32.f32	%r29, %f14;
	and.b32  	%r30, %r29, 255;
	prmt.b32 	%r31, %r30, %r30, 30212;
	prmt.b32 	%r42, %r30, %r31, 28756;

BB5_4:
	or.b32  	%r43, %r42, -16777216;
	bra.uni 	BB5_10;

BB5_5:
	ld.global.f32 	%f2, [%rd1+-12];
	abs.f32 	%f15, %f2;
	mov.b32 	 %r32, %f2;
	and.b32  	%r33, %r32, -2147483648;
	or.b32  	%r34, %r33, 1056964608;
	mov.b32 	 %f16, %r34;
	add.f32 	%f17, %f2, %f16;
	cvt.rzi.f32.f32	%f18, %f17;
	setp.gt.f32	%p6, %f15, 0f4B000000;
	selp.f32	%f19, %f2, %f18, %p6;
	setp.geu.f32	%p7, %f15, 0f3F000000;
	@%p7 bra 	BB5_7;

	cvt.rzi.f32.f32	%f19, %f2;

BB5_7:
	cvt.rzi.u32.f32	%r35, %f19;
	rem.u32 	%r36, %r35, %r12;
	sub.s32 	%r37, %r12, %r36;
	add.s32 	%r8, %r37, -1;
	setp.lt.u32	%p8, %r8, %r12;
	@%p8 bra 	BB5_9;

	mov.u64 	%rd10, $str9;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str10;
	cvta.global.u64 	%rd13, %rd12;
	mov.u32 	%r38, 23;
	mov.u64 	%rd14, 0;
	mov.u64 	%rd15, 2;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r38;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd14;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd15;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 16

BB5_9:
	shl.b32 	%r39, %r8, 2;
	mov.u32 	%r40, 0;
	suld.b.2d.b32.trap {%r43}, [%rd4, {%r39, %r40}];

BB5_10:
	shl.b32 	%r41, %r1, 2;
	sust.b.2d.b32.trap 	[%rd3, {%r41, %r2}], {%r43};

BB5_11:
	ret;
}

	// .globl	fractalRenderUnderSampled
.visible .entry fractalRenderUnderSampled(
	.param .u64 fractalRenderUnderSampled_param_0,
	.param .u32 fractalRenderUnderSampled_param_1,
	.param .u32 fractalRenderUnderSampled_param_2,
	.param .u32 fractalRenderUnderSampled_param_3,
	.param .f32 fractalRenderUnderSampled_param_4,
	.param .f32 fractalRenderUnderSampled_param_5,
	.param .f32 fractalRenderUnderSampled_param_6,
	.param .f32 fractalRenderUnderSampled_param_7,
	.param .u32 fractalRenderUnderSampled_param_8,
	.param .u32 fractalRenderUnderSampled_param_9
)
{
	.reg .pred 	%p<13>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<33>;
	.reg .b32 	%r<51>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [fractalRenderUnderSampled_param_0];
	ld.param.u32 	%r12, [fractalRenderUnderSampled_param_1];
	ld.param.u32 	%r13, [fractalRenderUnderSampled_param_2];
	ld.param.u32 	%r14, [fractalRenderUnderSampled_param_3];
	ld.param.f32 	%f13, [fractalRenderUnderSampled_param_4];
	ld.param.f32 	%f14, [fractalRenderUnderSampled_param_5];
	ld.param.f32 	%f15, [fractalRenderUnderSampled_param_6];
	ld.param.f32 	%f16, [fractalRenderUnderSampled_param_7];
	ld.param.u32 	%r15, [fractalRenderUnderSampled_param_8];
	ld.param.u32 	%r16, [fractalRenderUnderSampled_param_9];
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r20, %r18, %r17, %r19;
	mul.lo.s32 	%r1, %r20, %r16;
	mov.u32 	%r21, %ctaid.y;
	mov.u32 	%r22, %ntid.y;
	mov.u32 	%r23, %tid.y;
	mad.lo.s32 	%r24, %r21, %r22, %r23;
	mul.lo.s32 	%r2, %r24, %r16;
	sub.s32 	%r25, %r14, %r16;
	setp.ge.u32	%p1, %r2, %r25;
	sub.s32 	%r26, %r13, %r16;
	setp.ge.u32	%p2, %r1, %r26;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB6_13;

	sub.f32 	%f17, %f15, %f13;
	cvt.rn.f32.u32	%f18, %r13;
	div.rn.f32 	%f19, %f17, %f18;
	cvt.rn.f32.u32	%f20, %r14;
	sub.f32 	%f21, %f16, %f14;
	div.rn.f32 	%f22, %f21, %f20;
	cvt.rn.f32.u32	%f23, %r1;
	fma.rn.f32 	%f32, %f23, %f19, %f13;
	cvt.rn.f32.u32	%f24, %r2;
	mul.f32 	%f25, %f24, %f22;
	sub.f32 	%f31, %f16, %f25;
	ld.const.f64 	%fd1, [julia_c];
	cvt.rn.f32.f64	%f3, %fd1;
	ld.const.f64 	%fd2, [julia_c+8];
	cvt.rn.f32.f64	%f4, %fd2;
	setp.eq.s32	%p4, %r15, 0;
	mov.u32 	%r46, 0;
	@%p4 bra 	BB6_4;

BB6_2:
	mul.f32 	%f7, %f31, %f31;
	mul.f32 	%f8, %f32, %f32;
	add.f32 	%f26, %f8, %f7;
	setp.geu.f32	%p5, %f26, 0f40800000;
	@%p5 bra 	BB6_4;

	sub.f32 	%f27, %f8, %f7;
	add.f32 	%f9, %f3, %f27;
	add.f32 	%f28, %f32, %f32;
	fma.rn.f32 	%f31, %f28, %f31, %f4;
	add.s32 	%r46, %r46, 1;
	setp.lt.u32	%p6, %r46, %r15;
	mov.f32 	%f32, %f9;
	@%p6 bra 	BB6_2;

BB6_4:
	setp.eq.s32	%p7, %r16, 0;
	@%p7 bra 	BB6_13;

	cvt.rn.f32.u32	%f29, %r46;
	cvt.rzi.u32.f32	%r33, %f29;
	mul.lo.s32 	%r34, %r2, %r12;
	cvt.u64.u32	%rd3, %r34;
	cvta.to.global.u64 	%rd4, %rd2;
	add.s64 	%rd5, %rd4, %rd3;
	cvt.rn.f32.u32	%f30, %r16;
	rcp.rn.f32 	%f11, %f30;
	cvt.rn.f32.u32	%f12, %r33;
	mul.wide.u32 	%rd6, %r1, 16;
	add.s64 	%rd1, %rd5, %rd6;
	and.b32  	%r32, %r16, 3;
	mov.u32 	%r47, 1;
	mov.u32 	%r50, 0;
	setp.eq.s32	%p8, %r32, 0;
	@%p8 bra 	BB6_11;

	setp.eq.s32	%p9, %r32, 1;
	mov.u32 	%r48, %r50;
	@%p9 bra 	BB6_10;

	setp.eq.s32	%p10, %r32, 2;
	@%p10 bra 	BB6_9;

	st.global.f32 	[%rd1], %f12;
	st.global.f32 	[%rd1+4], %f11;
	mov.u32 	%r41, 0;
	st.global.u32 	[%rd1+12], %r41;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd1+8], %rs1;
	mov.u32 	%r47, 2;

BB6_9:
	st.global.f32 	[%rd1], %f12;
	st.global.f32 	[%rd1+4], %f11;
	mov.u32 	%r42, 0;
	st.global.u32 	[%rd1+12], %r42;
	mov.u16 	%rs2, 0;
	st.global.u8 	[%rd1+8], %rs2;
	mov.u32 	%r48, %r47;

BB6_10:
	st.global.f32 	[%rd1], %f12;
	st.global.f32 	[%rd1+4], %f11;
	st.global.u32 	[%rd1+12], %r50;
	mov.u16 	%rs3, 0;
	st.global.u8 	[%rd1+8], %rs3;
	add.s32 	%r50, %r48, 1;

BB6_11:
	setp.lt.u32	%p11, %r16, 4;
	@%p11 bra 	BB6_13;

BB6_12:
	st.global.f32 	[%rd1], %f12;
	st.global.f32 	[%rd1+4], %f11;
	mov.u32 	%r44, 0;
	st.global.u32 	[%rd1+12], %r44;
	mov.u16 	%rs4, 0;
	st.global.u8 	[%rd1+8], %rs4;
	add.s32 	%r50, %r50, 4;
	setp.lt.u32	%p12, %r50, %r16;
	@%p12 bra 	BB6_12;

BB6_13:
	ret;
}

	// .globl	debug
.visible .entry debug(

)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<4>;


	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mul.lo.s32 	%r3, %r2, %r1;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ntid.y;
	mul.lo.s32 	%r6, %r4, %r5;
	mov.u32 	%r7, %tid.x;
	neg.s32 	%r8, %r7;
	setp.eq.s32	%p1, %r3, %r8;
	mov.u32 	%r9, %tid.y;
	neg.s32 	%r10, %r9;
	setp.eq.s32	%p2, %r6, %r10;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB7_2;
	bra.uni 	BB7_1;

BB7_1:
	mov.u64 	%rd1, $str;
	cvta.global.u64 	%rd2, %rd1;
	mov.u64 	%rd3, 0;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd3;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 17

BB7_2:
	ret;
}


