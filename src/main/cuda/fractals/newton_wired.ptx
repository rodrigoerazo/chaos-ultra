//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24330188
// Cuda compilation tools, release 9.2, V9.2.148
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	init
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 1 .u8 VISUALIZE_SAMPLE_COUNT;
.global .align 4 .u32 seed;
.global .align 4 .u32 WARP_SIZE_X = 8;
.global .align 4 .u32 WARP_SIZE_Y = 4;
.global .align 4 .u32 USE_ADAPTIVE_SS_FLAG_MASK = 1;
.global .align 4 .u32 USE_FOVEATION_FLAG_MASK = 4;
.global .align 4 .u32 USE_SAMPLE_REUSE_FLAG_MASK = 8;
.global .align 4 .u32 IS_ZOOMING_FLAG_MASK = 16;
.global .align 4 .u32 visualityAmplifyCoeff = 10;
.global .align 4 .f32 screenDistance = 0f42700000;
.global .align 16 .b8 $str[34] = {98, 0, 108, 0, 111, 0, 99, 0, 107, 0, 68, 0, 105, 0, 109, 0, 46, 0, 120, 0, 32, 0, 61, 0, 61, 0, 32, 0, 51, 0, 50, 0, 0, 0};
.global .align 16 .b8 $str1[138] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 82, 0, 101, 0, 110, 0, 100, 0, 101, 0, 114, 0, 101, 0, 114, 0, 71, 0, 101, 0, 110, 0, 101, 0, 114, 0, 105, 0, 99, 0, 46, 0, 99, 0, 117, 0, 0, 0};
.global .align 16 .b8 $str2[40] = {112, 0, 79, 0, 117, 0, 116, 0, 112, 0, 117, 0, 116, 0, 45, 0, 62, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str5[34] = {118, 0, 105, 0, 115, 0, 117, 0, 97, 0, 108, 0, 65, 0, 110, 0, 103, 0, 108, 0, 101, 0, 32, 0, 62, 0, 61, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str6[34] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 62, 0, 61, 0, 32, 0, 49, 0, 0, 0};
.global .align 16 .b8 $str7[36] = {114, 0, 101, 0, 115, 0, 117, 0, 108, 0, 116, 0, 46, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str8[68] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 60, 0, 61, 0, 32, 0, 77, 0, 65, 0, 88, 0, 95, 0, 83, 0, 85, 0, 80, 0, 69, 0, 82, 0, 95, 0, 83, 0, 65, 0, 77, 0, 80, 0, 76, 0, 73, 0, 78, 0, 71, 0, 0, 0};

.visible .entry init(

)
{



	ret;
}

	// .globl	fractalRenderMainFloat
.visible .entry fractalRenderMainFloat(
	.param .u64 fractalRenderMainFloat_param_0,
	.param .u32 fractalRenderMainFloat_param_1,
	.param .align 4 .b8 fractalRenderMainFloat_param_2[8],
	.param .align 4 .b8 fractalRenderMainFloat_param_3[16],
	.param .u32 fractalRenderMainFloat_param_4,
	.param .u32 fractalRenderMainFloat_param_5,
	.param .u32 fractalRenderMainFloat_param_6
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<54>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<126>;
	.reg .b32 	%r<122>;
	.reg .b64 	%rd<53>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainFloat_param_0];
	ld.param.u32 	%r34, [fractalRenderMainFloat_param_1];
	ld.param.u32 	%r36, [fractalRenderMainFloat_param_2+4];
	ld.param.u32 	%r35, [fractalRenderMainFloat_param_2];
	ld.param.f32 	%f35, [fractalRenderMainFloat_param_3+12];
	ld.param.f32 	%f34, [fractalRenderMainFloat_param_3+8];
	ld.param.f32 	%f33, [fractalRenderMainFloat_param_3+4];
	ld.param.f32 	%f32, [fractalRenderMainFloat_param_3];
	ld.param.u32 	%r37, [fractalRenderMainFloat_param_4];
	ld.param.u32 	%r119, [fractalRenderMainFloat_param_5];
	ld.param.u32 	%r39, [fractalRenderMainFloat_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p5, %r1, 32;
	@%p5 bra 	BB1_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r40, 71;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r40;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB1_2:
	mov.u32 	%r41, %tid.x;
	mov.u32 	%r42, %tid.y;
	mad.lo.s32 	%r43, %r1, %r42, %r41;
	shl.b32 	%r44, %r1, 2;
	and.b32  	%r45, %r43, 15;
	rem.u32 	%r46, %r43, %r44;
	sub.s32 	%r47, %r46, %r45;
	shr.u32 	%r48, %r47, 2;
	and.b32  	%r49, %r43, 3;
	add.s32 	%r50, %r48, %r49;
	div.u32 	%r51, %r43, %r44;
	shl.b32 	%r52, %r51, 2;
	bfe.u32 	%r53, %r43, 2, 2;
	add.s32 	%r54, %r52, %r53;
	mov.u32 	%r55, %ctaid.x;
	mad.lo.s32 	%r4, %r55, %r1, %r50;
	mov.u32 	%r56, %ctaid.y;
	mov.u32 	%r57, %ntid.y;
	mad.lo.s32 	%r5, %r56, %r57, %r54;
	setp.lt.u32	%p6, %r4, %r35;
	setp.lt.u32	%p7, %r5, %r36;
	and.pred  	%p8, %p6, %p7;
	@!%p8 bra 	BB1_46;
	bra.uni 	BB1_3;

BB1_3:
	setp.lt.u32	%p9, %r119, 65;
	@%p9 bra 	BB1_5;

	mov.u64 	%rd9, $str8;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r58, 119;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r58;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_5:
	setp.eq.s32	%p10, %r119, 0;
	cvt.rn.f32.u32	%f125, %r119;
	mov.u32 	%r60, 0;
	@%p10 bra 	BB1_6;

	cvt.rn.f32.u32	%f4, %r4;
	cvt.rn.f32.u32	%f5, %r5;
	mul.wide.u32 	%rd15, %r37, -858993459;
	shr.u64 	%rd16, %rd15, 35;
	cvt.u32.u64	%r6, %rd16;
	cvt.rn.f32.u32	%f36, %r35;
	sub.f32 	%f37, %f34, %f32;
	div.rn.f32 	%f6, %f37, %f36;
	cvt.rn.f32.u32	%f38, %r36;
	sub.f32 	%f39, %f35, %f33;
	div.rn.f32 	%f7, %f39, %f38;
	mov.u32 	%r62, 0;
	and.b32  	%r69, %r39, 1;
	mov.u32 	%r106, %r62;
	mov.u32 	%r120, %r62;

BB1_8:
	mov.u32 	%r9, %r119;
	mov.u32 	%r7, %r106;
	cvt.rn.f32.u32	%f40, %r7;
	div.rn.f32 	%f41, %f40, %f125;
	add.f32 	%f42, %f4, %f41;
	add.f32 	%f43, %f5, %f41;
	neg.f32 	%f44, %f43;
	fma.rn.f32 	%f119, %f6, %f42, %f32;
	fma.rn.f32 	%f118, %f7, %f44, %f35;
	setp.eq.s32	%p11, %r37, 0;
	mov.u32 	%r109, 10;
	mov.u32 	%r110, %r62;
	@%p11 bra 	BB1_20;

BB1_9:
	mul.f32 	%f45, %f118, %f118;
	mul.f32 	%f46, %f119, %f119;
	sub.f32 	%f47, %f46, %f45;
	mul.f32 	%f48, %f119, %f118;
	fma.rn.f32 	%f49, %f119, %f118, %f48;
	mul.f32 	%f50, %f119, %f47;
	mul.f32 	%f51, %f118, %f49;
	sub.f32 	%f52, %f50, %f51;
	mul.f32 	%f53, %f119, %f49;
	fma.rn.f32 	%f54, %f118, %f47, %f53;
	add.f32 	%f55, %f52, 0fBF800000;
	mul.f32 	%f56, %f47, 0f40400000;
	mul.f32 	%f57, %f49, 0f40400000;
	abs.f32 	%f58, %f56;
	abs.f32 	%f59, %f57;
	add.f32 	%f60, %f58, %f59;
	rcp.rn.f32 	%f61, %f60;
	mul.f32 	%f62, %f55, %f61;
	mul.f32 	%f63, %f54, %f61;
	mul.f32 	%f64, %f56, %f61;
	mul.f32 	%f65, %f57, %f61;
	mul.f32 	%f66, %f65, %f65;
	fma.rn.f32 	%f67, %f64, %f64, %f66;
	rcp.rn.f32 	%f68, %f67;
	mul.f32 	%f69, %f63, %f65;
	fma.rn.f32 	%f70, %f62, %f64, %f69;
	mul.f32 	%f71, %f68, %f70;
	mul.f32 	%f72, %f63, %f64;
	mul.f32 	%f73, %f62, %f65;
	sub.f32 	%f74, %f72, %f73;
	mul.f32 	%f75, %f68, %f74;
	sub.f32 	%f119, %f119, %f71;
	sub.f32 	%f118, %f118, %f75;
	add.s32 	%r110, %r110, 1;
	setp.ne.s32	%p12, %r110, %r109;
	@%p12 bra 	BB1_19;

	add.f32 	%f76, %f119, 0fBF800000;
	abs.f32 	%f77, %f76;
	setp.geu.f32	%p13, %f77, 0f38D1B717;
	@%p13 bra 	BB1_12;

	abs.f32 	%f78, %f118;
	setp.lt.f32	%p14, %f78, 0f38D1B717;
	mov.u32 	%r114, 1;
	@%p14 bra 	BB1_17;

BB1_12:
	add.f32 	%f79, %f119, 0f3F000000;
	abs.f32 	%f15, %f79;
	setp.geu.f32	%p15, %f15, 0f38D1B717;
	@%p15 bra 	BB1_14;

	add.f32 	%f80, %f118, 0fBF5DB3D7;
	abs.f32 	%f81, %f80;
	setp.lt.f32	%p16, %f81, 0f38D1B717;
	mov.u32 	%r114, 2;
	@%p16 bra 	BB1_17;

BB1_14:
	mov.pred 	%p52, 0;
	@%p15 bra 	BB1_16;

	add.f32 	%f82, %f118, 0f3F5DB3D7;
	abs.f32 	%f83, %f82;
	setp.lt.f32	%p52, %f83, 0f38D1B717;

BB1_16:
	selp.b32	%r114, 3, 0, %p52;

BB1_17:
	setp.ne.s32	%p19, %r114, 0;
	@%p19 bra 	BB1_27;

	add.s32 	%r15, %r6, %r109;
	mov.u32 	%r110, %r109;
	mov.u32 	%r109, %r15;

BB1_19:
	setp.lt.u32	%p20, %r110, %r37;
	@%p20 bra 	BB1_9;

BB1_20:
	add.f32 	%f84, %f119, 0fBF800000;
	abs.f32 	%f85, %f84;
	setp.geu.f32	%p21, %f85, 0f38D1B717;
	@%p21 bra 	BB1_22;

	abs.f32 	%f86, %f118;
	setp.lt.f32	%p22, %f86, 0f38D1B717;
	mov.u32 	%r114, 1;
	@%p22 bra 	BB1_27;

BB1_22:
	add.f32 	%f87, %f119, 0f3F000000;
	abs.f32 	%f18, %f87;
	setp.geu.f32	%p23, %f18, 0f38D1B717;
	@%p23 bra 	BB1_24;

	add.f32 	%f88, %f118, 0fBF5DB3D7;
	abs.f32 	%f89, %f88;
	setp.lt.f32	%p24, %f89, 0f38D1B717;
	mov.u32 	%r114, 2;
	@%p24 bra 	BB1_27;

BB1_24:
	mov.pred 	%p53, 0;
	@%p23 bra 	BB1_26;

	add.f32 	%f90, %f118, 0f3F5DB3D7;
	abs.f32 	%f91, %f90;
	setp.lt.f32	%p53, %f91, 0f38D1B717;

BB1_26:
	selp.b32	%r114, 3, 0, %p53;

BB1_27:
	cvt.rn.f32.u32	%f92, %r114;
	cvt.rzi.u32.f32	%r20, %f92;
	add.s32 	%r120, %r20, %r120;
	setp.gt.u32	%p27, %r7, 9;
	@%p27 bra 	BB1_29;

	add.u64 	%rd17, %SP, 0;
	cvta.to.local.u64 	%rd18, %rd17;
	mul.wide.u32 	%rd19, %r7, 4;
	add.s64 	%rd20, %rd18, %rd19;
	st.local.u32 	[%rd20], %r20;

BB1_29:
	setp.lt.u32	%p28, %r7, 10;
	setp.eq.b32	%p29, %r69, 1;
	setp.ne.s32	%p30, %r7, 0;
	and.pred  	%p31, %p28, %p30;
	and.pred  	%p32, %p31, %p29;
	shr.u32 	%r70, %r9, 1;
	setp.eq.s32	%p33, %r7, %r70;
	or.pred  	%p34, %p32, %p33;
	add.s32 	%r106, %r7, 1;
	mov.u32 	%r119, %r9;
	@!%p34 bra 	BB1_43;
	bra.uni 	BB1_30;

BB1_30:
	div.u32 	%r71, %r120, %r106;
	cvt.rn.f32.u32	%f19, %r71;
	setp.eq.s32	%p35, %r7, 0;
	mov.f32 	%f124, 0f00000000;
	@%p35 bra 	BB1_39;

	and.b32  	%r73, %r7, 3;
	setp.eq.s32	%p36, %r73, 0;
	mov.f32 	%f124, 0f00000000;
	mov.u32 	%r118, 0;
	@%p36 bra 	BB1_37;

	setp.eq.s32	%p37, %r73, 1;
	mov.f32 	%f121, 0f00000000;
	mov.u32 	%r116, 0;
	@%p37 bra 	BB1_36;

	setp.eq.s32	%p38, %r73, 2;
	mov.f32 	%f120, 0f00000000;
	mov.u32 	%r115, 0;
	@%p38 bra 	BB1_35;

	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd22, %rd21;
	ld.local.u32 	%r79, [%rd22];
	cvt.rn.f32.u32	%f97, %r79;
	sub.f32 	%f98, %f97, %f19;
	fma.rn.f32 	%f120, %f98, %f98, 0f00000000;
	mov.u32 	%r115, 1;

BB1_35:
	add.u64 	%rd23, %SP, 0;
	cvta.to.local.u64 	%rd24, %rd23;
	mul.wide.u32 	%rd25, %r115, 4;
	add.s64 	%rd26, %rd24, %rd25;
	ld.local.u32 	%r80, [%rd26];
	cvt.rn.f32.u32	%f99, %r80;
	sub.f32 	%f100, %f99, %f19;
	fma.rn.f32 	%f121, %f100, %f100, %f120;
	add.s32 	%r116, %r115, 1;

BB1_36:
	add.u64 	%rd27, %SP, 0;
	cvta.to.local.u64 	%rd28, %rd27;
	mul.wide.u32 	%rd29, %r116, 4;
	add.s64 	%rd30, %rd28, %rd29;
	ld.local.u32 	%r81, [%rd30];
	cvt.rn.f32.u32	%f101, %r81;
	sub.f32 	%f102, %f101, %f19;
	fma.rn.f32 	%f124, %f102, %f102, %f121;
	add.s32 	%r118, %r116, 1;

BB1_37:
	add.u64 	%rd31, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd31;
	setp.lt.u32	%p39, %r7, 4;
	@%p39 bra 	BB1_39;

BB1_38:
	mul.wide.u32 	%rd32, %r118, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.local.u32 	%r82, [%rd33];
	cvt.rn.f32.u32	%f103, %r82;
	sub.f32 	%f104, %f103, %f19;
	fma.rn.f32 	%f105, %f104, %f104, %f124;
	add.s32 	%r83, %r118, 1;
	mul.wide.u32 	%rd34, %r83, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.local.u32 	%r84, [%rd35];
	cvt.rn.f32.u32	%f106, %r84;
	sub.f32 	%f107, %f106, %f19;
	fma.rn.f32 	%f108, %f107, %f107, %f105;
	add.s32 	%r85, %r118, 2;
	mul.wide.u32 	%rd36, %r85, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r86, [%rd37];
	cvt.rn.f32.u32	%f109, %r86;
	sub.f32 	%f110, %f109, %f19;
	fma.rn.f32 	%f111, %f110, %f110, %f108;
	add.s32 	%r87, %r118, 3;
	mul.wide.u32 	%rd38, %r87, 4;
	add.s64 	%rd39, %rd1, %rd38;
	ld.local.u32 	%r88, [%rd39];
	cvt.rn.f32.u32	%f112, %r88;
	sub.f32 	%f113, %f112, %f19;
	fma.rn.f32 	%f124, %f113, %f113, %f111;
	add.s32 	%r118, %r118, 4;
	setp.lt.u32	%p40, %r118, %r7;
	@%p40 bra 	BB1_38;

BB1_39:
	add.s32 	%r89, %r7, -1;
	cvt.rn.f32.u32	%f114, %r89;
	div.rn.f32 	%f115, %f124, %f114;
	div.rn.f32 	%f29, %f115, %f19;
	setp.ne.s32	%p41, %r7, 1;
	@%p41 bra 	BB1_41;

	// inline asm
	activemask.b32 %r90;
	// inline asm
	add.u64 	%rd40, %SP, 0;
	cvta.to.local.u64 	%rd41, %rd40;
	ld.local.v2.u32 	{%r92, %r93}, [%rd41];
	setp.eq.s32	%p42, %r92, %r93;
	vote.sync.all.pred 	%p43, %p42, %r90;
	mov.u32 	%r119, 2;
	@%p43 bra 	BB1_43;

BB1_41:
	// inline asm
	activemask.b32 %r97;
	// inline asm
	setp.lt.f32	%p44, %f29, 0f3C23D70A;
	vote.sync.all.pred 	%p45, %p44, %r97;
	mov.u32 	%r119, %r106;
	@%p45 bra 	BB1_43;

	// inline asm
	activemask.b32 %r99;
	// inline asm
	setp.le.f32	%p46, %f29, 0f3F800000;
	vote.sync.all.pred 	%p47, %p46, %r99;
	setp.ge.u32	%p48, %r7, %r70;
	and.pred  	%p49, %p47, %p48;
	selp.b32	%r119, %r106, %r9, %p49;

BB1_43:
	cvt.rn.f32.u32	%f125, %r119;
	setp.lt.u32	%p50, %r106, %r119;
	@%p50 bra 	BB1_8;
	bra.uni 	BB1_44;

BB1_6:
	mov.u32 	%r120, %r60;
	mov.u32 	%r119, %r60;

BB1_44:
	mul.lo.s32 	%r102, %r5, %r34;
	cvt.u64.u32	%rd42, %r102;
	cvta.to.global.u64 	%rd43, %rd2;
	add.s64 	%rd44, %rd43, %rd42;
	div.u32 	%r103, %r120, %r119;
	cvt.rn.f32.u32	%f116, %r103;
	mul.wide.u32 	%rd45, %r4, 16;
	add.s64 	%rd46, %rd44, %rd45;
	st.global.f32 	[%rd46], %f116;
	st.global.f32 	[%rd46+4], %f125;
	st.global.u32 	[%rd46+12], %r60;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd46+8], %rs1;
	setp.gt.f32	%p51, %f125, 0f00000000;
	@%p51 bra 	BB1_46;

	mov.u64 	%rd47, $str2;
	cvta.global.u64 	%rd48, %rd47;
	mov.u64 	%rd49, $str1;
	cvta.global.u64 	%rd50, %rd49;
	mov.u32 	%r105, 206;
	mov.u64 	%rd51, 0;
	mov.u64 	%rd52, 2;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd48;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r105;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd51;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd52;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB1_46:
	ret;
}

	// .globl	fractalRenderMainDouble
.visible .entry fractalRenderMainDouble(
	.param .u64 fractalRenderMainDouble_param_0,
	.param .u32 fractalRenderMainDouble_param_1,
	.param .align 4 .b8 fractalRenderMainDouble_param_2[8],
	.param .align 8 .b8 fractalRenderMainDouble_param_3[32],
	.param .u32 fractalRenderMainDouble_param_4,
	.param .u32 fractalRenderMainDouble_param_5,
	.param .u32 fractalRenderMainDouble_param_6
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<54>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<123>;
	.reg .f64 	%fd<119>;
	.reg .b64 	%rd<53>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainDouble_param_0];
	ld.param.u32 	%r36, [fractalRenderMainDouble_param_2+4];
	ld.param.u32 	%r35, [fractalRenderMainDouble_param_2];
	ld.param.f64 	%fd31, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd30, [fractalRenderMainDouble_param_3+16];
	ld.param.f64 	%fd29, [fractalRenderMainDouble_param_3+8];
	ld.param.f64 	%fd28, [fractalRenderMainDouble_param_3];
	ld.param.u32 	%r37, [fractalRenderMainDouble_param_4];
	ld.param.u32 	%r38, [fractalRenderMainDouble_param_5];
	ld.param.u32 	%r39, [fractalRenderMainDouble_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p5, %r1, 32;
	@%p5 bra 	BB2_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r40, 71;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r40;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB2_2:
	mov.u32 	%r41, %tid.x;
	mov.u32 	%r42, %tid.y;
	mad.lo.s32 	%r43, %r1, %r42, %r41;
	shl.b32 	%r44, %r1, 2;
	and.b32  	%r45, %r43, 15;
	rem.u32 	%r46, %r43, %r44;
	sub.s32 	%r47, %r46, %r45;
	shr.u32 	%r48, %r47, 2;
	and.b32  	%r49, %r43, 3;
	add.s32 	%r50, %r48, %r49;
	div.u32 	%r51, %r43, %r44;
	shl.b32 	%r52, %r51, 2;
	bfe.u32 	%r53, %r43, 2, 2;
	add.s32 	%r54, %r52, %r53;
	mov.u32 	%r55, %ctaid.x;
	mad.lo.s32 	%r4, %r55, %r1, %r50;
	mov.u32 	%r56, %ctaid.y;
	mov.u32 	%r57, %ntid.y;
	mad.lo.s32 	%r5, %r56, %r57, %r54;
	setp.lt.u32	%p6, %r4, %r35;
	setp.lt.u32	%p7, %r5, %r36;
	and.pred  	%p8, %p6, %p7;
	@!%p8 bra 	BB2_45;
	bra.uni 	BB2_3;

BB2_3:
	setp.lt.u32	%p9, %r38, 65;
	@%p9 bra 	BB2_5;

	mov.u64 	%rd9, $str8;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r58, 119;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r58;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB2_5:
	setp.eq.s32	%p10, %r38, 0;
	mov.u32 	%r60, 0;
	mov.u32 	%r121, %r60;
	mov.u32 	%r120, %r60;
	@%p10 bra 	BB2_43;

	cvt.rn.f64.u32	%fd3, %r4;
	cvt.rn.f64.u32	%fd4, %r5;
	mul.wide.u32 	%rd15, %r37, -858993459;
	shr.u64 	%rd16, %rd15, 35;
	cvt.u32.u64	%r6, %rd16;
	cvt.rn.f64.u32	%fd32, %r35;
	sub.f64 	%fd33, %fd30, %fd28;
	div.rn.f64 	%fd5, %fd33, %fd32;
	cvt.rn.f64.u32	%fd34, %r36;
	sub.f64 	%fd35, %fd31, %fd29;
	div.rn.f64 	%fd6, %fd35, %fd34;
	mov.u32 	%r62, 0;
	and.b32  	%r69, %r39, 1;
	mov.u32 	%r107, %r62;
	mov.u32 	%r121, %r62;
	mov.u32 	%r120, %r38;

BB2_7:
	mov.u32 	%r9, %r120;
	mov.u32 	%r7, %r107;
	cvt.rn.f64.u32	%fd36, %r9;
	cvt.rn.f64.u32	%fd37, %r7;
	div.rn.f64 	%fd38, %fd37, %fd36;
	add.f64 	%fd39, %fd3, %fd38;
	add.f64 	%fd40, %fd4, %fd38;
	neg.f64 	%fd41, %fd40;
	fma.rn.f64 	%fd113, %fd5, %fd39, %fd28;
	fma.rn.f64 	%fd112, %fd6, %fd41, %fd31;
	setp.eq.s32	%p11, %r37, 0;
	mov.u32 	%r110, 10;
	mov.u32 	%r111, %r62;
	@%p11 bra 	BB2_19;

BB2_8:
	mul.f64 	%fd42, %fd112, %fd112;
	mul.f64 	%fd43, %fd113, %fd113;
	sub.f64 	%fd44, %fd43, %fd42;
	mul.f64 	%fd45, %fd113, %fd112;
	fma.rn.f64 	%fd46, %fd113, %fd112, %fd45;
	mul.f64 	%fd47, %fd113, %fd44;
	mul.f64 	%fd48, %fd112, %fd46;
	sub.f64 	%fd49, %fd47, %fd48;
	mul.f64 	%fd50, %fd113, %fd46;
	fma.rn.f64 	%fd51, %fd112, %fd44, %fd50;
	add.f64 	%fd52, %fd49, 0dBFF0000000000000;
	mul.f64 	%fd53, %fd44, 0d4008000000000000;
	mul.f64 	%fd54, %fd46, 0d4008000000000000;
	abs.f64 	%fd55, %fd53;
	abs.f64 	%fd56, %fd54;
	add.f64 	%fd57, %fd55, %fd56;
	rcp.rn.f64 	%fd58, %fd57;
	mul.f64 	%fd59, %fd52, %fd58;
	mul.f64 	%fd60, %fd51, %fd58;
	mul.f64 	%fd61, %fd53, %fd58;
	mul.f64 	%fd62, %fd54, %fd58;
	mul.f64 	%fd63, %fd62, %fd62;
	fma.rn.f64 	%fd64, %fd61, %fd61, %fd63;
	rcp.rn.f64 	%fd65, %fd64;
	mul.f64 	%fd66, %fd60, %fd62;
	fma.rn.f64 	%fd67, %fd59, %fd61, %fd66;
	mul.f64 	%fd68, %fd65, %fd67;
	mul.f64 	%fd69, %fd60, %fd61;
	mul.f64 	%fd70, %fd59, %fd62;
	sub.f64 	%fd71, %fd69, %fd70;
	mul.f64 	%fd72, %fd65, %fd71;
	sub.f64 	%fd113, %fd113, %fd68;
	sub.f64 	%fd112, %fd112, %fd72;
	add.s32 	%r111, %r111, 1;
	setp.ne.s32	%p12, %r111, %r110;
	@%p12 bra 	BB2_18;

	add.f64 	%fd73, %fd113, 0dBFF0000000000000;
	abs.f64 	%fd74, %fd73;
	setp.geu.f64	%p13, %fd74, 0d3F1A36E2EB1C432D;
	@%p13 bra 	BB2_11;

	abs.f64 	%fd75, %fd112;
	setp.lt.f64	%p14, %fd75, 0d3F1A36E2EB1C432D;
	mov.u32 	%r115, 1;
	@%p14 bra 	BB2_16;

BB2_11:
	add.f64 	%fd76, %fd113, 0d3FE0000000000000;
	abs.f64 	%fd13, %fd76;
	setp.geu.f64	%p15, %fd13, 0d3F1A36E2EB1C432D;
	@%p15 bra 	BB2_13;

	add.f64 	%fd77, %fd112, 0dBFEBB67AE857B07F;
	abs.f64 	%fd78, %fd77;
	setp.lt.f64	%p16, %fd78, 0d3F1A36E2EB1C432D;
	mov.u32 	%r115, 2;
	@%p16 bra 	BB2_16;

BB2_13:
	mov.pred 	%p52, 0;
	@%p15 bra 	BB2_15;

	add.f64 	%fd79, %fd112, 0d3FEBB67AE857B07F;
	abs.f64 	%fd80, %fd79;
	setp.lt.f64	%p52, %fd80, 0d3F1A36E2EB1C432D;

BB2_15:
	selp.b32	%r115, 3, 0, %p52;

BB2_16:
	setp.ne.s32	%p19, %r115, 0;
	@%p19 bra 	BB2_26;

	add.s32 	%r15, %r6, %r110;
	mov.u32 	%r111, %r110;
	mov.u32 	%r110, %r15;

BB2_18:
	setp.lt.u32	%p20, %r111, %r37;
	@%p20 bra 	BB2_8;

BB2_19:
	add.f64 	%fd81, %fd113, 0dBFF0000000000000;
	abs.f64 	%fd82, %fd81;
	setp.geu.f64	%p21, %fd82, 0d3F1A36E2EB1C432D;
	@%p21 bra 	BB2_21;

	abs.f64 	%fd83, %fd112;
	setp.lt.f64	%p22, %fd83, 0d3F1A36E2EB1C432D;
	mov.u32 	%r115, 1;
	@%p22 bra 	BB2_26;

BB2_21:
	add.f64 	%fd84, %fd113, 0d3FE0000000000000;
	abs.f64 	%fd16, %fd84;
	setp.geu.f64	%p23, %fd16, 0d3F1A36E2EB1C432D;
	@%p23 bra 	BB2_23;

	add.f64 	%fd85, %fd112, 0dBFEBB67AE857B07F;
	abs.f64 	%fd86, %fd85;
	setp.lt.f64	%p24, %fd86, 0d3F1A36E2EB1C432D;
	mov.u32 	%r115, 2;
	@%p24 bra 	BB2_26;

BB2_23:
	mov.pred 	%p53, 0;
	@%p23 bra 	BB2_25;

	add.f64 	%fd87, %fd112, 0d3FEBB67AE857B07F;
	abs.f64 	%fd88, %fd87;
	setp.lt.f64	%p53, %fd88, 0d3F1A36E2EB1C432D;

BB2_25:
	selp.b32	%r115, 3, 0, %p53;

BB2_26:
	cvt.rn.f32.u32	%f1, %r115;
	cvt.rzi.u32.f32	%r20, %f1;
	add.s32 	%r121, %r20, %r121;
	setp.gt.u32	%p27, %r7, 9;
	@%p27 bra 	BB2_28;

	add.u64 	%rd17, %SP, 0;
	cvta.to.local.u64 	%rd18, %rd17;
	mul.wide.u32 	%rd19, %r7, 4;
	add.s64 	%rd20, %rd18, %rd19;
	st.local.u32 	[%rd20], %r20;

BB2_28:
	setp.lt.u32	%p28, %r7, 10;
	setp.eq.b32	%p29, %r69, 1;
	setp.ne.s32	%p30, %r7, 0;
	and.pred  	%p31, %p28, %p30;
	and.pred  	%p32, %p31, %p29;
	shr.u32 	%r70, %r9, 1;
	setp.eq.s32	%p33, %r7, %r70;
	or.pred  	%p34, %p32, %p33;
	add.s32 	%r107, %r7, 1;
	mov.u32 	%r120, %r9;
	@!%p34 bra 	BB2_42;
	bra.uni 	BB2_29;

BB2_29:
	div.u32 	%r71, %r121, %r107;
	cvt.rn.f64.u32	%fd17, %r71;
	setp.eq.s32	%p35, %r7, 0;
	mov.f64 	%fd118, 0d0000000000000000;
	@%p35 bra 	BB2_38;

	and.b32  	%r73, %r7, 3;
	setp.eq.s32	%p36, %r73, 0;
	mov.f64 	%fd118, 0d0000000000000000;
	mov.u32 	%r119, 0;
	@%p36 bra 	BB2_36;

	setp.eq.s32	%p37, %r73, 1;
	mov.f64 	%fd115, 0d0000000000000000;
	mov.u32 	%r117, 0;
	@%p37 bra 	BB2_35;

	setp.eq.s32	%p38, %r73, 2;
	mov.f64 	%fd114, 0d0000000000000000;
	mov.u32 	%r116, 0;
	@%p38 bra 	BB2_34;

	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd22, %rd21;
	ld.local.u32 	%r79, [%rd22];
	cvt.rn.f64.u32	%fd93, %r79;
	sub.f64 	%fd94, %fd93, %fd17;
	fma.rn.f64 	%fd114, %fd94, %fd94, 0d0000000000000000;
	mov.u32 	%r116, 1;

BB2_34:
	add.u64 	%rd23, %SP, 0;
	cvta.to.local.u64 	%rd24, %rd23;
	mul.wide.u32 	%rd25, %r116, 4;
	add.s64 	%rd26, %rd24, %rd25;
	ld.local.u32 	%r80, [%rd26];
	cvt.rn.f64.u32	%fd95, %r80;
	sub.f64 	%fd96, %fd95, %fd17;
	fma.rn.f64 	%fd115, %fd96, %fd96, %fd114;
	add.s32 	%r117, %r116, 1;

BB2_35:
	add.u64 	%rd27, %SP, 0;
	cvta.to.local.u64 	%rd28, %rd27;
	mul.wide.u32 	%rd29, %r117, 4;
	add.s64 	%rd30, %rd28, %rd29;
	ld.local.u32 	%r81, [%rd30];
	cvt.rn.f64.u32	%fd97, %r81;
	sub.f64 	%fd98, %fd97, %fd17;
	fma.rn.f64 	%fd118, %fd98, %fd98, %fd115;
	add.s32 	%r119, %r117, 1;

BB2_36:
	add.u64 	%rd31, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd31;
	setp.lt.u32	%p39, %r7, 4;
	@%p39 bra 	BB2_38;

BB2_37:
	mul.wide.u32 	%rd32, %r119, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.local.u32 	%r82, [%rd33];
	cvt.rn.f64.u32	%fd99, %r82;
	sub.f64 	%fd100, %fd99, %fd17;
	fma.rn.f64 	%fd101, %fd100, %fd100, %fd118;
	add.s32 	%r83, %r119, 1;
	mul.wide.u32 	%rd34, %r83, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.local.u32 	%r84, [%rd35];
	cvt.rn.f64.u32	%fd102, %r84;
	sub.f64 	%fd103, %fd102, %fd17;
	fma.rn.f64 	%fd104, %fd103, %fd103, %fd101;
	add.s32 	%r85, %r119, 2;
	mul.wide.u32 	%rd36, %r85, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r86, [%rd37];
	cvt.rn.f64.u32	%fd105, %r86;
	sub.f64 	%fd106, %fd105, %fd17;
	fma.rn.f64 	%fd107, %fd106, %fd106, %fd104;
	add.s32 	%r87, %r119, 3;
	mul.wide.u32 	%rd38, %r87, 4;
	add.s64 	%rd39, %rd1, %rd38;
	ld.local.u32 	%r88, [%rd39];
	cvt.rn.f64.u32	%fd108, %r88;
	sub.f64 	%fd109, %fd108, %fd17;
	fma.rn.f64 	%fd118, %fd109, %fd109, %fd107;
	add.s32 	%r119, %r119, 4;
	setp.lt.u32	%p40, %r119, %r7;
	@%p40 bra 	BB2_37;

BB2_38:
	add.s32 	%r89, %r7, -1;
	cvt.rn.f64.u32	%fd110, %r89;
	div.rn.f64 	%fd111, %fd118, %fd110;
	div.rn.f64 	%fd27, %fd111, %fd17;
	setp.ne.s32	%p41, %r7, 1;
	@%p41 bra 	BB2_40;

	// inline asm
	activemask.b32 %r90;
	// inline asm
	add.u64 	%rd40, %SP, 0;
	cvta.to.local.u64 	%rd41, %rd40;
	ld.local.v2.u32 	{%r92, %r93}, [%rd41];
	setp.eq.s32	%p42, %r92, %r93;
	vote.sync.all.pred 	%p43, %p42, %r90;
	mov.u32 	%r120, 2;
	@%p43 bra 	BB2_42;

BB2_40:
	// inline asm
	activemask.b32 %r97;
	// inline asm
	setp.lt.f64	%p44, %fd27, 0d3F847AE140000000;
	vote.sync.all.pred 	%p45, %p44, %r97;
	mov.u32 	%r120, %r107;
	@%p45 bra 	BB2_42;

	// inline asm
	activemask.b32 %r99;
	// inline asm
	setp.le.f64	%p46, %fd27, 0d3FF0000000000000;
	vote.sync.all.pred 	%p47, %p46, %r99;
	setp.ge.u32	%p48, %r7, %r70;
	and.pred  	%p49, %p47, %p48;
	selp.b32	%r120, %r107, %r9, %p49;

BB2_42:
	setp.lt.u32	%p50, %r107, %r120;
	@%p50 bra 	BB2_7;

BB2_43:
	ld.param.u32 	%r106, [fractalRenderMainDouble_param_1];
	mul.lo.s32 	%r102, %r5, %r106;
	cvt.u64.u32	%rd42, %r102;
	cvta.to.global.u64 	%rd43, %rd2;
	add.s64 	%rd44, %rd43, %rd42;
	div.u32 	%r103, %r121, %r120;
	cvt.rn.f32.u32	%f2, %r103;
	mul.wide.u32 	%rd45, %r4, 16;
	add.s64 	%rd46, %rd44, %rd45;
	st.global.f32 	[%rd46], %f2;
	cvt.rn.f32.u32	%f3, %r120;
	st.global.f32 	[%rd46+4], %f3;
	st.global.u32 	[%rd46+12], %r60;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd46+8], %rs1;
	setp.gt.f32	%p51, %f3, 0f00000000;
	@%p51 bra 	BB2_45;

	mov.u64 	%rd47, $str2;
	cvta.global.u64 	%rd48, %rd47;
	mov.u64 	%rd49, $str1;
	cvta.global.u64 	%rd50, %rd49;
	mov.u32 	%r105, 206;
	mov.u64 	%rd51, 0;
	mov.u64 	%rd52, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd48;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r105;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd51;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd52;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB2_45:
	ret;
}

	// .globl	fractalRenderAdvancedFloat
.visible .entry fractalRenderAdvancedFloat(
	.param .u64 fractalRenderAdvancedFloat_param_0,
	.param .u32 fractalRenderAdvancedFloat_param_1,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_2[8],
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_3[16],
	.param .u32 fractalRenderAdvancedFloat_param_4,
	.param .u32 fractalRenderAdvancedFloat_param_5,
	.param .u32 fractalRenderAdvancedFloat_param_6,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_7[16],
	.param .u64 fractalRenderAdvancedFloat_param_8,
	.param .u32 fractalRenderAdvancedFloat_param_9,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<78>;
	.reg .b16 	%rs<10>;
	.reg .f32 	%f<223>;
	.reg .b32 	%r<158>;
	.reg .b64 	%rd<71>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderAdvancedFloat_param_0];
	ld.param.u32 	%r42, [fractalRenderAdvancedFloat_param_1];
	ld.param.u32 	%r44, [fractalRenderAdvancedFloat_param_2+4];
	ld.param.u32 	%r43, [fractalRenderAdvancedFloat_param_2];
	ld.param.f32 	%f57, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f56, [fractalRenderAdvancedFloat_param_3+8];
	ld.param.f32 	%f55, [fractalRenderAdvancedFloat_param_3+4];
	ld.param.f32 	%f54, [fractalRenderAdvancedFloat_param_3];
	ld.param.u32 	%r45, [fractalRenderAdvancedFloat_param_4];
	ld.param.u32 	%r46, [fractalRenderAdvancedFloat_param_5];
	ld.param.u32 	%r47, [fractalRenderAdvancedFloat_param_6];
	ld.param.f32 	%f61, [fractalRenderAdvancedFloat_param_7+12];
	ld.param.f32 	%f60, [fractalRenderAdvancedFloat_param_7+8];
	ld.param.f32 	%f59, [fractalRenderAdvancedFloat_param_7+4];
	ld.param.f32 	%f58, [fractalRenderAdvancedFloat_param_7];
	ld.param.u64 	%rd3, [fractalRenderAdvancedFloat_param_8];
	ld.param.u32 	%r48, [fractalRenderAdvancedFloat_param_9];
	ld.param.u32 	%r50, [fractalRenderAdvancedFloat_param_10+4];
	ld.param.u32 	%r49, [fractalRenderAdvancedFloat_param_10];
	mov.u32 	%r51, %ntid.x;
	setp.eq.s32	%p5, %r51, 32;
	@%p5 bra 	BB3_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r52, 71;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r52;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB3_2:
	mov.u32 	%r53, %tid.y;
	mov.u32 	%r55, %tid.x;
	mad.lo.s32 	%r56, %r51, %r53, %r55;
	and.b32  	%r57, %r56, 15;
	shl.b32 	%r58, %r51, 2;
	rem.u32 	%r59, %r56, %r58;
	sub.s32 	%r60, %r59, %r57;
	shr.u32 	%r61, %r60, 2;
	and.b32  	%r62, %r56, 3;
	add.s32 	%r63, %r61, %r62;
	div.u32 	%r64, %r56, %r58;
	shl.b32 	%r65, %r64, 2;
	bfe.u32 	%r66, %r56, 2, 2;
	add.s32 	%r67, %r65, %r66;
	mov.u32 	%r68, %ctaid.x;
	mad.lo.s32 	%r3, %r68, %r51, %r63;
	mov.u32 	%r69, %ctaid.y;
	mov.u32 	%r70, %ntid.y;
	mad.lo.s32 	%r4, %r69, %r70, %r67;
	setp.lt.u32	%p6, %r3, %r43;
	setp.lt.u32	%p7, %r4, %r44;
	and.pred  	%p8, %p6, %p7;
	@!%p8 bra 	BB3_66;
	bra.uni 	BB3_3;

BB3_3:
	and.b32  	%r72, %r47, 24;
	mov.u16 	%rs8, 0;
	mov.u32 	%r139, 0;
	mov.f32 	%f209, 0f00000000;
	setp.ne.s32	%p9, %r72, 8;
	@%p9 bra 	BB3_4;

	cvt.rn.f32.u32	%f64, %r3;
	sub.f32 	%f65, %f60, %f58;
	cvt.rn.f32.u32	%f66, %r43;
	div.rn.f32 	%f67, %f65, %f66;
	sub.f32 	%f68, %f61, %f59;
	cvt.rn.f32.u32	%f69, %r44;
	div.rn.f32 	%f70, %f68, %f69;
	neg.f32 	%f71, %f70;
	sub.f32 	%f72, %f54, %f58;
	div.rn.f32 	%f73, %f72, %f67;
	sub.f32 	%f74, %f57, %f61;
	div.rn.f32 	%f75, %f74, %f71;
	sub.f32 	%f76, %f56, %f54;
	div.rn.f32 	%f77, %f76, %f65;
	sub.f32 	%f78, %f57, %f55;
	div.rn.f32 	%f79, %f78, %f68;
	cvt.rn.f32.u32	%f80, %r4;
	fma.rn.f32 	%f5, %f64, %f77, %f73;
	fma.rn.f32 	%f6, %f80, %f79, %f75;
	abs.f32 	%f81, %f5;
	mov.b32 	 %r73, %f5;
	and.b32  	%r74, %r73, -2147483648;
	or.b32  	%r75, %r74, 1056964608;
	mov.b32 	 %f82, %r75;
	add.f32 	%f83, %f5, %f82;
	cvt.rzi.f32.f32	%f84, %f83;
	setp.gt.f32	%p10, %f81, 0f4B000000;
	selp.f32	%f207, %f5, %f84, %p10;
	setp.geu.f32	%p11, %f81, 0f3F000000;
	@%p11 bra 	BB3_7;

	cvt.rzi.f32.f32	%f207, %f5;

BB3_7:
	cvt.rzi.s32.f32	%r5, %f207;
	mov.b32 	 %r76, %f6;
	and.b32  	%r77, %r76, -2147483648;
	or.b32  	%r78, %r77, 1056964608;
	mov.b32 	 %f85, %r78;
	add.f32 	%f86, %f6, %f85;
	cvt.rzi.f32.f32	%f87, %f86;
	abs.f32 	%f88, %f6;
	setp.gt.f32	%p12, %f88, 0f4B000000;
	selp.f32	%f208, %f6, %f87, %p12;
	setp.geu.f32	%p13, %f88, 0f3F000000;
	@%p13 bra 	BB3_9;

	cvt.rzi.f32.f32	%f208, %f6;

BB3_9:
	setp.lt.u32	%p14, %r5, %r43;
	setp.gt.s32	%p15, %r5, -1;
	and.pred  	%p16, %p15, %p14;
	cvt.rzi.s32.f32	%r6, %f208;
	setp.gt.s32	%p17, %r6, -1;
	and.pred  	%p18, %p16, %p17;
	setp.lt.u32	%p19, %r6, %r44;
	and.pred  	%p20, %p19, %p18;
	mov.f32 	%f210, %f209;
	@!%p20 bra 	BB3_11;
	bra.uni 	BB3_10;

BB3_10:
	cvta.to.global.u64 	%rd10, %rd3;
	mul.lo.s32 	%r80, %r6, %r48;
	cvt.u64.u32	%rd11, %r80;
	add.s64 	%rd12, %rd10, %rd11;
	mul.wide.u32 	%rd13, %r5, 16;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.f32 	%f209, [%rd14];
	ld.global.f32 	%f210, [%rd14+4];
	ld.global.u32 	%r139, [%rd14+12];
	mov.u16 	%rs8, 1;
	bra.uni 	BB3_11;

BB3_4:
	mov.f32 	%f210, %f209;

BB3_11:
	and.b32  	%r81, %r47, 20;
	setp.eq.s32	%p21, %r81, 20;
	@%p21 bra 	BB3_13;
	bra.uni 	BB3_12;

BB3_13:
	and.b32  	%r82, %r3, -8;
	cvt.rn.f32.u32	%f91, %r82;
	and.b32  	%r83, %r4, -4;
	cvt.rn.f32.u32	%f92, %r83;
	cvt.rn.f32.u32	%f93, %r49;
	sub.f32 	%f94, %f93, %f91;
	cvt.rn.f32.u32	%f95, %r50;
	sub.f32 	%f96, %f95, %f92;
	mul.f32 	%f97, %f96, %f96;
	fma.rn.f32 	%f98, %f94, %f94, %f97;
	sqrt.rn.f32 	%f99, %f98;
	mul.f32 	%f100, %f99, 0f3CD94079;
	ld.global.f32 	%f101, [screenDistance];
	div.rn.f32 	%f17, %f100, %f101;
	abs.f32 	%f18, %f17;
	setp.leu.f32	%p25, %f18, 0f3F800000;
	mov.f32 	%f211, %f18;
	@%p25 bra 	BB3_15;

	rcp.rn.f32 	%f211, %f18;

BB3_15:
	mul.rn.f32 	%f102, %f211, %f211;
	mov.f32 	%f103, 0fC0B59883;
	mov.f32 	%f104, 0fBF52C7EA;
	fma.rn.f32 	%f105, %f102, %f104, %f103;
	mov.f32 	%f106, 0fC0D21907;
	fma.rn.f32 	%f107, %f105, %f102, %f106;
	mul.f32 	%f108, %f102, %f107;
	mul.f32 	%f109, %f211, %f108;
	add.f32 	%f110, %f102, 0f41355DC0;
	mov.f32 	%f111, 0f41E6BD60;
	fma.rn.f32 	%f112, %f110, %f102, %f111;
	mov.f32 	%f113, 0f419D92C8;
	fma.rn.f32 	%f114, %f112, %f102, %f113;
	rcp.rn.f32 	%f115, %f114;
	fma.rn.f32 	%f116, %f109, %f115, %f211;
	mov.f32 	%f117, 0f3FC90FDB;
	sub.f32 	%f118, %f117, %f116;
	setp.gt.f32	%p26, %f18, 0f3F800000;
	selp.f32	%f119, %f118, %f116, %p26;
	mov.b32 	 %r84, %f119;
	mov.b32 	 %r85, %f17;
	and.b32  	%r86, %r85, -2147483648;
	or.b32  	%r87, %r84, %r86;
	mov.b32 	 %f120, %r87;
	setp.gtu.f32	%p27, %f18, 0f7F800000;
	selp.f32	%f121, %f119, %f120, %p27;
	mul.f32 	%f122, %f121, 0f43340000;
	div.rn.f32 	%f21, %f122, 0f40490FDB;
	setp.ge.f32	%p28, %f21, 0f00000000;
	@%p28 bra 	BB3_17;

	mov.u64 	%rd15, $str5;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r88, 255;
	mov.u64 	%rd19, 0;
	mov.u64 	%rd20, 2;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r88;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd20;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB3_17:
	fma.rn.f32 	%f123, %f21, 0fBC964FDA, 0f3F8CEADD;
	setp.gtu.f32	%p29, %f21, 0f40B00000;
	selp.f32	%f124, %f123, 0f3F800000, %p29;
	cvt.rn.f32.u32	%f125, %r46;
	mul.f32 	%f126, %f125, %f124;
	cvt.rzi.u32.f32	%r154, %f126;
	setp.gtu.f32	%p30, %f21, 0f42700000;
	@%p30 bra 	BB3_19;

	mov.u32 	%r89, 1;
	max.u32 	%r154, %r89, %r154;
	bra.uni 	BB3_19;

BB3_12:
	setp.eq.s32	%p22, %r46, 0;
	setp.eq.s16	%p23, %rs8, 0;
	and.pred  	%p24, %p22, %p23;
	selp.b32	%r154, 1, %r46, %p24;

BB3_19:
	mov.u16 	%rs9, 1;
	setp.ne.s16	%p31, %rs8, 0;
	@%p31 bra 	BB3_64;

	setp.ne.s32	%p32, %r154, 0;
	@%p32 bra 	BB3_22;

	mov.u64 	%rd21, $str6;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r90, 345;
	mov.u64 	%rd25, 0;
	mov.u64 	%rd26, 2;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r90;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB3_22:
	cvt.rn.f32.u32	%f127, %r43;
	sub.f32 	%f128, %f56, %f54;
	div.rn.f32 	%f22, %f128, %f127;
	cvt.rn.f32.u32	%f129, %r44;
	sub.f32 	%f130, %f57, %f55;
	div.rn.f32 	%f23, %f130, %f129;
	setp.lt.u32	%p33, %r154, 65;
	@%p33 bra 	BB3_24;

	mov.u64 	%rd27, $str8;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, $str1;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r91, 119;
	mov.u64 	%rd31, 0;
	mov.u64 	%rd32, 2;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r91;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB3_24:
	setp.eq.s32	%p34, %r154, 0;
	cvt.rn.f32.u32	%f210, %r154;
	mov.u32 	%r139, 0;
	@%p34 bra 	BB3_25;

	cvt.rn.f32.u32	%f25, %r3;
	cvt.rn.f32.u32	%f26, %r4;
	mul.wide.u32 	%rd33, %r45, -858993459;
	shr.u64 	%rd34, %rd33, 35;
	cvt.u32.u64	%r13, %rd34;
	mov.u32 	%r95, 0;
	mov.u32 	%r141, %r95;
	mov.u32 	%r155, %r95;

BB3_27:
	mov.u32 	%r16, %r154;
	mov.u32 	%r14, %r141;
	cvt.rn.f32.u32	%f131, %r14;
	div.rn.f32 	%f132, %f131, %f210;
	add.f32 	%f133, %f25, %f132;
	add.f32 	%f134, %f26, %f132;
	neg.f32 	%f135, %f134;
	fma.rn.f32 	%f214, %f22, %f133, %f54;
	fma.rn.f32 	%f213, %f23, %f135, %f57;
	setp.eq.s32	%p35, %r45, 0;
	mov.u32 	%r144, 10;
	mov.u32 	%r145, %r95;
	@%p35 bra 	BB3_39;

BB3_28:
	mul.f32 	%f136, %f213, %f213;
	mul.f32 	%f137, %f214, %f214;
	sub.f32 	%f138, %f137, %f136;
	mul.f32 	%f139, %f214, %f213;
	fma.rn.f32 	%f140, %f214, %f213, %f139;
	mul.f32 	%f141, %f214, %f138;
	mul.f32 	%f142, %f213, %f140;
	sub.f32 	%f143, %f141, %f142;
	mul.f32 	%f144, %f214, %f140;
	fma.rn.f32 	%f145, %f213, %f138, %f144;
	add.f32 	%f146, %f143, 0fBF800000;
	mul.f32 	%f147, %f138, 0f40400000;
	mul.f32 	%f148, %f140, 0f40400000;
	abs.f32 	%f149, %f147;
	abs.f32 	%f150, %f148;
	add.f32 	%f151, %f149, %f150;
	rcp.rn.f32 	%f152, %f151;
	mul.f32 	%f153, %f146, %f152;
	mul.f32 	%f154, %f145, %f152;
	mul.f32 	%f155, %f147, %f152;
	mul.f32 	%f156, %f148, %f152;
	mul.f32 	%f157, %f156, %f156;
	fma.rn.f32 	%f158, %f155, %f155, %f157;
	rcp.rn.f32 	%f159, %f158;
	mul.f32 	%f160, %f154, %f156;
	fma.rn.f32 	%f161, %f153, %f155, %f160;
	mul.f32 	%f162, %f159, %f161;
	mul.f32 	%f163, %f154, %f155;
	mul.f32 	%f164, %f153, %f156;
	sub.f32 	%f165, %f163, %f164;
	mul.f32 	%f166, %f159, %f165;
	sub.f32 	%f214, %f214, %f162;
	sub.f32 	%f213, %f213, %f166;
	add.s32 	%r145, %r145, 1;
	setp.ne.s32	%p36, %r145, %r144;
	@%p36 bra 	BB3_38;

	add.f32 	%f167, %f214, 0fBF800000;
	abs.f32 	%f168, %f167;
	setp.geu.f32	%p37, %f168, 0f38D1B717;
	@%p37 bra 	BB3_31;

	abs.f32 	%f169, %f213;
	setp.lt.f32	%p38, %f169, 0f38D1B717;
	mov.u32 	%r149, 1;
	@%p38 bra 	BB3_36;

BB3_31:
	add.f32 	%f170, %f214, 0f3F000000;
	abs.f32 	%f34, %f170;
	setp.geu.f32	%p39, %f34, 0f38D1B717;
	@%p39 bra 	BB3_33;

	add.f32 	%f171, %f213, 0fBF5DB3D7;
	abs.f32 	%f172, %f171;
	setp.lt.f32	%p40, %f172, 0f38D1B717;
	mov.u32 	%r149, 2;
	@%p40 bra 	BB3_36;

BB3_33:
	mov.pred 	%p76, 0;
	@%p39 bra 	BB3_35;

	add.f32 	%f173, %f213, 0f3F5DB3D7;
	abs.f32 	%f174, %f173;
	setp.lt.f32	%p76, %f174, 0f38D1B717;

BB3_35:
	selp.b32	%r149, 3, 0, %p76;

BB3_36:
	setp.ne.s32	%p43, %r149, 0;
	@%p43 bra 	BB3_46;

	add.s32 	%r22, %r13, %r144;
	mov.u32 	%r145, %r144;
	mov.u32 	%r144, %r22;

BB3_38:
	setp.lt.u32	%p44, %r145, %r45;
	@%p44 bra 	BB3_28;

BB3_39:
	add.f32 	%f175, %f214, 0fBF800000;
	abs.f32 	%f176, %f175;
	setp.geu.f32	%p45, %f176, 0f38D1B717;
	@%p45 bra 	BB3_41;

	abs.f32 	%f177, %f213;
	setp.lt.f32	%p46, %f177, 0f38D1B717;
	mov.u32 	%r149, 1;
	@%p46 bra 	BB3_46;

BB3_41:
	add.f32 	%f178, %f214, 0f3F000000;
	abs.f32 	%f37, %f178;
	setp.geu.f32	%p47, %f37, 0f38D1B717;
	@%p47 bra 	BB3_43;

	add.f32 	%f179, %f213, 0fBF5DB3D7;
	abs.f32 	%f180, %f179;
	setp.lt.f32	%p48, %f180, 0f38D1B717;
	mov.u32 	%r149, 2;
	@%p48 bra 	BB3_46;

BB3_43:
	mov.pred 	%p77, 0;
	@%p47 bra 	BB3_45;

	add.f32 	%f181, %f213, 0f3F5DB3D7;
	abs.f32 	%f182, %f181;
	setp.lt.f32	%p77, %f182, 0f38D1B717;

BB3_45:
	selp.b32	%r149, 3, 0, %p77;

BB3_46:
	cvt.rn.f32.u32	%f183, %r149;
	cvt.rzi.u32.f32	%r27, %f183;
	add.s32 	%r155, %r27, %r155;
	setp.gt.u32	%p51, %r14, 9;
	@%p51 bra 	BB3_48;

	add.u64 	%rd35, %SP, 0;
	cvta.to.local.u64 	%rd36, %rd35;
	mul.wide.u32 	%rd37, %r14, 4;
	add.s64 	%rd38, %rd36, %rd37;
	st.local.u32 	[%rd38], %r27;

BB3_48:
	setp.lt.u32	%p52, %r14, 10;
	and.b32  	%r102, %r47, 1;
	setp.eq.b32	%p53, %r102, 1;
	setp.ne.s32	%p54, %r14, 0;
	and.pred  	%p55, %p52, %p54;
	and.pred  	%p56, %p55, %p53;
	shr.u32 	%r103, %r16, 1;
	setp.eq.s32	%p57, %r14, %r103;
	or.pred  	%p58, %p56, %p57;
	add.s32 	%r141, %r14, 1;
	mov.u32 	%r154, %r16;
	@!%p58 bra 	BB3_62;
	bra.uni 	BB3_49;

BB3_49:
	div.u32 	%r104, %r155, %r141;
	cvt.rn.f32.u32	%f38, %r104;
	setp.eq.s32	%p59, %r14, 0;
	mov.f32 	%f219, 0f00000000;
	@%p59 bra 	BB3_58;

	and.b32  	%r106, %r14, 3;
	setp.eq.s32	%p60, %r106, 0;
	mov.f32 	%f219, 0f00000000;
	mov.u32 	%r153, 0;
	@%p60 bra 	BB3_56;

	setp.eq.s32	%p61, %r106, 1;
	mov.f32 	%f216, 0f00000000;
	mov.u32 	%r151, 0;
	@%p61 bra 	BB3_55;

	setp.eq.s32	%p62, %r106, 2;
	mov.f32 	%f215, 0f00000000;
	mov.u32 	%r150, 0;
	@%p62 bra 	BB3_54;

	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd39;
	ld.local.u32 	%r112, [%rd40];
	cvt.rn.f32.u32	%f188, %r112;
	sub.f32 	%f189, %f188, %f38;
	fma.rn.f32 	%f215, %f189, %f189, 0f00000000;
	mov.u32 	%r150, 1;

BB3_54:
	add.u64 	%rd41, %SP, 0;
	cvta.to.local.u64 	%rd42, %rd41;
	mul.wide.u32 	%rd43, %r150, 4;
	add.s64 	%rd44, %rd42, %rd43;
	ld.local.u32 	%r113, [%rd44];
	cvt.rn.f32.u32	%f190, %r113;
	sub.f32 	%f191, %f190, %f38;
	fma.rn.f32 	%f216, %f191, %f191, %f215;
	add.s32 	%r151, %r150, 1;

BB3_55:
	add.u64 	%rd45, %SP, 0;
	cvta.to.local.u64 	%rd46, %rd45;
	mul.wide.u32 	%rd47, %r151, 4;
	add.s64 	%rd48, %rd46, %rd47;
	ld.local.u32 	%r114, [%rd48];
	cvt.rn.f32.u32	%f192, %r114;
	sub.f32 	%f193, %f192, %f38;
	fma.rn.f32 	%f219, %f193, %f193, %f216;
	add.s32 	%r153, %r151, 1;

BB3_56:
	add.u64 	%rd49, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd49;
	setp.lt.u32	%p63, %r14, 4;
	@%p63 bra 	BB3_58;

BB3_57:
	mul.wide.u32 	%rd50, %r153, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.u32 	%r115, [%rd51];
	cvt.rn.f32.u32	%f194, %r115;
	sub.f32 	%f195, %f194, %f38;
	fma.rn.f32 	%f196, %f195, %f195, %f219;
	add.s32 	%r116, %r153, 1;
	mul.wide.u32 	%rd52, %r116, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.u32 	%r117, [%rd53];
	cvt.rn.f32.u32	%f197, %r117;
	sub.f32 	%f198, %f197, %f38;
	fma.rn.f32 	%f199, %f198, %f198, %f196;
	add.s32 	%r118, %r153, 2;
	mul.wide.u32 	%rd54, %r118, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.u32 	%r119, [%rd55];
	cvt.rn.f32.u32	%f200, %r119;
	sub.f32 	%f201, %f200, %f38;
	fma.rn.f32 	%f202, %f201, %f201, %f199;
	add.s32 	%r120, %r153, 3;
	mul.wide.u32 	%rd56, %r120, 4;
	add.s64 	%rd57, %rd1, %rd56;
	ld.local.u32 	%r121, [%rd57];
	cvt.rn.f32.u32	%f203, %r121;
	sub.f32 	%f204, %f203, %f38;
	fma.rn.f32 	%f219, %f204, %f204, %f202;
	add.s32 	%r153, %r153, 4;
	setp.lt.u32	%p64, %r153, %r14;
	@%p64 bra 	BB3_57;

BB3_58:
	add.s32 	%r122, %r14, -1;
	cvt.rn.f32.u32	%f205, %r122;
	div.rn.f32 	%f206, %f219, %f205;
	div.rn.f32 	%f48, %f206, %f38;
	setp.ne.s32	%p65, %r14, 1;
	@%p65 bra 	BB3_60;

	// inline asm
	activemask.b32 %r123;
	// inline asm
	add.u64 	%rd58, %SP, 0;
	cvta.to.local.u64 	%rd59, %rd58;
	ld.local.v2.u32 	{%r125, %r126}, [%rd59];
	setp.eq.s32	%p66, %r125, %r126;
	vote.sync.all.pred 	%p67, %p66, %r123;
	mov.u32 	%r154, 2;
	@%p67 bra 	BB3_62;

BB3_60:
	// inline asm
	activemask.b32 %r130;
	// inline asm
	setp.lt.f32	%p68, %f48, 0f3C23D70A;
	vote.sync.all.pred 	%p69, %p68, %r130;
	mov.u32 	%r154, %r141;
	@%p69 bra 	BB3_62;

	// inline asm
	activemask.b32 %r132;
	// inline asm
	setp.le.f32	%p70, %f48, 0f3F800000;
	vote.sync.all.pred 	%p71, %p70, %r132;
	setp.ge.u32	%p72, %r14, %r103;
	and.pred  	%p73, %p71, %p72;
	selp.b32	%r154, %r141, %r16, %p73;

BB3_62:
	cvt.rn.f32.u32	%f210, %r154;
	setp.lt.u32	%p74, %r141, %r154;
	@%p74 bra 	BB3_27;
	bra.uni 	BB3_63;

BB3_25:
	mov.u32 	%r155, %r139;
	mov.u32 	%r154, %r139;

BB3_63:
	div.u32 	%r136, %r155, %r154;
	cvt.rn.f32.u32	%f209, %r136;
	mov.u16 	%rs9, 0;

BB3_64:
	mul.lo.s32 	%r137, %r4, %r42;
	cvt.u64.u32	%rd60, %r137;
	cvta.to.global.u64 	%rd61, %rd2;
	add.s64 	%rd62, %rd61, %rd60;
	mul.wide.u32 	%rd63, %r3, 16;
	add.s64 	%rd64, %rd62, %rd63;
	st.global.f32 	[%rd64], %f209;
	st.global.f32 	[%rd64+4], %f210;
	st.global.u32 	[%rd64+12], %r139;
	st.global.u8 	[%rd64+8], %rs9;
	setp.gt.f32	%p75, %f210, 0f00000000;
	@%p75 bra 	BB3_66;

	mov.u64 	%rd65, $str7;
	cvta.global.u64 	%rd66, %rd65;
	mov.u64 	%rd67, $str1;
	cvta.global.u64 	%rd68, %rd67;
	mov.u32 	%r138, 352;
	mov.u64 	%rd69, 0;
	mov.u64 	%rd70, 2;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd66;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd68;
	.param .b32 param2;
	st.param.b32	[param2+0], %r138;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd69;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd70;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB3_66:
	ret;
}

	// .globl	fractalRenderAdvancedDouble
.visible .entry fractalRenderAdvancedDouble(
	.param .u64 fractalRenderAdvancedDouble_param_0,
	.param .u32 fractalRenderAdvancedDouble_param_1,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_2[8],
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_3[32],
	.param .u32 fractalRenderAdvancedDouble_param_4,
	.param .u32 fractalRenderAdvancedDouble_param_5,
	.param .u32 fractalRenderAdvancedDouble_param_6,
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_7[32],
	.param .u64 fractalRenderAdvancedDouble_param_8,
	.param .u32 fractalRenderAdvancedDouble_param_9,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot4[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<78>;
	.reg .b16 	%rs<10>;
	.reg .f32 	%f<60>;
	.reg .b32 	%r<163>;
	.reg .f64 	%fd<158>;
	.reg .b64 	%rd<71>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderAdvancedDouble_param_0];
	ld.param.u32 	%r42, [fractalRenderAdvancedDouble_param_1];
	ld.param.u32 	%r44, [fractalRenderAdvancedDouble_param_2+4];
	ld.param.u32 	%r43, [fractalRenderAdvancedDouble_param_2];
	ld.param.f64 	%fd41, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd40, [fractalRenderAdvancedDouble_param_3+16];
	ld.param.f64 	%fd39, [fractalRenderAdvancedDouble_param_3+8];
	ld.param.f64 	%fd38, [fractalRenderAdvancedDouble_param_3];
	ld.param.u32 	%r45, [fractalRenderAdvancedDouble_param_4];
	ld.param.u32 	%r46, [fractalRenderAdvancedDouble_param_5];
	ld.param.u32 	%r47, [fractalRenderAdvancedDouble_param_6];
	ld.param.f64 	%fd45, [fractalRenderAdvancedDouble_param_7+24];
	ld.param.f64 	%fd44, [fractalRenderAdvancedDouble_param_7+16];
	ld.param.f64 	%fd43, [fractalRenderAdvancedDouble_param_7+8];
	ld.param.f64 	%fd42, [fractalRenderAdvancedDouble_param_7];
	ld.param.u64 	%rd3, [fractalRenderAdvancedDouble_param_8];
	ld.param.u32 	%r48, [fractalRenderAdvancedDouble_param_9];
	ld.param.u32 	%r50, [fractalRenderAdvancedDouble_param_10+4];
	ld.param.u32 	%r49, [fractalRenderAdvancedDouble_param_10];
	mov.u32 	%r51, %ntid.x;
	setp.eq.s32	%p5, %r51, 32;
	@%p5 bra 	BB4_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r52, 71;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r52;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB4_2:
	mov.u32 	%r53, %tid.y;
	mov.u32 	%r55, %tid.x;
	mad.lo.s32 	%r56, %r51, %r53, %r55;
	and.b32  	%r57, %r56, 15;
	shl.b32 	%r58, %r51, 2;
	rem.u32 	%r59, %r56, %r58;
	sub.s32 	%r60, %r59, %r57;
	shr.u32 	%r61, %r60, 2;
	and.b32  	%r62, %r56, 3;
	add.s32 	%r63, %r61, %r62;
	div.u32 	%r64, %r56, %r58;
	shl.b32 	%r65, %r64, 2;
	bfe.u32 	%r66, %r56, 2, 2;
	add.s32 	%r67, %r65, %r66;
	mov.u32 	%r68, %ctaid.x;
	mad.lo.s32 	%r3, %r68, %r51, %r63;
	mov.u32 	%r69, %ctaid.y;
	mov.u32 	%r70, %ntid.y;
	mad.lo.s32 	%r4, %r69, %r70, %r67;
	setp.lt.u32	%p6, %r3, %r43;
	setp.lt.u32	%p7, %r4, %r44;
	and.pred  	%p8, %p6, %p7;
	@!%p8 bra 	BB4_65;
	bra.uni 	BB4_3;

BB4_3:
	and.b32  	%r72, %r47, 24;
	mov.u16 	%rs8, 0;
	mov.u32 	%r144, 0;
	mov.f32 	%f55, 0f00000000;
	setp.ne.s32	%p9, %r72, 8;
	@%p9 bra 	BB4_4;

	cvt.rn.f64.u32	%fd46, %r3;
	sub.f64 	%fd47, %fd44, %fd42;
	cvt.rn.f64.u32	%fd48, %r43;
	div.rn.f64 	%fd49, %fd47, %fd48;
	sub.f64 	%fd50, %fd45, %fd43;
	cvt.rn.f64.u32	%fd51, %r44;
	div.rn.f64 	%fd52, %fd50, %fd51;
	neg.f64 	%fd53, %fd52;
	sub.f64 	%fd54, %fd38, %fd42;
	div.rn.f64 	%fd55, %fd54, %fd49;
	sub.f64 	%fd56, %fd41, %fd45;
	div.rn.f64 	%fd57, %fd56, %fd53;
	sub.f64 	%fd58, %fd40, %fd38;
	div.rn.f64 	%fd59, %fd58, %fd47;
	sub.f64 	%fd60, %fd41, %fd39;
	div.rn.f64 	%fd61, %fd60, %fd50;
	cvt.rn.f64.u32	%fd62, %r4;
	fma.rn.f64 	%fd149, %fd46, %fd59, %fd55;
	fma.rn.f64 	%fd150, %fd62, %fd61, %fd57;
	abs.f64 	%fd7, %fd149;
	setp.ge.f64	%p10, %fd7, 0d4330000000000000;
	@%p10 bra 	BB4_7;

	add.f64 	%fd63, %fd7, 0d3FE0000000000000;
	cvt.rzi.f64.f64	%fd64, %fd63;
	setp.lt.f64	%p11, %fd7, 0d3FE0000000000000;
	selp.f64	%fd65, 0d0000000000000000, %fd64, %p11;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r73, %temp}, %fd65;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r74}, %fd65;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r75}, %fd149;
	}
	and.b32  	%r76, %r75, -2147483648;
	or.b32  	%r77, %r74, %r76;
	mov.b64 	%fd149, {%r73, %r77};

BB4_7:
	cvt.rzi.s32.f64	%r5, %fd149;
	abs.f64 	%fd10, %fd150;
	setp.ge.f64	%p12, %fd10, 0d4330000000000000;
	@%p12 bra 	BB4_9;

	add.f64 	%fd66, %fd10, 0d3FE0000000000000;
	cvt.rzi.f64.f64	%fd67, %fd66;
	setp.lt.f64	%p13, %fd10, 0d3FE0000000000000;
	selp.f64	%fd68, 0d0000000000000000, %fd67, %p13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r78, %temp}, %fd68;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r79}, %fd68;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r80}, %fd150;
	}
	and.b32  	%r81, %r80, -2147483648;
	or.b32  	%r82, %r79, %r81;
	mov.b64 	%fd150, {%r78, %r82};

BB4_9:
	setp.lt.u32	%p14, %r5, %r43;
	setp.gt.s32	%p15, %r5, -1;
	and.pred  	%p16, %p15, %p14;
	cvt.rzi.s32.f64	%r6, %fd150;
	setp.gt.s32	%p17, %r6, -1;
	and.pred  	%p18, %p16, %p17;
	setp.lt.u32	%p19, %r6, %r44;
	and.pred  	%p20, %p19, %p18;
	mov.f32 	%f56, %f55;
	@!%p20 bra 	BB4_11;
	bra.uni 	BB4_10;

BB4_10:
	cvta.to.global.u64 	%rd10, %rd3;
	mul.lo.s32 	%r84, %r6, %r48;
	cvt.u64.u32	%rd11, %r84;
	add.s64 	%rd12, %rd10, %rd11;
	mul.wide.u32 	%rd13, %r5, 16;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.f32 	%f55, [%rd14];
	ld.global.f32 	%f56, [%rd14+4];
	ld.global.u32 	%r144, [%rd14+12];
	mov.u16 	%rs8, 1;
	bra.uni 	BB4_11;

BB4_4:
	mov.f32 	%f56, %f55;

BB4_11:
	and.b32  	%r85, %r47, 20;
	setp.eq.s32	%p21, %r85, 20;
	@%p21 bra 	BB4_13;
	bra.uni 	BB4_12;

BB4_13:
	and.b32  	%r86, %r3, -8;
	cvt.rn.f32.u32	%f18, %r86;
	and.b32  	%r87, %r4, -4;
	cvt.rn.f32.u32	%f19, %r87;
	cvt.rn.f32.u32	%f20, %r49;
	sub.f32 	%f21, %f20, %f18;
	cvt.rn.f32.u32	%f22, %r50;
	sub.f32 	%f23, %f22, %f19;
	mul.f32 	%f24, %f23, %f23;
	fma.rn.f32 	%f25, %f21, %f21, %f24;
	sqrt.rn.f32 	%f26, %f25;
	mul.f32 	%f27, %f26, 0f3CD94079;
	ld.global.f32 	%f28, [screenDistance];
	div.rn.f32 	%f5, %f27, %f28;
	abs.f32 	%f6, %f5;
	setp.leu.f32	%p25, %f6, 0f3F800000;
	mov.f32 	%f57, %f6;
	@%p25 bra 	BB4_15;

	rcp.rn.f32 	%f57, %f6;

BB4_15:
	mul.rn.f32 	%f29, %f57, %f57;
	mov.f32 	%f30, 0fC0B59883;
	mov.f32 	%f31, 0fBF52C7EA;
	fma.rn.f32 	%f32, %f29, %f31, %f30;
	mov.f32 	%f33, 0fC0D21907;
	fma.rn.f32 	%f34, %f32, %f29, %f33;
	mul.f32 	%f35, %f29, %f34;
	mul.f32 	%f36, %f57, %f35;
	add.f32 	%f37, %f29, 0f41355DC0;
	mov.f32 	%f38, 0f41E6BD60;
	fma.rn.f32 	%f39, %f37, %f29, %f38;
	mov.f32 	%f40, 0f419D92C8;
	fma.rn.f32 	%f41, %f39, %f29, %f40;
	rcp.rn.f32 	%f42, %f41;
	fma.rn.f32 	%f43, %f36, %f42, %f57;
	mov.f32 	%f44, 0f3FC90FDB;
	sub.f32 	%f45, %f44, %f43;
	setp.gt.f32	%p26, %f6, 0f3F800000;
	selp.f32	%f46, %f45, %f43, %p26;
	mov.b32 	 %r88, %f46;
	mov.b32 	 %r89, %f5;
	and.b32  	%r90, %r89, -2147483648;
	or.b32  	%r91, %r88, %r90;
	mov.b32 	 %f47, %r91;
	setp.gtu.f32	%p27, %f6, 0f7F800000;
	selp.f32	%f48, %f46, %f47, %p27;
	mul.f32 	%f49, %f48, 0f43340000;
	div.rn.f32 	%f9, %f49, 0f40490FDB;
	setp.ge.f32	%p28, %f9, 0f00000000;
	@%p28 bra 	BB4_17;

	mov.u64 	%rd15, $str5;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r92, 255;
	mov.u64 	%rd19, 0;
	mov.u64 	%rd20, 2;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r92;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd20;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB4_17:
	fma.rn.f32 	%f50, %f9, 0fBC964FDA, 0f3F8CEADD;
	setp.gtu.f32	%p29, %f9, 0f40B00000;
	selp.f32	%f51, %f50, 0f3F800000, %p29;
	cvt.rn.f32.u32	%f52, %r46;
	mul.f32 	%f53, %f52, %f51;
	cvt.rzi.u32.f32	%r145, %f53;
	setp.gtu.f32	%p30, %f9, 0f42700000;
	@%p30 bra 	BB4_19;

	mov.u32 	%r93, 1;
	max.u32 	%r145, %r93, %r145;
	bra.uni 	BB4_19;

BB4_12:
	setp.eq.s32	%p22, %r46, 0;
	setp.eq.s16	%p23, %rs8, 0;
	and.pred  	%p24, %p22, %p23;
	selp.b32	%r145, 1, %r46, %p24;

BB4_19:
	mov.u16 	%rs9, 1;
	setp.ne.s16	%p31, %rs8, 0;
	@%p31 bra 	BB4_63;

	setp.ne.s32	%p32, %r145, 0;
	@%p32 bra 	BB4_22;

	mov.u64 	%rd21, $str6;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r94, 345;
	mov.u64 	%rd25, 0;
	mov.u64 	%rd26, 2;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r94;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 13

BB4_22:
	cvt.rn.f64.u32	%fd69, %r43;
	sub.f64 	%fd70, %fd40, %fd38;
	div.rn.f64 	%fd13, %fd70, %fd69;
	cvt.rn.f64.u32	%fd71, %r44;
	sub.f64 	%fd72, %fd41, %fd39;
	div.rn.f64 	%fd14, %fd72, %fd71;
	setp.lt.u32	%p33, %r145, 65;
	@%p33 bra 	BB4_24;

	mov.u64 	%rd27, $str8;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, $str1;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r95, 119;
	mov.u64 	%rd31, 0;
	mov.u64 	%rd32, 2;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r95;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14

BB4_24:
	setp.eq.s32	%p34, %r145, 0;
	mov.u32 	%r160, 0;
	mov.u32 	%r159, %r160;
	@%p34 bra 	BB4_62;

	cvt.rn.f64.u32	%fd15, %r3;
	cvt.rn.f64.u32	%fd16, %r4;
	mul.wide.u32 	%rd33, %r45, -858993459;
	shr.u64 	%rd34, %rd33, 35;
	cvt.u32.u64	%r13, %rd34;
	mov.u32 	%r99, 0;
	mov.u32 	%r146, %r99;
	mov.u32 	%r160, %r99;
	mov.u32 	%r159, %r145;

BB4_26:
	mov.u32 	%r16, %r159;
	mov.u32 	%r14, %r146;
	cvt.rn.f64.u32	%fd73, %r16;
	cvt.rn.f64.u32	%fd74, %r14;
	div.rn.f64 	%fd75, %fd74, %fd73;
	add.f64 	%fd76, %fd15, %fd75;
	add.f64 	%fd77, %fd16, %fd75;
	neg.f64 	%fd78, %fd77;
	fma.rn.f64 	%fd152, %fd13, %fd76, %fd38;
	fma.rn.f64 	%fd151, %fd14, %fd78, %fd41;
	setp.eq.s32	%p35, %r45, 0;
	mov.u32 	%r149, 10;
	mov.u32 	%r150, %r99;
	@%p35 bra 	BB4_38;

BB4_27:
	mul.f64 	%fd79, %fd151, %fd151;
	mul.f64 	%fd80, %fd152, %fd152;
	sub.f64 	%fd81, %fd80, %fd79;
	mul.f64 	%fd82, %fd152, %fd151;
	fma.rn.f64 	%fd83, %fd152, %fd151, %fd82;
	mul.f64 	%fd84, %fd152, %fd81;
	mul.f64 	%fd85, %fd151, %fd83;
	sub.f64 	%fd86, %fd84, %fd85;
	mul.f64 	%fd87, %fd152, %fd83;
	fma.rn.f64 	%fd88, %fd151, %fd81, %fd87;
	add.f64 	%fd89, %fd86, 0dBFF0000000000000;
	mul.f64 	%fd90, %fd81, 0d4008000000000000;
	mul.f64 	%fd91, %fd83, 0d4008000000000000;
	abs.f64 	%fd92, %fd90;
	abs.f64 	%fd93, %fd91;
	add.f64 	%fd94, %fd92, %fd93;
	rcp.rn.f64 	%fd95, %fd94;
	mul.f64 	%fd96, %fd89, %fd95;
	mul.f64 	%fd97, %fd88, %fd95;
	mul.f64 	%fd98, %fd90, %fd95;
	mul.f64 	%fd99, %fd91, %fd95;
	mul.f64 	%fd100, %fd99, %fd99;
	fma.rn.f64 	%fd101, %fd98, %fd98, %fd100;
	rcp.rn.f64 	%fd102, %fd101;
	mul.f64 	%fd103, %fd97, %fd99;
	fma.rn.f64 	%fd104, %fd96, %fd98, %fd103;
	mul.f64 	%fd105, %fd102, %fd104;
	mul.f64 	%fd106, %fd97, %fd98;
	mul.f64 	%fd107, %fd96, %fd99;
	sub.f64 	%fd108, %fd106, %fd107;
	mul.f64 	%fd109, %fd102, %fd108;
	sub.f64 	%fd152, %fd152, %fd105;
	sub.f64 	%fd151, %fd151, %fd109;
	add.s32 	%r150, %r150, 1;
	setp.ne.s32	%p36, %r150, %r149;
	@%p36 bra 	BB4_37;

	add.f64 	%fd110, %fd152, 0dBFF0000000000000;
	abs.f64 	%fd111, %fd110;
	setp.geu.f64	%p37, %fd111, 0d3F1A36E2EB1C432D;
	@%p37 bra 	BB4_30;

	abs.f64 	%fd112, %fd151;
	setp.lt.f64	%p38, %fd112, 0d3F1A36E2EB1C432D;
	mov.u32 	%r154, 1;
	@%p38 bra 	BB4_35;

BB4_30:
	add.f64 	%fd113, %fd152, 0d3FE0000000000000;
	abs.f64 	%fd23, %fd113;
	setp.geu.f64	%p39, %fd23, 0d3F1A36E2EB1C432D;
	@%p39 bra 	BB4_32;

	add.f64 	%fd114, %fd151, 0dBFEBB67AE857B07F;
	abs.f64 	%fd115, %fd114;
	setp.lt.f64	%p40, %fd115, 0d3F1A36E2EB1C432D;
	mov.u32 	%r154, 2;
	@%p40 bra 	BB4_35;

BB4_32:
	mov.pred 	%p76, 0;
	@%p39 bra 	BB4_34;

	add.f64 	%fd116, %fd151, 0d3FEBB67AE857B07F;
	abs.f64 	%fd117, %fd116;
	setp.lt.f64	%p76, %fd117, 0d3F1A36E2EB1C432D;

BB4_34:
	selp.b32	%r154, 3, 0, %p76;

BB4_35:
	setp.ne.s32	%p43, %r154, 0;
	@%p43 bra 	BB4_45;

	add.s32 	%r22, %r13, %r149;
	mov.u32 	%r150, %r149;
	mov.u32 	%r149, %r22;

BB4_37:
	setp.lt.u32	%p44, %r150, %r45;
	@%p44 bra 	BB4_27;

BB4_38:
	add.f64 	%fd118, %fd152, 0dBFF0000000000000;
	abs.f64 	%fd119, %fd118;
	setp.geu.f64	%p45, %fd119, 0d3F1A36E2EB1C432D;
	@%p45 bra 	BB4_40;

	abs.f64 	%fd120, %fd151;
	setp.lt.f64	%p46, %fd120, 0d3F1A36E2EB1C432D;
	mov.u32 	%r154, 1;
	@%p46 bra 	BB4_45;

BB4_40:
	add.f64 	%fd121, %fd152, 0d3FE0000000000000;
	abs.f64 	%fd26, %fd121;
	setp.geu.f64	%p47, %fd26, 0d3F1A36E2EB1C432D;
	@%p47 bra 	BB4_42;

	add.f64 	%fd122, %fd151, 0dBFEBB67AE857B07F;
	abs.f64 	%fd123, %fd122;
	setp.lt.f64	%p48, %fd123, 0d3F1A36E2EB1C432D;
	mov.u32 	%r154, 2;
	@%p48 bra 	BB4_45;

BB4_42:
	mov.pred 	%p77, 0;
	@%p47 bra 	BB4_44;

	add.f64 	%fd124, %fd151, 0d3FEBB67AE857B07F;
	abs.f64 	%fd125, %fd124;
	setp.lt.f64	%p77, %fd125, 0d3F1A36E2EB1C432D;

BB4_44:
	selp.b32	%r154, 3, 0, %p77;

BB4_45:
	cvt.rn.f32.u32	%f54, %r154;
	cvt.rzi.u32.f32	%r27, %f54;
	add.s32 	%r160, %r27, %r160;
	setp.gt.u32	%p51, %r14, 9;
	@%p51 bra 	BB4_47;

	add.u64 	%rd35, %SP, 0;
	cvta.to.local.u64 	%rd36, %rd35;
	mul.wide.u32 	%rd37, %r14, 4;
	add.s64 	%rd38, %rd36, %rd37;
	st.local.u32 	[%rd38], %r27;

BB4_47:
	setp.lt.u32	%p52, %r14, 10;
	and.b32  	%r106, %r47, 1;
	setp.eq.b32	%p53, %r106, 1;
	setp.ne.s32	%p54, %r14, 0;
	and.pred  	%p55, %p52, %p54;
	and.pred  	%p56, %p55, %p53;
	shr.u32 	%r107, %r16, 1;
	setp.eq.s32	%p57, %r14, %r107;
	or.pred  	%p58, %p56, %p57;
	add.s32 	%r146, %r14, 1;
	mov.u32 	%r159, %r16;
	@!%p58 bra 	BB4_61;
	bra.uni 	BB4_48;

BB4_48:
	div.u32 	%r108, %r160, %r146;
	cvt.rn.f64.u32	%fd27, %r108;
	setp.eq.s32	%p59, %r14, 0;
	mov.f64 	%fd157, 0d0000000000000000;
	@%p59 bra 	BB4_57;

	and.b32  	%r110, %r14, 3;
	setp.eq.s32	%p60, %r110, 0;
	mov.f64 	%fd157, 0d0000000000000000;
	mov.u32 	%r158, 0;
	@%p60 bra 	BB4_55;

	setp.eq.s32	%p61, %r110, 1;
	mov.f64 	%fd154, 0d0000000000000000;
	mov.u32 	%r156, 0;
	@%p61 bra 	BB4_54;

	setp.eq.s32	%p62, %r110, 2;
	mov.f64 	%fd153, 0d0000000000000000;
	mov.u32 	%r155, 0;
	@%p62 bra 	BB4_53;

	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd39;
	ld.local.u32 	%r116, [%rd40];
	cvt.rn.f64.u32	%fd130, %r116;
	sub.f64 	%fd131, %fd130, %fd27;
	fma.rn.f64 	%fd153, %fd131, %fd131, 0d0000000000000000;
	mov.u32 	%r155, 1;

BB4_53:
	add.u64 	%rd41, %SP, 0;
	cvta.to.local.u64 	%rd42, %rd41;
	mul.wide.u32 	%rd43, %r155, 4;
	add.s64 	%rd44, %rd42, %rd43;
	ld.local.u32 	%r117, [%rd44];
	cvt.rn.f64.u32	%fd132, %r117;
	sub.f64 	%fd133, %fd132, %fd27;
	fma.rn.f64 	%fd154, %fd133, %fd133, %fd153;
	add.s32 	%r156, %r155, 1;

BB4_54:
	add.u64 	%rd45, %SP, 0;
	cvta.to.local.u64 	%rd46, %rd45;
	mul.wide.u32 	%rd47, %r156, 4;
	add.s64 	%rd48, %rd46, %rd47;
	ld.local.u32 	%r118, [%rd48];
	cvt.rn.f64.u32	%fd134, %r118;
	sub.f64 	%fd135, %fd134, %fd27;
	fma.rn.f64 	%fd157, %fd135, %fd135, %fd154;
	add.s32 	%r158, %r156, 1;

BB4_55:
	add.u64 	%rd49, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd49;
	setp.lt.u32	%p63, %r14, 4;
	@%p63 bra 	BB4_57;

BB4_56:
	mul.wide.u32 	%rd50, %r158, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.u32 	%r119, [%rd51];
	cvt.rn.f64.u32	%fd136, %r119;
	sub.f64 	%fd137, %fd136, %fd27;
	fma.rn.f64 	%fd138, %fd137, %fd137, %fd157;
	add.s32 	%r120, %r158, 1;
	mul.wide.u32 	%rd52, %r120, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.u32 	%r121, [%rd53];
	cvt.rn.f64.u32	%fd139, %r121;
	sub.f64 	%fd140, %fd139, %fd27;
	fma.rn.f64 	%fd141, %fd140, %fd140, %fd138;
	add.s32 	%r122, %r158, 2;
	mul.wide.u32 	%rd54, %r122, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.u32 	%r123, [%rd55];
	cvt.rn.f64.u32	%fd142, %r123;
	sub.f64 	%fd143, %fd142, %fd27;
	fma.rn.f64 	%fd144, %fd143, %fd143, %fd141;
	add.s32 	%r124, %r158, 3;
	mul.wide.u32 	%rd56, %r124, 4;
	add.s64 	%rd57, %rd1, %rd56;
	ld.local.u32 	%r125, [%rd57];
	cvt.rn.f64.u32	%fd145, %r125;
	sub.f64 	%fd146, %fd145, %fd27;
	fma.rn.f64 	%fd157, %fd146, %fd146, %fd144;
	add.s32 	%r158, %r158, 4;
	setp.lt.u32	%p64, %r158, %r14;
	@%p64 bra 	BB4_56;

BB4_57:
	add.s32 	%r126, %r14, -1;
	cvt.rn.f64.u32	%fd147, %r126;
	div.rn.f64 	%fd148, %fd157, %fd147;
	div.rn.f64 	%fd37, %fd148, %fd27;
	setp.ne.s32	%p65, %r14, 1;
	@%p65 bra 	BB4_59;

	// inline asm
	activemask.b32 %r127;
	// inline asm
	add.u64 	%rd58, %SP, 0;
	cvta.to.local.u64 	%rd59, %rd58;
	ld.local.v2.u32 	{%r129, %r130}, [%rd59];
	setp.eq.s32	%p66, %r129, %r130;
	vote.sync.all.pred 	%p67, %p66, %r127;
	mov.u32 	%r159, 2;
	@%p67 bra 	BB4_61;

BB4_59:
	// inline asm
	activemask.b32 %r134;
	// inline asm
	setp.lt.f64	%p68, %fd37, 0d3F847AE140000000;
	vote.sync.all.pred 	%p69, %p68, %r134;
	mov.u32 	%r159, %r146;
	@%p69 bra 	BB4_61;

	// inline asm
	activemask.b32 %r136;
	// inline asm
	setp.le.f64	%p70, %fd37, 0d3FF0000000000000;
	vote.sync.all.pred 	%p71, %p70, %r136;
	setp.ge.u32	%p72, %r14, %r107;
	and.pred  	%p73, %p71, %p72;
	selp.b32	%r159, %r146, %r16, %p73;

BB4_61:
	setp.lt.u32	%p74, %r146, %r159;
	@%p74 bra 	BB4_26;

BB4_62:
	mov.u32 	%r144, 0;
	div.u32 	%r140, %r160, %r159;
	cvt.rn.f32.u32	%f55, %r140;
	cvt.rn.f32.u32	%f56, %r159;
	mov.u16 	%rs9, 0;

BB4_63:
	mul.lo.s32 	%r141, %r4, %r42;
	cvt.u64.u32	%rd60, %r141;
	cvta.to.global.u64 	%rd61, %rd2;
	add.s64 	%rd62, %rd61, %rd60;
	mul.wide.u32 	%rd63, %r3, 16;
	add.s64 	%rd64, %rd62, %rd63;
	st.global.f32 	[%rd64], %f55;
	st.global.f32 	[%rd64+4], %f56;
	st.global.u32 	[%rd64+12], %r144;
	st.global.u8 	[%rd64+8], %rs9;
	setp.gt.f32	%p75, %f56, 0f00000000;
	@%p75 bra 	BB4_65;

	mov.u64 	%rd65, $str7;
	cvta.global.u64 	%rd66, %rd65;
	mov.u64 	%rd67, $str1;
	cvta.global.u64 	%rd68, %rd67;
	mov.u32 	%r142, 352;
	mov.u64 	%rd69, 0;
	mov.u64 	%rd70, 2;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd66;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd68;
	.param .b32 param2;
	st.param.b32	[param2+0], %r142;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd69;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd70;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 15

BB4_65:
	ret;
}

	// .globl	compose
.visible .entry compose(
	.param .u64 compose_param_0,
	.param .u32 compose_param_1,
	.param .u64 compose_param_2,
	.param .u32 compose_param_3,
	.param .u64 compose_param_4,
	.param .u32 compose_param_5,
	.param .u32 compose_param_6,
	.param .u64 compose_param_7,
	.param .u32 compose_param_8,
	.param .u32 compose_param_9
)
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<14>;
	.reg .b32 	%r<33>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd2, [compose_param_0];
	ld.param.u32 	%r5, [compose_param_1];
	ld.param.u64 	%rd3, [compose_param_4];
	ld.param.u32 	%r6, [compose_param_5];
	ld.param.u32 	%r7, [compose_param_6];
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r9, %r8, %r10;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %ntid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r2, %r11, %r12, %r13;
	setp.ge.u32	%p1, %r2, %r7;
	setp.ge.u32	%p2, %r1, %r6;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_12;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.lo.s32 	%r14, %r2, %r5;
	cvt.u64.u32	%rd5, %r14;
	add.s64 	%rd6, %rd4, %rd5;
	mul.wide.u32 	%rd7, %r1, 16;
	add.s64 	%rd1, %rd6, %rd7;
	ld.const.u8 	%rs1, [VISUALIZE_SAMPLE_COUNT];
	setp.eq.s16	%p4, %rs1, 0;
	@%p4 bra 	BB5_3;

	ld.global.f32 	%f5, [%rd1+4];
	cvt.rzi.u32.f32	%r15, %f5;
	mov.u32 	%r16, 64;
	min.u32 	%r17, %r15, %r16;
	cvt.rn.f32.u32	%f6, %r17;
	mul.f32 	%f7, %f6, 0f3C800000;
	mul.f32 	%f8, %f7, 0f437F0000;
	cvt.rzi.s32.f32	%r18, %f8;
	and.b32  	%r19, %r18, 255;
	prmt.b32 	%r20, %r19, %r19, 30212;
	prmt.b32 	%r21, %r19, %r20, 28756;
	or.b32  	%r22, %r21, -16777216;
	ld.global.u8 	%rs2, [%rd1+8];
	setp.eq.s16	%p5, %rs2, 0;
	selp.b32	%r32, %r22, -16777216, %p5;
	bra.uni 	BB5_11;

BB5_3:
	ld.global.f32 	%f1, [%rd1];
	abs.f32 	%f9, %f1;
	mov.b32 	 %r23, %f1;
	and.b32  	%r24, %r23, -2147483648;
	or.b32  	%r25, %r24, 1056964608;
	mov.b32 	 %f10, %r25;
	add.f32 	%f11, %f1, %f10;
	cvt.rzi.f32.f32	%f12, %f11;
	setp.gt.f32	%p6, %f9, 0f4B000000;
	selp.f32	%f13, %f1, %f12, %p6;
	setp.geu.f32	%p7, %f9, 0f3F000000;
	@%p7 bra 	BB5_5;

	cvt.rzi.f32.f32	%f13, %f1;

BB5_5:
	cvt.rzi.u32.f32	%r27, %f13;
	mov.u32 	%r32, -16776961;
	setp.eq.s32	%p8, %r27, 1;
	@%p8 bra 	BB5_11;

	setp.eq.s32	%p9, %r27, 2;
	@%p9 bra 	BB5_9;
	bra.uni 	BB5_7;

BB5_9:
	mov.u32 	%r32, -16711936;
	bra.uni 	BB5_11;

BB5_7:
	setp.ne.s32	%p10, %r27, 3;
	@%p10 bra 	BB5_10;

	mov.u32 	%r32, -65536;
	bra.uni 	BB5_11;

BB5_10:
	mov.u32 	%r32, -16777216;

BB5_11:
	shl.b32 	%r31, %r1, 2;
	sust.b.2d.b32.trap 	[%rd3, {%r31, %r2}], {%r32};

BB5_12:
	ret;
}

	// .globl	fractalRenderUnderSampled
.visible .entry fractalRenderUnderSampled(
	.param .u64 fractalRenderUnderSampled_param_0,
	.param .u32 fractalRenderUnderSampled_param_1,
	.param .u32 fractalRenderUnderSampled_param_2,
	.param .u32 fractalRenderUnderSampled_param_3,
	.param .f32 fractalRenderUnderSampled_param_4,
	.param .f32 fractalRenderUnderSampled_param_5,
	.param .f32 fractalRenderUnderSampled_param_6,
	.param .f32 fractalRenderUnderSampled_param_7,
	.param .u32 fractalRenderUnderSampled_param_8,
	.param .u32 fractalRenderUnderSampled_param_9
)
{
	.reg .pred 	%p<28>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<79>;
	.reg .b32 	%r<73>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [fractalRenderUnderSampled_param_0];
	ld.param.u32 	%r21, [fractalRenderUnderSampled_param_1];
	ld.param.u32 	%r22, [fractalRenderUnderSampled_param_2];
	ld.param.u32 	%r23, [fractalRenderUnderSampled_param_3];
	ld.param.f32 	%f12, [fractalRenderUnderSampled_param_4];
	ld.param.f32 	%f13, [fractalRenderUnderSampled_param_5];
	ld.param.f32 	%f14, [fractalRenderUnderSampled_param_6];
	ld.param.f32 	%f15, [fractalRenderUnderSampled_param_7];
	ld.param.u32 	%r24, [fractalRenderUnderSampled_param_8];
	ld.param.u32 	%r25, [fractalRenderUnderSampled_param_9];
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %ctaid.x;
	mov.u32 	%r28, %tid.x;
	mad.lo.s32 	%r29, %r27, %r26, %r28;
	mul.lo.s32 	%r1, %r29, %r25;
	mov.u32 	%r30, %ctaid.y;
	mov.u32 	%r31, %ntid.y;
	mov.u32 	%r32, %tid.y;
	mad.lo.s32 	%r33, %r30, %r31, %r32;
	mul.lo.s32 	%r2, %r33, %r25;
	sub.s32 	%r34, %r23, %r25;
	setp.ge.u32	%p3, %r2, %r34;
	sub.s32 	%r35, %r22, %r25;
	setp.ge.u32	%p4, %r1, %r35;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB6_28;

	sub.f32 	%f16, %f14, %f12;
	cvt.rn.f32.u32	%f17, %r22;
	div.rn.f32 	%f18, %f16, %f17;
	cvt.rn.f32.u32	%f19, %r23;
	sub.f32 	%f20, %f15, %f13;
	div.rn.f32 	%f21, %f20, %f19;
	cvt.rn.f32.u32	%f22, %r1;
	fma.rn.f32 	%f78, %f22, %f18, %f12;
	cvt.rn.f32.u32	%f23, %r2;
	mul.f32 	%f24, %f23, %f21;
	sub.f32 	%f77, %f15, %f24;
	setp.eq.s32	%p6, %r24, 0;
	@%p6 bra 	BB6_14;

	mul.wide.u32 	%rd3, %r24, -858993459;
	shr.u64 	%rd4, %rd3, 35;
	cvt.u32.u64	%r3, %rd4;
	mov.u32 	%r64, 0;
	mov.u32 	%r63, 10;

BB6_3:
	mul.f32 	%f25, %f77, %f77;
	mul.f32 	%f26, %f78, %f78;
	sub.f32 	%f27, %f26, %f25;
	mul.f32 	%f28, %f78, %f77;
	fma.rn.f32 	%f29, %f78, %f77, %f28;
	mul.f32 	%f30, %f78, %f27;
	mul.f32 	%f31, %f77, %f29;
	sub.f32 	%f32, %f30, %f31;
	mul.f32 	%f33, %f78, %f29;
	fma.rn.f32 	%f34, %f77, %f27, %f33;
	add.f32 	%f35, %f32, 0fBF800000;
	mul.f32 	%f36, %f27, 0f40400000;
	mul.f32 	%f37, %f29, 0f40400000;
	abs.f32 	%f38, %f36;
	abs.f32 	%f39, %f37;
	add.f32 	%f40, %f38, %f39;
	rcp.rn.f32 	%f41, %f40;
	mul.f32 	%f42, %f35, %f41;
	mul.f32 	%f43, %f34, %f41;
	mul.f32 	%f44, %f36, %f41;
	mul.f32 	%f45, %f37, %f41;
	mul.f32 	%f46, %f45, %f45;
	fma.rn.f32 	%f47, %f44, %f44, %f46;
	rcp.rn.f32 	%f48, %f47;
	mul.f32 	%f49, %f43, %f45;
	fma.rn.f32 	%f50, %f42, %f44, %f49;
	mul.f32 	%f51, %f48, %f50;
	mul.f32 	%f52, %f43, %f44;
	mul.f32 	%f53, %f42, %f45;
	sub.f32 	%f54, %f52, %f53;
	mul.f32 	%f55, %f48, %f54;
	sub.f32 	%f78, %f78, %f51;
	sub.f32 	%f77, %f77, %f55;
	add.s32 	%r64, %r64, 1;
	setp.ne.s32	%p7, %r64, %r63;
	@%p7 bra 	BB6_13;

	add.f32 	%f56, %f78, 0fBF800000;
	abs.f32 	%f57, %f56;
	setp.geu.f32	%p8, %f57, 0f38D1B717;
	@%p8 bra 	BB6_6;

	abs.f32 	%f58, %f77;
	setp.lt.f32	%p9, %f58, 0f38D1B717;
	mov.u32 	%r68, 1;
	@%p9 bra 	BB6_11;

BB6_6:
	add.f32 	%f59, %f78, 0f3F000000;
	abs.f32 	%f7, %f59;
	setp.geu.f32	%p10, %f7, 0f38D1B717;
	@%p10 bra 	BB6_8;

	add.f32 	%f60, %f77, 0fBF5DB3D7;
	abs.f32 	%f61, %f60;
	setp.lt.f32	%p11, %f61, 0f38D1B717;
	mov.u32 	%r68, 2;
	@%p11 bra 	BB6_11;

BB6_8:
	mov.pred 	%p27, 0;
	@%p10 bra 	BB6_10;

	add.f32 	%f62, %f77, 0f3F5DB3D7;
	abs.f32 	%f63, %f62;
	setp.lt.f32	%p27, %f63, 0f38D1B717;

BB6_10:
	selp.b32	%r68, 3, 0, %p27;

BB6_11:
	setp.ne.s32	%p14, %r68, 0;
	@%p14 bra 	BB6_19;

	add.s32 	%r9, %r3, %r63;
	mov.u32 	%r64, %r63;
	mov.u32 	%r63, %r9;

BB6_13:
	setp.lt.u32	%p15, %r64, %r24;
	@%p15 bra 	BB6_3;

BB6_14:
	add.f32 	%f64, %f78, 0fBF800000;
	abs.f32 	%f65, %f64;
	setp.geu.f32	%p16, %f65, 0f38D1B717;
	@%p16 bra 	BB6_16;

	abs.f32 	%f66, %f77;
	setp.lt.f32	%p17, %f66, 0f38D1B717;
	mov.u32 	%r68, 1;
	@%p17 bra 	BB6_19;

BB6_16:
	add.f32 	%f67, %f78, 0f3F000000;
	abs.f32 	%f68, %f67;
	mov.u32 	%r68, 0;
	setp.geu.f32	%p18, %f68, 0f38D1B717;
	@%p18 bra 	BB6_19;

	add.f32 	%f69, %f77, 0fBF5DB3D7;
	abs.f32 	%f70, %f69;
	setp.lt.f32	%p19, %f70, 0f38D1B717;
	selp.b32	%r68, 2, 0, %p19;
	@%p19 bra 	BB6_19;

	add.f32 	%f71, %f77, 0f3F5DB3D7;
	abs.f32 	%f72, %f71;
	setp.lt.f32	%p20, %f72, 0f38D1B717;
	selp.b32	%r68, 3, 0, %p20;

BB6_19:
	setp.eq.s32	%p21, %r25, 0;
	@%p21 bra 	BB6_28;

	cvt.rn.f32.u32	%f73, %r68;
	cvt.rzi.u32.f32	%r46, %f73;
	mul.lo.s32 	%r52, %r2, %r21;
	cvt.u64.u32	%rd5, %r52;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd5;
	cvt.rn.f32.u32	%f74, %r25;
	rcp.rn.f32 	%f10, %f74;
	cvt.rn.f32.u32	%f11, %r46;
	mul.wide.u32 	%rd8, %r1, 16;
	add.s64 	%rd1, %rd7, %rd8;
	and.b32  	%r45, %r25, 3;
	mov.u32 	%r69, 1;
	mov.u32 	%r72, 0;
	setp.eq.s32	%p22, %r45, 0;
	@%p22 bra 	BB6_26;

	setp.eq.s32	%p23, %r45, 1;
	mov.u32 	%r70, %r72;
	@%p23 bra 	BB6_25;

	setp.eq.s32	%p24, %r45, 2;
	@%p24 bra 	BB6_24;

	st.global.f32 	[%rd1], %f11;
	st.global.f32 	[%rd1+4], %f10;
	mov.u32 	%r59, 0;
	st.global.u32 	[%rd1+12], %r59;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd1+8], %rs1;
	mov.u32 	%r69, 2;

BB6_24:
	st.global.f32 	[%rd1], %f11;
	st.global.f32 	[%rd1+4], %f10;
	mov.u32 	%r60, 0;
	st.global.u32 	[%rd1+12], %r60;
	mov.u16 	%rs2, 0;
	st.global.u8 	[%rd1+8], %rs2;
	mov.u32 	%r70, %r69;

BB6_25:
	st.global.f32 	[%rd1], %f11;
	st.global.f32 	[%rd1+4], %f10;
	st.global.u32 	[%rd1+12], %r72;
	mov.u16 	%rs3, 0;
	st.global.u8 	[%rd1+8], %rs3;
	add.s32 	%r72, %r70, 1;

BB6_26:
	setp.lt.u32	%p25, %r25, 4;
	@%p25 bra 	BB6_28;

BB6_27:
	st.global.f32 	[%rd1], %f11;
	st.global.f32 	[%rd1+4], %f10;
	mov.u32 	%r62, 0;
	st.global.u32 	[%rd1+12], %r62;
	mov.u16 	%rs4, 0;
	st.global.u8 	[%rd1+8], %rs4;
	add.s32 	%r72, %r72, 4;
	setp.lt.u32	%p26, %r72, %r25;
	@%p26 bra 	BB6_27;

BB6_28:
	ret;
}

	// .globl	debug
.visible .entry debug(

)
{



	ret;
}


