//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24330188
// Cuda compilation tools, release 9.2, V9.2.148
// Based on LLVM 3.4svn
//

.version 6.2
.target sm_30
.address_size 64

	// .globl	init
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 1 .u8 VISUALIZE_SAMPLE_COUNT;
.global .align 4 .u32 seed;
.global .align 4 .u32 WARP_SIZE_X = 8;
.global .align 4 .u32 WARP_SIZE_Y = 4;
.global .align 4 .u32 USE_ADAPTIVE_SS_FLAG_MASK = 1;
.global .align 4 .u32 USE_FOVEATION_FLAG_MASK = 4;
.global .align 4 .u32 USE_SAMPLE_REUSE_FLAG_MASK = 8;
.global .align 4 .u32 IS_ZOOMING_FLAG_MASK = 16;
.global .align 4 .u32 visualityAmplifyCoeff = 10;
.global .align 4 .f32 screenDistance = 0f42700000;
.global .align 16 .b8 $str[34] = {98, 0, 108, 0, 111, 0, 99, 0, 107, 0, 68, 0, 105, 0, 109, 0, 46, 0, 120, 0, 32, 0, 61, 0, 61, 0, 32, 0, 51, 0, 50, 0, 0, 0};
.global .align 16 .b8 $str1[138] = {101, 0, 58, 0, 92, 0, 116, 0, 111, 0, 110, 0, 100, 0, 97, 0, 92, 0, 100, 0, 101, 0, 115, 0, 107, 0, 116, 0, 111, 0, 112, 0, 92, 0, 99, 0, 104, 0, 97, 0, 111, 0, 115, 0, 45, 0, 117, 0, 108, 0, 116, 0, 114, 0, 97, 0, 92, 0, 115, 0, 114, 0, 99, 0, 92, 0, 109, 0, 97, 0, 105, 0, 110, 0, 92, 0, 99, 0, 117, 0, 100, 0, 97, 0, 92, 0, 102, 0, 114, 0, 97, 0, 99, 0, 116, 0, 97, 0, 108, 0, 82, 0, 101, 0, 110, 0, 100, 0, 101, 0, 114, 0, 101, 0, 114, 0, 71, 0, 101, 0, 110, 0, 101, 0, 114, 0, 105, 0, 99, 0, 46, 0, 99, 0, 117, 0, 0, 0};
.global .align 16 .b8 $str2[40] = {112, 0, 79, 0, 117, 0, 116, 0, 112, 0, 117, 0, 116, 0, 45, 0, 62, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str5[34] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 62, 0, 61, 0, 32, 0, 49, 0, 0, 0};
.global .align 16 .b8 $str6[36] = {114, 0, 101, 0, 115, 0, 117, 0, 108, 0, 116, 0, 46, 0, 119, 0, 101, 0, 105, 0, 103, 0, 104, 0, 116, 0, 32, 0, 62, 0, 32, 0, 48, 0, 0, 0};
.global .align 16 .b8 $str7[68] = {115, 0, 97, 0, 109, 0, 112, 0, 108, 0, 101, 0, 67, 0, 111, 0, 117, 0, 110, 0, 116, 0, 32, 0, 60, 0, 61, 0, 32, 0, 77, 0, 65, 0, 88, 0, 95, 0, 83, 0, 85, 0, 80, 0, 69, 0, 82, 0, 95, 0, 83, 0, 65, 0, 77, 0, 80, 0, 76, 0, 73, 0, 78, 0, 71, 0, 0, 0};

.visible .entry init(

)
{



	ret;
}

	// .globl	fractalRenderMainFloat
.visible .entry fractalRenderMainFloat(
	.param .u64 fractalRenderMainFloat_param_0,
	.param .u32 fractalRenderMainFloat_param_1,
	.param .align 4 .b8 fractalRenderMainFloat_param_2[8],
	.param .align 4 .b8 fractalRenderMainFloat_param_3[16],
	.param .u32 fractalRenderMainFloat_param_4,
	.param .u32 fractalRenderMainFloat_param_5,
	.param .u32 fractalRenderMainFloat_param_6
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<54>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<126>;
	.reg .b32 	%r<122>;
	.reg .b64 	%rd<53>;


	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainFloat_param_0];
	ld.param.u32 	%r34, [fractalRenderMainFloat_param_1];
	ld.param.u32 	%r36, [fractalRenderMainFloat_param_2+4];
	ld.param.u32 	%r35, [fractalRenderMainFloat_param_2];
	ld.param.f32 	%f35, [fractalRenderMainFloat_param_3+12];
	ld.param.f32 	%f34, [fractalRenderMainFloat_param_3+8];
	ld.param.f32 	%f33, [fractalRenderMainFloat_param_3+4];
	ld.param.f32 	%f32, [fractalRenderMainFloat_param_3];
	ld.param.u32 	%r37, [fractalRenderMainFloat_param_4];
	ld.param.u32 	%r119, [fractalRenderMainFloat_param_5];
	ld.param.u32 	%r39, [fractalRenderMainFloat_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p5, %r1, 32;
	@%p5 bra 	BB1_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r40, 71;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r40;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB1_2:
	mov.u32 	%r41, %tid.x;
	mov.u32 	%r42, %tid.y;
	mad.lo.s32 	%r43, %r1, %r42, %r41;
	shl.b32 	%r44, %r1, 2;
	and.b32  	%r45, %r43, 15;
	rem.u32 	%r46, %r43, %r44;
	sub.s32 	%r47, %r46, %r45;
	shr.u32 	%r48, %r47, 2;
	and.b32  	%r49, %r43, 3;
	add.s32 	%r50, %r48, %r49;
	div.u32 	%r51, %r43, %r44;
	shl.b32 	%r52, %r51, 2;
	bfe.u32 	%r53, %r43, 2, 2;
	add.s32 	%r54, %r52, %r53;
	mov.u32 	%r55, %ctaid.x;
	mad.lo.s32 	%r4, %r55, %r1, %r50;
	mov.u32 	%r56, %ctaid.y;
	mov.u32 	%r57, %ntid.y;
	mad.lo.s32 	%r5, %r56, %r57, %r54;
	setp.lt.u32	%p6, %r4, %r35;
	setp.lt.u32	%p7, %r5, %r36;
	and.pred  	%p8, %p6, %p7;
	@!%p8 bra 	BB1_46;
	bra.uni 	BB1_3;

BB1_3:
	setp.lt.u32	%p9, %r119, 65;
	@%p9 bra 	BB1_5;

	mov.u64 	%rd9, $str7;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r58, 119;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r58;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_5:
	setp.eq.s32	%p10, %r119, 0;
	cvt.rn.f32.u32	%f125, %r119;
	mov.u32 	%r60, 0;
	@%p10 bra 	BB1_6;

	cvt.rn.f32.u32	%f4, %r4;
	cvt.rn.f32.u32	%f5, %r5;
	mul.wide.u32 	%rd15, %r37, -858993459;
	shr.u64 	%rd16, %rd15, 35;
	cvt.u32.u64	%r6, %rd16;
	cvt.rn.f32.u32	%f36, %r35;
	sub.f32 	%f37, %f34, %f32;
	div.rn.f32 	%f6, %f37, %f36;
	cvt.rn.f32.u32	%f38, %r36;
	sub.f32 	%f39, %f35, %f33;
	div.rn.f32 	%f7, %f39, %f38;
	mov.u32 	%r62, 0;
	and.b32  	%r69, %r39, 1;
	mov.u32 	%r106, %r62;
	mov.u32 	%r120, %r62;

BB1_8:
	mov.u32 	%r9, %r119;
	mov.u32 	%r7, %r106;
	cvt.rn.f32.u32	%f40, %r7;
	div.rn.f32 	%f41, %f40, %f125;
	add.f32 	%f42, %f4, %f41;
	add.f32 	%f43, %f5, %f41;
	neg.f32 	%f44, %f43;
	fma.rn.f32 	%f119, %f6, %f42, %f32;
	fma.rn.f32 	%f118, %f7, %f44, %f35;
	setp.eq.s32	%p11, %r37, 0;
	mov.u32 	%r109, 10;
	mov.u32 	%r110, %r62;
	@%p11 bra 	BB1_20;

BB1_9:
	mul.f32 	%f45, %f118, %f118;
	mul.f32 	%f46, %f119, %f119;
	sub.f32 	%f47, %f46, %f45;
	mul.f32 	%f48, %f119, %f118;
	fma.rn.f32 	%f49, %f119, %f118, %f48;
	mul.f32 	%f50, %f119, %f47;
	mul.f32 	%f51, %f118, %f49;
	sub.f32 	%f52, %f50, %f51;
	mul.f32 	%f53, %f119, %f49;
	fma.rn.f32 	%f54, %f118, %f47, %f53;
	add.f32 	%f55, %f52, 0fBF800000;
	mul.f32 	%f56, %f47, 0f40400000;
	mul.f32 	%f57, %f49, 0f40400000;
	abs.f32 	%f58, %f56;
	abs.f32 	%f59, %f57;
	add.f32 	%f60, %f58, %f59;
	rcp.rn.f32 	%f61, %f60;
	mul.f32 	%f62, %f55, %f61;
	mul.f32 	%f63, %f54, %f61;
	mul.f32 	%f64, %f56, %f61;
	mul.f32 	%f65, %f57, %f61;
	mul.f32 	%f66, %f65, %f65;
	fma.rn.f32 	%f67, %f64, %f64, %f66;
	rcp.rn.f32 	%f68, %f67;
	mul.f32 	%f69, %f63, %f65;
	fma.rn.f32 	%f70, %f62, %f64, %f69;
	mul.f32 	%f71, %f68, %f70;
	mul.f32 	%f72, %f63, %f64;
	mul.f32 	%f73, %f62, %f65;
	sub.f32 	%f74, %f72, %f73;
	mul.f32 	%f75, %f68, %f74;
	sub.f32 	%f119, %f119, %f71;
	sub.f32 	%f118, %f118, %f75;
	add.s32 	%r110, %r110, 1;
	setp.ne.s32	%p12, %r110, %r109;
	@%p12 bra 	BB1_19;

	add.f32 	%f76, %f119, 0fBF800000;
	abs.f32 	%f77, %f76;
	setp.geu.f32	%p13, %f77, 0f38D1B717;
	@%p13 bra 	BB1_12;

	abs.f32 	%f78, %f118;
	setp.lt.f32	%p14, %f78, 0f38D1B717;
	mov.u32 	%r114, 1;
	@%p14 bra 	BB1_17;

BB1_12:
	add.f32 	%f79, %f119, 0f3F000000;
	abs.f32 	%f15, %f79;
	setp.geu.f32	%p15, %f15, 0f38D1B717;
	@%p15 bra 	BB1_14;

	add.f32 	%f80, %f118, 0fBF5DB3D7;
	abs.f32 	%f81, %f80;
	setp.lt.f32	%p16, %f81, 0f38D1B717;
	mov.u32 	%r114, 2;
	@%p16 bra 	BB1_17;

BB1_14:
	mov.pred 	%p52, 0;
	@%p15 bra 	BB1_16;

	add.f32 	%f82, %f118, 0f3F5DB3D7;
	abs.f32 	%f83, %f82;
	setp.lt.f32	%p52, %f83, 0f38D1B717;

BB1_16:
	selp.b32	%r114, 3, 0, %p52;

BB1_17:
	setp.ne.s32	%p19, %r114, 0;
	@%p19 bra 	BB1_27;

	add.s32 	%r15, %r6, %r109;
	mov.u32 	%r110, %r109;
	mov.u32 	%r109, %r15;

BB1_19:
	setp.lt.u32	%p20, %r110, %r37;
	@%p20 bra 	BB1_9;

BB1_20:
	add.f32 	%f84, %f119, 0fBF800000;
	abs.f32 	%f85, %f84;
	setp.geu.f32	%p21, %f85, 0f38D1B717;
	@%p21 bra 	BB1_22;

	abs.f32 	%f86, %f118;
	setp.lt.f32	%p22, %f86, 0f38D1B717;
	mov.u32 	%r114, 1;
	@%p22 bra 	BB1_27;

BB1_22:
	add.f32 	%f87, %f119, 0f3F000000;
	abs.f32 	%f18, %f87;
	setp.geu.f32	%p23, %f18, 0f38D1B717;
	@%p23 bra 	BB1_24;

	add.f32 	%f88, %f118, 0fBF5DB3D7;
	abs.f32 	%f89, %f88;
	setp.lt.f32	%p24, %f89, 0f38D1B717;
	mov.u32 	%r114, 2;
	@%p24 bra 	BB1_27;

BB1_24:
	mov.pred 	%p53, 0;
	@%p23 bra 	BB1_26;

	add.f32 	%f90, %f118, 0f3F5DB3D7;
	abs.f32 	%f91, %f90;
	setp.lt.f32	%p53, %f91, 0f38D1B717;

BB1_26:
	selp.b32	%r114, 3, 0, %p53;

BB1_27:
	cvt.rn.f32.u32	%f92, %r114;
	cvt.rzi.u32.f32	%r20, %f92;
	add.s32 	%r120, %r20, %r120;
	setp.gt.u32	%p27, %r7, 9;
	@%p27 bra 	BB1_29;

	add.u64 	%rd17, %SP, 0;
	cvta.to.local.u64 	%rd18, %rd17;
	mul.wide.u32 	%rd19, %r7, 4;
	add.s64 	%rd20, %rd18, %rd19;
	st.local.u32 	[%rd20], %r20;

BB1_29:
	setp.lt.u32	%p28, %r7, 10;
	setp.eq.b32	%p29, %r69, 1;
	setp.ne.s32	%p30, %r7, 0;
	and.pred  	%p31, %p28, %p30;
	and.pred  	%p32, %p31, %p29;
	shr.u32 	%r70, %r9, 1;
	setp.eq.s32	%p33, %r7, %r70;
	or.pred  	%p34, %p32, %p33;
	add.s32 	%r106, %r7, 1;
	mov.u32 	%r119, %r9;
	@!%p34 bra 	BB1_43;
	bra.uni 	BB1_30;

BB1_30:
	div.u32 	%r71, %r120, %r106;
	cvt.rn.f32.u32	%f19, %r71;
	setp.eq.s32	%p35, %r7, 0;
	mov.f32 	%f124, 0f00000000;
	@%p35 bra 	BB1_39;

	and.b32  	%r73, %r7, 3;
	setp.eq.s32	%p36, %r73, 0;
	mov.f32 	%f124, 0f00000000;
	mov.u32 	%r118, 0;
	@%p36 bra 	BB1_37;

	setp.eq.s32	%p37, %r73, 1;
	mov.f32 	%f121, 0f00000000;
	mov.u32 	%r116, 0;
	@%p37 bra 	BB1_36;

	setp.eq.s32	%p38, %r73, 2;
	mov.f32 	%f120, 0f00000000;
	mov.u32 	%r115, 0;
	@%p38 bra 	BB1_35;

	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd22, %rd21;
	ld.local.u32 	%r79, [%rd22];
	cvt.rn.f32.u32	%f97, %r79;
	sub.f32 	%f98, %f97, %f19;
	fma.rn.f32 	%f120, %f98, %f98, 0f00000000;
	mov.u32 	%r115, 1;

BB1_35:
	add.u64 	%rd23, %SP, 0;
	cvta.to.local.u64 	%rd24, %rd23;
	mul.wide.u32 	%rd25, %r115, 4;
	add.s64 	%rd26, %rd24, %rd25;
	ld.local.u32 	%r80, [%rd26];
	cvt.rn.f32.u32	%f99, %r80;
	sub.f32 	%f100, %f99, %f19;
	fma.rn.f32 	%f121, %f100, %f100, %f120;
	add.s32 	%r116, %r115, 1;

BB1_36:
	add.u64 	%rd27, %SP, 0;
	cvta.to.local.u64 	%rd28, %rd27;
	mul.wide.u32 	%rd29, %r116, 4;
	add.s64 	%rd30, %rd28, %rd29;
	ld.local.u32 	%r81, [%rd30];
	cvt.rn.f32.u32	%f101, %r81;
	sub.f32 	%f102, %f101, %f19;
	fma.rn.f32 	%f124, %f102, %f102, %f121;
	add.s32 	%r118, %r116, 1;

BB1_37:
	add.u64 	%rd31, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd31;
	setp.lt.u32	%p39, %r7, 4;
	@%p39 bra 	BB1_39;

BB1_38:
	mul.wide.u32 	%rd32, %r118, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.local.u32 	%r82, [%rd33];
	cvt.rn.f32.u32	%f103, %r82;
	sub.f32 	%f104, %f103, %f19;
	fma.rn.f32 	%f105, %f104, %f104, %f124;
	add.s32 	%r83, %r118, 1;
	mul.wide.u32 	%rd34, %r83, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.local.u32 	%r84, [%rd35];
	cvt.rn.f32.u32	%f106, %r84;
	sub.f32 	%f107, %f106, %f19;
	fma.rn.f32 	%f108, %f107, %f107, %f105;
	add.s32 	%r85, %r118, 2;
	mul.wide.u32 	%rd36, %r85, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r86, [%rd37];
	cvt.rn.f32.u32	%f109, %r86;
	sub.f32 	%f110, %f109, %f19;
	fma.rn.f32 	%f111, %f110, %f110, %f108;
	add.s32 	%r87, %r118, 3;
	mul.wide.u32 	%rd38, %r87, 4;
	add.s64 	%rd39, %rd1, %rd38;
	ld.local.u32 	%r88, [%rd39];
	cvt.rn.f32.u32	%f112, %r88;
	sub.f32 	%f113, %f112, %f19;
	fma.rn.f32 	%f124, %f113, %f113, %f111;
	add.s32 	%r118, %r118, 4;
	setp.lt.u32	%p40, %r118, %r7;
	@%p40 bra 	BB1_38;

BB1_39:
	add.s32 	%r89, %r7, -1;
	cvt.rn.f32.u32	%f114, %r89;
	div.rn.f32 	%f115, %f124, %f114;
	div.rn.f32 	%f29, %f115, %f19;
	setp.ne.s32	%p41, %r7, 1;
	@%p41 bra 	BB1_41;

	// inline asm
	activemask.b32 %r90;
	// inline asm
	add.u64 	%rd40, %SP, 0;
	cvta.to.local.u64 	%rd41, %rd40;
	ld.local.v2.u32 	{%r92, %r93}, [%rd41];
	setp.eq.s32	%p42, %r92, %r93;
	vote.sync.all.pred 	%p43, %p42, %r90;
	mov.u32 	%r119, 2;
	@%p43 bra 	BB1_43;

BB1_41:
	// inline asm
	activemask.b32 %r97;
	// inline asm
	setp.lt.f32	%p44, %f29, 0f3C23D70A;
	vote.sync.all.pred 	%p45, %p44, %r97;
	mov.u32 	%r119, %r106;
	@%p45 bra 	BB1_43;

	// inline asm
	activemask.b32 %r99;
	// inline asm
	setp.le.f32	%p46, %f29, 0f3F800000;
	vote.sync.all.pred 	%p47, %p46, %r99;
	setp.ge.u32	%p48, %r7, %r70;
	and.pred  	%p49, %p47, %p48;
	selp.b32	%r119, %r106, %r9, %p49;

BB1_43:
	cvt.rn.f32.u32	%f125, %r119;
	setp.lt.u32	%p50, %r106, %r119;
	@%p50 bra 	BB1_8;
	bra.uni 	BB1_44;

BB1_6:
	mov.u32 	%r120, %r60;
	mov.u32 	%r119, %r60;

BB1_44:
	mul.lo.s32 	%r102, %r5, %r34;
	cvt.u64.u32	%rd42, %r102;
	cvta.to.global.u64 	%rd43, %rd2;
	add.s64 	%rd44, %rd43, %rd42;
	div.u32 	%r103, %r120, %r119;
	cvt.rn.f32.u32	%f116, %r103;
	mul.wide.u32 	%rd45, %r4, 16;
	add.s64 	%rd46, %rd44, %rd45;
	st.global.f32 	[%rd46], %f116;
	st.global.f32 	[%rd46+4], %f125;
	st.global.u32 	[%rd46+12], %r60;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd46+8], %rs1;
	setp.gt.f32	%p51, %f125, 0f00000000;
	@%p51 bra 	BB1_46;

	mov.u64 	%rd47, $str2;
	cvta.global.u64 	%rd48, %rd47;
	mov.u64 	%rd49, $str1;
	cvta.global.u64 	%rd50, %rd49;
	mov.u32 	%r105, 206;
	mov.u64 	%rd51, 0;
	mov.u64 	%rd52, 2;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd48;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r105;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd51;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd52;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB1_46:
	ret;
}

	// .globl	fractalRenderMainDouble
.visible .entry fractalRenderMainDouble(
	.param .u64 fractalRenderMainDouble_param_0,
	.param .u32 fractalRenderMainDouble_param_1,
	.param .align 4 .b8 fractalRenderMainDouble_param_2[8],
	.param .align 8 .b8 fractalRenderMainDouble_param_3[32],
	.param .u32 fractalRenderMainDouble_param_4,
	.param .u32 fractalRenderMainDouble_param_5,
	.param .u32 fractalRenderMainDouble_param_6
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<54>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<123>;
	.reg .f64 	%fd<119>;
	.reg .b64 	%rd<53>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderMainDouble_param_0];
	ld.param.u32 	%r36, [fractalRenderMainDouble_param_2+4];
	ld.param.u32 	%r35, [fractalRenderMainDouble_param_2];
	ld.param.f64 	%fd31, [fractalRenderMainDouble_param_3+24];
	ld.param.f64 	%fd30, [fractalRenderMainDouble_param_3+16];
	ld.param.f64 	%fd29, [fractalRenderMainDouble_param_3+8];
	ld.param.f64 	%fd28, [fractalRenderMainDouble_param_3];
	ld.param.u32 	%r37, [fractalRenderMainDouble_param_4];
	ld.param.u32 	%r38, [fractalRenderMainDouble_param_5];
	ld.param.u32 	%r39, [fractalRenderMainDouble_param_6];
	mov.u32 	%r1, %ntid.x;
	setp.eq.s32	%p5, %r1, 32;
	@%p5 bra 	BB2_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r40, 71;
	mov.u64 	%rd7, 0;
	mov.u64 	%rd8, 2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r40;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB2_2:
	mov.u32 	%r41, %tid.x;
	mov.u32 	%r42, %tid.y;
	mad.lo.s32 	%r43, %r1, %r42, %r41;
	shl.b32 	%r44, %r1, 2;
	and.b32  	%r45, %r43, 15;
	rem.u32 	%r46, %r43, %r44;
	sub.s32 	%r47, %r46, %r45;
	shr.u32 	%r48, %r47, 2;
	and.b32  	%r49, %r43, 3;
	add.s32 	%r50, %r48, %r49;
	div.u32 	%r51, %r43, %r44;
	shl.b32 	%r52, %r51, 2;
	bfe.u32 	%r53, %r43, 2, 2;
	add.s32 	%r54, %r52, %r53;
	mov.u32 	%r55, %ctaid.x;
	mad.lo.s32 	%r4, %r55, %r1, %r50;
	mov.u32 	%r56, %ctaid.y;
	mov.u32 	%r57, %ntid.y;
	mad.lo.s32 	%r5, %r56, %r57, %r54;
	setp.lt.u32	%p6, %r4, %r35;
	setp.lt.u32	%p7, %r5, %r36;
	and.pred  	%p8, %p6, %p7;
	@!%p8 bra 	BB2_45;
	bra.uni 	BB2_3;

BB2_3:
	setp.lt.u32	%p9, %r38, 65;
	@%p9 bra 	BB2_5;

	mov.u64 	%rd9, $str7;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r58, 119;
	mov.u64 	%rd13, 0;
	mov.u64 	%rd14, 2;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r58;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB2_5:
	setp.eq.s32	%p10, %r38, 0;
	mov.u32 	%r60, 0;
	mov.u32 	%r121, %r60;
	mov.u32 	%r120, %r60;
	@%p10 bra 	BB2_43;

	cvt.rn.f64.u32	%fd3, %r4;
	cvt.rn.f64.u32	%fd4, %r5;
	mul.wide.u32 	%rd15, %r37, -858993459;
	shr.u64 	%rd16, %rd15, 35;
	cvt.u32.u64	%r6, %rd16;
	cvt.rn.f64.u32	%fd32, %r35;
	sub.f64 	%fd33, %fd30, %fd28;
	div.rn.f64 	%fd5, %fd33, %fd32;
	cvt.rn.f64.u32	%fd34, %r36;
	sub.f64 	%fd35, %fd31, %fd29;
	div.rn.f64 	%fd6, %fd35, %fd34;
	mov.u32 	%r62, 0;
	and.b32  	%r69, %r39, 1;
	mov.u32 	%r107, %r62;
	mov.u32 	%r121, %r62;
	mov.u32 	%r120, %r38;

BB2_7:
	mov.u32 	%r9, %r120;
	mov.u32 	%r7, %r107;
	cvt.rn.f64.u32	%fd36, %r9;
	cvt.rn.f64.u32	%fd37, %r7;
	div.rn.f64 	%fd38, %fd37, %fd36;
	add.f64 	%fd39, %fd3, %fd38;
	add.f64 	%fd40, %fd4, %fd38;
	neg.f64 	%fd41, %fd40;
	fma.rn.f64 	%fd113, %fd5, %fd39, %fd28;
	fma.rn.f64 	%fd112, %fd6, %fd41, %fd31;
	setp.eq.s32	%p11, %r37, 0;
	mov.u32 	%r110, 10;
	mov.u32 	%r111, %r62;
	@%p11 bra 	BB2_19;

BB2_8:
	mul.f64 	%fd42, %fd112, %fd112;
	mul.f64 	%fd43, %fd113, %fd113;
	sub.f64 	%fd44, %fd43, %fd42;
	mul.f64 	%fd45, %fd113, %fd112;
	fma.rn.f64 	%fd46, %fd113, %fd112, %fd45;
	mul.f64 	%fd47, %fd113, %fd44;
	mul.f64 	%fd48, %fd112, %fd46;
	sub.f64 	%fd49, %fd47, %fd48;
	mul.f64 	%fd50, %fd113, %fd46;
	fma.rn.f64 	%fd51, %fd112, %fd44, %fd50;
	add.f64 	%fd52, %fd49, 0dBFF0000000000000;
	mul.f64 	%fd53, %fd44, 0d4008000000000000;
	mul.f64 	%fd54, %fd46, 0d4008000000000000;
	abs.f64 	%fd55, %fd53;
	abs.f64 	%fd56, %fd54;
	add.f64 	%fd57, %fd55, %fd56;
	rcp.rn.f64 	%fd58, %fd57;
	mul.f64 	%fd59, %fd52, %fd58;
	mul.f64 	%fd60, %fd51, %fd58;
	mul.f64 	%fd61, %fd53, %fd58;
	mul.f64 	%fd62, %fd54, %fd58;
	mul.f64 	%fd63, %fd62, %fd62;
	fma.rn.f64 	%fd64, %fd61, %fd61, %fd63;
	rcp.rn.f64 	%fd65, %fd64;
	mul.f64 	%fd66, %fd60, %fd62;
	fma.rn.f64 	%fd67, %fd59, %fd61, %fd66;
	mul.f64 	%fd68, %fd65, %fd67;
	mul.f64 	%fd69, %fd60, %fd61;
	mul.f64 	%fd70, %fd59, %fd62;
	sub.f64 	%fd71, %fd69, %fd70;
	mul.f64 	%fd72, %fd65, %fd71;
	sub.f64 	%fd113, %fd113, %fd68;
	sub.f64 	%fd112, %fd112, %fd72;
	add.s32 	%r111, %r111, 1;
	setp.ne.s32	%p12, %r111, %r110;
	@%p12 bra 	BB2_18;

	add.f64 	%fd73, %fd113, 0dBFF0000000000000;
	abs.f64 	%fd74, %fd73;
	setp.geu.f64	%p13, %fd74, 0d3F1A36E2EB1C432D;
	@%p13 bra 	BB2_11;

	abs.f64 	%fd75, %fd112;
	setp.lt.f64	%p14, %fd75, 0d3F1A36E2EB1C432D;
	mov.u32 	%r115, 1;
	@%p14 bra 	BB2_16;

BB2_11:
	add.f64 	%fd76, %fd113, 0d3FE0000000000000;
	abs.f64 	%fd13, %fd76;
	setp.geu.f64	%p15, %fd13, 0d3F1A36E2EB1C432D;
	@%p15 bra 	BB2_13;

	add.f64 	%fd77, %fd112, 0dBFEBB67AE857B07F;
	abs.f64 	%fd78, %fd77;
	setp.lt.f64	%p16, %fd78, 0d3F1A36E2EB1C432D;
	mov.u32 	%r115, 2;
	@%p16 bra 	BB2_16;

BB2_13:
	mov.pred 	%p52, 0;
	@%p15 bra 	BB2_15;

	add.f64 	%fd79, %fd112, 0d3FEBB67AE857B07F;
	abs.f64 	%fd80, %fd79;
	setp.lt.f64	%p52, %fd80, 0d3F1A36E2EB1C432D;

BB2_15:
	selp.b32	%r115, 3, 0, %p52;

BB2_16:
	setp.ne.s32	%p19, %r115, 0;
	@%p19 bra 	BB2_26;

	add.s32 	%r15, %r6, %r110;
	mov.u32 	%r111, %r110;
	mov.u32 	%r110, %r15;

BB2_18:
	setp.lt.u32	%p20, %r111, %r37;
	@%p20 bra 	BB2_8;

BB2_19:
	add.f64 	%fd81, %fd113, 0dBFF0000000000000;
	abs.f64 	%fd82, %fd81;
	setp.geu.f64	%p21, %fd82, 0d3F1A36E2EB1C432D;
	@%p21 bra 	BB2_21;

	abs.f64 	%fd83, %fd112;
	setp.lt.f64	%p22, %fd83, 0d3F1A36E2EB1C432D;
	mov.u32 	%r115, 1;
	@%p22 bra 	BB2_26;

BB2_21:
	add.f64 	%fd84, %fd113, 0d3FE0000000000000;
	abs.f64 	%fd16, %fd84;
	setp.geu.f64	%p23, %fd16, 0d3F1A36E2EB1C432D;
	@%p23 bra 	BB2_23;

	add.f64 	%fd85, %fd112, 0dBFEBB67AE857B07F;
	abs.f64 	%fd86, %fd85;
	setp.lt.f64	%p24, %fd86, 0d3F1A36E2EB1C432D;
	mov.u32 	%r115, 2;
	@%p24 bra 	BB2_26;

BB2_23:
	mov.pred 	%p53, 0;
	@%p23 bra 	BB2_25;

	add.f64 	%fd87, %fd112, 0d3FEBB67AE857B07F;
	abs.f64 	%fd88, %fd87;
	setp.lt.f64	%p53, %fd88, 0d3F1A36E2EB1C432D;

BB2_25:
	selp.b32	%r115, 3, 0, %p53;

BB2_26:
	cvt.rn.f32.u32	%f1, %r115;
	cvt.rzi.u32.f32	%r20, %f1;
	add.s32 	%r121, %r20, %r121;
	setp.gt.u32	%p27, %r7, 9;
	@%p27 bra 	BB2_28;

	add.u64 	%rd17, %SP, 0;
	cvta.to.local.u64 	%rd18, %rd17;
	mul.wide.u32 	%rd19, %r7, 4;
	add.s64 	%rd20, %rd18, %rd19;
	st.local.u32 	[%rd20], %r20;

BB2_28:
	setp.lt.u32	%p28, %r7, 10;
	setp.eq.b32	%p29, %r69, 1;
	setp.ne.s32	%p30, %r7, 0;
	and.pred  	%p31, %p28, %p30;
	and.pred  	%p32, %p31, %p29;
	shr.u32 	%r70, %r9, 1;
	setp.eq.s32	%p33, %r7, %r70;
	or.pred  	%p34, %p32, %p33;
	add.s32 	%r107, %r7, 1;
	mov.u32 	%r120, %r9;
	@!%p34 bra 	BB2_42;
	bra.uni 	BB2_29;

BB2_29:
	div.u32 	%r71, %r121, %r107;
	cvt.rn.f64.u32	%fd17, %r71;
	setp.eq.s32	%p35, %r7, 0;
	mov.f64 	%fd118, 0d0000000000000000;
	@%p35 bra 	BB2_38;

	and.b32  	%r73, %r7, 3;
	setp.eq.s32	%p36, %r73, 0;
	mov.f64 	%fd118, 0d0000000000000000;
	mov.u32 	%r119, 0;
	@%p36 bra 	BB2_36;

	setp.eq.s32	%p37, %r73, 1;
	mov.f64 	%fd115, 0d0000000000000000;
	mov.u32 	%r117, 0;
	@%p37 bra 	BB2_35;

	setp.eq.s32	%p38, %r73, 2;
	mov.f64 	%fd114, 0d0000000000000000;
	mov.u32 	%r116, 0;
	@%p38 bra 	BB2_34;

	add.u64 	%rd21, %SP, 0;
	cvta.to.local.u64 	%rd22, %rd21;
	ld.local.u32 	%r79, [%rd22];
	cvt.rn.f64.u32	%fd93, %r79;
	sub.f64 	%fd94, %fd93, %fd17;
	fma.rn.f64 	%fd114, %fd94, %fd94, 0d0000000000000000;
	mov.u32 	%r116, 1;

BB2_34:
	add.u64 	%rd23, %SP, 0;
	cvta.to.local.u64 	%rd24, %rd23;
	mul.wide.u32 	%rd25, %r116, 4;
	add.s64 	%rd26, %rd24, %rd25;
	ld.local.u32 	%r80, [%rd26];
	cvt.rn.f64.u32	%fd95, %r80;
	sub.f64 	%fd96, %fd95, %fd17;
	fma.rn.f64 	%fd115, %fd96, %fd96, %fd114;
	add.s32 	%r117, %r116, 1;

BB2_35:
	add.u64 	%rd27, %SP, 0;
	cvta.to.local.u64 	%rd28, %rd27;
	mul.wide.u32 	%rd29, %r117, 4;
	add.s64 	%rd30, %rd28, %rd29;
	ld.local.u32 	%r81, [%rd30];
	cvt.rn.f64.u32	%fd97, %r81;
	sub.f64 	%fd98, %fd97, %fd17;
	fma.rn.f64 	%fd118, %fd98, %fd98, %fd115;
	add.s32 	%r119, %r117, 1;

BB2_36:
	add.u64 	%rd31, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd31;
	setp.lt.u32	%p39, %r7, 4;
	@%p39 bra 	BB2_38;

BB2_37:
	mul.wide.u32 	%rd32, %r119, 4;
	add.s64 	%rd33, %rd1, %rd32;
	ld.local.u32 	%r82, [%rd33];
	cvt.rn.f64.u32	%fd99, %r82;
	sub.f64 	%fd100, %fd99, %fd17;
	fma.rn.f64 	%fd101, %fd100, %fd100, %fd118;
	add.s32 	%r83, %r119, 1;
	mul.wide.u32 	%rd34, %r83, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.local.u32 	%r84, [%rd35];
	cvt.rn.f64.u32	%fd102, %r84;
	sub.f64 	%fd103, %fd102, %fd17;
	fma.rn.f64 	%fd104, %fd103, %fd103, %fd101;
	add.s32 	%r85, %r119, 2;
	mul.wide.u32 	%rd36, %r85, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.local.u32 	%r86, [%rd37];
	cvt.rn.f64.u32	%fd105, %r86;
	sub.f64 	%fd106, %fd105, %fd17;
	fma.rn.f64 	%fd107, %fd106, %fd106, %fd104;
	add.s32 	%r87, %r119, 3;
	mul.wide.u32 	%rd38, %r87, 4;
	add.s64 	%rd39, %rd1, %rd38;
	ld.local.u32 	%r88, [%rd39];
	cvt.rn.f64.u32	%fd108, %r88;
	sub.f64 	%fd109, %fd108, %fd17;
	fma.rn.f64 	%fd118, %fd109, %fd109, %fd107;
	add.s32 	%r119, %r119, 4;
	setp.lt.u32	%p40, %r119, %r7;
	@%p40 bra 	BB2_37;

BB2_38:
	add.s32 	%r89, %r7, -1;
	cvt.rn.f64.u32	%fd110, %r89;
	div.rn.f64 	%fd111, %fd118, %fd110;
	div.rn.f64 	%fd27, %fd111, %fd17;
	setp.ne.s32	%p41, %r7, 1;
	@%p41 bra 	BB2_40;

	// inline asm
	activemask.b32 %r90;
	// inline asm
	add.u64 	%rd40, %SP, 0;
	cvta.to.local.u64 	%rd41, %rd40;
	ld.local.v2.u32 	{%r92, %r93}, [%rd41];
	setp.eq.s32	%p42, %r92, %r93;
	vote.sync.all.pred 	%p43, %p42, %r90;
	mov.u32 	%r120, 2;
	@%p43 bra 	BB2_42;

BB2_40:
	// inline asm
	activemask.b32 %r97;
	// inline asm
	setp.lt.f64	%p44, %fd27, 0d3F847AE140000000;
	vote.sync.all.pred 	%p45, %p44, %r97;
	mov.u32 	%r120, %r107;
	@%p45 bra 	BB2_42;

	// inline asm
	activemask.b32 %r99;
	// inline asm
	setp.le.f64	%p46, %fd27, 0d3FF0000000000000;
	vote.sync.all.pred 	%p47, %p46, %r99;
	setp.ge.u32	%p48, %r7, %r70;
	and.pred  	%p49, %p47, %p48;
	selp.b32	%r120, %r107, %r9, %p49;

BB2_42:
	setp.lt.u32	%p50, %r107, %r120;
	@%p50 bra 	BB2_7;

BB2_43:
	ld.param.u32 	%r106, [fractalRenderMainDouble_param_1];
	mul.lo.s32 	%r102, %r5, %r106;
	cvt.u64.u32	%rd42, %r102;
	cvta.to.global.u64 	%rd43, %rd2;
	add.s64 	%rd44, %rd43, %rd42;
	div.u32 	%r103, %r121, %r120;
	cvt.rn.f32.u32	%f2, %r103;
	mul.wide.u32 	%rd45, %r4, 16;
	add.s64 	%rd46, %rd44, %rd45;
	st.global.f32 	[%rd46], %f2;
	cvt.rn.f32.u32	%f3, %r120;
	st.global.f32 	[%rd46+4], %f3;
	st.global.u32 	[%rd46+12], %r60;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd46+8], %rs1;
	setp.gt.f32	%p51, %f3, 0f00000000;
	@%p51 bra 	BB2_45;

	mov.u64 	%rd47, $str2;
	cvta.global.u64 	%rd48, %rd47;
	mov.u64 	%rd49, $str1;
	cvta.global.u64 	%rd50, %rd49;
	mov.u32 	%r105, 206;
	mov.u64 	%rd51, 0;
	mov.u64 	%rd52, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd48;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r105;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd51;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd52;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB2_45:
	ret;
}

	// .globl	fractalRenderAdvancedFloat
.visible .entry fractalRenderAdvancedFloat(
	.param .u64 fractalRenderAdvancedFloat_param_0,
	.param .u32 fractalRenderAdvancedFloat_param_1,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_2[8],
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_3[16],
	.param .u32 fractalRenderAdvancedFloat_param_4,
	.param .u32 fractalRenderAdvancedFloat_param_5,
	.param .u32 fractalRenderAdvancedFloat_param_6,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_7[16],
	.param .u64 fractalRenderAdvancedFloat_param_8,
	.param .u32 fractalRenderAdvancedFloat_param_9,
	.param .align 4 .b8 fractalRenderAdvancedFloat_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot3[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<75>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<201>;
	.reg .b32 	%r<148>;
	.reg .b64 	%rd<71>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderAdvancedFloat_param_0];
	ld.param.u32 	%r35, [fractalRenderAdvancedFloat_param_1];
	ld.param.u32 	%r37, [fractalRenderAdvancedFloat_param_2+4];
	ld.param.u32 	%r36, [fractalRenderAdvancedFloat_param_2];
	ld.param.f32 	%f51, [fractalRenderAdvancedFloat_param_3+12];
	ld.param.f32 	%f50, [fractalRenderAdvancedFloat_param_3+8];
	ld.param.f32 	%f49, [fractalRenderAdvancedFloat_param_3+4];
	ld.param.f32 	%f48, [fractalRenderAdvancedFloat_param_3];
	ld.param.u32 	%r38, [fractalRenderAdvancedFloat_param_4];
	ld.param.u32 	%r145, [fractalRenderAdvancedFloat_param_5];
	ld.param.u32 	%r40, [fractalRenderAdvancedFloat_param_6];
	ld.param.f32 	%f55, [fractalRenderAdvancedFloat_param_7+12];
	ld.param.f32 	%f54, [fractalRenderAdvancedFloat_param_7+8];
	ld.param.f32 	%f53, [fractalRenderAdvancedFloat_param_7+4];
	ld.param.f32 	%f52, [fractalRenderAdvancedFloat_param_7];
	ld.param.u64 	%rd3, [fractalRenderAdvancedFloat_param_8];
	ld.param.u32 	%r41, [fractalRenderAdvancedFloat_param_9];
	ld.param.u32 	%r43, [fractalRenderAdvancedFloat_param_10+4];
	ld.param.u32 	%r42, [fractalRenderAdvancedFloat_param_10];
	mov.u32 	%r44, %ntid.x;
	setp.eq.s32	%p6, %r44, 32;
	@%p6 bra 	BB3_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r45, 71;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r45;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB3_2:
	mov.u32 	%r46, %tid.y;
	mov.u32 	%r48, %tid.x;
	mad.lo.s32 	%r49, %r44, %r46, %r48;
	and.b32  	%r50, %r49, 15;
	shl.b32 	%r51, %r44, 2;
	rem.u32 	%r52, %r49, %r51;
	sub.s32 	%r53, %r52, %r50;
	shr.u32 	%r54, %r53, 2;
	and.b32  	%r55, %r49, 3;
	add.s32 	%r56, %r54, %r55;
	div.u32 	%r57, %r49, %r51;
	shl.b32 	%r58, %r57, 2;
	bfe.u32 	%r59, %r49, 2, 2;
	add.s32 	%r60, %r58, %r59;
	mov.u32 	%r61, %ctaid.x;
	mad.lo.s32 	%r3, %r61, %r44, %r56;
	mov.u32 	%r62, %ctaid.y;
	mov.u32 	%r63, %ntid.y;
	mad.lo.s32 	%r4, %r62, %r63, %r60;
	setp.lt.u32	%p7, %r3, %r36;
	setp.lt.u32	%p8, %r4, %r37;
	and.pred  	%p9, %p7, %p8;
	@!%p9 bra 	BB3_60;
	bra.uni 	BB3_3;

BB3_3:
	and.b32  	%r64, %r40, 8;
	setp.eq.s32	%p11, %r64, 0;
	mov.pred 	%p72, -1;
	mov.f32 	%f188, 0f00000000;
	@%p11 bra 	BB3_4;

	cvt.rn.f32.u32	%f58, %r3;
	cvt.rn.f32.u32	%f59, %r37;
	cvt.rn.f32.u32	%f60, %r4;
	sub.f32 	%f61, %f59, %f60;
	cvt.rn.f32.u32	%f62, %r36;
	div.rn.f32 	%f63, %f58, %f62;
	div.rn.f32 	%f64, %f61, %f59;
	sub.f32 	%f65, %f50, %f48;
	sub.f32 	%f66, %f51, %f49;
	fma.rn.f32 	%f67, %f65, %f63, %f48;
	fma.rn.f32 	%f68, %f66, %f64, %f49;
	sub.f32 	%f69, %f67, %f52;
	sub.f32 	%f70, %f68, %f53;
	sub.f32 	%f71, %f54, %f52;
	div.rn.f32 	%f72, %f69, %f71;
	sub.f32 	%f73, %f55, %f53;
	div.rn.f32 	%f74, %f70, %f73;
	mul.f32 	%f5, %f62, %f72;
	mul.f32 	%f75, %f59, %f74;
	sub.f32 	%f6, %f59, %f75;
	abs.f32 	%f76, %f5;
	mov.b32 	 %r65, %f5;
	and.b32  	%r66, %r65, -2147483648;
	or.b32  	%r67, %r66, 1056964608;
	mov.b32 	 %f77, %r67;
	add.f32 	%f78, %f5, %f77;
	cvt.rzi.f32.f32	%f79, %f78;
	setp.gt.f32	%p12, %f76, 0f4B000000;
	selp.f32	%f186, %f5, %f79, %p12;
	setp.geu.f32	%p13, %f76, 0f3F000000;
	@%p13 bra 	BB3_7;

	cvt.rzi.f32.f32	%f186, %f5;

BB3_7:
	cvt.rzi.s32.f32	%r5, %f186;
	mov.b32 	 %r68, %f6;
	and.b32  	%r69, %r68, -2147483648;
	or.b32  	%r70, %r69, 1056964608;
	mov.b32 	 %f80, %r70;
	add.f32 	%f81, %f6, %f80;
	cvt.rzi.f32.f32	%f82, %f81;
	abs.f32 	%f83, %f6;
	setp.gt.f32	%p14, %f83, 0f4B000000;
	selp.f32	%f187, %f6, %f82, %p14;
	setp.geu.f32	%p15, %f83, 0f3F000000;
	@%p15 bra 	BB3_9;

	cvt.rzi.f32.f32	%f187, %f6;

BB3_9:
	add.s32 	%r71, %r36, -2;
	setp.lt.u32	%p17, %r5, %r71;
	setp.gt.s32	%p18, %r5, 1;
	and.pred  	%p19, %p18, %p17;
	cvt.rzi.s32.f32	%r6, %f187;
	setp.gt.s32	%p20, %r6, 1;
	and.pred  	%p21, %p19, %p20;
	add.s32 	%r72, %r37, -2;
	setp.lt.u32	%p22, %r6, %r72;
	and.pred  	%p23, %p22, %p21;
	mov.f32 	%f189, %f188;
	@!%p23 bra 	BB3_13;
	bra.uni 	BB3_10;

BB3_10:
	sub.s32 	%r73, %r5, %r42;
	abs.s32 	%r74, %r73;
	setp.gt.s32	%p24, %r74, 19;
	@%p24 bra 	BB3_12;

	sub.s32 	%r75, %r6, %r43;
	abs.s32 	%r76, %r75;
	setp.lt.s32	%p26, %r76, 20;
	mov.f32 	%f189, %f188;
	@%p26 bra 	BB3_13;

BB3_12:
	cvt.rmi.f32.f32	%f89, %f5;
	cvt.rzi.u32.f32	%r77, %f89;
	cvt.rmi.f32.f32	%f90, %f6;
	cvt.rzi.u32.f32	%r78, %f90;
	cvt.rn.f32.u32	%f91, %r77;
	sub.f32 	%f92, %f5, %f91;
	cvt.rn.f32.u32	%f93, %r78;
	sub.f32 	%f94, %f6, %f93;
	mul.lo.s32 	%r79, %r78, %r41;
	cvt.u64.u32	%rd10, %r79;
	cvta.to.global.u64 	%rd11, %rd3;
	add.s64 	%rd12, %rd11, %rd10;
	mul.wide.u32 	%rd13, %r77, 16;
	add.s64 	%rd14, %rd12, %rd13;
	add.s32 	%r80, %r77, 1;
	mul.wide.u32 	%rd15, %r80, 16;
	add.s64 	%rd16, %rd12, %rd15;
	add.s32 	%r81, %r78, 1;
	mul.lo.s32 	%r82, %r81, %r41;
	cvt.u64.u32	%rd17, %r82;
	add.s64 	%rd18, %rd11, %rd17;
	add.s64 	%rd19, %rd18, %rd13;
	add.s64 	%rd20, %rd18, %rd15;
	mov.f32 	%f189, 0f3F800000;
	sub.f32 	%f95, %f189, %f92;
	ld.global.f32 	%f96, [%rd14];
	ld.global.f32 	%f97, [%rd16];
	mul.f32 	%f98, %f92, %f97;
	fma.rn.f32 	%f99, %f96, %f95, %f98;
	sub.f32 	%f100, %f189, %f94;
	ld.global.f32 	%f101, [%rd19];
	ld.global.f32 	%f102, [%rd20];
	mul.f32 	%f103, %f92, %f102;
	fma.rn.f32 	%f104, %f95, %f101, %f103;
	mul.f32 	%f105, %f94, %f104;
	fma.rn.f32 	%f188, %f100, %f99, %f105;
	mov.pred 	%p72, 0;
	bra.uni 	BB3_13;

BB3_4:
	mov.f32 	%f189, %f188;

BB3_13:
	mov.u16 	%rs4, 1;
	@!%p72 bra 	BB3_58;
	bra.uni 	BB3_14;

BB3_14:
	setp.ne.s32	%p28, %r145, 0;
	@%p28 bra 	BB3_16;

	mov.u64 	%rd21, $str5;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r83, 401;
	mov.u64 	%rd25, 0;
	mov.u64 	%rd26, 2;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r83;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB3_16:
	cvt.rn.f32.u32	%f106, %r36;
	sub.f32 	%f107, %f50, %f48;
	div.rn.f32 	%f16, %f107, %f106;
	cvt.rn.f32.u32	%f108, %r37;
	sub.f32 	%f109, %f51, %f49;
	div.rn.f32 	%f17, %f109, %f108;
	setp.lt.u32	%p29, %r145, 65;
	@%p29 bra 	BB3_18;

	mov.u64 	%rd27, $str7;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, $str1;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r84, 119;
	mov.u64 	%rd31, 0;
	mov.u64 	%rd32, 2;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r84;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB3_18:
	setp.eq.s32	%p30, %r145, 0;
	cvt.rn.f32.u32	%f189, %r145;
	mov.u32 	%r146, 0;
	@%p30 bra 	BB3_19;

	cvt.rn.f32.u32	%f19, %r3;
	cvt.rn.f32.u32	%f20, %r4;
	mul.wide.u32 	%rd33, %r38, -858993459;
	shr.u64 	%rd34, %rd33, 35;
	cvt.u32.u64	%r7, %rd34;
	mov.u32 	%r88, 0;
	mov.u32 	%r132, %r88;
	mov.u32 	%r146, %r88;

BB3_21:
	mov.u32 	%r10, %r145;
	mov.u32 	%r8, %r132;
	cvt.rn.f32.u32	%f110, %r8;
	div.rn.f32 	%f111, %f110, %f189;
	add.f32 	%f112, %f19, %f111;
	add.f32 	%f113, %f20, %f111;
	neg.f32 	%f114, %f113;
	fma.rn.f32 	%f192, %f16, %f112, %f48;
	fma.rn.f32 	%f191, %f17, %f114, %f51;
	setp.eq.s32	%p31, %r38, 0;
	mov.u32 	%r135, 10;
	mov.u32 	%r136, %r88;
	@%p31 bra 	BB3_33;

BB3_22:
	mul.f32 	%f115, %f191, %f191;
	mul.f32 	%f116, %f192, %f192;
	sub.f32 	%f117, %f116, %f115;
	mul.f32 	%f118, %f192, %f191;
	fma.rn.f32 	%f119, %f192, %f191, %f118;
	mul.f32 	%f120, %f192, %f117;
	mul.f32 	%f121, %f191, %f119;
	sub.f32 	%f122, %f120, %f121;
	mul.f32 	%f123, %f192, %f119;
	fma.rn.f32 	%f124, %f191, %f117, %f123;
	add.f32 	%f125, %f122, 0fBF800000;
	mul.f32 	%f126, %f117, 0f40400000;
	mul.f32 	%f127, %f119, 0f40400000;
	abs.f32 	%f128, %f126;
	abs.f32 	%f129, %f127;
	add.f32 	%f130, %f128, %f129;
	rcp.rn.f32 	%f131, %f130;
	mul.f32 	%f132, %f125, %f131;
	mul.f32 	%f133, %f124, %f131;
	mul.f32 	%f134, %f126, %f131;
	mul.f32 	%f135, %f127, %f131;
	mul.f32 	%f136, %f135, %f135;
	fma.rn.f32 	%f137, %f134, %f134, %f136;
	rcp.rn.f32 	%f138, %f137;
	mul.f32 	%f139, %f133, %f135;
	fma.rn.f32 	%f140, %f132, %f134, %f139;
	mul.f32 	%f141, %f138, %f140;
	mul.f32 	%f142, %f133, %f134;
	mul.f32 	%f143, %f132, %f135;
	sub.f32 	%f144, %f142, %f143;
	mul.f32 	%f145, %f138, %f144;
	sub.f32 	%f192, %f192, %f141;
	sub.f32 	%f191, %f191, %f145;
	add.s32 	%r136, %r136, 1;
	setp.ne.s32	%p32, %r136, %r135;
	@%p32 bra 	BB3_32;

	add.f32 	%f146, %f192, 0fBF800000;
	abs.f32 	%f147, %f146;
	setp.geu.f32	%p33, %f147, 0f38D1B717;
	@%p33 bra 	BB3_25;

	abs.f32 	%f148, %f191;
	setp.lt.f32	%p34, %f148, 0f38D1B717;
	mov.u32 	%r140, 1;
	@%p34 bra 	BB3_30;

BB3_25:
	add.f32 	%f149, %f192, 0f3F000000;
	abs.f32 	%f28, %f149;
	setp.geu.f32	%p35, %f28, 0f38D1B717;
	@%p35 bra 	BB3_27;

	add.f32 	%f150, %f191, 0fBF5DB3D7;
	abs.f32 	%f151, %f150;
	setp.lt.f32	%p36, %f151, 0f38D1B717;
	mov.u32 	%r140, 2;
	@%p36 bra 	BB3_30;

BB3_27:
	mov.pred 	%p73, 0;
	@%p35 bra 	BB3_29;

	add.f32 	%f152, %f191, 0f3F5DB3D7;
	abs.f32 	%f153, %f152;
	setp.lt.f32	%p73, %f153, 0f38D1B717;

BB3_29:
	selp.b32	%r140, 3, 0, %p73;

BB3_30:
	setp.ne.s32	%p39, %r140, 0;
	@%p39 bra 	BB3_40;

	add.s32 	%r16, %r7, %r135;
	mov.u32 	%r136, %r135;
	mov.u32 	%r135, %r16;

BB3_32:
	setp.lt.u32	%p40, %r136, %r38;
	@%p40 bra 	BB3_22;

BB3_33:
	add.f32 	%f154, %f192, 0fBF800000;
	abs.f32 	%f155, %f154;
	setp.geu.f32	%p41, %f155, 0f38D1B717;
	@%p41 bra 	BB3_35;

	abs.f32 	%f156, %f191;
	setp.lt.f32	%p42, %f156, 0f38D1B717;
	mov.u32 	%r140, 1;
	@%p42 bra 	BB3_40;

BB3_35:
	add.f32 	%f157, %f192, 0f3F000000;
	abs.f32 	%f31, %f157;
	setp.geu.f32	%p43, %f31, 0f38D1B717;
	@%p43 bra 	BB3_37;

	add.f32 	%f158, %f191, 0fBF5DB3D7;
	abs.f32 	%f159, %f158;
	setp.lt.f32	%p44, %f159, 0f38D1B717;
	mov.u32 	%r140, 2;
	@%p44 bra 	BB3_40;

BB3_37:
	mov.pred 	%p74, 0;
	@%p43 bra 	BB3_39;

	add.f32 	%f160, %f191, 0f3F5DB3D7;
	abs.f32 	%f161, %f160;
	setp.lt.f32	%p74, %f161, 0f38D1B717;

BB3_39:
	selp.b32	%r140, 3, 0, %p74;

BB3_40:
	cvt.rn.f32.u32	%f162, %r140;
	cvt.rzi.u32.f32	%r21, %f162;
	add.s32 	%r146, %r21, %r146;
	setp.gt.u32	%p47, %r8, 9;
	@%p47 bra 	BB3_42;

	add.u64 	%rd35, %SP, 0;
	cvta.to.local.u64 	%rd36, %rd35;
	mul.wide.u32 	%rd37, %r8, 4;
	add.s64 	%rd38, %rd36, %rd37;
	st.local.u32 	[%rd38], %r21;

BB3_42:
	setp.lt.u32	%p48, %r8, 10;
	and.b32  	%r95, %r40, 1;
	setp.eq.b32	%p49, %r95, 1;
	setp.ne.s32	%p50, %r8, 0;
	and.pred  	%p51, %p48, %p50;
	and.pred  	%p52, %p51, %p49;
	shr.u32 	%r96, %r10, 1;
	setp.eq.s32	%p53, %r8, %r96;
	or.pred  	%p54, %p52, %p53;
	add.s32 	%r132, %r8, 1;
	mov.u32 	%r145, %r10;
	@!%p54 bra 	BB3_56;
	bra.uni 	BB3_43;

BB3_43:
	div.u32 	%r97, %r146, %r132;
	cvt.rn.f32.u32	%f32, %r97;
	setp.eq.s32	%p55, %r8, 0;
	mov.f32 	%f197, 0f00000000;
	@%p55 bra 	BB3_52;

	and.b32  	%r99, %r8, 3;
	setp.eq.s32	%p56, %r99, 0;
	mov.f32 	%f197, 0f00000000;
	mov.u32 	%r144, 0;
	@%p56 bra 	BB3_50;

	setp.eq.s32	%p57, %r99, 1;
	mov.f32 	%f194, 0f00000000;
	mov.u32 	%r142, 0;
	@%p57 bra 	BB3_49;

	setp.eq.s32	%p58, %r99, 2;
	mov.f32 	%f193, 0f00000000;
	mov.u32 	%r141, 0;
	@%p58 bra 	BB3_48;

	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd39;
	ld.local.u32 	%r105, [%rd40];
	cvt.rn.f32.u32	%f167, %r105;
	sub.f32 	%f168, %f167, %f32;
	fma.rn.f32 	%f193, %f168, %f168, 0f00000000;
	mov.u32 	%r141, 1;

BB3_48:
	add.u64 	%rd41, %SP, 0;
	cvta.to.local.u64 	%rd42, %rd41;
	mul.wide.u32 	%rd43, %r141, 4;
	add.s64 	%rd44, %rd42, %rd43;
	ld.local.u32 	%r106, [%rd44];
	cvt.rn.f32.u32	%f169, %r106;
	sub.f32 	%f170, %f169, %f32;
	fma.rn.f32 	%f194, %f170, %f170, %f193;
	add.s32 	%r142, %r141, 1;

BB3_49:
	add.u64 	%rd45, %SP, 0;
	cvta.to.local.u64 	%rd46, %rd45;
	mul.wide.u32 	%rd47, %r142, 4;
	add.s64 	%rd48, %rd46, %rd47;
	ld.local.u32 	%r107, [%rd48];
	cvt.rn.f32.u32	%f171, %r107;
	sub.f32 	%f172, %f171, %f32;
	fma.rn.f32 	%f197, %f172, %f172, %f194;
	add.s32 	%r144, %r142, 1;

BB3_50:
	add.u64 	%rd49, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd49;
	setp.lt.u32	%p59, %r8, 4;
	@%p59 bra 	BB3_52;

BB3_51:
	mul.wide.u32 	%rd50, %r144, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.u32 	%r108, [%rd51];
	cvt.rn.f32.u32	%f173, %r108;
	sub.f32 	%f174, %f173, %f32;
	fma.rn.f32 	%f175, %f174, %f174, %f197;
	add.s32 	%r109, %r144, 1;
	mul.wide.u32 	%rd52, %r109, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.u32 	%r110, [%rd53];
	cvt.rn.f32.u32	%f176, %r110;
	sub.f32 	%f177, %f176, %f32;
	fma.rn.f32 	%f178, %f177, %f177, %f175;
	add.s32 	%r111, %r144, 2;
	mul.wide.u32 	%rd54, %r111, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.u32 	%r112, [%rd55];
	cvt.rn.f32.u32	%f179, %r112;
	sub.f32 	%f180, %f179, %f32;
	fma.rn.f32 	%f181, %f180, %f180, %f178;
	add.s32 	%r113, %r144, 3;
	mul.wide.u32 	%rd56, %r113, 4;
	add.s64 	%rd57, %rd1, %rd56;
	ld.local.u32 	%r114, [%rd57];
	cvt.rn.f32.u32	%f182, %r114;
	sub.f32 	%f183, %f182, %f32;
	fma.rn.f32 	%f197, %f183, %f183, %f181;
	add.s32 	%r144, %r144, 4;
	setp.lt.u32	%p60, %r144, %r8;
	@%p60 bra 	BB3_51;

BB3_52:
	add.s32 	%r115, %r8, -1;
	cvt.rn.f32.u32	%f184, %r115;
	div.rn.f32 	%f185, %f197, %f184;
	div.rn.f32 	%f42, %f185, %f32;
	setp.ne.s32	%p61, %r8, 1;
	@%p61 bra 	BB3_54;

	// inline asm
	activemask.b32 %r116;
	// inline asm
	add.u64 	%rd58, %SP, 0;
	cvta.to.local.u64 	%rd59, %rd58;
	ld.local.v2.u32 	{%r118, %r119}, [%rd59];
	setp.eq.s32	%p62, %r118, %r119;
	vote.sync.all.pred 	%p63, %p62, %r116;
	mov.u32 	%r145, 2;
	@%p63 bra 	BB3_56;

BB3_54:
	// inline asm
	activemask.b32 %r123;
	// inline asm
	setp.lt.f32	%p64, %f42, 0f3C23D70A;
	vote.sync.all.pred 	%p65, %p64, %r123;
	mov.u32 	%r145, %r132;
	@%p65 bra 	BB3_56;

	// inline asm
	activemask.b32 %r125;
	// inline asm
	setp.le.f32	%p66, %f42, 0f3F800000;
	vote.sync.all.pred 	%p67, %p66, %r125;
	setp.ge.u32	%p68, %r8, %r96;
	and.pred  	%p69, %p67, %p68;
	selp.b32	%r145, %r132, %r10, %p69;

BB3_56:
	cvt.rn.f32.u32	%f189, %r145;
	setp.lt.u32	%p70, %r132, %r145;
	@%p70 bra 	BB3_21;
	bra.uni 	BB3_57;

BB3_19:
	mov.u32 	%r145, %r146;

BB3_57:
	div.u32 	%r128, %r146, %r145;
	cvt.rn.f32.u32	%f188, %r128;
	mov.u16 	%rs4, 0;

BB3_58:
	mul.lo.s32 	%r129, %r4, %r35;
	cvt.u64.u32	%rd60, %r129;
	cvta.to.global.u64 	%rd61, %rd2;
	add.s64 	%rd62, %rd61, %rd60;
	mul.wide.u32 	%rd63, %r3, 16;
	add.s64 	%rd64, %rd62, %rd63;
	st.global.f32 	[%rd64], %f188;
	st.global.f32 	[%rd64+4], %f189;
	mov.u32 	%r130, 0;
	st.global.u32 	[%rd64+12], %r130;
	st.global.u8 	[%rd64+8], %rs4;
	setp.gt.f32	%p71, %f189, 0f00000000;
	@%p71 bra 	BB3_60;

	mov.u64 	%rd65, $str6;
	cvta.global.u64 	%rd66, %rd65;
	mov.u64 	%rd67, $str1;
	cvta.global.u64 	%rd68, %rd67;
	mov.u32 	%r131, 408;
	mov.u64 	%rd69, 0;
	mov.u64 	%rd70, 2;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd66;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd68;
	.param .b32 param2;
	st.param.b32	[param2+0], %r131;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd69;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd70;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB3_60:
	ret;
}

	// .globl	fractalRenderAdvancedDouble
.visible .entry fractalRenderAdvancedDouble(
	.param .u64 fractalRenderAdvancedDouble_param_0,
	.param .u32 fractalRenderAdvancedDouble_param_1,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_2[8],
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_3[32],
	.param .u32 fractalRenderAdvancedDouble_param_4,
	.param .u32 fractalRenderAdvancedDouble_param_5,
	.param .u32 fractalRenderAdvancedDouble_param_6,
	.param .align 8 .b8 fractalRenderAdvancedDouble_param_7[32],
	.param .u64 fractalRenderAdvancedDouble_param_8,
	.param .u32 fractalRenderAdvancedDouble_param_9,
	.param .align 4 .b8 fractalRenderAdvancedDouble_param_10[8]
)
{
	.local .align 8 .b8 	__local_depot4[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<75>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<24>;
	.reg .b32 	%r<152>;
	.reg .f64 	%fd<178>;
	.reg .b64 	%rd<71>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [fractalRenderAdvancedDouble_param_0];
	ld.param.u32 	%r35, [fractalRenderAdvancedDouble_param_1];
	ld.param.u32 	%r37, [fractalRenderAdvancedDouble_param_2+4];
	ld.param.u32 	%r36, [fractalRenderAdvancedDouble_param_2];
	ld.param.f64 	%fd41, [fractalRenderAdvancedDouble_param_3+24];
	ld.param.f64 	%fd40, [fractalRenderAdvancedDouble_param_3+16];
	ld.param.f64 	%fd39, [fractalRenderAdvancedDouble_param_3+8];
	ld.param.f64 	%fd38, [fractalRenderAdvancedDouble_param_3];
	ld.param.u32 	%r38, [fractalRenderAdvancedDouble_param_4];
	ld.param.u32 	%r39, [fractalRenderAdvancedDouble_param_5];
	ld.param.u32 	%r40, [fractalRenderAdvancedDouble_param_6];
	ld.param.f64 	%fd45, [fractalRenderAdvancedDouble_param_7+24];
	ld.param.f64 	%fd44, [fractalRenderAdvancedDouble_param_7+16];
	ld.param.f64 	%fd43, [fractalRenderAdvancedDouble_param_7+8];
	ld.param.f64 	%fd42, [fractalRenderAdvancedDouble_param_7];
	ld.param.u64 	%rd3, [fractalRenderAdvancedDouble_param_8];
	ld.param.u32 	%r41, [fractalRenderAdvancedDouble_param_9];
	ld.param.u32 	%r43, [fractalRenderAdvancedDouble_param_10+4];
	ld.param.u32 	%r42, [fractalRenderAdvancedDouble_param_10];
	mov.u32 	%r44, %ntid.x;
	setp.eq.s32	%p6, %r44, 32;
	@%p6 bra 	BB4_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r45, 71;
	mov.u64 	%rd8, 0;
	mov.u64 	%rd9, 2;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r45;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB4_2:
	mov.u32 	%r46, %tid.y;
	mov.u32 	%r48, %tid.x;
	mad.lo.s32 	%r49, %r44, %r46, %r48;
	and.b32  	%r50, %r49, 15;
	shl.b32 	%r51, %r44, 2;
	rem.u32 	%r52, %r49, %r51;
	sub.s32 	%r53, %r52, %r50;
	shr.u32 	%r54, %r53, 2;
	and.b32  	%r55, %r49, 3;
	add.s32 	%r56, %r54, %r55;
	div.u32 	%r57, %r49, %r51;
	shl.b32 	%r58, %r57, 2;
	bfe.u32 	%r59, %r49, 2, 2;
	add.s32 	%r60, %r58, %r59;
	mov.u32 	%r61, %ctaid.x;
	mad.lo.s32 	%r3, %r61, %r44, %r56;
	mov.u32 	%r62, %ctaid.y;
	mov.u32 	%r63, %ntid.y;
	mad.lo.s32 	%r4, %r62, %r63, %r60;
	setp.lt.u32	%p7, %r3, %r36;
	setp.lt.u32	%p8, %r4, %r37;
	and.pred  	%p9, %p7, %p8;
	@!%p9 bra 	BB4_59;
	bra.uni 	BB4_3;

BB4_3:
	and.b32  	%r64, %r40, 8;
	setp.eq.s32	%p11, %r64, 0;
	mov.pred 	%p72, -1;
	mov.f32 	%f20, 0f00000000;
	@%p11 bra 	BB4_4;

	cvt.rn.f64.u32	%fd46, %r3;
	cvt.rn.f64.u32	%fd47, %r37;
	cvt.rn.f64.u32	%fd48, %r4;
	sub.f64 	%fd49, %fd47, %fd48;
	cvt.rn.f64.u32	%fd50, %r36;
	div.rn.f64 	%fd51, %fd46, %fd50;
	div.rn.f64 	%fd52, %fd49, %fd47;
	sub.f64 	%fd53, %fd40, %fd38;
	sub.f64 	%fd54, %fd41, %fd39;
	fma.rn.f64 	%fd55, %fd53, %fd51, %fd38;
	fma.rn.f64 	%fd56, %fd54, %fd52, %fd39;
	sub.f64 	%fd57, %fd55, %fd42;
	sub.f64 	%fd58, %fd56, %fd43;
	sub.f64 	%fd59, %fd44, %fd42;
	div.rn.f64 	%fd60, %fd57, %fd59;
	sub.f64 	%fd61, %fd45, %fd43;
	div.rn.f64 	%fd62, %fd58, %fd61;
	mul.f64 	%fd5, %fd50, %fd60;
	mul.f64 	%fd63, %fd47, %fd62;
	sub.f64 	%fd6, %fd47, %fd63;
	abs.f64 	%fd7, %fd5;
	setp.ge.f64	%p12, %fd7, 0d4330000000000000;
	mov.f64 	%fd169, %fd5;
	@%p12 bra 	BB4_7;

	add.f64 	%fd64, %fd7, 0d3FE0000000000000;
	cvt.rzi.f64.f64	%fd65, %fd64;
	setp.lt.f64	%p13, %fd7, 0d3FE0000000000000;
	selp.f64	%fd66, 0d0000000000000000, %fd65, %p13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r65, %temp}, %fd66;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r66}, %fd66;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r67}, %fd5;
	}
	and.b32  	%r68, %r67, -2147483648;
	or.b32  	%r69, %r66, %r68;
	mov.b64 	%fd169, {%r65, %r69};

BB4_7:
	cvt.rzi.s32.f64	%r5, %fd169;
	abs.f64 	%fd10, %fd6;
	setp.ge.f64	%p14, %fd10, 0d4330000000000000;
	mov.f64 	%fd170, %fd6;
	@%p14 bra 	BB4_9;

	add.f64 	%fd67, %fd10, 0d3FE0000000000000;
	cvt.rzi.f64.f64	%fd68, %fd67;
	setp.lt.f64	%p15, %fd10, 0d3FE0000000000000;
	selp.f64	%fd69, 0d0000000000000000, %fd68, %p15;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r70, %temp}, %fd69;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r71}, %fd69;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r72}, %fd6;
	}
	and.b32  	%r73, %r72, -2147483648;
	or.b32  	%r74, %r71, %r73;
	mov.b64 	%fd170, {%r70, %r74};

BB4_9:
	add.s32 	%r75, %r36, -2;
	setp.lt.u32	%p17, %r5, %r75;
	setp.gt.s32	%p18, %r5, 1;
	and.pred  	%p19, %p18, %p17;
	cvt.rzi.s32.f64	%r6, %fd170;
	setp.gt.s32	%p20, %r6, 1;
	and.pred  	%p21, %p19, %p20;
	add.s32 	%r76, %r37, -2;
	setp.lt.u32	%p22, %r6, %r76;
	and.pred  	%p23, %p22, %p21;
	mov.f32 	%f21, %f20;
	@!%p23 bra 	BB4_13;
	bra.uni 	BB4_10;

BB4_10:
	sub.s32 	%r77, %r5, %r42;
	abs.s32 	%r78, %r77;
	setp.gt.s32	%p24, %r78, 19;
	@%p24 bra 	BB4_12;

	sub.s32 	%r79, %r6, %r43;
	abs.s32 	%r80, %r79;
	setp.lt.s32	%p26, %r80, 20;
	mov.f32 	%f21, %f20;
	@%p26 bra 	BB4_13;

BB4_12:
	cvt.rmi.f64.f64	%fd70, %fd5;
	cvt.rzi.u32.f64	%r81, %fd70;
	cvt.rmi.f64.f64	%fd71, %fd6;
	cvt.rzi.u32.f64	%r82, %fd71;
	cvt.rn.f64.u32	%fd72, %r81;
	sub.f64 	%fd73, %fd5, %fd72;
	cvt.rn.f64.u32	%fd74, %r82;
	sub.f64 	%fd75, %fd6, %fd74;
	mul.lo.s32 	%r83, %r82, %r41;
	cvt.u64.u32	%rd10, %r83;
	cvta.to.global.u64 	%rd11, %rd3;
	add.s64 	%rd12, %rd11, %rd10;
	mul.wide.u32 	%rd13, %r81, 16;
	add.s64 	%rd14, %rd12, %rd13;
	add.s32 	%r84, %r81, 1;
	mul.wide.u32 	%rd15, %r84, 16;
	add.s64 	%rd16, %rd12, %rd15;
	add.s32 	%r85, %r82, 1;
	mul.lo.s32 	%r86, %r85, %r41;
	cvt.u64.u32	%rd17, %r86;
	add.s64 	%rd18, %rd11, %rd17;
	add.s64 	%rd19, %rd18, %rd13;
	add.s64 	%rd20, %rd18, %rd15;
	ld.global.f32 	%f15, [%rd14];
	cvt.f64.f32	%fd76, %f15;
	mov.f64 	%fd77, 0d3FF0000000000000;
	sub.f64 	%fd78, %fd77, %fd73;
	ld.global.f32 	%f16, [%rd16];
	cvt.f64.f32	%fd79, %f16;
	mul.f64 	%fd80, %fd73, %fd79;
	fma.rn.f64 	%fd81, %fd78, %fd76, %fd80;
	sub.f64 	%fd82, %fd77, %fd75;
	ld.global.f32 	%f17, [%rd19];
	cvt.f64.f32	%fd83, %f17;
	ld.global.f32 	%f18, [%rd20];
	cvt.f64.f32	%fd84, %f18;
	mul.f64 	%fd85, %fd73, %fd84;
	fma.rn.f64 	%fd86, %fd78, %fd83, %fd85;
	mul.f64 	%fd87, %fd75, %fd86;
	fma.rn.f64 	%fd88, %fd82, %fd81, %fd87;
	cvt.rn.f32.f64	%f20, %fd88;
	mov.pred 	%p72, 0;
	mov.f32 	%f21, 0f3F800000;
	bra.uni 	BB4_13;

BB4_4:
	mov.f32 	%f21, %f20;

BB4_13:
	mov.u16 	%rs4, 1;
	@!%p72 bra 	BB4_57;
	bra.uni 	BB4_14;

BB4_14:
	setp.ne.s32	%p28, %r39, 0;
	@%p28 bra 	BB4_16;

	mov.u64 	%rd21, $str5;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r87, 401;
	mov.u64 	%rd25, 0;
	mov.u64 	%rd26, 2;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r87;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB4_16:
	cvt.rn.f64.u32	%fd89, %r36;
	sub.f64 	%fd90, %fd40, %fd38;
	div.rn.f64 	%fd13, %fd90, %fd89;
	cvt.rn.f64.u32	%fd91, %r37;
	sub.f64 	%fd92, %fd41, %fd39;
	div.rn.f64 	%fd14, %fd92, %fd91;
	setp.lt.u32	%p29, %r39, 65;
	@%p29 bra 	BB4_18;

	mov.u64 	%rd27, $str7;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, $str1;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r88, 119;
	mov.u64 	%rd31, 0;
	mov.u64 	%rd32, 2;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r88;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB4_18:
	setp.eq.s32	%p30, %r39, 0;
	mov.u32 	%r150, 0;
	mov.u32 	%r149, %r150;
	@%p30 bra 	BB4_56;

	cvt.rn.f64.u32	%fd15, %r3;
	cvt.rn.f64.u32	%fd16, %r4;
	mul.wide.u32 	%rd33, %r38, -858993459;
	shr.u64 	%rd34, %rd33, 35;
	cvt.u32.u64	%r7, %rd34;
	mov.u32 	%r92, 0;
	mov.u32 	%r136, %r92;
	mov.u32 	%r150, %r92;
	mov.u32 	%r149, %r39;

BB4_20:
	mov.u32 	%r10, %r149;
	mov.u32 	%r8, %r136;
	cvt.rn.f64.u32	%fd93, %r10;
	cvt.rn.f64.u32	%fd94, %r8;
	div.rn.f64 	%fd95, %fd94, %fd93;
	add.f64 	%fd96, %fd15, %fd95;
	add.f64 	%fd97, %fd16, %fd95;
	neg.f64 	%fd98, %fd97;
	fma.rn.f64 	%fd172, %fd13, %fd96, %fd38;
	fma.rn.f64 	%fd171, %fd14, %fd98, %fd41;
	setp.eq.s32	%p31, %r38, 0;
	mov.u32 	%r139, 10;
	mov.u32 	%r140, %r92;
	@%p31 bra 	BB4_32;

BB4_21:
	mul.f64 	%fd99, %fd171, %fd171;
	mul.f64 	%fd100, %fd172, %fd172;
	sub.f64 	%fd101, %fd100, %fd99;
	mul.f64 	%fd102, %fd172, %fd171;
	fma.rn.f64 	%fd103, %fd172, %fd171, %fd102;
	mul.f64 	%fd104, %fd172, %fd101;
	mul.f64 	%fd105, %fd171, %fd103;
	sub.f64 	%fd106, %fd104, %fd105;
	mul.f64 	%fd107, %fd172, %fd103;
	fma.rn.f64 	%fd108, %fd171, %fd101, %fd107;
	add.f64 	%fd109, %fd106, 0dBFF0000000000000;
	mul.f64 	%fd110, %fd101, 0d4008000000000000;
	mul.f64 	%fd111, %fd103, 0d4008000000000000;
	abs.f64 	%fd112, %fd110;
	abs.f64 	%fd113, %fd111;
	add.f64 	%fd114, %fd112, %fd113;
	rcp.rn.f64 	%fd115, %fd114;
	mul.f64 	%fd116, %fd109, %fd115;
	mul.f64 	%fd117, %fd108, %fd115;
	mul.f64 	%fd118, %fd110, %fd115;
	mul.f64 	%fd119, %fd111, %fd115;
	mul.f64 	%fd120, %fd119, %fd119;
	fma.rn.f64 	%fd121, %fd118, %fd118, %fd120;
	rcp.rn.f64 	%fd122, %fd121;
	mul.f64 	%fd123, %fd117, %fd119;
	fma.rn.f64 	%fd124, %fd116, %fd118, %fd123;
	mul.f64 	%fd125, %fd122, %fd124;
	mul.f64 	%fd126, %fd117, %fd118;
	mul.f64 	%fd127, %fd116, %fd119;
	sub.f64 	%fd128, %fd126, %fd127;
	mul.f64 	%fd129, %fd122, %fd128;
	sub.f64 	%fd172, %fd172, %fd125;
	sub.f64 	%fd171, %fd171, %fd129;
	add.s32 	%r140, %r140, 1;
	setp.ne.s32	%p32, %r140, %r139;
	@%p32 bra 	BB4_31;

	add.f64 	%fd130, %fd172, 0dBFF0000000000000;
	abs.f64 	%fd131, %fd130;
	setp.geu.f64	%p33, %fd131, 0d3F1A36E2EB1C432D;
	@%p33 bra 	BB4_24;

	abs.f64 	%fd132, %fd171;
	setp.lt.f64	%p34, %fd132, 0d3F1A36E2EB1C432D;
	mov.u32 	%r144, 1;
	@%p34 bra 	BB4_29;

BB4_24:
	add.f64 	%fd133, %fd172, 0d3FE0000000000000;
	abs.f64 	%fd23, %fd133;
	setp.geu.f64	%p35, %fd23, 0d3F1A36E2EB1C432D;
	@%p35 bra 	BB4_26;

	add.f64 	%fd134, %fd171, 0dBFEBB67AE857B07F;
	abs.f64 	%fd135, %fd134;
	setp.lt.f64	%p36, %fd135, 0d3F1A36E2EB1C432D;
	mov.u32 	%r144, 2;
	@%p36 bra 	BB4_29;

BB4_26:
	mov.pred 	%p73, 0;
	@%p35 bra 	BB4_28;

	add.f64 	%fd136, %fd171, 0d3FEBB67AE857B07F;
	abs.f64 	%fd137, %fd136;
	setp.lt.f64	%p73, %fd137, 0d3F1A36E2EB1C432D;

BB4_28:
	selp.b32	%r144, 3, 0, %p73;

BB4_29:
	setp.ne.s32	%p39, %r144, 0;
	@%p39 bra 	BB4_39;

	add.s32 	%r16, %r7, %r139;
	mov.u32 	%r140, %r139;
	mov.u32 	%r139, %r16;

BB4_31:
	setp.lt.u32	%p40, %r140, %r38;
	@%p40 bra 	BB4_21;

BB4_32:
	add.f64 	%fd138, %fd172, 0dBFF0000000000000;
	abs.f64 	%fd139, %fd138;
	setp.geu.f64	%p41, %fd139, 0d3F1A36E2EB1C432D;
	@%p41 bra 	BB4_34;

	abs.f64 	%fd140, %fd171;
	setp.lt.f64	%p42, %fd140, 0d3F1A36E2EB1C432D;
	mov.u32 	%r144, 1;
	@%p42 bra 	BB4_39;

BB4_34:
	add.f64 	%fd141, %fd172, 0d3FE0000000000000;
	abs.f64 	%fd26, %fd141;
	setp.geu.f64	%p43, %fd26, 0d3F1A36E2EB1C432D;
	@%p43 bra 	BB4_36;

	add.f64 	%fd142, %fd171, 0dBFEBB67AE857B07F;
	abs.f64 	%fd143, %fd142;
	setp.lt.f64	%p44, %fd143, 0d3F1A36E2EB1C432D;
	mov.u32 	%r144, 2;
	@%p44 bra 	BB4_39;

BB4_36:
	mov.pred 	%p74, 0;
	@%p43 bra 	BB4_38;

	add.f64 	%fd144, %fd171, 0d3FEBB67AE857B07F;
	abs.f64 	%fd145, %fd144;
	setp.lt.f64	%p74, %fd145, 0d3F1A36E2EB1C432D;

BB4_38:
	selp.b32	%r144, 3, 0, %p74;

BB4_39:
	cvt.rn.f32.u32	%f19, %r144;
	cvt.rzi.u32.f32	%r21, %f19;
	add.s32 	%r150, %r21, %r150;
	setp.gt.u32	%p47, %r8, 9;
	@%p47 bra 	BB4_41;

	add.u64 	%rd35, %SP, 0;
	cvta.to.local.u64 	%rd36, %rd35;
	mul.wide.u32 	%rd37, %r8, 4;
	add.s64 	%rd38, %rd36, %rd37;
	st.local.u32 	[%rd38], %r21;

BB4_41:
	setp.lt.u32	%p48, %r8, 10;
	and.b32  	%r99, %r40, 1;
	setp.eq.b32	%p49, %r99, 1;
	setp.ne.s32	%p50, %r8, 0;
	and.pred  	%p51, %p48, %p50;
	and.pred  	%p52, %p51, %p49;
	shr.u32 	%r100, %r10, 1;
	setp.eq.s32	%p53, %r8, %r100;
	or.pred  	%p54, %p52, %p53;
	add.s32 	%r136, %r8, 1;
	mov.u32 	%r149, %r10;
	@!%p54 bra 	BB4_55;
	bra.uni 	BB4_42;

BB4_42:
	div.u32 	%r101, %r150, %r136;
	cvt.rn.f64.u32	%fd27, %r101;
	setp.eq.s32	%p55, %r8, 0;
	mov.f64 	%fd177, 0d0000000000000000;
	@%p55 bra 	BB4_51;

	and.b32  	%r103, %r8, 3;
	setp.eq.s32	%p56, %r103, 0;
	mov.f64 	%fd177, 0d0000000000000000;
	mov.u32 	%r148, 0;
	@%p56 bra 	BB4_49;

	setp.eq.s32	%p57, %r103, 1;
	mov.f64 	%fd174, 0d0000000000000000;
	mov.u32 	%r146, 0;
	@%p57 bra 	BB4_48;

	setp.eq.s32	%p58, %r103, 2;
	mov.f64 	%fd173, 0d0000000000000000;
	mov.u32 	%r145, 0;
	@%p58 bra 	BB4_47;

	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd40, %rd39;
	ld.local.u32 	%r109, [%rd40];
	cvt.rn.f64.u32	%fd150, %r109;
	sub.f64 	%fd151, %fd150, %fd27;
	fma.rn.f64 	%fd173, %fd151, %fd151, 0d0000000000000000;
	mov.u32 	%r145, 1;

BB4_47:
	add.u64 	%rd41, %SP, 0;
	cvta.to.local.u64 	%rd42, %rd41;
	mul.wide.u32 	%rd43, %r145, 4;
	add.s64 	%rd44, %rd42, %rd43;
	ld.local.u32 	%r110, [%rd44];
	cvt.rn.f64.u32	%fd152, %r110;
	sub.f64 	%fd153, %fd152, %fd27;
	fma.rn.f64 	%fd174, %fd153, %fd153, %fd173;
	add.s32 	%r146, %r145, 1;

BB4_48:
	add.u64 	%rd45, %SP, 0;
	cvta.to.local.u64 	%rd46, %rd45;
	mul.wide.u32 	%rd47, %r146, 4;
	add.s64 	%rd48, %rd46, %rd47;
	ld.local.u32 	%r111, [%rd48];
	cvt.rn.f64.u32	%fd154, %r111;
	sub.f64 	%fd155, %fd154, %fd27;
	fma.rn.f64 	%fd177, %fd155, %fd155, %fd174;
	add.s32 	%r148, %r146, 1;

BB4_49:
	add.u64 	%rd49, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd49;
	setp.lt.u32	%p59, %r8, 4;
	@%p59 bra 	BB4_51;

BB4_50:
	mul.wide.u32 	%rd50, %r148, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.local.u32 	%r112, [%rd51];
	cvt.rn.f64.u32	%fd156, %r112;
	sub.f64 	%fd157, %fd156, %fd27;
	fma.rn.f64 	%fd158, %fd157, %fd157, %fd177;
	add.s32 	%r113, %r148, 1;
	mul.wide.u32 	%rd52, %r113, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.local.u32 	%r114, [%rd53];
	cvt.rn.f64.u32	%fd159, %r114;
	sub.f64 	%fd160, %fd159, %fd27;
	fma.rn.f64 	%fd161, %fd160, %fd160, %fd158;
	add.s32 	%r115, %r148, 2;
	mul.wide.u32 	%rd54, %r115, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.local.u32 	%r116, [%rd55];
	cvt.rn.f64.u32	%fd162, %r116;
	sub.f64 	%fd163, %fd162, %fd27;
	fma.rn.f64 	%fd164, %fd163, %fd163, %fd161;
	add.s32 	%r117, %r148, 3;
	mul.wide.u32 	%rd56, %r117, 4;
	add.s64 	%rd57, %rd1, %rd56;
	ld.local.u32 	%r118, [%rd57];
	cvt.rn.f64.u32	%fd165, %r118;
	sub.f64 	%fd166, %fd165, %fd27;
	fma.rn.f64 	%fd177, %fd166, %fd166, %fd164;
	add.s32 	%r148, %r148, 4;
	setp.lt.u32	%p60, %r148, %r8;
	@%p60 bra 	BB4_50;

BB4_51:
	add.s32 	%r119, %r8, -1;
	cvt.rn.f64.u32	%fd167, %r119;
	div.rn.f64 	%fd168, %fd177, %fd167;
	div.rn.f64 	%fd37, %fd168, %fd27;
	setp.ne.s32	%p61, %r8, 1;
	@%p61 bra 	BB4_53;

	// inline asm
	activemask.b32 %r120;
	// inline asm
	add.u64 	%rd58, %SP, 0;
	cvta.to.local.u64 	%rd59, %rd58;
	ld.local.v2.u32 	{%r122, %r123}, [%rd59];
	setp.eq.s32	%p62, %r122, %r123;
	vote.sync.all.pred 	%p63, %p62, %r120;
	mov.u32 	%r149, 2;
	@%p63 bra 	BB4_55;

BB4_53:
	// inline asm
	activemask.b32 %r127;
	// inline asm
	setp.lt.f64	%p64, %fd37, 0d3F847AE140000000;
	vote.sync.all.pred 	%p65, %p64, %r127;
	mov.u32 	%r149, %r136;
	@%p65 bra 	BB4_55;

	// inline asm
	activemask.b32 %r129;
	// inline asm
	setp.le.f64	%p66, %fd37, 0d3FF0000000000000;
	vote.sync.all.pred 	%p67, %p66, %r129;
	setp.ge.u32	%p68, %r8, %r100;
	and.pred  	%p69, %p67, %p68;
	selp.b32	%r149, %r136, %r10, %p69;

BB4_55:
	setp.lt.u32	%p70, %r136, %r149;
	@%p70 bra 	BB4_20;

BB4_56:
	div.u32 	%r132, %r150, %r149;
	cvt.rn.f32.u32	%f20, %r132;
	cvt.rn.f32.u32	%f21, %r149;
	mov.u16 	%rs4, 0;

BB4_57:
	mul.lo.s32 	%r133, %r4, %r35;
	cvt.u64.u32	%rd60, %r133;
	cvta.to.global.u64 	%rd61, %rd2;
	add.s64 	%rd62, %rd61, %rd60;
	mul.wide.u32 	%rd63, %r3, 16;
	add.s64 	%rd64, %rd62, %rd63;
	st.global.f32 	[%rd64], %f20;
	st.global.f32 	[%rd64+4], %f21;
	mov.u32 	%r134, 0;
	st.global.u32 	[%rd64+12], %r134;
	st.global.u8 	[%rd64+8], %rs4;
	setp.gt.f32	%p71, %f21, 0f00000000;
	@%p71 bra 	BB4_59;

	mov.u64 	%rd65, $str6;
	cvta.global.u64 	%rd66, %rd65;
	mov.u64 	%rd67, $str1;
	cvta.global.u64 	%rd68, %rd67;
	mov.u32 	%r135, 408;
	mov.u64 	%rd69, 0;
	mov.u64 	%rd70, 2;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd66;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd68;
	.param .b32 param2;
	st.param.b32	[param2+0], %r135;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd69;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd70;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 13

BB4_59:
	ret;
}

	// .globl	compose
.visible .entry compose(
	.param .u64 compose_param_0,
	.param .u32 compose_param_1,
	.param .u64 compose_param_2,
	.param .u32 compose_param_3,
	.param .u64 compose_param_4,
	.param .u32 compose_param_5,
	.param .u32 compose_param_6,
	.param .u64 compose_param_7,
	.param .u32 compose_param_8,
	.param .u32 compose_param_9
)
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<15>;
	.reg .b32 	%r<33>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd2, [compose_param_0];
	ld.param.u32 	%r5, [compose_param_1];
	ld.param.u64 	%rd3, [compose_param_4];
	ld.param.u32 	%r7, [compose_param_5];
	ld.param.u32 	%r8, [compose_param_6];
	ld.param.u32 	%r6, [compose_param_9];
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r1, %r10, %r9, %r11;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %ntid.y;
	mov.u32 	%r14, %tid.y;
	mad.lo.s32 	%r2, %r12, %r13, %r14;
	setp.ge.u32	%p1, %r2, %r8;
	setp.ge.u32	%p2, %r1, %r7;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_12;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.lo.s32 	%r15, %r2, %r5;
	cvt.u64.u32	%rd5, %r15;
	add.s64 	%rd6, %rd4, %rd5;
	mul.wide.u32 	%rd7, %r1, 16;
	add.s64 	%rd1, %rd6, %rd7;
	ld.const.u8 	%rs1, [VISUALIZE_SAMPLE_COUNT];
	setp.eq.s16	%p4, %rs1, 0;
	@%p4 bra 	BB5_3;

	ld.global.f32 	%f5, [%rd1+4];
	cvt.rzi.u32.f32	%r16, %f5;
	min.u32 	%r17, %r16, %r6;
	cvt.rn.f32.u32	%f6, %r17;
	cvt.rn.f32.u32	%f7, %r6;
	div.rn.f32 	%f8, %f6, %f7;
	mul.f32 	%f9, %f8, 0f437F0000;
	cvt.rzi.s32.f32	%r18, %f9;
	and.b32  	%r19, %r18, 255;
	prmt.b32 	%r20, %r19, %r19, 30212;
	prmt.b32 	%r21, %r19, %r20, 28756;
	or.b32  	%r22, %r21, -16777216;
	ld.global.u8 	%rs2, [%rd1+8];
	setp.eq.s16	%p5, %rs2, 0;
	selp.b32	%r32, %r22, -16777216, %p5;
	bra.uni 	BB5_11;

BB5_3:
	ld.global.f32 	%f1, [%rd1];
	abs.f32 	%f10, %f1;
	mov.b32 	 %r23, %f1;
	and.b32  	%r24, %r23, -2147483648;
	or.b32  	%r25, %r24, 1056964608;
	mov.b32 	 %f11, %r25;
	add.f32 	%f12, %f1, %f11;
	cvt.rzi.f32.f32	%f13, %f12;
	setp.gt.f32	%p6, %f10, 0f4B000000;
	selp.f32	%f14, %f1, %f13, %p6;
	setp.geu.f32	%p7, %f10, 0f3F000000;
	@%p7 bra 	BB5_5;

	cvt.rzi.f32.f32	%f14, %f1;

BB5_5:
	cvt.rzi.u32.f32	%r27, %f14;
	mov.u32 	%r32, -16776961;
	setp.eq.s32	%p8, %r27, 1;
	@%p8 bra 	BB5_11;

	setp.eq.s32	%p9, %r27, 2;
	@%p9 bra 	BB5_9;
	bra.uni 	BB5_7;

BB5_9:
	mov.u32 	%r32, -16711936;
	bra.uni 	BB5_11;

BB5_7:
	setp.ne.s32	%p10, %r27, 3;
	@%p10 bra 	BB5_10;

	mov.u32 	%r32, -65536;
	bra.uni 	BB5_11;

BB5_10:
	mov.u32 	%r32, -16777216;

BB5_11:
	shl.b32 	%r31, %r1, 2;
	sust.b.2d.b32.trap 	[%rd3, {%r31, %r2}], {%r32};

BB5_12:
	ret;
}

	// .globl	fractalRenderUnderSampled
.visible .entry fractalRenderUnderSampled(
	.param .u64 fractalRenderUnderSampled_param_0,
	.param .u32 fractalRenderUnderSampled_param_1,
	.param .u32 fractalRenderUnderSampled_param_2,
	.param .u32 fractalRenderUnderSampled_param_3,
	.param .f32 fractalRenderUnderSampled_param_4,
	.param .f32 fractalRenderUnderSampled_param_5,
	.param .f32 fractalRenderUnderSampled_param_6,
	.param .f32 fractalRenderUnderSampled_param_7,
	.param .u32 fractalRenderUnderSampled_param_8,
	.param .u32 fractalRenderUnderSampled_param_9
)
{
	.reg .pred 	%p<28>;
	.reg .b16 	%rs<5>;
	.reg .f32 	%f<79>;
	.reg .b32 	%r<73>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [fractalRenderUnderSampled_param_0];
	ld.param.u32 	%r21, [fractalRenderUnderSampled_param_1];
	ld.param.u32 	%r22, [fractalRenderUnderSampled_param_2];
	ld.param.u32 	%r23, [fractalRenderUnderSampled_param_3];
	ld.param.f32 	%f12, [fractalRenderUnderSampled_param_4];
	ld.param.f32 	%f13, [fractalRenderUnderSampled_param_5];
	ld.param.f32 	%f14, [fractalRenderUnderSampled_param_6];
	ld.param.f32 	%f15, [fractalRenderUnderSampled_param_7];
	ld.param.u32 	%r24, [fractalRenderUnderSampled_param_8];
	ld.param.u32 	%r25, [fractalRenderUnderSampled_param_9];
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %ctaid.x;
	mov.u32 	%r28, %tid.x;
	mad.lo.s32 	%r29, %r27, %r26, %r28;
	mul.lo.s32 	%r1, %r29, %r25;
	mov.u32 	%r30, %ctaid.y;
	mov.u32 	%r31, %ntid.y;
	mov.u32 	%r32, %tid.y;
	mad.lo.s32 	%r33, %r30, %r31, %r32;
	mul.lo.s32 	%r2, %r33, %r25;
	sub.s32 	%r34, %r23, %r25;
	setp.ge.u32	%p3, %r2, %r34;
	sub.s32 	%r35, %r22, %r25;
	setp.ge.u32	%p4, %r1, %r35;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB6_28;

	sub.f32 	%f16, %f14, %f12;
	cvt.rn.f32.u32	%f17, %r22;
	div.rn.f32 	%f18, %f16, %f17;
	cvt.rn.f32.u32	%f19, %r23;
	sub.f32 	%f20, %f15, %f13;
	div.rn.f32 	%f21, %f20, %f19;
	cvt.rn.f32.u32	%f22, %r1;
	fma.rn.f32 	%f78, %f22, %f18, %f12;
	cvt.rn.f32.u32	%f23, %r2;
	mul.f32 	%f24, %f23, %f21;
	sub.f32 	%f77, %f15, %f24;
	setp.eq.s32	%p6, %r24, 0;
	@%p6 bra 	BB6_14;

	mul.wide.u32 	%rd3, %r24, -858993459;
	shr.u64 	%rd4, %rd3, 35;
	cvt.u32.u64	%r3, %rd4;
	mov.u32 	%r64, 0;
	mov.u32 	%r63, 10;

BB6_3:
	mul.f32 	%f25, %f77, %f77;
	mul.f32 	%f26, %f78, %f78;
	sub.f32 	%f27, %f26, %f25;
	mul.f32 	%f28, %f78, %f77;
	fma.rn.f32 	%f29, %f78, %f77, %f28;
	mul.f32 	%f30, %f78, %f27;
	mul.f32 	%f31, %f77, %f29;
	sub.f32 	%f32, %f30, %f31;
	mul.f32 	%f33, %f78, %f29;
	fma.rn.f32 	%f34, %f77, %f27, %f33;
	add.f32 	%f35, %f32, 0fBF800000;
	mul.f32 	%f36, %f27, 0f40400000;
	mul.f32 	%f37, %f29, 0f40400000;
	abs.f32 	%f38, %f36;
	abs.f32 	%f39, %f37;
	add.f32 	%f40, %f38, %f39;
	rcp.rn.f32 	%f41, %f40;
	mul.f32 	%f42, %f35, %f41;
	mul.f32 	%f43, %f34, %f41;
	mul.f32 	%f44, %f36, %f41;
	mul.f32 	%f45, %f37, %f41;
	mul.f32 	%f46, %f45, %f45;
	fma.rn.f32 	%f47, %f44, %f44, %f46;
	rcp.rn.f32 	%f48, %f47;
	mul.f32 	%f49, %f43, %f45;
	fma.rn.f32 	%f50, %f42, %f44, %f49;
	mul.f32 	%f51, %f48, %f50;
	mul.f32 	%f52, %f43, %f44;
	mul.f32 	%f53, %f42, %f45;
	sub.f32 	%f54, %f52, %f53;
	mul.f32 	%f55, %f48, %f54;
	sub.f32 	%f78, %f78, %f51;
	sub.f32 	%f77, %f77, %f55;
	add.s32 	%r64, %r64, 1;
	setp.ne.s32	%p7, %r64, %r63;
	@%p7 bra 	BB6_13;

	add.f32 	%f56, %f78, 0fBF800000;
	abs.f32 	%f57, %f56;
	setp.geu.f32	%p8, %f57, 0f38D1B717;
	@%p8 bra 	BB6_6;

	abs.f32 	%f58, %f77;
	setp.lt.f32	%p9, %f58, 0f38D1B717;
	mov.u32 	%r68, 1;
	@%p9 bra 	BB6_11;

BB6_6:
	add.f32 	%f59, %f78, 0f3F000000;
	abs.f32 	%f7, %f59;
	setp.geu.f32	%p10, %f7, 0f38D1B717;
	@%p10 bra 	BB6_8;

	add.f32 	%f60, %f77, 0fBF5DB3D7;
	abs.f32 	%f61, %f60;
	setp.lt.f32	%p11, %f61, 0f38D1B717;
	mov.u32 	%r68, 2;
	@%p11 bra 	BB6_11;

BB6_8:
	mov.pred 	%p27, 0;
	@%p10 bra 	BB6_10;

	add.f32 	%f62, %f77, 0f3F5DB3D7;
	abs.f32 	%f63, %f62;
	setp.lt.f32	%p27, %f63, 0f38D1B717;

BB6_10:
	selp.b32	%r68, 3, 0, %p27;

BB6_11:
	setp.ne.s32	%p14, %r68, 0;
	@%p14 bra 	BB6_19;

	add.s32 	%r9, %r3, %r63;
	mov.u32 	%r64, %r63;
	mov.u32 	%r63, %r9;

BB6_13:
	setp.lt.u32	%p15, %r64, %r24;
	@%p15 bra 	BB6_3;

BB6_14:
	add.f32 	%f64, %f78, 0fBF800000;
	abs.f32 	%f65, %f64;
	setp.geu.f32	%p16, %f65, 0f38D1B717;
	@%p16 bra 	BB6_16;

	abs.f32 	%f66, %f77;
	setp.lt.f32	%p17, %f66, 0f38D1B717;
	mov.u32 	%r68, 1;
	@%p17 bra 	BB6_19;

BB6_16:
	add.f32 	%f67, %f78, 0f3F000000;
	abs.f32 	%f68, %f67;
	mov.u32 	%r68, 0;
	setp.geu.f32	%p18, %f68, 0f38D1B717;
	@%p18 bra 	BB6_19;

	add.f32 	%f69, %f77, 0fBF5DB3D7;
	abs.f32 	%f70, %f69;
	setp.lt.f32	%p19, %f70, 0f38D1B717;
	selp.b32	%r68, 2, 0, %p19;
	@%p19 bra 	BB6_19;

	add.f32 	%f71, %f77, 0f3F5DB3D7;
	abs.f32 	%f72, %f71;
	setp.lt.f32	%p20, %f72, 0f38D1B717;
	selp.b32	%r68, 3, 0, %p20;

BB6_19:
	setp.eq.s32	%p21, %r25, 0;
	@%p21 bra 	BB6_28;

	cvt.rn.f32.u32	%f73, %r68;
	cvt.rzi.u32.f32	%r46, %f73;
	mul.lo.s32 	%r52, %r2, %r21;
	cvt.u64.u32	%rd5, %r52;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd5;
	cvt.rn.f32.u32	%f74, %r25;
	rcp.rn.f32 	%f10, %f74;
	cvt.rn.f32.u32	%f11, %r46;
	mul.wide.u32 	%rd8, %r1, 16;
	add.s64 	%rd1, %rd7, %rd8;
	and.b32  	%r45, %r25, 3;
	mov.u32 	%r69, 1;
	mov.u32 	%r72, 0;
	setp.eq.s32	%p22, %r45, 0;
	@%p22 bra 	BB6_26;

	setp.eq.s32	%p23, %r45, 1;
	mov.u32 	%r70, %r72;
	@%p23 bra 	BB6_25;

	setp.eq.s32	%p24, %r45, 2;
	@%p24 bra 	BB6_24;

	st.global.f32 	[%rd1], %f11;
	st.global.f32 	[%rd1+4], %f10;
	mov.u32 	%r59, 0;
	st.global.u32 	[%rd1+12], %r59;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd1+8], %rs1;
	mov.u32 	%r69, 2;

BB6_24:
	st.global.f32 	[%rd1], %f11;
	st.global.f32 	[%rd1+4], %f10;
	mov.u32 	%r60, 0;
	st.global.u32 	[%rd1+12], %r60;
	mov.u16 	%rs2, 0;
	st.global.u8 	[%rd1+8], %rs2;
	mov.u32 	%r70, %r69;

BB6_25:
	st.global.f32 	[%rd1], %f11;
	st.global.f32 	[%rd1+4], %f10;
	st.global.u32 	[%rd1+12], %r72;
	mov.u16 	%rs3, 0;
	st.global.u8 	[%rd1+8], %rs3;
	add.s32 	%r72, %r70, 1;

BB6_26:
	setp.lt.u32	%p25, %r25, 4;
	@%p25 bra 	BB6_28;

BB6_27:
	st.global.f32 	[%rd1], %f11;
	st.global.f32 	[%rd1+4], %f10;
	mov.u32 	%r62, 0;
	st.global.u32 	[%rd1+12], %r62;
	mov.u16 	%rs4, 0;
	st.global.u8 	[%rd1+8], %rs4;
	add.s32 	%r72, %r72, 4;
	setp.lt.u32	%p26, %r72, %r25;
	@%p26 bra 	BB6_27;

BB6_28:
	ret;
}

	// .globl	debug
.visible .entry debug(

)
{



	ret;
}


